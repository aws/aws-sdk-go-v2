package enhancedclient

import (
	"strings"
	"time"
)

type order struct {
	OrderID       string            `dynamodbav:"order_id,partition,autogenerated|key" dynamodbindex:"TotalAmountIndex,global,sort"`
	CreatedAt     int64             `dynamodbav:"created_at,sort,autogenerated|timestamp" dynamodbindex:"CustomerIndex,sort"`
	UpdatedAt     time.Time         `dynamodbav:"updated_at,autogenerated|timestamp|always"`
	CustomerID    string            `dynamodbav:"customer_id" dynamodbindex:"CustomerIndex,global,partition"`
	TotalAmount   float64           `dynamodbav:"total" dynamodbindex:"TotalAmountIndex,global,partition"`
	IgnoredField  string            `dynamodbav:"-"`
	Version       int64             `dynamodbav:"version,version" dynamodbindex:"OrderVersionIndex,local,sort"`
	VersionString string            `dynamodbav:"versionString,version"`
	CounterUp     int64             `dynamodbav:"counter_up,atomiccounter|start=0|delta=5"`
	CounterDown   int64             `dynamodbav:"counter_down,atomiccounter|start=0|delta=-5"`
	Metadata      map[string]string `dynamodbav:"metadata"`
	address
	Notes             []string `dynamodbav:",preserveempty,stringset"`
	customerNote      string   `dynamodbav:"note" dynamodbgetter:"Note" dynamodbsetter:"SetNote" dynamodbindex:"NoteIndex,global,partition"`
	CustomerFirstName string   `dynamodbav:"first_name"`
	CustomerLastName  string   `dynamodbav:"last_name"`
}

// Getter method for customerNote
func (o *order) Note() string {
	return o.customerNote
}

// Setter method for customerNote
func (o *order) SetNote(note string) {
	o.customerNote = strings.TrimSpace(note)
}

type address struct {
	Street string `dynamodbav:"street"`
	City   string `dynamodbav:"city"`
	Zip    string `dynamodbav:"zip" dynamodbindex:"RegionIndex,global,partition"`
}
