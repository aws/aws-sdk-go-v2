// Code generated by aws/logging_generate.go DO NOT EDIT.
package aws

// ClientLogMode represents the logging mode of SDK clients. The client logging mode is a bit-field where
// each bit is a flag that describes the logging behavior for one or more client components.
// The entire 64-bit group is reserved for later expansion by the SDK.
//
// Example
//  clientLogMode := aws.LogRetries | aws.LogRequest
type ClientLogMode uint64

// Supported ClientLogMode bits that can be configured to toggle logging of specific SDK events.
const (
	LogSigning ClientLogMode = 1 << (64 - 1 - iota)
	LogRetries
	LogRequest
	LogRequestWithBody
	LogResponse
	LogResponseWithBody
)

func (m ClientLogMode) IsSigning() bool {
	return m&LogSigning != 0
}

func (m ClientLogMode) IsRetries() bool {
	return m&LogRetries != 0
}

func (m ClientLogMode) IsRequest() bool {
	return m&LogRequest != 0
}

func (m ClientLogMode) IsRequestWithBody() bool {
	return m&LogRequestWithBody != 0
}

func (m ClientLogMode) IsResponse() bool {
	return m&LogResponse != 0
}

func (m ClientLogMode) IsResponseWithBody() bool {
	return m&LogResponseWithBody != 0
}

func (m *ClientLogMode) ClearSigning() {
	*m &^= LogSigning
}

func (m *ClientLogMode) ClearRetries() {
	*m &^= LogRetries
}

func (m *ClientLogMode) ClearRequest() {
	*m &^= LogRequest
}

func (m *ClientLogMode) ClearRequestWithBody() {
	*m &^= LogRequestWithBody
}

func (m *ClientLogMode) ClearResponse() {
	*m &^= LogResponse
}

func (m *ClientLogMode) ClearResponseWithBody() {
	*m &^= LogResponseWithBody
}
