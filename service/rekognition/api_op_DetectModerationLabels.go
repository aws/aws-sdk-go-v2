// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package rekognition

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/rekognition/types"
)

const opDetectModerationLabels = "DetectModerationLabels"

// DetectModerationLabelsRequest returns a request value for making API operation for
// Amazon Rekognition.
//
// Detects unsafe content in a specified JPEG or PNG format image. Use DetectModerationLabels
// to moderate images depending on your requirements. For example, you might
// want to filter images that contain nudity, but not images containing suggestive
// content.
//
// To filter images, use the labels returned by DetectModerationLabels to determine
// which types of content are appropriate.
//
// For information about moderation labels, see Detecting Unsafe Content in
// the Amazon Rekognition Developer Guide.
//
// You pass the input image either as base64-encoded image bytes or as a reference
// to an image in an Amazon S3 bucket. If you use the AWS CLI to call Amazon
// Rekognition operations, passing image bytes is not supported. The image must
// be either a PNG or JPEG formatted file.
//
//    // Example sending a request using DetectModerationLabelsRequest.
//    req := client.DetectModerationLabelsRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
func (c *Client) DetectModerationLabelsRequest(input *types.DetectModerationLabelsInput) DetectModerationLabelsRequest {
	op := &aws.Operation{
		Name:       opDetectModerationLabels,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &types.DetectModerationLabelsInput{}
	}

	req := c.newRequest(op, input, &types.DetectModerationLabelsOutput{})
	return DetectModerationLabelsRequest{Request: req, Input: input, Copy: c.DetectModerationLabelsRequest}
}

// DetectModerationLabelsRequest is the request type for the
// DetectModerationLabels API operation.
type DetectModerationLabelsRequest struct {
	*aws.Request
	Input *types.DetectModerationLabelsInput
	Copy  func(*types.DetectModerationLabelsInput) DetectModerationLabelsRequest
}

// Send marshals and sends the DetectModerationLabels API request.
func (r DetectModerationLabelsRequest) Send(ctx context.Context) (*DetectModerationLabelsResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &DetectModerationLabelsResponse{
		DetectModerationLabelsOutput: r.Request.Data.(*types.DetectModerationLabelsOutput),
		response:                     &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// DetectModerationLabelsResponse is the response type for the
// DetectModerationLabels API operation.
type DetectModerationLabelsResponse struct {
	*types.DetectModerationLabelsOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// DetectModerationLabels request.
func (r *DetectModerationLabelsResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
