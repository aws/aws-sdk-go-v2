// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package rekognition

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/rekognition/types"
)

const opCreateStreamProcessor = "CreateStreamProcessor"

// CreateStreamProcessorRequest returns a request value for making API operation for
// Amazon Rekognition.
//
// Creates an Amazon Rekognition stream processor that you can use to detect
// and recognize faces in a streaming video.
//
// Amazon Rekognition Video is a consumer of live video from Amazon Kinesis
// Video Streams. Amazon Rekognition Video sends analysis results to Amazon
// Kinesis Data Streams.
//
// You provide as input a Kinesis video stream (Input) and a Kinesis data stream
// (Output) stream. You also specify the face recognition criteria in Settings.
// For example, the collection containing faces that you want to recognize.
// Use Name to assign an identifier for the stream processor. You use Name to
// manage the stream processor. For example, you can start processing the source
// video by calling StartStreamProcessor with the Name field.
//
// After you have finished analyzing a streaming video, use StopStreamProcessor
// to stop processing. You can delete the stream processor by calling DeleteStreamProcessor.
//
//    // Example sending a request using CreateStreamProcessorRequest.
//    req := client.CreateStreamProcessorRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
func (c *Client) CreateStreamProcessorRequest(input *types.CreateStreamProcessorInput) CreateStreamProcessorRequest {
	op := &aws.Operation{
		Name:       opCreateStreamProcessor,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &types.CreateStreamProcessorInput{}
	}

	req := c.newRequest(op, input, &types.CreateStreamProcessorOutput{})
	return CreateStreamProcessorRequest{Request: req, Input: input, Copy: c.CreateStreamProcessorRequest}
}

// CreateStreamProcessorRequest is the request type for the
// CreateStreamProcessor API operation.
type CreateStreamProcessorRequest struct {
	*aws.Request
	Input *types.CreateStreamProcessorInput
	Copy  func(*types.CreateStreamProcessorInput) CreateStreamProcessorRequest
}

// Send marshals and sends the CreateStreamProcessor API request.
func (r CreateStreamProcessorRequest) Send(ctx context.Context) (*CreateStreamProcessorResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &CreateStreamProcessorResponse{
		CreateStreamProcessorOutput: r.Request.Data.(*types.CreateStreamProcessorOutput),
		response:                    &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// CreateStreamProcessorResponse is the response type for the
// CreateStreamProcessor API operation.
type CreateStreamProcessorResponse struct {
	*types.CreateStreamProcessorOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// CreateStreamProcessor request.
func (r *CreateStreamProcessorResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
