// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package rekognition

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/rekognition/types"
)

const opStartFaceDetection = "StartFaceDetection"

// StartFaceDetectionRequest returns a request value for making API operation for
// Amazon Rekognition.
//
// Starts asynchronous detection of faces in a stored video.
//
// Amazon Rekognition Video can detect faces in a video stored in an Amazon
// S3 bucket. Use Video to specify the bucket name and the filename of the video.
// StartFaceDetection returns a job identifier (JobId) that you use to get the
// results of the operation. When face detection is finished, Amazon Rekognition
// Video publishes a completion status to the Amazon Simple Notification Service
// topic that you specify in NotificationChannel. To get the results of the
// face detection operation, first check that the status value published to
// the Amazon SNS topic is SUCCEEDED. If so, call GetFaceDetection and pass
// the job identifier (JobId) from the initial call to StartFaceDetection.
//
// For more information, see Detecting Faces in a Stored Video in the Amazon
// Rekognition Developer Guide.
//
//    // Example sending a request using StartFaceDetectionRequest.
//    req := client.StartFaceDetectionRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
func (c *Client) StartFaceDetectionRequest(input *types.StartFaceDetectionInput) StartFaceDetectionRequest {
	op := &aws.Operation{
		Name:       opStartFaceDetection,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &types.StartFaceDetectionInput{}
	}

	req := c.newRequest(op, input, &types.StartFaceDetectionOutput{})
	return StartFaceDetectionRequest{Request: req, Input: input, Copy: c.StartFaceDetectionRequest}
}

// StartFaceDetectionRequest is the request type for the
// StartFaceDetection API operation.
type StartFaceDetectionRequest struct {
	*aws.Request
	Input *types.StartFaceDetectionInput
	Copy  func(*types.StartFaceDetectionInput) StartFaceDetectionRequest
}

// Send marshals and sends the StartFaceDetection API request.
func (r StartFaceDetectionRequest) Send(ctx context.Context) (*StartFaceDetectionResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &StartFaceDetectionResponse{
		StartFaceDetectionOutput: r.Request.Data.(*types.StartFaceDetectionOutput),
		response:                 &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// StartFaceDetectionResponse is the response type for the
// StartFaceDetection API operation.
type StartFaceDetectionResponse struct {
	*types.StartFaceDetectionOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// StartFaceDetection request.
func (r *StartFaceDetectionResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
