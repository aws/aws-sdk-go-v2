// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package kinesisvideo

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/kinesisvideo/types"
)

const opGetDataEndpoint = "GetDataEndpoint"

// GetDataEndpointRequest returns a request value for making API operation for
// Amazon Kinesis Video Streams.
//
// Gets an endpoint for a specified stream for either reading or writing. Use
// this endpoint in your application to read from the specified stream (using
// the GetMedia or GetMediaForFragmentList operations) or write to it (using
// the PutMedia operation).
//
// The returned endpoint does not have the API name appended. The client needs
// to add the API name to the returned endpoint.
//
// In the request, specify the stream either by StreamName or StreamARN.
//
//    // Example sending a request using GetDataEndpointRequest.
//    req := client.GetDataEndpointRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/kinesisvideo-2017-09-30/GetDataEndpoint
func (c *Client) GetDataEndpointRequest(input *types.GetDataEndpointInput) GetDataEndpointRequest {
	op := &aws.Operation{
		Name:       opGetDataEndpoint,
		HTTPMethod: "POST",
		HTTPPath:   "/getDataEndpoint",
	}

	if input == nil {
		input = &types.GetDataEndpointInput{}
	}

	req := c.newRequest(op, input, &types.GetDataEndpointOutput{})
	return GetDataEndpointRequest{Request: req, Input: input, Copy: c.GetDataEndpointRequest}
}

// GetDataEndpointRequest is the request type for the
// GetDataEndpoint API operation.
type GetDataEndpointRequest struct {
	*aws.Request
	Input *types.GetDataEndpointInput
	Copy  func(*types.GetDataEndpointInput) GetDataEndpointRequest
}

// Send marshals and sends the GetDataEndpoint API request.
func (r GetDataEndpointRequest) Send(ctx context.Context) (*GetDataEndpointResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &GetDataEndpointResponse{
		GetDataEndpointOutput: r.Request.Data.(*types.GetDataEndpointOutput),
		response:              &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// GetDataEndpointResponse is the response type for the
// GetDataEndpoint API operation.
type GetDataEndpointResponse struct {
	*types.GetDataEndpointOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// GetDataEndpoint request.
func (r *GetDataEndpointResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
