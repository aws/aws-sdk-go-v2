// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package cloudwatchevents

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/cloudwatchevents/types"
)

const opTestEventPattern = "TestEventPattern"

// TestEventPatternRequest returns a request value for making API operation for
// Amazon CloudWatch Events.
//
// Tests whether the specified event pattern matches the provided event.
//
// Most services in AWS treat : or / as the same character in Amazon Resource
// Names (ARNs). However, EventBridge uses an exact match in event patterns
// and rules. Be sure to use the correct ARN characters when creating event
// patterns so that they match the ARN syntax in the event that you want to
// match.
//
//    // Example sending a request using TestEventPatternRequest.
//    req := client.TestEventPatternRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/events-2015-10-07/TestEventPattern
func (c *Client) TestEventPatternRequest(input *types.TestEventPatternInput) TestEventPatternRequest {
	op := &aws.Operation{
		Name:       opTestEventPattern,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &types.TestEventPatternInput{}
	}

	req := c.newRequest(op, input, &types.TestEventPatternOutput{})
	return TestEventPatternRequest{Request: req, Input: input, Copy: c.TestEventPatternRequest}
}

// TestEventPatternRequest is the request type for the
// TestEventPattern API operation.
type TestEventPatternRequest struct {
	*aws.Request
	Input *types.TestEventPatternInput
	Copy  func(*types.TestEventPatternInput) TestEventPatternRequest
}

// Send marshals and sends the TestEventPattern API request.
func (r TestEventPatternRequest) Send(ctx context.Context) (*TestEventPatternResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &TestEventPatternResponse{
		TestEventPatternOutput: r.Request.Data.(*types.TestEventPatternOutput),
		response:               &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// TestEventPatternResponse is the response type for the
// TestEventPattern API operation.
type TestEventPatternResponse struct {
	*types.TestEventPatternOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// TestEventPattern request.
func (r *TestEventPatternResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
