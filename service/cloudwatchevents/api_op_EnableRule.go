// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package cloudwatchevents

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/private/protocol"
	"github.com/aws/aws-sdk-go-v2/private/protocol/jsonrpc"
	"github.com/aws/aws-sdk-go-v2/service/cloudwatchevents/types"
)

const opEnableRule = "EnableRule"

// EnableRuleRequest returns a request value for making API operation for
// Amazon CloudWatch Events.
//
// Enables the specified rule. If the rule doesn't exist, the operation fails.
//
// When you enable a rule, incoming events might not immediately start matching
// to a newly enabled rule. Allow a short period of time for changes to take
// effect.
//
//    // Example sending a request using EnableRuleRequest.
//    req := client.EnableRuleRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/events-2015-10-07/EnableRule
func (c *Client) EnableRuleRequest(input *types.EnableRuleInput) EnableRuleRequest {
	op := &aws.Operation{
		Name:       opEnableRule,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &types.EnableRuleInput{}
	}

	req := c.newRequest(op, input, &types.EnableRuleOutput{})
	req.Handlers.Unmarshal.Remove(jsonrpc.UnmarshalHandler)
	req.Handlers.Unmarshal.PushBackNamed(protocol.UnmarshalDiscardBodyHandler)
	return EnableRuleRequest{Request: req, Input: input, Copy: c.EnableRuleRequest}
}

// EnableRuleRequest is the request type for the
// EnableRule API operation.
type EnableRuleRequest struct {
	*aws.Request
	Input *types.EnableRuleInput
	Copy  func(*types.EnableRuleInput) EnableRuleRequest
}

// Send marshals and sends the EnableRule API request.
func (r EnableRuleRequest) Send(ctx context.Context) (*EnableRuleResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &EnableRuleResponse{
		EnableRuleOutput: r.Request.Data.(*types.EnableRuleOutput),
		response:         &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// EnableRuleResponse is the response type for the
// EnableRule API operation.
type EnableRuleResponse struct {
	*types.EnableRuleOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// EnableRule request.
func (r *EnableRuleResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
