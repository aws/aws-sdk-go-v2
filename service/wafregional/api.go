// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package wafregional

import (
	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/internal/awsutil"
	"github.com/aws/aws-sdk-go-v2/service/waf"
)

const opAssociateWebACL = "AssociateWebACL"

// AssociateWebACLRequest is a API request type for the AssociateWebACL API operation.
type AssociateWebACLRequest struct {
	*aws.Request
	Input *AssociateWebACLInput
}

// Send marshals and sends the AssociateWebACL API request.
func (r AssociateWebACLRequest) Send() (*AssociateWebACLOutput, error) {
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	return r.Request.Data.(*AssociateWebACLOutput), nil
}

// AssociateWebACLRequest returns a request value for making API operation for
// AWS WAF Regional.
//
// Associates a web ACL with a resource.
//
//    // Example sending a request using the AssociateWebACLRequest method.
//    req := client.AssociateWebACLRequest(params)
//    resp, err := req.Send()
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/waf-regional-2016-11-28/AssociateWebACL
func (c *WAFRegional) AssociateWebACLRequest(input *AssociateWebACLInput) AssociateWebACLRequest {
	op := &aws.Operation{
		Name:       opAssociateWebACL,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &AssociateWebACLInput{}
	}

	req := c.newRequest(op, input, &AssociateWebACLOutput{})
	return AssociateWebACLRequest{Request: req, Input: input}
}

const opCreateByteMatchSet = "CreateByteMatchSet"

// CreateByteMatchSetRequest is a API request type for the CreateByteMatchSet API operation.
type CreateByteMatchSetRequest struct {
	*aws.Request
	Input *waf.CreateByteMatchSetInput
}

// Send marshals and sends the CreateByteMatchSet API request.
func (r CreateByteMatchSetRequest) Send() (*waf.CreateByteMatchSetOutput, error) {
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	return r.Request.Data.(*waf.CreateByteMatchSetOutput), nil
}

// CreateByteMatchSetRequest returns a request value for making API operation for
// AWS WAF Regional.
//
// Creates a ByteMatchSet. You then use UpdateByteMatchSet to identify the part
// of a web request that you want AWS WAF to inspect, such as the values of
// the User-Agent header or the query string. For example, you can create a
// ByteMatchSet that matches any requests with User-Agent headers that contain
// the string BadBot. You can then configure AWS WAF to reject those requests.
//
// To create and configure a ByteMatchSet, perform the following steps:
//
// Use GetChangeToken to get the change token that you provide in the ChangeToken
// parameter of a CreateByteMatchSet request.
//
// Submit a CreateByteMatchSet request.
//
// Use GetChangeToken to get the change token that you provide in the ChangeToken
// parameter of an UpdateByteMatchSet request.
//
// Submit an UpdateByteMatchSet request to specify the part of the request that
// you want AWS WAF to inspect (for example, the header or the URI) and the
// value that you want AWS WAF to watch for.
//
// For more information about how to use the AWS WAF API to allow or block HTTP
// requests, see the AWS WAF Developer Guide (http://docs.aws.amazon.com/waf/latest/developerguide/).
//
//    // Example sending a request using the CreateByteMatchSetRequest method.
//    req := client.CreateByteMatchSetRequest(params)
//    resp, err := req.Send()
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/waf-regional-2016-11-28/CreateByteMatchSet
func (c *WAFRegional) CreateByteMatchSetRequest(input *waf.CreateByteMatchSetInput) CreateByteMatchSetRequest {
	op := &aws.Operation{
		Name:       opCreateByteMatchSet,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &waf.CreateByteMatchSetInput{}
	}

	req := c.newRequest(op, input, &waf.CreateByteMatchSetOutput{})
	return CreateByteMatchSetRequest{Request: req, Input: input}
}

const opCreateIPSet = "CreateIPSet"

// CreateIPSetRequest is a API request type for the CreateIPSet API operation.
type CreateIPSetRequest struct {
	*aws.Request
	Input *waf.CreateIPSetInput
}

// Send marshals and sends the CreateIPSet API request.
func (r CreateIPSetRequest) Send() (*waf.CreateIPSetOutput, error) {
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	return r.Request.Data.(*waf.CreateIPSetOutput), nil
}

// CreateIPSetRequest returns a request value for making API operation for
// AWS WAF Regional.
//
// Creates an IPSet, which you use to specify which web requests you want to
// allow or block based on the IP addresses that the requests originate from.
// For example, if you're receiving a lot of requests from one or more individual
// IP addresses or one or more ranges of IP addresses and you want to block
// the requests, you can create an IPSet that contains those IP addresses and
// then configure AWS WAF to block the requests.
//
// To create and configure an IPSet, perform the following steps:
//
// Use GetChangeToken to get the change token that you provide in the ChangeToken
// parameter of a CreateIPSet request.
//
// Submit a CreateIPSet request.
//
// Use GetChangeToken to get the change token that you provide in the ChangeToken
// parameter of an UpdateIPSet request.
//
// Submit an UpdateIPSet request to specify the IP addresses that you want AWS
// WAF to watch for.
//
// For more information about how to use the AWS WAF API to allow or block HTTP
// requests, see the AWS WAF Developer Guide (http://docs.aws.amazon.com/waf/latest/developerguide/).
//
//    // Example sending a request using the CreateIPSetRequest method.
//    req := client.CreateIPSetRequest(params)
//    resp, err := req.Send()
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/waf-regional-2016-11-28/CreateIPSet
func (c *WAFRegional) CreateIPSetRequest(input *waf.CreateIPSetInput) CreateIPSetRequest {
	op := &aws.Operation{
		Name:       opCreateIPSet,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &waf.CreateIPSetInput{}
	}

	req := c.newRequest(op, input, &waf.CreateIPSetOutput{})
	return CreateIPSetRequest{Request: req, Input: input}
}

const opCreateRateBasedRule = "CreateRateBasedRule"

// CreateRateBasedRuleRequest is a API request type for the CreateRateBasedRule API operation.
type CreateRateBasedRuleRequest struct {
	*aws.Request
	Input *waf.CreateRateBasedRuleInput
}

// Send marshals and sends the CreateRateBasedRule API request.
func (r CreateRateBasedRuleRequest) Send() (*waf.CreateRateBasedRuleOutput, error) {
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	return r.Request.Data.(*waf.CreateRateBasedRuleOutput), nil
}

// CreateRateBasedRuleRequest returns a request value for making API operation for
// AWS WAF Regional.
//
// Creates a RateBasedRule. The RateBasedRule contains a RateLimit, which specifies
// the maximum number of requests that AWS WAF allows from a specified IP address
// in a five-minute period. The RateBasedRule also contains the IPSet objects,
// ByteMatchSet objects, and other predicates that identify the requests that
// you want to count or block if these requests exceed the RateLimit.
//
// If you add more than one predicate to a RateBasedRule, a request not only
// must exceed the RateLimit, but it also must match all the specifications
// to be counted or blocked. For example, suppose you add the following to a
// RateBasedRule:
//
//    * An IPSet that matches the IP address 192.0.2.44/32
//
//    * A ByteMatchSet that matches BadBot in the User-Agent header
//
// Further, you specify a RateLimit of 15,000.
//
// You then add the RateBasedRule to a WebACL and specify that you want to block
// requests that meet the conditions in the rule. For a request to be blocked,
// it must come from the IP address 192.0.2.44 and the User-Agent header in
// the request must contain the value BadBot. Further, requests that match these
// two conditions must be received at a rate of more than 15,000 requests every
// five minutes. If both conditions are met and the rate is exceeded, AWS WAF
// blocks the requests. If the rate drops below 15,000 for a five-minute period,
// AWS WAF no longer blocks the requests.
//
// As a second example, suppose you want to limit requests to a particular page
// on your site. To do this, you could add the following to a RateBasedRule:
//
//    * A ByteMatchSet with FieldToMatch of URI
//
//    * A PositionalConstraint of STARTS_WITH
//
//    * A TargetString of login
//
// Further, you specify a RateLimit of 15,000.
//
// By adding this RateBasedRule to a WebACL, you could limit requests to your
// login page without affecting the rest of your site.
//
// To create and configure a RateBasedRule, perform the following steps:
//
// Create and update the predicates that you want to include in the rule. For
// more information, see CreateByteMatchSet, CreateIPSet, and CreateSqlInjectionMatchSet.
//
// Use GetChangeToken to get the change token that you provide in the ChangeToken
// parameter of a CreateRule request.
//
// Submit a CreateRateBasedRule request.
//
// Use GetChangeToken to get the change token that you provide in the ChangeToken
// parameter of an UpdateRule request.
//
// Submit an UpdateRateBasedRule request to specify the predicates that you
// want to include in the rule.
//
// Create and update a WebACL that contains the RateBasedRule. For more information,
// see CreateWebACL.
//
// For more information about how to use the AWS WAF API to allow or block HTTP
// requests, see the AWS WAF Developer Guide (http://docs.aws.amazon.com/waf/latest/developerguide/).
//
//    // Example sending a request using the CreateRateBasedRuleRequest method.
//    req := client.CreateRateBasedRuleRequest(params)
//    resp, err := req.Send()
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/waf-regional-2016-11-28/CreateRateBasedRule
func (c *WAFRegional) CreateRateBasedRuleRequest(input *waf.CreateRateBasedRuleInput) CreateRateBasedRuleRequest {
	op := &aws.Operation{
		Name:       opCreateRateBasedRule,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &waf.CreateRateBasedRuleInput{}
	}

	req := c.newRequest(op, input, &waf.CreateRateBasedRuleOutput{})
	return CreateRateBasedRuleRequest{Request: req, Input: input}
}

const opCreateRule = "CreateRule"

// CreateRuleRequest is a API request type for the CreateRule API operation.
type CreateRuleRequest struct {
	*aws.Request
	Input *waf.CreateRuleInput
}

// Send marshals and sends the CreateRule API request.
func (r CreateRuleRequest) Send() (*waf.CreateRuleOutput, error) {
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	return r.Request.Data.(*waf.CreateRuleOutput), nil
}

// CreateRuleRequest returns a request value for making API operation for
// AWS WAF Regional.
//
// Creates a Rule, which contains the IPSet objects, ByteMatchSet objects, and
// other predicates that identify the requests that you want to block. If you
// add more than one predicate to a Rule, a request must match all of the specifications
// to be allowed or blocked. For example, suppose you add the following to a
// Rule:
//
//    * An IPSet that matches the IP address 192.0.2.44/32
//
//    * A ByteMatchSet that matches BadBot in the User-Agent header
//
// You then add the Rule to a WebACL and specify that you want to blocks requests
// that satisfy the Rule. For a request to be blocked, it must come from the
// IP address 192.0.2.44 and the User-Agent header in the request must contain
// the value BadBot.
//
// To create and configure a Rule, perform the following steps:
//
// Create and update the predicates that you want to include in the Rule. For
// more information, see CreateByteMatchSet, CreateIPSet, and CreateSqlInjectionMatchSet.
//
// Use GetChangeToken to get the change token that you provide in the ChangeToken
// parameter of a CreateRule request.
//
// Submit a CreateRule request.
//
// Use GetChangeToken to get the change token that you provide in the ChangeToken
// parameter of an UpdateRule request.
//
// Submit an UpdateRule request to specify the predicates that you want to include
// in the Rule.
//
// Create and update a WebACL that contains the Rule. For more information,
// see CreateWebACL.
//
// For more information about how to use the AWS WAF API to allow or block HTTP
// requests, see the AWS WAF Developer Guide (http://docs.aws.amazon.com/waf/latest/developerguide/).
//
//    // Example sending a request using the CreateRuleRequest method.
//    req := client.CreateRuleRequest(params)
//    resp, err := req.Send()
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/waf-regional-2016-11-28/CreateRule
func (c *WAFRegional) CreateRuleRequest(input *waf.CreateRuleInput) CreateRuleRequest {
	op := &aws.Operation{
		Name:       opCreateRule,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &waf.CreateRuleInput{}
	}

	req := c.newRequest(op, input, &waf.CreateRuleOutput{})
	return CreateRuleRequest{Request: req, Input: input}
}

const opCreateSizeConstraintSet = "CreateSizeConstraintSet"

// CreateSizeConstraintSetRequest is a API request type for the CreateSizeConstraintSet API operation.
type CreateSizeConstraintSetRequest struct {
	*aws.Request
	Input *waf.CreateSizeConstraintSetInput
}

// Send marshals and sends the CreateSizeConstraintSet API request.
func (r CreateSizeConstraintSetRequest) Send() (*waf.CreateSizeConstraintSetOutput, error) {
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	return r.Request.Data.(*waf.CreateSizeConstraintSetOutput), nil
}

// CreateSizeConstraintSetRequest returns a request value for making API operation for
// AWS WAF Regional.
//
// Creates a SizeConstraintSet. You then use UpdateSizeConstraintSet to identify
// the part of a web request that you want AWS WAF to check for length, such
// as the length of the User-Agent header or the length of the query string.
// For example, you can create a SizeConstraintSet that matches any requests
// that have a query string that is longer than 100 bytes. You can then configure
// AWS WAF to reject those requests.
//
// To create and configure a SizeConstraintSet, perform the following steps:
//
// Use GetChangeToken to get the change token that you provide in the ChangeToken
// parameter of a CreateSizeConstraintSet request.
//
// Submit a CreateSizeConstraintSet request.
//
// Use GetChangeToken to get the change token that you provide in the ChangeToken
// parameter of an UpdateSizeConstraintSet request.
//
// Submit an UpdateSizeConstraintSet request to specify the part of the request
// that you want AWS WAF to inspect (for example, the header or the URI) and
// the value that you want AWS WAF to watch for.
//
// For more information about how to use the AWS WAF API to allow or block HTTP
// requests, see the AWS WAF Developer Guide (http://docs.aws.amazon.com/waf/latest/developerguide/).
//
//    // Example sending a request using the CreateSizeConstraintSetRequest method.
//    req := client.CreateSizeConstraintSetRequest(params)
//    resp, err := req.Send()
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/waf-regional-2016-11-28/CreateSizeConstraintSet
func (c *WAFRegional) CreateSizeConstraintSetRequest(input *waf.CreateSizeConstraintSetInput) CreateSizeConstraintSetRequest {
	op := &aws.Operation{
		Name:       opCreateSizeConstraintSet,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &waf.CreateSizeConstraintSetInput{}
	}

	req := c.newRequest(op, input, &waf.CreateSizeConstraintSetOutput{})
	return CreateSizeConstraintSetRequest{Request: req, Input: input}
}

const opCreateSqlInjectionMatchSet = "CreateSqlInjectionMatchSet"

// CreateSqlInjectionMatchSetRequest is a API request type for the CreateSqlInjectionMatchSet API operation.
type CreateSqlInjectionMatchSetRequest struct {
	*aws.Request
	Input *waf.CreateSqlInjectionMatchSetInput
}

// Send marshals and sends the CreateSqlInjectionMatchSet API request.
func (r CreateSqlInjectionMatchSetRequest) Send() (*waf.CreateSqlInjectionMatchSetOutput, error) {
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	return r.Request.Data.(*waf.CreateSqlInjectionMatchSetOutput), nil
}

// CreateSqlInjectionMatchSetRequest returns a request value for making API operation for
// AWS WAF Regional.
//
// Creates a SqlInjectionMatchSet, which you use to allow, block, or count requests
// that contain snippets of SQL code in a specified part of web requests. AWS
// WAF searches for character sequences that are likely to be malicious strings.
//
// To create and configure a SqlInjectionMatchSet, perform the following steps:
//
// Use GetChangeToken to get the change token that you provide in the ChangeToken
// parameter of a CreateSqlInjectionMatchSet request.
//
// Submit a CreateSqlInjectionMatchSet request.
//
// Use GetChangeToken to get the change token that you provide in the ChangeToken
// parameter of an UpdateSqlInjectionMatchSet request.
//
// Submit an UpdateSqlInjectionMatchSet request to specify the parts of web
// requests in which you want to allow, block, or count malicious SQL code.
//
// For more information about how to use the AWS WAF API to allow or block HTTP
// requests, see the AWS WAF Developer Guide (http://docs.aws.amazon.com/waf/latest/developerguide/).
//
//    // Example sending a request using the CreateSqlInjectionMatchSetRequest method.
//    req := client.CreateSqlInjectionMatchSetRequest(params)
//    resp, err := req.Send()
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/waf-regional-2016-11-28/CreateSqlInjectionMatchSet
func (c *WAFRegional) CreateSqlInjectionMatchSetRequest(input *waf.CreateSqlInjectionMatchSetInput) CreateSqlInjectionMatchSetRequest {
	op := &aws.Operation{
		Name:       opCreateSqlInjectionMatchSet,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &waf.CreateSqlInjectionMatchSetInput{}
	}

	req := c.newRequest(op, input, &waf.CreateSqlInjectionMatchSetOutput{})
	return CreateSqlInjectionMatchSetRequest{Request: req, Input: input}
}

const opCreateWebACL = "CreateWebACL"

// CreateWebACLRequest is a API request type for the CreateWebACL API operation.
type CreateWebACLRequest struct {
	*aws.Request
	Input *waf.CreateWebACLInput
}

// Send marshals and sends the CreateWebACL API request.
func (r CreateWebACLRequest) Send() (*waf.CreateWebACLOutput, error) {
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	return r.Request.Data.(*waf.CreateWebACLOutput), nil
}

// CreateWebACLRequest returns a request value for making API operation for
// AWS WAF Regional.
//
// Creates a WebACL, which contains the Rules that identify the CloudFront web
// requests that you want to allow, block, or count. AWS WAF evaluates Rules
// in order based on the value of Priority for each Rule.
//
// You also specify a default action, either ALLOW or BLOCK. If a web request
// doesn't match any of the Rules in a WebACL, AWS WAF responds to the request
// with the default action.
//
// To create and configure a WebACL, perform the following steps:
//
// Create and update the ByteMatchSet objects and other predicates that you
// want to include in Rules. For more information, see CreateByteMatchSet, UpdateByteMatchSet,
// CreateIPSet, UpdateIPSet, CreateSqlInjectionMatchSet, and UpdateSqlInjectionMatchSet.
//
// Create and update the Rules that you want to include in the WebACL. For more
// information, see CreateRule and UpdateRule.
//
// Use GetChangeToken to get the change token that you provide in the ChangeToken
// parameter of a CreateWebACL request.
//
// Submit a CreateWebACL request.
//
// Use GetChangeToken to get the change token that you provide in the ChangeToken
// parameter of an UpdateWebACL request.
//
// Submit an UpdateWebACL request to specify the Rules that you want to include
// in the WebACL, to specify the default action, and to associate the WebACL
// with a CloudFront distribution.
//
// For more information about how to use the AWS WAF API, see the AWS WAF Developer
// Guide (http://docs.aws.amazon.com/waf/latest/developerguide/).
//
//    // Example sending a request using the CreateWebACLRequest method.
//    req := client.CreateWebACLRequest(params)
//    resp, err := req.Send()
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/waf-regional-2016-11-28/CreateWebACL
func (c *WAFRegional) CreateWebACLRequest(input *waf.CreateWebACLInput) CreateWebACLRequest {
	op := &aws.Operation{
		Name:       opCreateWebACL,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &waf.CreateWebACLInput{}
	}

	req := c.newRequest(op, input, &waf.CreateWebACLOutput{})
	return CreateWebACLRequest{Request: req, Input: input}
}

const opCreateXssMatchSet = "CreateXssMatchSet"

// CreateXssMatchSetRequest is a API request type for the CreateXssMatchSet API operation.
type CreateXssMatchSetRequest struct {
	*aws.Request
	Input *waf.CreateXssMatchSetInput
}

// Send marshals and sends the CreateXssMatchSet API request.
func (r CreateXssMatchSetRequest) Send() (*waf.CreateXssMatchSetOutput, error) {
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	return r.Request.Data.(*waf.CreateXssMatchSetOutput), nil
}

// CreateXssMatchSetRequest returns a request value for making API operation for
// AWS WAF Regional.
//
// Creates an XssMatchSet, which you use to allow, block, or count requests
// that contain cross-site scripting attacks in the specified part of web requests.
// AWS WAF searches for character sequences that are likely to be malicious
// strings.
//
// To create and configure an XssMatchSet, perform the following steps:
//
// Use GetChangeToken to get the change token that you provide in the ChangeToken
// parameter of a CreateXssMatchSet request.
//
// Submit a CreateXssMatchSet request.
//
// Use GetChangeToken to get the change token that you provide in the ChangeToken
// parameter of an UpdateXssMatchSet request.
//
// Submit an UpdateXssMatchSet request to specify the parts of web requests
// in which you want to allow, block, or count cross-site scripting attacks.
//
// For more information about how to use the AWS WAF API to allow or block HTTP
// requests, see the AWS WAF Developer Guide (http://docs.aws.amazon.com/waf/latest/developerguide/).
//
//    // Example sending a request using the CreateXssMatchSetRequest method.
//    req := client.CreateXssMatchSetRequest(params)
//    resp, err := req.Send()
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/waf-regional-2016-11-28/CreateXssMatchSet
func (c *WAFRegional) CreateXssMatchSetRequest(input *waf.CreateXssMatchSetInput) CreateXssMatchSetRequest {
	op := &aws.Operation{
		Name:       opCreateXssMatchSet,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &waf.CreateXssMatchSetInput{}
	}

	req := c.newRequest(op, input, &waf.CreateXssMatchSetOutput{})
	return CreateXssMatchSetRequest{Request: req, Input: input}
}

const opDeleteByteMatchSet = "DeleteByteMatchSet"

// DeleteByteMatchSetRequest is a API request type for the DeleteByteMatchSet API operation.
type DeleteByteMatchSetRequest struct {
	*aws.Request
	Input *waf.DeleteByteMatchSetInput
}

// Send marshals and sends the DeleteByteMatchSet API request.
func (r DeleteByteMatchSetRequest) Send() (*waf.DeleteByteMatchSetOutput, error) {
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	return r.Request.Data.(*waf.DeleteByteMatchSetOutput), nil
}

// DeleteByteMatchSetRequest returns a request value for making API operation for
// AWS WAF Regional.
//
// Permanently deletes a ByteMatchSet. You can't delete a ByteMatchSet if it's
// still used in any Rules or if it still includes any ByteMatchTuple objects
// (any filters).
//
// If you just want to remove a ByteMatchSet from a Rule, use UpdateRule.
//
// To permanently delete a ByteMatchSet, perform the following steps:
//
// Update the ByteMatchSet to remove filters, if any. For more information,
// see UpdateByteMatchSet.
//
// Use GetChangeToken to get the change token that you provide in the ChangeToken
// parameter of a DeleteByteMatchSet request.
//
// Submit a DeleteByteMatchSet request.
//
//    // Example sending a request using the DeleteByteMatchSetRequest method.
//    req := client.DeleteByteMatchSetRequest(params)
//    resp, err := req.Send()
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/waf-regional-2016-11-28/DeleteByteMatchSet
func (c *WAFRegional) DeleteByteMatchSetRequest(input *waf.DeleteByteMatchSetInput) DeleteByteMatchSetRequest {
	op := &aws.Operation{
		Name:       opDeleteByteMatchSet,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &waf.DeleteByteMatchSetInput{}
	}

	req := c.newRequest(op, input, &waf.DeleteByteMatchSetOutput{})
	return DeleteByteMatchSetRequest{Request: req, Input: input}
}

const opDeleteIPSet = "DeleteIPSet"

// DeleteIPSetRequest is a API request type for the DeleteIPSet API operation.
type DeleteIPSetRequest struct {
	*aws.Request
	Input *waf.DeleteIPSetInput
}

// Send marshals and sends the DeleteIPSet API request.
func (r DeleteIPSetRequest) Send() (*waf.DeleteIPSetOutput, error) {
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	return r.Request.Data.(*waf.DeleteIPSetOutput), nil
}

// DeleteIPSetRequest returns a request value for making API operation for
// AWS WAF Regional.
//
// Permanently deletes an IPSet. You can't delete an IPSet if it's still used
// in any Rules or if it still includes any IP addresses.
//
// If you just want to remove an IPSet from a Rule, use UpdateRule.
//
// To permanently delete an IPSet from AWS WAF, perform the following steps:
//
// Update the IPSet to remove IP address ranges, if any. For more information,
// see UpdateIPSet.
//
// Use GetChangeToken to get the change token that you provide in the ChangeToken
// parameter of a DeleteIPSet request.
//
// Submit a DeleteIPSet request.
//
//    // Example sending a request using the DeleteIPSetRequest method.
//    req := client.DeleteIPSetRequest(params)
//    resp, err := req.Send()
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/waf-regional-2016-11-28/DeleteIPSet
func (c *WAFRegional) DeleteIPSetRequest(input *waf.DeleteIPSetInput) DeleteIPSetRequest {
	op := &aws.Operation{
		Name:       opDeleteIPSet,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &waf.DeleteIPSetInput{}
	}

	req := c.newRequest(op, input, &waf.DeleteIPSetOutput{})
	return DeleteIPSetRequest{Request: req, Input: input}
}

const opDeleteRateBasedRule = "DeleteRateBasedRule"

// DeleteRateBasedRuleRequest is a API request type for the DeleteRateBasedRule API operation.
type DeleteRateBasedRuleRequest struct {
	*aws.Request
	Input *waf.DeleteRateBasedRuleInput
}

// Send marshals and sends the DeleteRateBasedRule API request.
func (r DeleteRateBasedRuleRequest) Send() (*waf.DeleteRateBasedRuleOutput, error) {
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	return r.Request.Data.(*waf.DeleteRateBasedRuleOutput), nil
}

// DeleteRateBasedRuleRequest returns a request value for making API operation for
// AWS WAF Regional.
//
// Permanently deletes a RateBasedRule. You can't delete a rule if it's still
// used in any WebACL objects or if it still includes any predicates, such as
// ByteMatchSet objects.
//
// If you just want to remove a rule from a WebACL, use UpdateWebACL.
//
// To permanently delete a RateBasedRule from AWS WAF, perform the following
// steps:
//
// Update the RateBasedRule to remove predicates, if any. For more information,
// see UpdateRateBasedRule.
//
// Use GetChangeToken to get the change token that you provide in the ChangeToken
// parameter of a DeleteRateBasedRule request.
//
// Submit a DeleteRateBasedRule request.
//
//    // Example sending a request using the DeleteRateBasedRuleRequest method.
//    req := client.DeleteRateBasedRuleRequest(params)
//    resp, err := req.Send()
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/waf-regional-2016-11-28/DeleteRateBasedRule
func (c *WAFRegional) DeleteRateBasedRuleRequest(input *waf.DeleteRateBasedRuleInput) DeleteRateBasedRuleRequest {
	op := &aws.Operation{
		Name:       opDeleteRateBasedRule,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &waf.DeleteRateBasedRuleInput{}
	}

	req := c.newRequest(op, input, &waf.DeleteRateBasedRuleOutput{})
	return DeleteRateBasedRuleRequest{Request: req, Input: input}
}

const opDeleteRule = "DeleteRule"

// DeleteRuleRequest is a API request type for the DeleteRule API operation.
type DeleteRuleRequest struct {
	*aws.Request
	Input *waf.DeleteRuleInput
}

// Send marshals and sends the DeleteRule API request.
func (r DeleteRuleRequest) Send() (*waf.DeleteRuleOutput, error) {
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	return r.Request.Data.(*waf.DeleteRuleOutput), nil
}

// DeleteRuleRequest returns a request value for making API operation for
// AWS WAF Regional.
//
// Permanently deletes a Rule. You can't delete a Rule if it's still used in
// any WebACL objects or if it still includes any predicates, such as ByteMatchSet
// objects.
//
// If you just want to remove a Rule from a WebACL, use UpdateWebACL.
//
// To permanently delete a Rule from AWS WAF, perform the following steps:
//
// Update the Rule to remove predicates, if any. For more information, see UpdateRule.
//
// Use GetChangeToken to get the change token that you provide in the ChangeToken
// parameter of a DeleteRule request.
//
// Submit a DeleteRule request.
//
//    // Example sending a request using the DeleteRuleRequest method.
//    req := client.DeleteRuleRequest(params)
//    resp, err := req.Send()
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/waf-regional-2016-11-28/DeleteRule
func (c *WAFRegional) DeleteRuleRequest(input *waf.DeleteRuleInput) DeleteRuleRequest {
	op := &aws.Operation{
		Name:       opDeleteRule,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &waf.DeleteRuleInput{}
	}

	req := c.newRequest(op, input, &waf.DeleteRuleOutput{})
	return DeleteRuleRequest{Request: req, Input: input}
}

const opDeleteSizeConstraintSet = "DeleteSizeConstraintSet"

// DeleteSizeConstraintSetRequest is a API request type for the DeleteSizeConstraintSet API operation.
type DeleteSizeConstraintSetRequest struct {
	*aws.Request
	Input *waf.DeleteSizeConstraintSetInput
}

// Send marshals and sends the DeleteSizeConstraintSet API request.
func (r DeleteSizeConstraintSetRequest) Send() (*waf.DeleteSizeConstraintSetOutput, error) {
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	return r.Request.Data.(*waf.DeleteSizeConstraintSetOutput), nil
}

// DeleteSizeConstraintSetRequest returns a request value for making API operation for
// AWS WAF Regional.
//
// Permanently deletes a SizeConstraintSet. You can't delete a SizeConstraintSet
// if it's still used in any Rules or if it still includes any SizeConstraint
// objects (any filters).
//
// If you just want to remove a SizeConstraintSet from a Rule, use UpdateRule.
//
// To permanently delete a SizeConstraintSet, perform the following steps:
//
// Update the SizeConstraintSet to remove filters, if any. For more information,
// see UpdateSizeConstraintSet.
//
// Use GetChangeToken to get the change token that you provide in the ChangeToken
// parameter of a DeleteSizeConstraintSet request.
//
// Submit a DeleteSizeConstraintSet request.
//
//    // Example sending a request using the DeleteSizeConstraintSetRequest method.
//    req := client.DeleteSizeConstraintSetRequest(params)
//    resp, err := req.Send()
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/waf-regional-2016-11-28/DeleteSizeConstraintSet
func (c *WAFRegional) DeleteSizeConstraintSetRequest(input *waf.DeleteSizeConstraintSetInput) DeleteSizeConstraintSetRequest {
	op := &aws.Operation{
		Name:       opDeleteSizeConstraintSet,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &waf.DeleteSizeConstraintSetInput{}
	}

	req := c.newRequest(op, input, &waf.DeleteSizeConstraintSetOutput{})
	return DeleteSizeConstraintSetRequest{Request: req, Input: input}
}

const opDeleteSqlInjectionMatchSet = "DeleteSqlInjectionMatchSet"

// DeleteSqlInjectionMatchSetRequest is a API request type for the DeleteSqlInjectionMatchSet API operation.
type DeleteSqlInjectionMatchSetRequest struct {
	*aws.Request
	Input *waf.DeleteSqlInjectionMatchSetInput
}

// Send marshals and sends the DeleteSqlInjectionMatchSet API request.
func (r DeleteSqlInjectionMatchSetRequest) Send() (*waf.DeleteSqlInjectionMatchSetOutput, error) {
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	return r.Request.Data.(*waf.DeleteSqlInjectionMatchSetOutput), nil
}

// DeleteSqlInjectionMatchSetRequest returns a request value for making API operation for
// AWS WAF Regional.
//
// Permanently deletes a SqlInjectionMatchSet. You can't delete a SqlInjectionMatchSet
// if it's still used in any Rules or if it still contains any SqlInjectionMatchTuple
// objects.
//
// If you just want to remove a SqlInjectionMatchSet from a Rule, use UpdateRule.
//
// To permanently delete a SqlInjectionMatchSet from AWS WAF, perform the following
// steps:
//
// Update the SqlInjectionMatchSet to remove filters, if any. For more information,
// see UpdateSqlInjectionMatchSet.
//
// Use GetChangeToken to get the change token that you provide in the ChangeToken
// parameter of a DeleteSqlInjectionMatchSet request.
//
// Submit a DeleteSqlInjectionMatchSet request.
//
//    // Example sending a request using the DeleteSqlInjectionMatchSetRequest method.
//    req := client.DeleteSqlInjectionMatchSetRequest(params)
//    resp, err := req.Send()
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/waf-regional-2016-11-28/DeleteSqlInjectionMatchSet
func (c *WAFRegional) DeleteSqlInjectionMatchSetRequest(input *waf.DeleteSqlInjectionMatchSetInput) DeleteSqlInjectionMatchSetRequest {
	op := &aws.Operation{
		Name:       opDeleteSqlInjectionMatchSet,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &waf.DeleteSqlInjectionMatchSetInput{}
	}

	req := c.newRequest(op, input, &waf.DeleteSqlInjectionMatchSetOutput{})
	return DeleteSqlInjectionMatchSetRequest{Request: req, Input: input}
}

const opDeleteWebACL = "DeleteWebACL"

// DeleteWebACLRequest is a API request type for the DeleteWebACL API operation.
type DeleteWebACLRequest struct {
	*aws.Request
	Input *waf.DeleteWebACLInput
}

// Send marshals and sends the DeleteWebACL API request.
func (r DeleteWebACLRequest) Send() (*waf.DeleteWebACLOutput, error) {
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	return r.Request.Data.(*waf.DeleteWebACLOutput), nil
}

// DeleteWebACLRequest returns a request value for making API operation for
// AWS WAF Regional.
//
// Permanently deletes a WebACL. You can't delete a WebACL if it still contains
// any Rules.
//
// To delete a WebACL, perform the following steps:
//
// Update the WebACL to remove Rules, if any. For more information, see UpdateWebACL.
//
// Use GetChangeToken to get the change token that you provide in the ChangeToken
// parameter of a DeleteWebACL request.
//
// Submit a DeleteWebACL request.
//
//    // Example sending a request using the DeleteWebACLRequest method.
//    req := client.DeleteWebACLRequest(params)
//    resp, err := req.Send()
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/waf-regional-2016-11-28/DeleteWebACL
func (c *WAFRegional) DeleteWebACLRequest(input *waf.DeleteWebACLInput) DeleteWebACLRequest {
	op := &aws.Operation{
		Name:       opDeleteWebACL,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &waf.DeleteWebACLInput{}
	}

	req := c.newRequest(op, input, &waf.DeleteWebACLOutput{})
	return DeleteWebACLRequest{Request: req, Input: input}
}

const opDeleteXssMatchSet = "DeleteXssMatchSet"

// DeleteXssMatchSetRequest is a API request type for the DeleteXssMatchSet API operation.
type DeleteXssMatchSetRequest struct {
	*aws.Request
	Input *waf.DeleteXssMatchSetInput
}

// Send marshals and sends the DeleteXssMatchSet API request.
func (r DeleteXssMatchSetRequest) Send() (*waf.DeleteXssMatchSetOutput, error) {
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	return r.Request.Data.(*waf.DeleteXssMatchSetOutput), nil
}

// DeleteXssMatchSetRequest returns a request value for making API operation for
// AWS WAF Regional.
//
// Permanently deletes an XssMatchSet. You can't delete an XssMatchSet if it's
// still used in any Rules or if it still contains any XssMatchTuple objects.
//
// If you just want to remove an XssMatchSet from a Rule, use UpdateRule.
//
// To permanently delete an XssMatchSet from AWS WAF, perform the following
// steps:
//
// Update the XssMatchSet to remove filters, if any. For more information, see
// UpdateXssMatchSet.
//
// Use GetChangeToken to get the change token that you provide in the ChangeToken
// parameter of a DeleteXssMatchSet request.
//
// Submit a DeleteXssMatchSet request.
//
//    // Example sending a request using the DeleteXssMatchSetRequest method.
//    req := client.DeleteXssMatchSetRequest(params)
//    resp, err := req.Send()
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/waf-regional-2016-11-28/DeleteXssMatchSet
func (c *WAFRegional) DeleteXssMatchSetRequest(input *waf.DeleteXssMatchSetInput) DeleteXssMatchSetRequest {
	op := &aws.Operation{
		Name:       opDeleteXssMatchSet,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &waf.DeleteXssMatchSetInput{}
	}

	req := c.newRequest(op, input, &waf.DeleteXssMatchSetOutput{})
	return DeleteXssMatchSetRequest{Request: req, Input: input}
}

const opDisassociateWebACL = "DisassociateWebACL"

// DisassociateWebACLRequest is a API request type for the DisassociateWebACL API operation.
type DisassociateWebACLRequest struct {
	*aws.Request
	Input *DisassociateWebACLInput
}

// Send marshals and sends the DisassociateWebACL API request.
func (r DisassociateWebACLRequest) Send() (*DisassociateWebACLOutput, error) {
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	return r.Request.Data.(*DisassociateWebACLOutput), nil
}

// DisassociateWebACLRequest returns a request value for making API operation for
// AWS WAF Regional.
//
// Removes a web ACL from the specified resource.
//
//    // Example sending a request using the DisassociateWebACLRequest method.
//    req := client.DisassociateWebACLRequest(params)
//    resp, err := req.Send()
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/waf-regional-2016-11-28/DisassociateWebACL
func (c *WAFRegional) DisassociateWebACLRequest(input *DisassociateWebACLInput) DisassociateWebACLRequest {
	op := &aws.Operation{
		Name:       opDisassociateWebACL,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DisassociateWebACLInput{}
	}

	req := c.newRequest(op, input, &DisassociateWebACLOutput{})
	return DisassociateWebACLRequest{Request: req, Input: input}
}

const opGetByteMatchSet = "GetByteMatchSet"

// GetByteMatchSetRequest is a API request type for the GetByteMatchSet API operation.
type GetByteMatchSetRequest struct {
	*aws.Request
	Input *waf.GetByteMatchSetInput
}

// Send marshals and sends the GetByteMatchSet API request.
func (r GetByteMatchSetRequest) Send() (*waf.GetByteMatchSetOutput, error) {
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	return r.Request.Data.(*waf.GetByteMatchSetOutput), nil
}

// GetByteMatchSetRequest returns a request value for making API operation for
// AWS WAF Regional.
//
// Returns the ByteMatchSet specified by ByteMatchSetId.
//
//    // Example sending a request using the GetByteMatchSetRequest method.
//    req := client.GetByteMatchSetRequest(params)
//    resp, err := req.Send()
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/waf-regional-2016-11-28/GetByteMatchSet
func (c *WAFRegional) GetByteMatchSetRequest(input *waf.GetByteMatchSetInput) GetByteMatchSetRequest {
	op := &aws.Operation{
		Name:       opGetByteMatchSet,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &waf.GetByteMatchSetInput{}
	}

	req := c.newRequest(op, input, &waf.GetByteMatchSetOutput{})
	return GetByteMatchSetRequest{Request: req, Input: input}
}

const opGetChangeToken = "GetChangeToken"

// GetChangeTokenRequest is a API request type for the GetChangeToken API operation.
type GetChangeTokenRequest struct {
	*aws.Request
	Input *waf.GetChangeTokenInput
}

// Send marshals and sends the GetChangeToken API request.
func (r GetChangeTokenRequest) Send() (*waf.GetChangeTokenOutput, error) {
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	return r.Request.Data.(*waf.GetChangeTokenOutput), nil
}

// GetChangeTokenRequest returns a request value for making API operation for
// AWS WAF Regional.
//
// When you want to create, update, or delete AWS WAF objects, get a change
// token and include the change token in the create, update, or delete request.
// Change tokens ensure that your application doesn't submit conflicting requests
// to AWS WAF.
//
// Each create, update, or delete request must use a unique change token. If
// your application submits a GetChangeToken request and then submits a second
// GetChangeToken request before submitting a create, update, or delete request,
// the second GetChangeToken request returns the same value as the first GetChangeToken
// request.
//
// When you use a change token in a create, update, or delete request, the status
// of the change token changes to PENDING, which indicates that AWS WAF is propagating
// the change to all AWS WAF servers. Use GetChangeTokenStatus to determine
// the status of your change token.
//
//    // Example sending a request using the GetChangeTokenRequest method.
//    req := client.GetChangeTokenRequest(params)
//    resp, err := req.Send()
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/waf-regional-2016-11-28/GetChangeToken
func (c *WAFRegional) GetChangeTokenRequest(input *waf.GetChangeTokenInput) GetChangeTokenRequest {
	op := &aws.Operation{
		Name:       opGetChangeToken,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &waf.GetChangeTokenInput{}
	}

	req := c.newRequest(op, input, &waf.GetChangeTokenOutput{})
	return GetChangeTokenRequest{Request: req, Input: input}
}

const opGetChangeTokenStatus = "GetChangeTokenStatus"

// GetChangeTokenStatusRequest is a API request type for the GetChangeTokenStatus API operation.
type GetChangeTokenStatusRequest struct {
	*aws.Request
	Input *waf.GetChangeTokenStatusInput
}

// Send marshals and sends the GetChangeTokenStatus API request.
func (r GetChangeTokenStatusRequest) Send() (*waf.GetChangeTokenStatusOutput, error) {
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	return r.Request.Data.(*waf.GetChangeTokenStatusOutput), nil
}

// GetChangeTokenStatusRequest returns a request value for making API operation for
// AWS WAF Regional.
//
// Returns the status of a ChangeToken that you got by calling GetChangeToken.
// ChangeTokenStatus is one of the following values:
//
//    * PROVISIONED: You requested the change token by calling GetChangeToken,
//    but you haven't used it yet in a call to create, update, or delete an
//    AWS WAF object.
//
//    * PENDING: AWS WAF is propagating the create, update, or delete request
//    to all AWS WAF servers.
//
//    * IN_SYNC: Propagation is complete.
//
//    // Example sending a request using the GetChangeTokenStatusRequest method.
//    req := client.GetChangeTokenStatusRequest(params)
//    resp, err := req.Send()
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/waf-regional-2016-11-28/GetChangeTokenStatus
func (c *WAFRegional) GetChangeTokenStatusRequest(input *waf.GetChangeTokenStatusInput) GetChangeTokenStatusRequest {
	op := &aws.Operation{
		Name:       opGetChangeTokenStatus,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &waf.GetChangeTokenStatusInput{}
	}

	req := c.newRequest(op, input, &waf.GetChangeTokenStatusOutput{})
	return GetChangeTokenStatusRequest{Request: req, Input: input}
}

const opGetIPSet = "GetIPSet"

// GetIPSetRequest is a API request type for the GetIPSet API operation.
type GetIPSetRequest struct {
	*aws.Request
	Input *waf.GetIPSetInput
}

// Send marshals and sends the GetIPSet API request.
func (r GetIPSetRequest) Send() (*waf.GetIPSetOutput, error) {
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	return r.Request.Data.(*waf.GetIPSetOutput), nil
}

// GetIPSetRequest returns a request value for making API operation for
// AWS WAF Regional.
//
// Returns the IPSet that is specified by IPSetId.
//
//    // Example sending a request using the GetIPSetRequest method.
//    req := client.GetIPSetRequest(params)
//    resp, err := req.Send()
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/waf-regional-2016-11-28/GetIPSet
func (c *WAFRegional) GetIPSetRequest(input *waf.GetIPSetInput) GetIPSetRequest {
	op := &aws.Operation{
		Name:       opGetIPSet,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &waf.GetIPSetInput{}
	}

	req := c.newRequest(op, input, &waf.GetIPSetOutput{})
	return GetIPSetRequest{Request: req, Input: input}
}

const opGetRateBasedRule = "GetRateBasedRule"

// GetRateBasedRuleRequest is a API request type for the GetRateBasedRule API operation.
type GetRateBasedRuleRequest struct {
	*aws.Request
	Input *waf.GetRateBasedRuleInput
}

// Send marshals and sends the GetRateBasedRule API request.
func (r GetRateBasedRuleRequest) Send() (*waf.GetRateBasedRuleOutput, error) {
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	return r.Request.Data.(*waf.GetRateBasedRuleOutput), nil
}

// GetRateBasedRuleRequest returns a request value for making API operation for
// AWS WAF Regional.
//
// Returns the RateBasedRule that is specified by the RuleId that you included
// in the GetRateBasedRule request.
//
//    // Example sending a request using the GetRateBasedRuleRequest method.
//    req := client.GetRateBasedRuleRequest(params)
//    resp, err := req.Send()
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/waf-regional-2016-11-28/GetRateBasedRule
func (c *WAFRegional) GetRateBasedRuleRequest(input *waf.GetRateBasedRuleInput) GetRateBasedRuleRequest {
	op := &aws.Operation{
		Name:       opGetRateBasedRule,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &waf.GetRateBasedRuleInput{}
	}

	req := c.newRequest(op, input, &waf.GetRateBasedRuleOutput{})
	return GetRateBasedRuleRequest{Request: req, Input: input}
}

const opGetRateBasedRuleManagedKeys = "GetRateBasedRuleManagedKeys"

// GetRateBasedRuleManagedKeysRequest is a API request type for the GetRateBasedRuleManagedKeys API operation.
type GetRateBasedRuleManagedKeysRequest struct {
	*aws.Request
	Input *waf.GetRateBasedRuleManagedKeysInput
}

// Send marshals and sends the GetRateBasedRuleManagedKeys API request.
func (r GetRateBasedRuleManagedKeysRequest) Send() (*waf.GetRateBasedRuleManagedKeysOutput, error) {
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	return r.Request.Data.(*waf.GetRateBasedRuleManagedKeysOutput), nil
}

// GetRateBasedRuleManagedKeysRequest returns a request value for making API operation for
// AWS WAF Regional.
//
// Returns an array of IP addresses currently being blocked by the RateBasedRule
// that is specified by the RuleId. The maximum number of managed keys that
// will be blocked is 10,000. If more than 10,000 addresses exceed the rate
// limit, the 10,000 addresses with the highest rates will be blocked.
//
//    // Example sending a request using the GetRateBasedRuleManagedKeysRequest method.
//    req := client.GetRateBasedRuleManagedKeysRequest(params)
//    resp, err := req.Send()
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/waf-regional-2016-11-28/GetRateBasedRuleManagedKeys
func (c *WAFRegional) GetRateBasedRuleManagedKeysRequest(input *waf.GetRateBasedRuleManagedKeysInput) GetRateBasedRuleManagedKeysRequest {
	op := &aws.Operation{
		Name:       opGetRateBasedRuleManagedKeys,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &waf.GetRateBasedRuleManagedKeysInput{}
	}

	req := c.newRequest(op, input, &waf.GetRateBasedRuleManagedKeysOutput{})
	return GetRateBasedRuleManagedKeysRequest{Request: req, Input: input}
}

const opGetRule = "GetRule"

// GetRuleRequest is a API request type for the GetRule API operation.
type GetRuleRequest struct {
	*aws.Request
	Input *waf.GetRuleInput
}

// Send marshals and sends the GetRule API request.
func (r GetRuleRequest) Send() (*waf.GetRuleOutput, error) {
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	return r.Request.Data.(*waf.GetRuleOutput), nil
}

// GetRuleRequest returns a request value for making API operation for
// AWS WAF Regional.
//
// Returns the Rule that is specified by the RuleId that you included in the
// GetRule request.
//
//    // Example sending a request using the GetRuleRequest method.
//    req := client.GetRuleRequest(params)
//    resp, err := req.Send()
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/waf-regional-2016-11-28/GetRule
func (c *WAFRegional) GetRuleRequest(input *waf.GetRuleInput) GetRuleRequest {
	op := &aws.Operation{
		Name:       opGetRule,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &waf.GetRuleInput{}
	}

	req := c.newRequest(op, input, &waf.GetRuleOutput{})
	return GetRuleRequest{Request: req, Input: input}
}

const opGetSampledRequests = "GetSampledRequests"

// GetSampledRequestsRequest is a API request type for the GetSampledRequests API operation.
type GetSampledRequestsRequest struct {
	*aws.Request
	Input *waf.GetSampledRequestsInput
}

// Send marshals and sends the GetSampledRequests API request.
func (r GetSampledRequestsRequest) Send() (*waf.GetSampledRequestsOutput, error) {
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	return r.Request.Data.(*waf.GetSampledRequestsOutput), nil
}

// GetSampledRequestsRequest returns a request value for making API operation for
// AWS WAF Regional.
//
// Gets detailed information about a specified number of requests--a sample--that
// AWS WAF randomly selects from among the first 5,000 requests that your AWS
// resource received during a time range that you choose. You can specify a
// sample size of up to 500 requests, and you can specify any time range in
// the previous three hours.
//
// GetSampledRequests returns a time range, which is usually the time range
// that you specified. However, if your resource (such as a CloudFront distribution)
// received 5,000 requests before the specified time range elapsed, GetSampledRequests
// returns an updated time range. This new time range indicates the actual period
// during which AWS WAF selected the requests in the sample.
//
//    // Example sending a request using the GetSampledRequestsRequest method.
//    req := client.GetSampledRequestsRequest(params)
//    resp, err := req.Send()
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/waf-regional-2016-11-28/GetSampledRequests
func (c *WAFRegional) GetSampledRequestsRequest(input *waf.GetSampledRequestsInput) GetSampledRequestsRequest {
	op := &aws.Operation{
		Name:       opGetSampledRequests,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &waf.GetSampledRequestsInput{}
	}

	req := c.newRequest(op, input, &waf.GetSampledRequestsOutput{})
	return GetSampledRequestsRequest{Request: req, Input: input}
}

const opGetSizeConstraintSet = "GetSizeConstraintSet"

// GetSizeConstraintSetRequest is a API request type for the GetSizeConstraintSet API operation.
type GetSizeConstraintSetRequest struct {
	*aws.Request
	Input *waf.GetSizeConstraintSetInput
}

// Send marshals and sends the GetSizeConstraintSet API request.
func (r GetSizeConstraintSetRequest) Send() (*waf.GetSizeConstraintSetOutput, error) {
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	return r.Request.Data.(*waf.GetSizeConstraintSetOutput), nil
}

// GetSizeConstraintSetRequest returns a request value for making API operation for
// AWS WAF Regional.
//
// Returns the SizeConstraintSet specified by SizeConstraintSetId.
//
//    // Example sending a request using the GetSizeConstraintSetRequest method.
//    req := client.GetSizeConstraintSetRequest(params)
//    resp, err := req.Send()
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/waf-regional-2016-11-28/GetSizeConstraintSet
func (c *WAFRegional) GetSizeConstraintSetRequest(input *waf.GetSizeConstraintSetInput) GetSizeConstraintSetRequest {
	op := &aws.Operation{
		Name:       opGetSizeConstraintSet,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &waf.GetSizeConstraintSetInput{}
	}

	req := c.newRequest(op, input, &waf.GetSizeConstraintSetOutput{})
	return GetSizeConstraintSetRequest{Request: req, Input: input}
}

const opGetSqlInjectionMatchSet = "GetSqlInjectionMatchSet"

// GetSqlInjectionMatchSetRequest is a API request type for the GetSqlInjectionMatchSet API operation.
type GetSqlInjectionMatchSetRequest struct {
	*aws.Request
	Input *waf.GetSqlInjectionMatchSetInput
}

// Send marshals and sends the GetSqlInjectionMatchSet API request.
func (r GetSqlInjectionMatchSetRequest) Send() (*waf.GetSqlInjectionMatchSetOutput, error) {
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	return r.Request.Data.(*waf.GetSqlInjectionMatchSetOutput), nil
}

// GetSqlInjectionMatchSetRequest returns a request value for making API operation for
// AWS WAF Regional.
//
// Returns the SqlInjectionMatchSet that is specified by SqlInjectionMatchSetId.
//
//    // Example sending a request using the GetSqlInjectionMatchSetRequest method.
//    req := client.GetSqlInjectionMatchSetRequest(params)
//    resp, err := req.Send()
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/waf-regional-2016-11-28/GetSqlInjectionMatchSet
func (c *WAFRegional) GetSqlInjectionMatchSetRequest(input *waf.GetSqlInjectionMatchSetInput) GetSqlInjectionMatchSetRequest {
	op := &aws.Operation{
		Name:       opGetSqlInjectionMatchSet,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &waf.GetSqlInjectionMatchSetInput{}
	}

	req := c.newRequest(op, input, &waf.GetSqlInjectionMatchSetOutput{})
	return GetSqlInjectionMatchSetRequest{Request: req, Input: input}
}

const opGetWebACL = "GetWebACL"

// GetWebACLRequest is a API request type for the GetWebACL API operation.
type GetWebACLRequest struct {
	*aws.Request
	Input *waf.GetWebACLInput
}

// Send marshals and sends the GetWebACL API request.
func (r GetWebACLRequest) Send() (*waf.GetWebACLOutput, error) {
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	return r.Request.Data.(*waf.GetWebACLOutput), nil
}

// GetWebACLRequest returns a request value for making API operation for
// AWS WAF Regional.
//
// Returns the WebACL that is specified by WebACLId.
//
//    // Example sending a request using the GetWebACLRequest method.
//    req := client.GetWebACLRequest(params)
//    resp, err := req.Send()
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/waf-regional-2016-11-28/GetWebACL
func (c *WAFRegional) GetWebACLRequest(input *waf.GetWebACLInput) GetWebACLRequest {
	op := &aws.Operation{
		Name:       opGetWebACL,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &waf.GetWebACLInput{}
	}

	req := c.newRequest(op, input, &waf.GetWebACLOutput{})
	return GetWebACLRequest{Request: req, Input: input}
}

const opGetWebACLForResource = "GetWebACLForResource"

// GetWebACLForResourceRequest is a API request type for the GetWebACLForResource API operation.
type GetWebACLForResourceRequest struct {
	*aws.Request
	Input *GetWebACLForResourceInput
}

// Send marshals and sends the GetWebACLForResource API request.
func (r GetWebACLForResourceRequest) Send() (*GetWebACLForResourceOutput, error) {
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	return r.Request.Data.(*GetWebACLForResourceOutput), nil
}

// GetWebACLForResourceRequest returns a request value for making API operation for
// AWS WAF Regional.
//
// Returns the web ACL for the specified resource.
//
//    // Example sending a request using the GetWebACLForResourceRequest method.
//    req := client.GetWebACLForResourceRequest(params)
//    resp, err := req.Send()
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/waf-regional-2016-11-28/GetWebACLForResource
func (c *WAFRegional) GetWebACLForResourceRequest(input *GetWebACLForResourceInput) GetWebACLForResourceRequest {
	op := &aws.Operation{
		Name:       opGetWebACLForResource,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &GetWebACLForResourceInput{}
	}

	req := c.newRequest(op, input, &GetWebACLForResourceOutput{})
	return GetWebACLForResourceRequest{Request: req, Input: input}
}

const opGetXssMatchSet = "GetXssMatchSet"

// GetXssMatchSetRequest is a API request type for the GetXssMatchSet API operation.
type GetXssMatchSetRequest struct {
	*aws.Request
	Input *waf.GetXssMatchSetInput
}

// Send marshals and sends the GetXssMatchSet API request.
func (r GetXssMatchSetRequest) Send() (*waf.GetXssMatchSetOutput, error) {
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	return r.Request.Data.(*waf.GetXssMatchSetOutput), nil
}

// GetXssMatchSetRequest returns a request value for making API operation for
// AWS WAF Regional.
//
// Returns the XssMatchSet that is specified by XssMatchSetId.
//
//    // Example sending a request using the GetXssMatchSetRequest method.
//    req := client.GetXssMatchSetRequest(params)
//    resp, err := req.Send()
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/waf-regional-2016-11-28/GetXssMatchSet
func (c *WAFRegional) GetXssMatchSetRequest(input *waf.GetXssMatchSetInput) GetXssMatchSetRequest {
	op := &aws.Operation{
		Name:       opGetXssMatchSet,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &waf.GetXssMatchSetInput{}
	}

	req := c.newRequest(op, input, &waf.GetXssMatchSetOutput{})
	return GetXssMatchSetRequest{Request: req, Input: input}
}

const opListByteMatchSets = "ListByteMatchSets"

// ListByteMatchSetsRequest is a API request type for the ListByteMatchSets API operation.
type ListByteMatchSetsRequest struct {
	*aws.Request
	Input *waf.ListByteMatchSetsInput
}

// Send marshals and sends the ListByteMatchSets API request.
func (r ListByteMatchSetsRequest) Send() (*waf.ListByteMatchSetsOutput, error) {
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	return r.Request.Data.(*waf.ListByteMatchSetsOutput), nil
}

// ListByteMatchSetsRequest returns a request value for making API operation for
// AWS WAF Regional.
//
// Returns an array of ByteMatchSetSummary objects.
//
//    // Example sending a request using the ListByteMatchSetsRequest method.
//    req := client.ListByteMatchSetsRequest(params)
//    resp, err := req.Send()
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/waf-regional-2016-11-28/ListByteMatchSets
func (c *WAFRegional) ListByteMatchSetsRequest(input *waf.ListByteMatchSetsInput) ListByteMatchSetsRequest {
	op := &aws.Operation{
		Name:       opListByteMatchSets,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &waf.ListByteMatchSetsInput{}
	}

	req := c.newRequest(op, input, &waf.ListByteMatchSetsOutput{})
	return ListByteMatchSetsRequest{Request: req, Input: input}
}

const opListIPSets = "ListIPSets"

// ListIPSetsRequest is a API request type for the ListIPSets API operation.
type ListIPSetsRequest struct {
	*aws.Request
	Input *waf.ListIPSetsInput
}

// Send marshals and sends the ListIPSets API request.
func (r ListIPSetsRequest) Send() (*waf.ListIPSetsOutput, error) {
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	return r.Request.Data.(*waf.ListIPSetsOutput), nil
}

// ListIPSetsRequest returns a request value for making API operation for
// AWS WAF Regional.
//
// Returns an array of IPSetSummary objects in the response.
//
//    // Example sending a request using the ListIPSetsRequest method.
//    req := client.ListIPSetsRequest(params)
//    resp, err := req.Send()
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/waf-regional-2016-11-28/ListIPSets
func (c *WAFRegional) ListIPSetsRequest(input *waf.ListIPSetsInput) ListIPSetsRequest {
	op := &aws.Operation{
		Name:       opListIPSets,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &waf.ListIPSetsInput{}
	}

	req := c.newRequest(op, input, &waf.ListIPSetsOutput{})
	return ListIPSetsRequest{Request: req, Input: input}
}

const opListRateBasedRules = "ListRateBasedRules"

// ListRateBasedRulesRequest is a API request type for the ListRateBasedRules API operation.
type ListRateBasedRulesRequest struct {
	*aws.Request
	Input *waf.ListRateBasedRulesInput
}

// Send marshals and sends the ListRateBasedRules API request.
func (r ListRateBasedRulesRequest) Send() (*waf.ListRateBasedRulesOutput, error) {
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	return r.Request.Data.(*waf.ListRateBasedRulesOutput), nil
}

// ListRateBasedRulesRequest returns a request value for making API operation for
// AWS WAF Regional.
//
// Returns an array of RuleSummary objects.
//
//    // Example sending a request using the ListRateBasedRulesRequest method.
//    req := client.ListRateBasedRulesRequest(params)
//    resp, err := req.Send()
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/waf-regional-2016-11-28/ListRateBasedRules
func (c *WAFRegional) ListRateBasedRulesRequest(input *waf.ListRateBasedRulesInput) ListRateBasedRulesRequest {
	op := &aws.Operation{
		Name:       opListRateBasedRules,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &waf.ListRateBasedRulesInput{}
	}

	req := c.newRequest(op, input, &waf.ListRateBasedRulesOutput{})
	return ListRateBasedRulesRequest{Request: req, Input: input}
}

const opListResourcesForWebACL = "ListResourcesForWebACL"

// ListResourcesForWebACLRequest is a API request type for the ListResourcesForWebACL API operation.
type ListResourcesForWebACLRequest struct {
	*aws.Request
	Input *ListResourcesForWebACLInput
}

// Send marshals and sends the ListResourcesForWebACL API request.
func (r ListResourcesForWebACLRequest) Send() (*ListResourcesForWebACLOutput, error) {
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	return r.Request.Data.(*ListResourcesForWebACLOutput), nil
}

// ListResourcesForWebACLRequest returns a request value for making API operation for
// AWS WAF Regional.
//
// Returns an array of resources associated with the specified web ACL.
//
//    // Example sending a request using the ListResourcesForWebACLRequest method.
//    req := client.ListResourcesForWebACLRequest(params)
//    resp, err := req.Send()
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/waf-regional-2016-11-28/ListResourcesForWebACL
func (c *WAFRegional) ListResourcesForWebACLRequest(input *ListResourcesForWebACLInput) ListResourcesForWebACLRequest {
	op := &aws.Operation{
		Name:       opListResourcesForWebACL,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &ListResourcesForWebACLInput{}
	}

	req := c.newRequest(op, input, &ListResourcesForWebACLOutput{})
	return ListResourcesForWebACLRequest{Request: req, Input: input}
}

const opListRules = "ListRules"

// ListRulesRequest is a API request type for the ListRules API operation.
type ListRulesRequest struct {
	*aws.Request
	Input *waf.ListRulesInput
}

// Send marshals and sends the ListRules API request.
func (r ListRulesRequest) Send() (*waf.ListRulesOutput, error) {
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	return r.Request.Data.(*waf.ListRulesOutput), nil
}

// ListRulesRequest returns a request value for making API operation for
// AWS WAF Regional.
//
// Returns an array of RuleSummary objects.
//
//    // Example sending a request using the ListRulesRequest method.
//    req := client.ListRulesRequest(params)
//    resp, err := req.Send()
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/waf-regional-2016-11-28/ListRules
func (c *WAFRegional) ListRulesRequest(input *waf.ListRulesInput) ListRulesRequest {
	op := &aws.Operation{
		Name:       opListRules,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &waf.ListRulesInput{}
	}

	req := c.newRequest(op, input, &waf.ListRulesOutput{})
	return ListRulesRequest{Request: req, Input: input}
}

const opListSizeConstraintSets = "ListSizeConstraintSets"

// ListSizeConstraintSetsRequest is a API request type for the ListSizeConstraintSets API operation.
type ListSizeConstraintSetsRequest struct {
	*aws.Request
	Input *waf.ListSizeConstraintSetsInput
}

// Send marshals and sends the ListSizeConstraintSets API request.
func (r ListSizeConstraintSetsRequest) Send() (*waf.ListSizeConstraintSetsOutput, error) {
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	return r.Request.Data.(*waf.ListSizeConstraintSetsOutput), nil
}

// ListSizeConstraintSetsRequest returns a request value for making API operation for
// AWS WAF Regional.
//
// Returns an array of SizeConstraintSetSummary objects.
//
//    // Example sending a request using the ListSizeConstraintSetsRequest method.
//    req := client.ListSizeConstraintSetsRequest(params)
//    resp, err := req.Send()
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/waf-regional-2016-11-28/ListSizeConstraintSets
func (c *WAFRegional) ListSizeConstraintSetsRequest(input *waf.ListSizeConstraintSetsInput) ListSizeConstraintSetsRequest {
	op := &aws.Operation{
		Name:       opListSizeConstraintSets,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &waf.ListSizeConstraintSetsInput{}
	}

	req := c.newRequest(op, input, &waf.ListSizeConstraintSetsOutput{})
	return ListSizeConstraintSetsRequest{Request: req, Input: input}
}

const opListSqlInjectionMatchSets = "ListSqlInjectionMatchSets"

// ListSqlInjectionMatchSetsRequest is a API request type for the ListSqlInjectionMatchSets API operation.
type ListSqlInjectionMatchSetsRequest struct {
	*aws.Request
	Input *waf.ListSqlInjectionMatchSetsInput
}

// Send marshals and sends the ListSqlInjectionMatchSets API request.
func (r ListSqlInjectionMatchSetsRequest) Send() (*waf.ListSqlInjectionMatchSetsOutput, error) {
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	return r.Request.Data.(*waf.ListSqlInjectionMatchSetsOutput), nil
}

// ListSqlInjectionMatchSetsRequest returns a request value for making API operation for
// AWS WAF Regional.
//
// Returns an array of SqlInjectionMatchSet objects.
//
//    // Example sending a request using the ListSqlInjectionMatchSetsRequest method.
//    req := client.ListSqlInjectionMatchSetsRequest(params)
//    resp, err := req.Send()
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/waf-regional-2016-11-28/ListSqlInjectionMatchSets
func (c *WAFRegional) ListSqlInjectionMatchSetsRequest(input *waf.ListSqlInjectionMatchSetsInput) ListSqlInjectionMatchSetsRequest {
	op := &aws.Operation{
		Name:       opListSqlInjectionMatchSets,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &waf.ListSqlInjectionMatchSetsInput{}
	}

	req := c.newRequest(op, input, &waf.ListSqlInjectionMatchSetsOutput{})
	return ListSqlInjectionMatchSetsRequest{Request: req, Input: input}
}

const opListWebACLs = "ListWebACLs"

// ListWebACLsRequest is a API request type for the ListWebACLs API operation.
type ListWebACLsRequest struct {
	*aws.Request
	Input *waf.ListWebACLsInput
}

// Send marshals and sends the ListWebACLs API request.
func (r ListWebACLsRequest) Send() (*waf.ListWebACLsOutput, error) {
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	return r.Request.Data.(*waf.ListWebACLsOutput), nil
}

// ListWebACLsRequest returns a request value for making API operation for
// AWS WAF Regional.
//
// Returns an array of WebACLSummary objects in the response.
//
//    // Example sending a request using the ListWebACLsRequest method.
//    req := client.ListWebACLsRequest(params)
//    resp, err := req.Send()
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/waf-regional-2016-11-28/ListWebACLs
func (c *WAFRegional) ListWebACLsRequest(input *waf.ListWebACLsInput) ListWebACLsRequest {
	op := &aws.Operation{
		Name:       opListWebACLs,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &waf.ListWebACLsInput{}
	}

	req := c.newRequest(op, input, &waf.ListWebACLsOutput{})
	return ListWebACLsRequest{Request: req, Input: input}
}

const opListXssMatchSets = "ListXssMatchSets"

// ListXssMatchSetsRequest is a API request type for the ListXssMatchSets API operation.
type ListXssMatchSetsRequest struct {
	*aws.Request
	Input *waf.ListXssMatchSetsInput
}

// Send marshals and sends the ListXssMatchSets API request.
func (r ListXssMatchSetsRequest) Send() (*waf.ListXssMatchSetsOutput, error) {
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	return r.Request.Data.(*waf.ListXssMatchSetsOutput), nil
}

// ListXssMatchSetsRequest returns a request value for making API operation for
// AWS WAF Regional.
//
// Returns an array of XssMatchSet objects.
//
//    // Example sending a request using the ListXssMatchSetsRequest method.
//    req := client.ListXssMatchSetsRequest(params)
//    resp, err := req.Send()
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/waf-regional-2016-11-28/ListXssMatchSets
func (c *WAFRegional) ListXssMatchSetsRequest(input *waf.ListXssMatchSetsInput) ListXssMatchSetsRequest {
	op := &aws.Operation{
		Name:       opListXssMatchSets,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &waf.ListXssMatchSetsInput{}
	}

	req := c.newRequest(op, input, &waf.ListXssMatchSetsOutput{})
	return ListXssMatchSetsRequest{Request: req, Input: input}
}

const opUpdateByteMatchSet = "UpdateByteMatchSet"

// UpdateByteMatchSetRequest is a API request type for the UpdateByteMatchSet API operation.
type UpdateByteMatchSetRequest struct {
	*aws.Request
	Input *waf.UpdateByteMatchSetInput
}

// Send marshals and sends the UpdateByteMatchSet API request.
func (r UpdateByteMatchSetRequest) Send() (*waf.UpdateByteMatchSetOutput, error) {
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	return r.Request.Data.(*waf.UpdateByteMatchSetOutput), nil
}

// UpdateByteMatchSetRequest returns a request value for making API operation for
// AWS WAF Regional.
//
// Inserts or deletes ByteMatchTuple objects (filters) in a ByteMatchSet. For
// each ByteMatchTuple object, you specify the following values:
//
//    * Whether to insert or delete the object from the array. If you want to
//    change a ByteMatchSetUpdate object, you delete the existing object and
//    add a new one.
//
//    * The part of a web request that you want AWS WAF to inspect, such as
//    a query string or the value of the User-Agent header.
//
//    * The bytes (typically a string that corresponds with ASCII characters)
//    that you want AWS WAF to look for. For more information, including how
//    you specify the values for the AWS WAF API and the AWS CLI or SDKs, see
//    TargetString in the ByteMatchTuple data type.
//
//    * Where to look, such as at the beginning or the end of a query string.
//
//    * Whether to perform any conversions on the request, such as converting
//    it to lowercase, before inspecting it for the specified string.
//
// For example, you can add a ByteMatchSetUpdate object that matches web requests
// in which User-Agent headers contain the string BadBot. You can then configure
// AWS WAF to block those requests.
//
// To create and configure a ByteMatchSet, perform the following steps:
//
// Create a ByteMatchSet. For more information, see CreateByteMatchSet.
//
// Use GetChangeToken to get the change token that you provide in the ChangeToken
// parameter of an UpdateByteMatchSet request.
//
// Submit an UpdateByteMatchSet request to specify the part of the request that
// you want AWS WAF to inspect (for example, the header or the URI) and the
// value that you want AWS WAF to watch for.
//
// For more information about how to use the AWS WAF API to allow or block HTTP
// requests, see the AWS WAF Developer Guide (http://docs.aws.amazon.com/waf/latest/developerguide/).
//
//    // Example sending a request using the UpdateByteMatchSetRequest method.
//    req := client.UpdateByteMatchSetRequest(params)
//    resp, err := req.Send()
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/waf-regional-2016-11-28/UpdateByteMatchSet
func (c *WAFRegional) UpdateByteMatchSetRequest(input *waf.UpdateByteMatchSetInput) UpdateByteMatchSetRequest {
	op := &aws.Operation{
		Name:       opUpdateByteMatchSet,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &waf.UpdateByteMatchSetInput{}
	}

	req := c.newRequest(op, input, &waf.UpdateByteMatchSetOutput{})
	return UpdateByteMatchSetRequest{Request: req, Input: input}
}

const opUpdateIPSet = "UpdateIPSet"

// UpdateIPSetRequest is a API request type for the UpdateIPSet API operation.
type UpdateIPSetRequest struct {
	*aws.Request
	Input *waf.UpdateIPSetInput
}

// Send marshals and sends the UpdateIPSet API request.
func (r UpdateIPSetRequest) Send() (*waf.UpdateIPSetOutput, error) {
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	return r.Request.Data.(*waf.UpdateIPSetOutput), nil
}

// UpdateIPSetRequest returns a request value for making API operation for
// AWS WAF Regional.
//
// Inserts or deletes IPSetDescriptor objects in an IPSet. For each IPSetDescriptor
// object, you specify the following values:
//
//    * Whether to insert or delete the object from the array. If you want to
//    change an IPSetDescriptor object, you delete the existing object and add
//    a new one.
//
//    * The IP address version, IPv4 or IPv6.
//
//    * The IP address in CIDR notation, for example, 192.0.2.0/24 (for the
//    range of IP addresses from 192.0.2.0 to 192.0.2.255) or 192.0.2.44/32
//    (for the individual IP address 192.0.2.44).
//
// AWS WAF supports /8, /16, /24, and /32 IP address ranges for IPv4, and /24,
// /32, /48, /56, /64 and /128 for IPv6. For more information about CIDR notation,
// see the Wikipedia entry Classless Inter-Domain Routing (https://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing).
//
// IPv6 addresses can be represented using any of the following formats:
//
//    * 1111:0000:0000:0000:0000:0000:0000:0111/128
//
//    * 1111:0:0:0:0:0:0:0111/128
//
//    * 1111::0111/128
//
//    * 1111::111/128
//
// You use an IPSet to specify which web requests you want to allow or block
// based on the IP addresses that the requests originated from. For example,
// if you're receiving a lot of requests from one or a small number of IP addresses
// and you want to block the requests, you can create an IPSet that specifies
// those IP addresses, and then configure AWS WAF to block the requests.
//
// To create and configure an IPSet, perform the following steps:
//
// Submit a CreateIPSet request.
//
// Use GetChangeToken to get the change token that you provide in the ChangeToken
// parameter of an UpdateIPSet request.
//
// Submit an UpdateIPSet request to specify the IP addresses that you want AWS
// WAF to watch for.
//
// When you update an IPSet, you specify the IP addresses that you want to add
// and/or the IP addresses that you want to delete. If you want to change an
// IP address, you delete the existing IP address and add the new one.
//
// For more information about how to use the AWS WAF API to allow or block HTTP
// requests, see the AWS WAF Developer Guide (http://docs.aws.amazon.com/waf/latest/developerguide/).
//
//    // Example sending a request using the UpdateIPSetRequest method.
//    req := client.UpdateIPSetRequest(params)
//    resp, err := req.Send()
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/waf-regional-2016-11-28/UpdateIPSet
func (c *WAFRegional) UpdateIPSetRequest(input *waf.UpdateIPSetInput) UpdateIPSetRequest {
	op := &aws.Operation{
		Name:       opUpdateIPSet,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &waf.UpdateIPSetInput{}
	}

	req := c.newRequest(op, input, &waf.UpdateIPSetOutput{})
	return UpdateIPSetRequest{Request: req, Input: input}
}

const opUpdateRateBasedRule = "UpdateRateBasedRule"

// UpdateRateBasedRuleRequest is a API request type for the UpdateRateBasedRule API operation.
type UpdateRateBasedRuleRequest struct {
	*aws.Request
	Input *waf.UpdateRateBasedRuleInput
}

// Send marshals and sends the UpdateRateBasedRule API request.
func (r UpdateRateBasedRuleRequest) Send() (*waf.UpdateRateBasedRuleOutput, error) {
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	return r.Request.Data.(*waf.UpdateRateBasedRuleOutput), nil
}

// UpdateRateBasedRuleRequest returns a request value for making API operation for
// AWS WAF Regional.
//
// Inserts or deletes Predicate objects in a rule and updates the RateLimit
// in the rule.
//
// Each Predicate object identifies a predicate, such as a ByteMatchSet or an
// IPSet, that specifies the web requests that you want to block or count. The
// RateLimit specifies the number of requests every five minutes that triggers
// the rule.
//
// If you add more than one predicate to a RateBasedRule, a request must match
// all the predicates and exceed the RateLimit to be counted or blocked. For
// example, suppose you add the following to a RateBasedRule:
//
//    * An IPSet that matches the IP address 192.0.2.44/32
//
//    * A ByteMatchSet that matches BadBot in the User-Agent header
//
// Further, you specify a RateLimit of 15,000.
//
// You then add the RateBasedRule to a WebACL and specify that you want to block
// requests that satisfy the rule. For a request to be blocked, it must come
// from the IP address 192.0.2.44 and the User-Agent header in the request must
// contain the value BadBot. Further, requests that match these two conditions
// much be received at a rate of more than 15,000 every five minutes. If the
// rate drops below this limit, AWS WAF no longer blocks the requests.
//
// As a second example, suppose you want to limit requests to a particular page
// on your site. To do this, you could add the following to a RateBasedRule:
//
//    * A ByteMatchSet with FieldToMatch of URI
//
//    * A PositionalConstraint of STARTS_WITH
//
//    * A TargetString of login
//
// Further, you specify a RateLimit of 15,000.
//
// By adding this RateBasedRule to a WebACL, you could limit requests to your
// login page without affecting the rest of your site.
//
//    // Example sending a request using the UpdateRateBasedRuleRequest method.
//    req := client.UpdateRateBasedRuleRequest(params)
//    resp, err := req.Send()
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/waf-regional-2016-11-28/UpdateRateBasedRule
func (c *WAFRegional) UpdateRateBasedRuleRequest(input *waf.UpdateRateBasedRuleInput) UpdateRateBasedRuleRequest {
	op := &aws.Operation{
		Name:       opUpdateRateBasedRule,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &waf.UpdateRateBasedRuleInput{}
	}

	req := c.newRequest(op, input, &waf.UpdateRateBasedRuleOutput{})
	return UpdateRateBasedRuleRequest{Request: req, Input: input}
}

const opUpdateRule = "UpdateRule"

// UpdateRuleRequest is a API request type for the UpdateRule API operation.
type UpdateRuleRequest struct {
	*aws.Request
	Input *waf.UpdateRuleInput
}

// Send marshals and sends the UpdateRule API request.
func (r UpdateRuleRequest) Send() (*waf.UpdateRuleOutput, error) {
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	return r.Request.Data.(*waf.UpdateRuleOutput), nil
}

// UpdateRuleRequest returns a request value for making API operation for
// AWS WAF Regional.
//
// Inserts or deletes Predicate objects in a Rule. Each Predicate object identifies
// a predicate, such as a ByteMatchSet or an IPSet, that specifies the web requests
// that you want to allow, block, or count. If you add more than one predicate
// to a Rule, a request must match all of the specifications to be allowed,
// blocked, or counted. For example, suppose you add the following to a Rule:
//
//    * A ByteMatchSet that matches the value BadBot in the User-Agent header
//
//    * An IPSet that matches the IP address 192.0.2.44
//
// You then add the Rule to a WebACL and specify that you want to block requests
// that satisfy the Rule. For a request to be blocked, the User-Agent header
// in the request must contain the value BadBotand the request must originate
// from the IP address 192.0.2.44.
//
// To create and configure a Rule, perform the following steps:
//
// Create and update the predicates that you want to include in the Rule.
//
// Create the Rule. See CreateRule.
//
// Use GetChangeToken to get the change token that you provide in the ChangeToken
// parameter of an UpdateRule request.
//
// Submit an UpdateRule request to add predicates to the Rule.
//
// Create and update a WebACL that contains the Rule. See CreateWebACL.
//
// If you want to replace one ByteMatchSet or IPSet with another, you delete
// the existing one and add the new one.
//
// For more information about how to use the AWS WAF API to allow or block HTTP
// requests, see the AWS WAF Developer Guide (http://docs.aws.amazon.com/waf/latest/developerguide/).
//
//    // Example sending a request using the UpdateRuleRequest method.
//    req := client.UpdateRuleRequest(params)
//    resp, err := req.Send()
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/waf-regional-2016-11-28/UpdateRule
func (c *WAFRegional) UpdateRuleRequest(input *waf.UpdateRuleInput) UpdateRuleRequest {
	op := &aws.Operation{
		Name:       opUpdateRule,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &waf.UpdateRuleInput{}
	}

	req := c.newRequest(op, input, &waf.UpdateRuleOutput{})
	return UpdateRuleRequest{Request: req, Input: input}
}

const opUpdateSizeConstraintSet = "UpdateSizeConstraintSet"

// UpdateSizeConstraintSetRequest is a API request type for the UpdateSizeConstraintSet API operation.
type UpdateSizeConstraintSetRequest struct {
	*aws.Request
	Input *waf.UpdateSizeConstraintSetInput
}

// Send marshals and sends the UpdateSizeConstraintSet API request.
func (r UpdateSizeConstraintSetRequest) Send() (*waf.UpdateSizeConstraintSetOutput, error) {
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	return r.Request.Data.(*waf.UpdateSizeConstraintSetOutput), nil
}

// UpdateSizeConstraintSetRequest returns a request value for making API operation for
// AWS WAF Regional.
//
// Inserts or deletes SizeConstraint objects (filters) in a SizeConstraintSet.
// For each SizeConstraint object, you specify the following values:
//
//    * Whether to insert or delete the object from the array. If you want to
//    change a SizeConstraintSetUpdate object, you delete the existing object
//    and add a new one.
//
//    * The part of a web request that you want AWS WAF to evaluate, such as
//    the length of a query string or the length of the User-Agent header.
//
//    * Whether to perform any transformations on the request, such as converting
//    it to lowercase, before checking its length. Note that transformations
//    of the request body are not supported because the AWS resource forwards
//    only the first 8192 bytes of your request to AWS WAF.
//
//    * A ComparisonOperator used for evaluating the selected part of the request
//    against the specified Size, such as equals, greater than, less than, and
//    so on.
//
//    * The length, in bytes, that you want AWS WAF to watch for in selected
//    part of the request. The length is computed after applying the transformation.
//
// For example, you can add a SizeConstraintSetUpdate object that matches web
// requests in which the length of the User-Agent header is greater than 100
// bytes. You can then configure AWS WAF to block those requests.
//
// To create and configure a SizeConstraintSet, perform the following steps:
//
// Create a SizeConstraintSet. For more information, see CreateSizeConstraintSet.
//
// Use GetChangeToken to get the change token that you provide in the ChangeToken
// parameter of an UpdateSizeConstraintSet request.
//
// Submit an UpdateSizeConstraintSet request to specify the part of the request
// that you want AWS WAF to inspect (for example, the header or the URI) and
// the value that you want AWS WAF to watch for.
//
// For more information about how to use the AWS WAF API to allow or block HTTP
// requests, see the AWS WAF Developer Guide (http://docs.aws.amazon.com/waf/latest/developerguide/).
//
//    // Example sending a request using the UpdateSizeConstraintSetRequest method.
//    req := client.UpdateSizeConstraintSetRequest(params)
//    resp, err := req.Send()
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/waf-regional-2016-11-28/UpdateSizeConstraintSet
func (c *WAFRegional) UpdateSizeConstraintSetRequest(input *waf.UpdateSizeConstraintSetInput) UpdateSizeConstraintSetRequest {
	op := &aws.Operation{
		Name:       opUpdateSizeConstraintSet,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &waf.UpdateSizeConstraintSetInput{}
	}

	req := c.newRequest(op, input, &waf.UpdateSizeConstraintSetOutput{})
	return UpdateSizeConstraintSetRequest{Request: req, Input: input}
}

const opUpdateSqlInjectionMatchSet = "UpdateSqlInjectionMatchSet"

// UpdateSqlInjectionMatchSetRequest is a API request type for the UpdateSqlInjectionMatchSet API operation.
type UpdateSqlInjectionMatchSetRequest struct {
	*aws.Request
	Input *waf.UpdateSqlInjectionMatchSetInput
}

// Send marshals and sends the UpdateSqlInjectionMatchSet API request.
func (r UpdateSqlInjectionMatchSetRequest) Send() (*waf.UpdateSqlInjectionMatchSetOutput, error) {
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	return r.Request.Data.(*waf.UpdateSqlInjectionMatchSetOutput), nil
}

// UpdateSqlInjectionMatchSetRequest returns a request value for making API operation for
// AWS WAF Regional.
//
// Inserts or deletes SqlInjectionMatchTuple objects (filters) in a SqlInjectionMatchSet.
// For each SqlInjectionMatchTuple object, you specify the following values:
//
//    * Action: Whether to insert the object into or delete the object from
//    the array. To change a SqlInjectionMatchTuple, you delete the existing
//    object and add a new one.
//
//    * FieldToMatch: The part of web requests that you want AWS WAF to inspect
//    and, if you want AWS WAF to inspect a header, the name of the header.
//
//    * TextTransformation: Which text transformation, if any, to perform on
//    the web request before inspecting the request for snippets of malicious
//    SQL code.
//
// You use SqlInjectionMatchSet objects to specify which CloudFront requests
// you want to allow, block, or count. For example, if you're receiving requests
// that contain snippets of SQL code in the query string and you want to block
// the requests, you can create a SqlInjectionMatchSet with the applicable settings,
// and then configure AWS WAF to block the requests.
//
// To create and configure a SqlInjectionMatchSet, perform the following steps:
//
// Submit a CreateSqlInjectionMatchSet request.
//
// Use GetChangeToken to get the change token that you provide in the ChangeToken
// parameter of an UpdateIPSet request.
//
// Submit an UpdateSqlInjectionMatchSet request to specify the parts of web
// requests that you want AWS WAF to inspect for snippets of SQL code.
//
// For more information about how to use the AWS WAF API to allow or block HTTP
// requests, see the AWS WAF Developer Guide (http://docs.aws.amazon.com/waf/latest/developerguide/).
//
//    // Example sending a request using the UpdateSqlInjectionMatchSetRequest method.
//    req := client.UpdateSqlInjectionMatchSetRequest(params)
//    resp, err := req.Send()
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/waf-regional-2016-11-28/UpdateSqlInjectionMatchSet
func (c *WAFRegional) UpdateSqlInjectionMatchSetRequest(input *waf.UpdateSqlInjectionMatchSetInput) UpdateSqlInjectionMatchSetRequest {
	op := &aws.Operation{
		Name:       opUpdateSqlInjectionMatchSet,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &waf.UpdateSqlInjectionMatchSetInput{}
	}

	req := c.newRequest(op, input, &waf.UpdateSqlInjectionMatchSetOutput{})
	return UpdateSqlInjectionMatchSetRequest{Request: req, Input: input}
}

const opUpdateWebACL = "UpdateWebACL"

// UpdateWebACLRequest is a API request type for the UpdateWebACL API operation.
type UpdateWebACLRequest struct {
	*aws.Request
	Input *waf.UpdateWebACLInput
}

// Send marshals and sends the UpdateWebACL API request.
func (r UpdateWebACLRequest) Send() (*waf.UpdateWebACLOutput, error) {
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	return r.Request.Data.(*waf.UpdateWebACLOutput), nil
}

// UpdateWebACLRequest returns a request value for making API operation for
// AWS WAF Regional.
//
// Inserts or deletes ActivatedRule objects in a WebACL. Each Rule identifies
// web requests that you want to allow, block, or count. When you update a WebACL,
// you specify the following values:
//
//    * A default action for the WebACL, either ALLOW or BLOCK. AWS WAF performs
//    the default action if a request doesn't match the criteria in any of the
//    Rules in a WebACL.
//
//    * The Rules that you want to add and/or delete. If you want to replace
//    one Rule with another, you delete the existing Rule and add the new one.
//
//    * For each Rule, whether you want AWS WAF to allow requests, block requests,
//    or count requests that match the conditions in the Rule.
//
//    * The order in which you want AWS WAF to evaluate the Rules in a WebACL.
//    If you add more than one Rule to a WebACL, AWS WAF evaluates each request
//    against the Rules in order based on the value of Priority. (The Rule that
//    has the lowest value for Priority is evaluated first.) When a web request
//    matches all of the predicates (such as ByteMatchSets and IPSets) in a
//    Rule, AWS WAF immediately takes the corresponding action, allow or block,
//    and doesn't evaluate the request against the remaining Rules in the WebACL,
//    if any.
//
// To create and configure a WebACL, perform the following steps:
//
// Create and update the predicates that you want to include in Rules. For more
// information, see CreateByteMatchSet, UpdateByteMatchSet, CreateIPSet, UpdateIPSet,
// CreateSqlInjectionMatchSet, and UpdateSqlInjectionMatchSet.
//
// Create and update the Rules that you want to include in the WebACL. For more
// information, see CreateRule and UpdateRule.
//
// Create a WebACL. See CreateWebACL.
//
// Use GetChangeToken to get the change token that you provide in the ChangeToken
// parameter of an UpdateWebACL request.
//
// Submit an UpdateWebACL request to specify the Rules that you want to include
// in the WebACL, to specify the default action, and to associate the WebACL
// with a CloudFront distribution.
//
// Be aware that if you try to add a RATE_BASED rule to a web ACL without setting
// the rule type when first creating the rule, the UpdateWebACL request will
// fail because the request tries to add a REGULAR rule (the default rule type)
// with the specified ID, which does not exist.
//
// For more information about how to use the AWS WAF API to allow or block HTTP
// requests, see the AWS WAF Developer Guide (http://docs.aws.amazon.com/waf/latest/developerguide/).
//
//    // Example sending a request using the UpdateWebACLRequest method.
//    req := client.UpdateWebACLRequest(params)
//    resp, err := req.Send()
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/waf-regional-2016-11-28/UpdateWebACL
func (c *WAFRegional) UpdateWebACLRequest(input *waf.UpdateWebACLInput) UpdateWebACLRequest {
	op := &aws.Operation{
		Name:       opUpdateWebACL,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &waf.UpdateWebACLInput{}
	}

	req := c.newRequest(op, input, &waf.UpdateWebACLOutput{})
	return UpdateWebACLRequest{Request: req, Input: input}
}

const opUpdateXssMatchSet = "UpdateXssMatchSet"

// UpdateXssMatchSetRequest is a API request type for the UpdateXssMatchSet API operation.
type UpdateXssMatchSetRequest struct {
	*aws.Request
	Input *waf.UpdateXssMatchSetInput
}

// Send marshals and sends the UpdateXssMatchSet API request.
func (r UpdateXssMatchSetRequest) Send() (*waf.UpdateXssMatchSetOutput, error) {
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	return r.Request.Data.(*waf.UpdateXssMatchSetOutput), nil
}

// UpdateXssMatchSetRequest returns a request value for making API operation for
// AWS WAF Regional.
//
// Inserts or deletes XssMatchTuple objects (filters) in an XssMatchSet. For
// each XssMatchTuple object, you specify the following values:
//
//    * Action: Whether to insert the object into or delete the object from
//    the array. To change a XssMatchTuple, you delete the existing object and
//    add a new one.
//
//    * FieldToMatch: The part of web requests that you want AWS WAF to inspect
//    and, if you want AWS WAF to inspect a header, the name of the header.
//
//    * TextTransformation: Which text transformation, if any, to perform on
//    the web request before inspecting the request for cross-site scripting
//    attacks.
//
// You use XssMatchSet objects to specify which CloudFront requests you want
// to allow, block, or count. For example, if you're receiving requests that
// contain cross-site scripting attacks in the request body and you want to
// block the requests, you can create an XssMatchSet with the applicable settings,
// and then configure AWS WAF to block the requests.
//
// To create and configure an XssMatchSet, perform the following steps:
//
// Submit a CreateXssMatchSet request.
//
// Use GetChangeToken to get the change token that you provide in the ChangeToken
// parameter of an UpdateIPSet request.
//
// Submit an UpdateXssMatchSet request to specify the parts of web requests
// that you want AWS WAF to inspect for cross-site scripting attacks.
//
// For more information about how to use the AWS WAF API to allow or block HTTP
// requests, see the AWS WAF Developer Guide (http://docs.aws.amazon.com/waf/latest/developerguide/).
//
//    // Example sending a request using the UpdateXssMatchSetRequest method.
//    req := client.UpdateXssMatchSetRequest(params)
//    resp, err := req.Send()
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/waf-regional-2016-11-28/UpdateXssMatchSet
func (c *WAFRegional) UpdateXssMatchSetRequest(input *waf.UpdateXssMatchSetInput) UpdateXssMatchSetRequest {
	op := &aws.Operation{
		Name:       opUpdateXssMatchSet,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &waf.UpdateXssMatchSetInput{}
	}

	req := c.newRequest(op, input, &waf.UpdateXssMatchSetOutput{})
	return UpdateXssMatchSetRequest{Request: req, Input: input}
}

// Please also see https://docs.aws.amazon.com/goto/WebAPI/waf-regional-2016-11-28/AssociateWebACLRequest
type AssociateWebACLInput struct {
	_ struct{} `type:"structure"`

	// The ARN (Amazon Resource Name) of the resource to be protected.
	//
	// ResourceArn is a required field
	ResourceArn *string `min:"1" type:"string" required:"true"`

	// A unique identifier (ID) for the web ACL.
	//
	// WebACLId is a required field
	WebACLId *string `min:"1" type:"string" required:"true"`
}

// String returns the string representation
func (s AssociateWebACLInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s AssociateWebACLInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *AssociateWebACLInput) Validate() error {
	invalidParams := aws.ErrInvalidParams{Context: "AssociateWebACLInput"}

	if s.ResourceArn == nil {
		invalidParams.Add(aws.NewErrParamRequired("ResourceArn"))
	}
	if s.ResourceArn != nil && len(*s.ResourceArn) < 1 {
		invalidParams.Add(aws.NewErrParamMinLen("ResourceArn", 1))
	}

	if s.WebACLId == nil {
		invalidParams.Add(aws.NewErrParamRequired("WebACLId"))
	}
	if s.WebACLId != nil && len(*s.WebACLId) < 1 {
		invalidParams.Add(aws.NewErrParamMinLen("WebACLId", 1))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetResourceArn sets the ResourceArn field's value.
func (s *AssociateWebACLInput) SetResourceArn(v string) *AssociateWebACLInput {
	s.ResourceArn = &v
	return s
}

// SetWebACLId sets the WebACLId field's value.
func (s *AssociateWebACLInput) SetWebACLId(v string) *AssociateWebACLInput {
	s.WebACLId = &v
	return s
}

// Please also see https://docs.aws.amazon.com/goto/WebAPI/waf-regional-2016-11-28/AssociateWebACLResponse
type AssociateWebACLOutput struct {
	_ struct{} `type:"structure"`
}

// String returns the string representation
func (s AssociateWebACLOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s AssociateWebACLOutput) GoString() string {
	return s.String()
}

// Please also see https://docs.aws.amazon.com/goto/WebAPI/waf-regional-2016-11-28/DisassociateWebACLRequest
type DisassociateWebACLInput struct {
	_ struct{} `type:"structure"`

	// The ARN (Amazon Resource Name) of the resource from which the web ACL is
	// being removed.
	//
	// ResourceArn is a required field
	ResourceArn *string `min:"1" type:"string" required:"true"`
}

// String returns the string representation
func (s DisassociateWebACLInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DisassociateWebACLInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *DisassociateWebACLInput) Validate() error {
	invalidParams := aws.ErrInvalidParams{Context: "DisassociateWebACLInput"}

	if s.ResourceArn == nil {
		invalidParams.Add(aws.NewErrParamRequired("ResourceArn"))
	}
	if s.ResourceArn != nil && len(*s.ResourceArn) < 1 {
		invalidParams.Add(aws.NewErrParamMinLen("ResourceArn", 1))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetResourceArn sets the ResourceArn field's value.
func (s *DisassociateWebACLInput) SetResourceArn(v string) *DisassociateWebACLInput {
	s.ResourceArn = &v
	return s
}

// Please also see https://docs.aws.amazon.com/goto/WebAPI/waf-regional-2016-11-28/DisassociateWebACLResponse
type DisassociateWebACLOutput struct {
	_ struct{} `type:"structure"`
}

// String returns the string representation
func (s DisassociateWebACLOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DisassociateWebACLOutput) GoString() string {
	return s.String()
}

// Please also see https://docs.aws.amazon.com/goto/WebAPI/waf-regional-2016-11-28/GetWebACLForResourceRequest
type GetWebACLForResourceInput struct {
	_ struct{} `type:"structure"`

	// The ARN (Amazon Resource Name) of the resource for which to get the web ACL.
	//
	// ResourceArn is a required field
	ResourceArn *string `min:"1" type:"string" required:"true"`
}

// String returns the string representation
func (s GetWebACLForResourceInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s GetWebACLForResourceInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *GetWebACLForResourceInput) Validate() error {
	invalidParams := aws.ErrInvalidParams{Context: "GetWebACLForResourceInput"}

	if s.ResourceArn == nil {
		invalidParams.Add(aws.NewErrParamRequired("ResourceArn"))
	}
	if s.ResourceArn != nil && len(*s.ResourceArn) < 1 {
		invalidParams.Add(aws.NewErrParamMinLen("ResourceArn", 1))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetResourceArn sets the ResourceArn field's value.
func (s *GetWebACLForResourceInput) SetResourceArn(v string) *GetWebACLForResourceInput {
	s.ResourceArn = &v
	return s
}

// Please also see https://docs.aws.amazon.com/goto/WebAPI/waf-regional-2016-11-28/GetWebACLForResourceResponse
type GetWebACLForResourceOutput struct {
	_ struct{} `type:"structure"`

	// Information about the web ACL that you specified in the GetWebACLForResource
	// request. If there is no associated resource, a null WebACLSummary is returned.
	WebACLSummary *waf.WebACLSummary `type:"structure"`
}

// String returns the string representation
func (s GetWebACLForResourceOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s GetWebACLForResourceOutput) GoString() string {
	return s.String()
}

// SetWebACLSummary sets the WebACLSummary field's value.
func (s *GetWebACLForResourceOutput) SetWebACLSummary(v *waf.WebACLSummary) *GetWebACLForResourceOutput {
	s.WebACLSummary = v
	return s
}

// Please also see https://docs.aws.amazon.com/goto/WebAPI/waf-regional-2016-11-28/ListResourcesForWebACLRequest
type ListResourcesForWebACLInput struct {
	_ struct{} `type:"structure"`

	// The unique identifier (ID) of the web ACL for which to list the associated
	// resources.
	//
	// WebACLId is a required field
	WebACLId *string `min:"1" type:"string" required:"true"`
}

// String returns the string representation
func (s ListResourcesForWebACLInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s ListResourcesForWebACLInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *ListResourcesForWebACLInput) Validate() error {
	invalidParams := aws.ErrInvalidParams{Context: "ListResourcesForWebACLInput"}

	if s.WebACLId == nil {
		invalidParams.Add(aws.NewErrParamRequired("WebACLId"))
	}
	if s.WebACLId != nil && len(*s.WebACLId) < 1 {
		invalidParams.Add(aws.NewErrParamMinLen("WebACLId", 1))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetWebACLId sets the WebACLId field's value.
func (s *ListResourcesForWebACLInput) SetWebACLId(v string) *ListResourcesForWebACLInput {
	s.WebACLId = &v
	return s
}

// Please also see https://docs.aws.amazon.com/goto/WebAPI/waf-regional-2016-11-28/ListResourcesForWebACLResponse
type ListResourcesForWebACLOutput struct {
	_ struct{} `type:"structure"`

	// An array of ARNs (Amazon Resource Names) of the resources associated with
	// the specified web ACL. An array with zero elements is returned if there are
	// no resources associated with the web ACL.
	ResourceArns []*string `type:"list"`
}

// String returns the string representation
func (s ListResourcesForWebACLOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s ListResourcesForWebACLOutput) GoString() string {
	return s.String()
}

// SetResourceArns sets the ResourceArns field's value.
func (s *ListResourcesForWebACLOutput) SetResourceArns(v []*string) *ListResourcesForWebACLOutput {
	s.ResourceArns = v
	return s
}

type ChangeAction string

// Enum values for ChangeAction
const (
	ChangeActionInsert ChangeAction = "INSERT"
	ChangeActionDelete ChangeAction = "DELETE"
)

type ChangeTokenStatus string

// Enum values for ChangeTokenStatus
const (
	ChangeTokenStatusProvisioned ChangeTokenStatus = "PROVISIONED"
	ChangeTokenStatusPending     ChangeTokenStatus = "PENDING"
	ChangeTokenStatusInsync      ChangeTokenStatus = "INSYNC"
)

type ComparisonOperator string

// Enum values for ComparisonOperator
const (
	ComparisonOperatorEq ComparisonOperator = "EQ"
	ComparisonOperatorNe ComparisonOperator = "NE"
	ComparisonOperatorLe ComparisonOperator = "LE"
	ComparisonOperatorLt ComparisonOperator = "LT"
	ComparisonOperatorGe ComparisonOperator = "GE"
	ComparisonOperatorGt ComparisonOperator = "GT"
)

type IPSetDescriptorType string

// Enum values for IPSetDescriptorType
const (
	IPSetDescriptorTypeIpv4 IPSetDescriptorType = "IPV4"
	IPSetDescriptorTypeIpv6 IPSetDescriptorType = "IPV6"
)

type MatchFieldType string

// Enum values for MatchFieldType
const (
	MatchFieldTypeUri         MatchFieldType = "URI"
	MatchFieldTypeQueryString MatchFieldType = "QUERY_STRING"
	MatchFieldTypeHeader      MatchFieldType = "HEADER"
	MatchFieldTypeMethod      MatchFieldType = "METHOD"
	MatchFieldTypeBody        MatchFieldType = "BODY"
)

type ParameterExceptionField string

// Enum values for ParameterExceptionField
const (
	ParameterExceptionFieldChangeAction                     ParameterExceptionField = "CHANGE_ACTION"
	ParameterExceptionFieldWafAction                        ParameterExceptionField = "WAF_ACTION"
	ParameterExceptionFieldPredicateType                    ParameterExceptionField = "PREDICATE_TYPE"
	ParameterExceptionFieldIpsetType                        ParameterExceptionField = "IPSET_TYPE"
	ParameterExceptionFieldByteMatchFieldType               ParameterExceptionField = "BYTE_MATCH_FIELD_TYPE"
	ParameterExceptionFieldSqlInjectionMatchFieldType       ParameterExceptionField = "SQL_INJECTION_MATCH_FIELD_TYPE"
	ParameterExceptionFieldByteMatchTextTransformation      ParameterExceptionField = "BYTE_MATCH_TEXT_TRANSFORMATION"
	ParameterExceptionFieldByteMatchPositionalConstraint    ParameterExceptionField = "BYTE_MATCH_POSITIONAL_CONSTRAINT"
	ParameterExceptionFieldSizeConstraintComparisonOperator ParameterExceptionField = "SIZE_CONSTRAINT_COMPARISON_OPERATOR"
	ParameterExceptionFieldRateKey                          ParameterExceptionField = "RATE_KEY"
	ParameterExceptionFieldRuleType                         ParameterExceptionField = "RULE_TYPE"
	ParameterExceptionFieldNextMarker                       ParameterExceptionField = "NEXT_MARKER"
)

type ParameterExceptionReason string

// Enum values for ParameterExceptionReason
const (
	ParameterExceptionReasonInvalidOption      ParameterExceptionReason = "INVALID_OPTION"
	ParameterExceptionReasonIllegalCombination ParameterExceptionReason = "ILLEGAL_COMBINATION"
)

type PositionalConstraint string

// Enum values for PositionalConstraint
const (
	PositionalConstraintExactly      PositionalConstraint = "EXACTLY"
	PositionalConstraintStartsWith   PositionalConstraint = "STARTS_WITH"
	PositionalConstraintEndsWith     PositionalConstraint = "ENDS_WITH"
	PositionalConstraintContains     PositionalConstraint = "CONTAINS"
	PositionalConstraintContainsWord PositionalConstraint = "CONTAINS_WORD"
)

type PredicateType string

// Enum values for PredicateType
const (
	PredicateTypeIpmatch           PredicateType = "IPMatch"
	PredicateTypeByteMatch         PredicateType = "ByteMatch"
	PredicateTypeSqlInjectionMatch PredicateType = "SqlInjectionMatch"
	PredicateTypeSizeConstraint    PredicateType = "SizeConstraint"
	PredicateTypeXssMatch          PredicateType = "XssMatch"
)

type RateKey string

// Enum values for RateKey
const (
	RateKeyIp RateKey = "IP"
)

type TextTransformation string

// Enum values for TextTransformation
const (
	TextTransformationNone               TextTransformation = "NONE"
	TextTransformationCompressWhiteSpace TextTransformation = "COMPRESS_WHITE_SPACE"
	TextTransformationHtmlEntityDecode   TextTransformation = "HTML_ENTITY_DECODE"
	TextTransformationLowercase          TextTransformation = "LOWERCASE"
	TextTransformationCmdLine            TextTransformation = "CMD_LINE"
	TextTransformationUrlDecode          TextTransformation = "URL_DECODE"
)

type WafActionType string

// Enum values for WafActionType
const (
	WafActionTypeBlock WafActionType = "BLOCK"
	WafActionTypeAllow WafActionType = "ALLOW"
	WafActionTypeCount WafActionType = "COUNT"
)

type WafRuleType string

// Enum values for WafRuleType
const (
	WafRuleTypeRegular   WafRuleType = "REGULAR"
	WafRuleTypeRateBased WafRuleType = "RATE_BASED"
)
