// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package opsworkscm

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/opsworkscm/types"
)

const opDisassociateNode = "DisassociateNode"

// DisassociateNodeRequest returns a request value for making API operation for
// AWS OpsWorks CM.
//
// Disassociates a node from an AWS OpsWorks CM server, and removes the node
// from the server's managed nodes. After a node is disassociated, the node
// key pair is no longer valid for accessing the configuration manager's API.
// For more information about how to associate a node, see AssociateNode.
//
// A node can can only be disassociated from a server that is in a HEALTHY state.
// Otherwise, an InvalidStateException is thrown. A ResourceNotFoundException
// is thrown when the server does not exist. A ValidationException is raised
// when parameters of the request are not valid.
//
//    // Example sending a request using DisassociateNodeRequest.
//    req := client.DisassociateNodeRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/opsworkscm-2016-11-01/DisassociateNode
func (c *Client) DisassociateNodeRequest(input *types.DisassociateNodeInput) DisassociateNodeRequest {
	op := &aws.Operation{
		Name:       opDisassociateNode,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &types.DisassociateNodeInput{}
	}

	req := c.newRequest(op, input, &types.DisassociateNodeOutput{})
	return DisassociateNodeRequest{Request: req, Input: input, Copy: c.DisassociateNodeRequest}
}

// DisassociateNodeRequest is the request type for the
// DisassociateNode API operation.
type DisassociateNodeRequest struct {
	*aws.Request
	Input *types.DisassociateNodeInput
	Copy  func(*types.DisassociateNodeInput) DisassociateNodeRequest
}

// Send marshals and sends the DisassociateNode API request.
func (r DisassociateNodeRequest) Send(ctx context.Context) (*DisassociateNodeResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &DisassociateNodeResponse{
		DisassociateNodeOutput: r.Request.Data.(*types.DisassociateNodeOutput),
		response:               &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// DisassociateNodeResponse is the response type for the
// DisassociateNode API operation.
type DisassociateNodeResponse struct {
	*types.DisassociateNodeOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// DisassociateNode request.
func (r *DisassociateNodeResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
