// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package opsworkscm

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/opsworkscm/types"
)

const opRestoreServer = "RestoreServer"

// RestoreServerRequest returns a request value for making API operation for
// AWS OpsWorks CM.
//
// Restores a backup to a server that is in a CONNECTION_LOST, HEALTHY, RUNNING,
// UNHEALTHY, or TERMINATED state. When you run RestoreServer, the server's
// EC2 instance is deleted, and a new EC2 instance is configured. RestoreServer
// maintains the existing server endpoint, so configuration management of the
// server's client devices (nodes) should continue to work.
//
// This operation is asynchronous.
//
// An InvalidStateException is thrown when the server is not in a valid state.
// A ResourceNotFoundException is thrown when the server does not exist. A ValidationException
// is raised when parameters of the request are not valid.
//
//    // Example sending a request using RestoreServerRequest.
//    req := client.RestoreServerRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/opsworkscm-2016-11-01/RestoreServer
func (c *Client) RestoreServerRequest(input *types.RestoreServerInput) RestoreServerRequest {
	op := &aws.Operation{
		Name:       opRestoreServer,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &types.RestoreServerInput{}
	}

	req := c.newRequest(op, input, &types.RestoreServerOutput{})
	return RestoreServerRequest{Request: req, Input: input, Copy: c.RestoreServerRequest}
}

// RestoreServerRequest is the request type for the
// RestoreServer API operation.
type RestoreServerRequest struct {
	*aws.Request
	Input *types.RestoreServerInput
	Copy  func(*types.RestoreServerInput) RestoreServerRequest
}

// Send marshals and sends the RestoreServer API request.
func (r RestoreServerRequest) Send(ctx context.Context) (*RestoreServerResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &RestoreServerResponse{
		RestoreServerOutput: r.Request.Data.(*types.RestoreServerOutput),
		response:            &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// RestoreServerResponse is the response type for the
// RestoreServer API operation.
type RestoreServerResponse struct {
	*types.RestoreServerOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// RestoreServer request.
func (r *RestoreServerResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
