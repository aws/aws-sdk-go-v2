// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package gamelift

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/gamelift/types"
)

const opStartMatchBackfill = "StartMatchBackfill"

// StartMatchBackfillRequest returns a request value for making API operation for
// Amazon GameLift.
//
// Finds new players to fill open slots in an existing game session. This operation
// can be used to add players to matched games that start with fewer than the
// maximum number of players or to replace players when they drop out. By backfilling
// with the same matchmaker used to create the original match, you ensure that
// new players meet the match criteria and maintain a consistent experience
// throughout the game session. You can backfill a match anytime after a game
// session has been created.
//
// To request a match backfill, specify a unique ticket ID, the existing game
// session's ARN, a matchmaking configuration, and a set of data that describes
// all current players in the game session. If successful, a match backfill
// ticket is created and returned with status set to QUEUED. The ticket is placed
// in the matchmaker's ticket pool and processed. Track the status of the ticket
// to respond as needed.
//
// The process of finding backfill matches is essentially identical to the initial
// matchmaking process. The matchmaker searches the pool and groups tickets
// together to form potential matches, allowing only one backfill ticket per
// potential match. Once the a match is formed, the matchmaker creates player
// sessions for the new players. All tickets in the match are updated with the
// game session's connection information, and the GameSession object is updated
// to include matchmaker data on the new players. For more detail on how match
// backfill requests are processed, see How Amazon GameLift FlexMatch Works
// (https://docs.aws.amazon.com/gamelift/latest/developerguide/gamelift-match.html).
//
// Learn more
//
//  Backfill Existing Games with FlexMatch (https://docs.aws.amazon.com/gamelift/latest/developerguide/match-backfill.html)
//
//  How GameLift FlexMatch Works (https://docs.aws.amazon.com/gamelift/latest/developerguide/gamelift-match.html)
//
// Related operations
//
//    * StartMatchmaking
//
//    * DescribeMatchmaking
//
//    * StopMatchmaking
//
//    * AcceptMatch
//
//    * StartMatchBackfill
//
//    // Example sending a request using StartMatchBackfillRequest.
//    req := client.StartMatchBackfillRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/gamelift-2015-10-01/StartMatchBackfill
func (c *Client) StartMatchBackfillRequest(input *types.StartMatchBackfillInput) StartMatchBackfillRequest {
	op := &aws.Operation{
		Name:       opStartMatchBackfill,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &types.StartMatchBackfillInput{}
	}

	req := c.newRequest(op, input, &types.StartMatchBackfillOutput{})
	return StartMatchBackfillRequest{Request: req, Input: input, Copy: c.StartMatchBackfillRequest}
}

// StartMatchBackfillRequest is the request type for the
// StartMatchBackfill API operation.
type StartMatchBackfillRequest struct {
	*aws.Request
	Input *types.StartMatchBackfillInput
	Copy  func(*types.StartMatchBackfillInput) StartMatchBackfillRequest
}

// Send marshals and sends the StartMatchBackfill API request.
func (r StartMatchBackfillRequest) Send(ctx context.Context) (*StartMatchBackfillResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &StartMatchBackfillResponse{
		StartMatchBackfillOutput: r.Request.Data.(*types.StartMatchBackfillOutput),
		response:                 &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// StartMatchBackfillResponse is the response type for the
// StartMatchBackfill API operation.
type StartMatchBackfillResponse struct {
	*types.StartMatchBackfillOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// StartMatchBackfill request.
func (r *StartMatchBackfillResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
