// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package gamelift

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/gamelift/types"
)

const opUpdateFleetPortSettings = "UpdateFleetPortSettings"

// UpdateFleetPortSettingsRequest returns a request value for making API operation for
// Amazon GameLift.
//
// Updates port settings for a fleet. To update settings, specify the fleet
// ID to be updated and list the permissions you want to update. List the permissions
// you want to add in InboundPermissionAuthorizations, and permissions you want
// to remove in InboundPermissionRevocations. Permissions to be removed must
// match existing fleet permissions. If successful, the fleet ID for the updated
// fleet is returned.
//
// Learn more
//
//  Working with Fleets (https://docs.aws.amazon.com/gamelift/latest/developerguide/fleets-intro.html).
//
// Related operations
//
//    * CreateFleet
//
//    * ListFleets
//
//    * DeleteFleet
//
//    * Describe fleets: DescribeFleetAttributes DescribeFleetCapacity DescribeFleetPortSettings
//    DescribeFleetUtilization DescribeRuntimeConfiguration DescribeEC2InstanceLimits
//    DescribeFleetEvents
//
//    * Update fleets: UpdateFleetAttributes UpdateFleetCapacity UpdateFleetPortSettings
//    UpdateRuntimeConfiguration
//
//    * Manage fleet actions: StartFleetActions StopFleetActions
//
//    // Example sending a request using UpdateFleetPortSettingsRequest.
//    req := client.UpdateFleetPortSettingsRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/gamelift-2015-10-01/UpdateFleetPortSettings
func (c *Client) UpdateFleetPortSettingsRequest(input *types.UpdateFleetPortSettingsInput) UpdateFleetPortSettingsRequest {
	op := &aws.Operation{
		Name:       opUpdateFleetPortSettings,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &types.UpdateFleetPortSettingsInput{}
	}

	req := c.newRequest(op, input, &types.UpdateFleetPortSettingsOutput{})
	return UpdateFleetPortSettingsRequest{Request: req, Input: input, Copy: c.UpdateFleetPortSettingsRequest}
}

// UpdateFleetPortSettingsRequest is the request type for the
// UpdateFleetPortSettings API operation.
type UpdateFleetPortSettingsRequest struct {
	*aws.Request
	Input *types.UpdateFleetPortSettingsInput
	Copy  func(*types.UpdateFleetPortSettingsInput) UpdateFleetPortSettingsRequest
}

// Send marshals and sends the UpdateFleetPortSettings API request.
func (r UpdateFleetPortSettingsRequest) Send(ctx context.Context) (*UpdateFleetPortSettingsResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &UpdateFleetPortSettingsResponse{
		UpdateFleetPortSettingsOutput: r.Request.Data.(*types.UpdateFleetPortSettingsOutput),
		response:                      &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// UpdateFleetPortSettingsResponse is the response type for the
// UpdateFleetPortSettings API operation.
type UpdateFleetPortSettingsResponse struct {
	*types.UpdateFleetPortSettingsOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// UpdateFleetPortSettings request.
func (r *UpdateFleetPortSettingsResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
