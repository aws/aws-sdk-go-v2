// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package gamelift

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/gamelift/types"
)

const opCreateGameSession = "CreateGameSession"

// CreateGameSessionRequest returns a request value for making API operation for
// Amazon GameLift.
//
// Creates a multiplayer game session for players. This action creates a game
// session record and assigns an available server process in the specified fleet
// to host the game session. A fleet must have an ACTIVE status before a game
// session can be created in it.
//
// To create a game session, specify either fleet ID or alias ID and indicate
// a maximum number of players to allow in the game session. You can also provide
// a name and game-specific properties for this game session. If successful,
// a GameSession object is returned containing the game session properties and
// other settings you specified.
//
// Idempotency tokens. You can add a token that uniquely identifies game session
// requests. This is useful for ensuring that game session requests are idempotent.
// Multiple requests with the same idempotency token are processed only once;
// subsequent requests return the original result. All response values are the
// same with the exception of game session status, which may change.
//
// Resource creation limits. If you are creating a game session on a fleet with
// a resource creation limit policy in force, then you must specify a creator
// ID. Without this ID, Amazon GameLift has no way to evaluate the policy for
// this new game session request.
//
// Player acceptance policy. By default, newly created game sessions are open
// to new players. You can restrict new player access by using UpdateGameSession
// to change the game session's player session creation policy.
//
// Game session logs. Logs are retained for all active game sessions for 14
// days. To access the logs, call GetGameSessionLogUrl to download the log files.
//
// Available in Amazon GameLift Local.
//
//    * CreateGameSession
//
//    * DescribeGameSessions
//
//    * DescribeGameSessionDetails
//
//    * SearchGameSessions
//
//    * UpdateGameSession
//
//    * GetGameSessionLogUrl
//
//    * Game session placements StartGameSessionPlacement DescribeGameSessionPlacement
//    StopGameSessionPlacement
//
//    // Example sending a request using CreateGameSessionRequest.
//    req := client.CreateGameSessionRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/gamelift-2015-10-01/CreateGameSession
func (c *Client) CreateGameSessionRequest(input *types.CreateGameSessionInput) CreateGameSessionRequest {
	op := &aws.Operation{
		Name:       opCreateGameSession,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &types.CreateGameSessionInput{}
	}

	req := c.newRequest(op, input, &types.CreateGameSessionOutput{})
	return CreateGameSessionRequest{Request: req, Input: input, Copy: c.CreateGameSessionRequest}
}

// CreateGameSessionRequest is the request type for the
// CreateGameSession API operation.
type CreateGameSessionRequest struct {
	*aws.Request
	Input *types.CreateGameSessionInput
	Copy  func(*types.CreateGameSessionInput) CreateGameSessionRequest
}

// Send marshals and sends the CreateGameSession API request.
func (r CreateGameSessionRequest) Send(ctx context.Context) (*CreateGameSessionResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &CreateGameSessionResponse{
		CreateGameSessionOutput: r.Request.Data.(*types.CreateGameSessionOutput),
		response:                &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// CreateGameSessionResponse is the response type for the
// CreateGameSession API operation.
type CreateGameSessionResponse struct {
	*types.CreateGameSessionOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// CreateGameSession request.
func (r *CreateGameSessionResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
