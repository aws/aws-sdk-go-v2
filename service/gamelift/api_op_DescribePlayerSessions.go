// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package gamelift

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/gamelift/types"
)

const opDescribePlayerSessions = "DescribePlayerSessions"

// DescribePlayerSessionsRequest returns a request value for making API operation for
// Amazon GameLift.
//
// Retrieves properties for one or more player sessions. This action can be
// used in several ways: (1) provide a PlayerSessionId to request properties
// for a specific player session; (2) provide a GameSessionId to request properties
// for all player sessions in the specified game session; (3) provide a PlayerId
// to request properties for all player sessions of a specified player.
//
// To get game session record(s), specify only one of the following: a player
// session ID, a game session ID, or a player ID. You can filter this request
// by player session status. Use the pagination parameters to retrieve results
// as a set of sequential pages. If successful, a PlayerSession object is returned
// for each session matching the request.
//
// Available in Amazon GameLift Local.
//
//    * CreatePlayerSession
//
//    * CreatePlayerSessions
//
//    * DescribePlayerSessions
//
//    * Game session placements StartGameSessionPlacement DescribeGameSessionPlacement
//    StopGameSessionPlacement
//
//    // Example sending a request using DescribePlayerSessionsRequest.
//    req := client.DescribePlayerSessionsRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/gamelift-2015-10-01/DescribePlayerSessions
func (c *Client) DescribePlayerSessionsRequest(input *types.DescribePlayerSessionsInput) DescribePlayerSessionsRequest {
	op := &aws.Operation{
		Name:       opDescribePlayerSessions,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &types.DescribePlayerSessionsInput{}
	}

	req := c.newRequest(op, input, &types.DescribePlayerSessionsOutput{})
	return DescribePlayerSessionsRequest{Request: req, Input: input, Copy: c.DescribePlayerSessionsRequest}
}

// DescribePlayerSessionsRequest is the request type for the
// DescribePlayerSessions API operation.
type DescribePlayerSessionsRequest struct {
	*aws.Request
	Input *types.DescribePlayerSessionsInput
	Copy  func(*types.DescribePlayerSessionsInput) DescribePlayerSessionsRequest
}

// Send marshals and sends the DescribePlayerSessions API request.
func (r DescribePlayerSessionsRequest) Send(ctx context.Context) (*DescribePlayerSessionsResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &DescribePlayerSessionsResponse{
		DescribePlayerSessionsOutput: r.Request.Data.(*types.DescribePlayerSessionsOutput),
		response:                     &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// DescribePlayerSessionsResponse is the response type for the
// DescribePlayerSessions API operation.
type DescribePlayerSessionsResponse struct {
	*types.DescribePlayerSessionsOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// DescribePlayerSessions request.
func (r *DescribePlayerSessionsResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
