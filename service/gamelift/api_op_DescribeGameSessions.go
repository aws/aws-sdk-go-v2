// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package gamelift

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/gamelift/types"
)

const opDescribeGameSessions = "DescribeGameSessions"

// DescribeGameSessionsRequest returns a request value for making API operation for
// Amazon GameLift.
//
// Retrieves a set of one or more game sessions. Request a specific game session
// or request all game sessions on a fleet. Alternatively, use SearchGameSessions
// to request a set of active game sessions that are filtered by certain criteria.
// To retrieve protection policy settings for game sessions, use DescribeGameSessionDetails.
//
// To get game sessions, specify one of the following: game session ID, fleet
// ID, or alias ID. You can filter this request by game session status. Use
// the pagination parameters to retrieve results as a set of sequential pages.
// If successful, a GameSession object is returned for each game session matching
// the request.
//
// Available in Amazon GameLift Local.
//
//    * CreateGameSession
//
//    * DescribeGameSessions
//
//    * DescribeGameSessionDetails
//
//    * SearchGameSessions
//
//    * UpdateGameSession
//
//    * GetGameSessionLogUrl
//
//    * Game session placements StartGameSessionPlacement DescribeGameSessionPlacement
//    StopGameSessionPlacement
//
//    // Example sending a request using DescribeGameSessionsRequest.
//    req := client.DescribeGameSessionsRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/gamelift-2015-10-01/DescribeGameSessions
func (c *Client) DescribeGameSessionsRequest(input *types.DescribeGameSessionsInput) DescribeGameSessionsRequest {
	op := &aws.Operation{
		Name:       opDescribeGameSessions,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &types.DescribeGameSessionsInput{}
	}

	req := c.newRequest(op, input, &types.DescribeGameSessionsOutput{})
	return DescribeGameSessionsRequest{Request: req, Input: input, Copy: c.DescribeGameSessionsRequest}
}

// DescribeGameSessionsRequest is the request type for the
// DescribeGameSessions API operation.
type DescribeGameSessionsRequest struct {
	*aws.Request
	Input *types.DescribeGameSessionsInput
	Copy  func(*types.DescribeGameSessionsInput) DescribeGameSessionsRequest
}

// Send marshals and sends the DescribeGameSessions API request.
func (r DescribeGameSessionsRequest) Send(ctx context.Context) (*DescribeGameSessionsResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &DescribeGameSessionsResponse{
		DescribeGameSessionsOutput: r.Request.Data.(*types.DescribeGameSessionsOutput),
		response:                   &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// DescribeGameSessionsResponse is the response type for the
// DescribeGameSessions API operation.
type DescribeGameSessionsResponse struct {
	*types.DescribeGameSessionsOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// DescribeGameSessions request.
func (r *DescribeGameSessionsResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
