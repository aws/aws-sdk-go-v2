// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package gamelift

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/gamelift/types"
)

const opUpdateGameSession = "UpdateGameSession"

// UpdateGameSessionRequest returns a request value for making API operation for
// Amazon GameLift.
//
// Updates game session properties. This includes the session name, maximum
// player count, protection policy, which controls whether or not an active
// game session can be terminated during a scale-down event, and the player
// session creation policy, which controls whether or not new players can join
// the session. To update a game session, specify the game session ID and the
// values you want to change. If successful, an updated GameSession object is
// returned.
//
//    * CreateGameSession
//
//    * DescribeGameSessions
//
//    * DescribeGameSessionDetails
//
//    * SearchGameSessions
//
//    * UpdateGameSession
//
//    * GetGameSessionLogUrl
//
//    * Game session placements StartGameSessionPlacement DescribeGameSessionPlacement
//    StopGameSessionPlacement
//
//    // Example sending a request using UpdateGameSessionRequest.
//    req := client.UpdateGameSessionRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/gamelift-2015-10-01/UpdateGameSession
func (c *Client) UpdateGameSessionRequest(input *types.UpdateGameSessionInput) UpdateGameSessionRequest {
	op := &aws.Operation{
		Name:       opUpdateGameSession,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &types.UpdateGameSessionInput{}
	}

	req := c.newRequest(op, input, &types.UpdateGameSessionOutput{})
	return UpdateGameSessionRequest{Request: req, Input: input, Copy: c.UpdateGameSessionRequest}
}

// UpdateGameSessionRequest is the request type for the
// UpdateGameSession API operation.
type UpdateGameSessionRequest struct {
	*aws.Request
	Input *types.UpdateGameSessionInput
	Copy  func(*types.UpdateGameSessionInput) UpdateGameSessionRequest
}

// Send marshals and sends the UpdateGameSession API request.
func (r UpdateGameSessionRequest) Send(ctx context.Context) (*UpdateGameSessionResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &UpdateGameSessionResponse{
		UpdateGameSessionOutput: r.Request.Data.(*types.UpdateGameSessionOutput),
		response:                &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// UpdateGameSessionResponse is the response type for the
// UpdateGameSession API operation.
type UpdateGameSessionResponse struct {
	*types.UpdateGameSessionOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// UpdateGameSession request.
func (r *UpdateGameSessionResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
