// Code generated by smithy-go-codegen DO NOT EDIT.

package gamelift

import (
	"context"
	awsmiddleware "github.com/aws/aws-sdk-go-v2/aws/middleware"
	"github.com/aws/aws-sdk-go-v2/aws/signer/v4"
	"github.com/aws/aws-sdk-go-v2/service/gamelift/types"
	"github.com/awslabs/smithy-go/middleware"
	smithyhttp "github.com/awslabs/smithy-go/transport/http"
)

// This operation is used with the Amazon GameLift FleetIQ solution and game server
// groups. Retrieves information on all game servers groups that exist in the
// current AWS account for the selected Region. Use the pagination parameters to
// retrieve results in a set of sequential segments. Learn more GameLift FleetIQ
// Guide (https://docs.aws.amazon.com/gamelift/latest/fleetiqguide/gsg-intro.html)
// Related operations
//
//     * CreateGameServerGroup
//
//     * ListGameServerGroups
//
//
// * DescribeGameServerGroup
//
//     * UpdateGameServerGroup
//
//     *
// DeleteGameServerGroup
//
//     * ResumeGameServerGroup
//
//     *
// SuspendGameServerGroup
//
//     * DescribeGameServerInstances
func (c *Client) ListGameServerGroups(ctx context.Context, params *ListGameServerGroupsInput, optFns ...func(*Options)) (*ListGameServerGroupsOutput, error) {
	if params == nil {
		params = &ListGameServerGroupsInput{}
	}

	result, metadata, err := c.invokeOperation(ctx, "ListGameServerGroups", params, optFns, addOperationListGameServerGroupsMiddlewares)
	if err != nil {
		return nil, err
	}

	out := result.(*ListGameServerGroupsOutput)
	out.ResultMetadata = metadata
	return out, nil
}

type ListGameServerGroupsInput struct {

	// The maximum number of results to return. Use this parameter with NextToken to
	// get results as a set of sequential segments.
	Limit *int32

	// A token that indicates the start of the next sequential segment of results. Use
	// the token returned with the previous call to this operation. To start at the
	// beginning of the result set, do not specify a value.
	NextToken *string
}

type ListGameServerGroupsOutput struct {

	// A collection of game server group objects that match the request.
	GameServerGroups []*types.GameServerGroup

	// A token that indicates where to resume retrieving results on the next call to
	// this operation. If no token is returned, these results represent the end of the
	// list.
	NextToken *string

	// Metadata pertaining to the operation's result.
	ResultMetadata middleware.Metadata
}

func addOperationListGameServerGroupsMiddlewares(stack *middleware.Stack, options Options) (err error) {
	err = stack.Serialize.Add(&awsAwsjson11_serializeOpListGameServerGroups{}, middleware.After)
	if err != nil {
		return err
	}
	err = stack.Deserialize.Add(&awsAwsjson11_deserializeOpListGameServerGroups{}, middleware.After)
	if err != nil {
		return err
	}
	awsmiddleware.AddRequestInvocationIDMiddleware(stack)
	smithyhttp.AddContentLengthMiddleware(stack)
	addResolveEndpointMiddleware(stack, options)
	v4.AddComputePayloadSHA256Middleware(stack)
	addRetryMiddlewares(stack, options)
	addHTTPSignerV4Middleware(stack, options)
	awsmiddleware.AddAttemptClockSkewMiddleware(stack)
	addClientUserAgent(stack)
	smithyhttp.AddErrorCloseResponseBodyMiddleware(stack)
	smithyhttp.AddCloseResponseBodyMiddleware(stack)
	stack.Initialize.Add(newServiceMetadataMiddleware_opListGameServerGroups(options.Region), middleware.Before)
	addRequestIDRetrieverMiddleware(stack)
	addResponseErrorMiddleware(stack)
	return nil
}

func newServiceMetadataMiddleware_opListGameServerGroups(region string) awsmiddleware.RegisterServiceMetadata {
	return awsmiddleware.RegisterServiceMetadata{
		Region:        region,
		ServiceID:     ServiceID,
		SigningName:   "gamelift",
		OperationName: "ListGameServerGroups",
	}
}
