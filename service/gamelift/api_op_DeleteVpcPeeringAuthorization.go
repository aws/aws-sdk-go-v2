// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package gamelift

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/gamelift/types"
)

const opDeleteVpcPeeringAuthorization = "DeleteVpcPeeringAuthorization"

// DeleteVpcPeeringAuthorizationRequest returns a request value for making API operation for
// Amazon GameLift.
//
// Cancels a pending VPC peering authorization for the specified VPC. If you
// need to delete an existing VPC peering connection, call DeleteVpcPeeringConnection.
//
//    * CreateVpcPeeringAuthorization
//
//    * DescribeVpcPeeringAuthorizations
//
//    * DeleteVpcPeeringAuthorization
//
//    * CreateVpcPeeringConnection
//
//    * DescribeVpcPeeringConnections
//
//    * DeleteVpcPeeringConnection
//
//    // Example sending a request using DeleteVpcPeeringAuthorizationRequest.
//    req := client.DeleteVpcPeeringAuthorizationRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/gamelift-2015-10-01/DeleteVpcPeeringAuthorization
func (c *Client) DeleteVpcPeeringAuthorizationRequest(input *types.DeleteVpcPeeringAuthorizationInput) DeleteVpcPeeringAuthorizationRequest {
	op := &aws.Operation{
		Name:       opDeleteVpcPeeringAuthorization,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &types.DeleteVpcPeeringAuthorizationInput{}
	}

	req := c.newRequest(op, input, &types.DeleteVpcPeeringAuthorizationOutput{})
	return DeleteVpcPeeringAuthorizationRequest{Request: req, Input: input, Copy: c.DeleteVpcPeeringAuthorizationRequest}
}

// DeleteVpcPeeringAuthorizationRequest is the request type for the
// DeleteVpcPeeringAuthorization API operation.
type DeleteVpcPeeringAuthorizationRequest struct {
	*aws.Request
	Input *types.DeleteVpcPeeringAuthorizationInput
	Copy  func(*types.DeleteVpcPeeringAuthorizationInput) DeleteVpcPeeringAuthorizationRequest
}

// Send marshals and sends the DeleteVpcPeeringAuthorization API request.
func (r DeleteVpcPeeringAuthorizationRequest) Send(ctx context.Context) (*DeleteVpcPeeringAuthorizationResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &DeleteVpcPeeringAuthorizationResponse{
		DeleteVpcPeeringAuthorizationOutput: r.Request.Data.(*types.DeleteVpcPeeringAuthorizationOutput),
		response:                            &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// DeleteVpcPeeringAuthorizationResponse is the response type for the
// DeleteVpcPeeringAuthorization API operation.
type DeleteVpcPeeringAuthorizationResponse struct {
	*types.DeleteVpcPeeringAuthorizationOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// DeleteVpcPeeringAuthorization request.
func (r *DeleteVpcPeeringAuthorizationResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
