// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package machinelearning

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/machinelearning/types"
)

const opCreateMLModel = "CreateMLModel"

// CreateMLModelRequest returns a request value for making API operation for
// Amazon Machine Learning.
//
// Creates a new MLModel using the DataSource and the recipe as information
// sources.
//
// An MLModel is nearly immutable. Users can update only the MLModelName and
// the ScoreThreshold in an MLModel without creating a new MLModel.
//
// CreateMLModel is an asynchronous operation. In response to CreateMLModel,
// Amazon Machine Learning (Amazon ML) immediately returns and sets the MLModel
// status to PENDING. After the MLModel has been created and ready is for use,
// Amazon ML sets the status to COMPLETED.
//
// You can use the GetMLModel operation to check the progress of the MLModel
// during the creation operation.
//
// CreateMLModel requires a DataSource with computed statistics, which can be
// created by setting ComputeStatistics to true in CreateDataSourceFromRDS,
// CreateDataSourceFromS3, or CreateDataSourceFromRedshift operations.
//
//    // Example sending a request using CreateMLModelRequest.
//    req := client.CreateMLModelRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
func (c *Client) CreateMLModelRequest(input *types.CreateMLModelInput) CreateMLModelRequest {
	op := &aws.Operation{
		Name:       opCreateMLModel,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &types.CreateMLModelInput{}
	}

	req := c.newRequest(op, input, &types.CreateMLModelOutput{})
	return CreateMLModelRequest{Request: req, Input: input, Copy: c.CreateMLModelRequest}
}

// CreateMLModelRequest is the request type for the
// CreateMLModel API operation.
type CreateMLModelRequest struct {
	*aws.Request
	Input *types.CreateMLModelInput
	Copy  func(*types.CreateMLModelInput) CreateMLModelRequest
}

// Send marshals and sends the CreateMLModel API request.
func (r CreateMLModelRequest) Send(ctx context.Context) (*CreateMLModelResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &CreateMLModelResponse{
		CreateMLModelOutput: r.Request.Data.(*types.CreateMLModelOutput),
		response:            &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// CreateMLModelResponse is the response type for the
// CreateMLModel API operation.
type CreateMLModelResponse struct {
	*types.CreateMLModelOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// CreateMLModel request.
func (r *CreateMLModelResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
