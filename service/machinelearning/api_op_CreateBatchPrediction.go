// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package machinelearning

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/machinelearning/types"
)

const opCreateBatchPrediction = "CreateBatchPrediction"

// CreateBatchPredictionRequest returns a request value for making API operation for
// Amazon Machine Learning.
//
// Generates predictions for a group of observations. The observations to process
// exist in one or more data files referenced by a DataSource. This operation
// creates a new BatchPrediction, and uses an MLModel and the data files referenced
// by the DataSource as information sources.
//
// CreateBatchPrediction is an asynchronous operation. In response to CreateBatchPrediction,
// Amazon Machine Learning (Amazon ML) immediately returns and sets the BatchPrediction
// status to PENDING. After the BatchPrediction completes, Amazon ML sets the
// status to COMPLETED.
//
// You can poll for status updates by using the GetBatchPrediction operation
// and checking the Status parameter of the result. After the COMPLETED status
// appears, the results are available in the location specified by the OutputUri
// parameter.
//
//    // Example sending a request using CreateBatchPredictionRequest.
//    req := client.CreateBatchPredictionRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
func (c *Client) CreateBatchPredictionRequest(input *types.CreateBatchPredictionInput) CreateBatchPredictionRequest {
	op := &aws.Operation{
		Name:       opCreateBatchPrediction,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &types.CreateBatchPredictionInput{}
	}

	req := c.newRequest(op, input, &types.CreateBatchPredictionOutput{})
	return CreateBatchPredictionRequest{Request: req, Input: input, Copy: c.CreateBatchPredictionRequest}
}

// CreateBatchPredictionRequest is the request type for the
// CreateBatchPrediction API operation.
type CreateBatchPredictionRequest struct {
	*aws.Request
	Input *types.CreateBatchPredictionInput
	Copy  func(*types.CreateBatchPredictionInput) CreateBatchPredictionRequest
}

// Send marshals and sends the CreateBatchPrediction API request.
func (r CreateBatchPredictionRequest) Send(ctx context.Context) (*CreateBatchPredictionResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &CreateBatchPredictionResponse{
		CreateBatchPredictionOutput: r.Request.Data.(*types.CreateBatchPredictionOutput),
		response:                    &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// CreateBatchPredictionResponse is the response type for the
// CreateBatchPrediction API operation.
type CreateBatchPredictionResponse struct {
	*types.CreateBatchPredictionOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// CreateBatchPrediction request.
func (r *CreateBatchPredictionResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
