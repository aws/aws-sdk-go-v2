// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package appstream

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/appstream/types"
)

const opExpireSession = "ExpireSession"

// ExpireSessionRequest returns a request value for making API operation for
// Amazon AppStream.
//
// Immediately stops the specified streaming session.
//
//    // Example sending a request using ExpireSessionRequest.
//    req := client.ExpireSessionRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/appstream-2016-12-01/ExpireSession
func (c *Client) ExpireSessionRequest(input *types.ExpireSessionInput) ExpireSessionRequest {
	op := &aws.Operation{
		Name:       opExpireSession,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &types.ExpireSessionInput{}
	}

	req := c.newRequest(op, input, &types.ExpireSessionOutput{})
	return ExpireSessionRequest{Request: req, Input: input, Copy: c.ExpireSessionRequest}
}

// ExpireSessionRequest is the request type for the
// ExpireSession API operation.
type ExpireSessionRequest struct {
	*aws.Request
	Input *types.ExpireSessionInput
	Copy  func(*types.ExpireSessionInput) ExpireSessionRequest
}

// Send marshals and sends the ExpireSession API request.
func (r ExpireSessionRequest) Send(ctx context.Context) (*ExpireSessionResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &ExpireSessionResponse{
		ExpireSessionOutput: r.Request.Data.(*types.ExpireSessionOutput),
		response:            &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// ExpireSessionResponse is the response type for the
// ExpireSession API operation.
type ExpireSessionResponse struct {
	*types.ExpireSessionOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// ExpireSession request.
func (r *ExpireSessionResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
