// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package appstream

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/appstream/types"
)

const opStartFleet = "StartFleet"

// StartFleetRequest returns a request value for making API operation for
// Amazon AppStream.
//
// Starts the specified fleet.
//
//    // Example sending a request using StartFleetRequest.
//    req := client.StartFleetRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/appstream-2016-12-01/StartFleet
func (c *Client) StartFleetRequest(input *types.StartFleetInput) StartFleetRequest {
	op := &aws.Operation{
		Name:       opStartFleet,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &types.StartFleetInput{}
	}

	req := c.newRequest(op, input, &types.StartFleetOutput{})
	return StartFleetRequest{Request: req, Input: input, Copy: c.StartFleetRequest}
}

// StartFleetRequest is the request type for the
// StartFleet API operation.
type StartFleetRequest struct {
	*aws.Request
	Input *types.StartFleetInput
	Copy  func(*types.StartFleetInput) StartFleetRequest
}

// Send marshals and sends the StartFleet API request.
func (r StartFleetRequest) Send(ctx context.Context) (*StartFleetResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &StartFleetResponse{
		StartFleetOutput: r.Request.Data.(*types.StartFleetOutput),
		response:         &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// StartFleetResponse is the response type for the
// StartFleet API operation.
type StartFleetResponse struct {
	*types.StartFleetOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// StartFleet request.
func (r *StartFleetResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
