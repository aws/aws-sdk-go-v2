// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package appstream

type AccessEndpointType string

// Enum values for AccessEndpointType
const (
	AccessEndpointTypeStreaming AccessEndpointType = "STREAMING"
)

func (enum AccessEndpointType) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum AccessEndpointType) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type Action string

// Enum values for Action
const (
	ActionClipboardCopyFromLocalDevice Action = "CLIPBOARD_COPY_FROM_LOCAL_DEVICE"
	ActionClipboardCopyToLocalDevice   Action = "CLIPBOARD_COPY_TO_LOCAL_DEVICE"
	ActionFileUpload                   Action = "FILE_UPLOAD"
	ActionFileDownload                 Action = "FILE_DOWNLOAD"
	ActionPrintingToLocalDevice        Action = "PRINTING_TO_LOCAL_DEVICE"
)

func (enum Action) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum Action) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type AuthenticationType string

// Enum values for AuthenticationType
const (
	AuthenticationTypeApi      AuthenticationType = "API"
	AuthenticationTypeSaml     AuthenticationType = "SAML"
	AuthenticationTypeUserpool AuthenticationType = "USERPOOL"
)

func (enum AuthenticationType) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum AuthenticationType) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

// The fleet attribute.
type FleetAttribute string

// Enum values for FleetAttribute
const (
	FleetAttributeVpcConfiguration                 FleetAttribute = "VPC_CONFIGURATION"
	FleetAttributeVpcConfigurationSecurityGroupIds FleetAttribute = "VPC_CONFIGURATION_SECURITY_GROUP_IDS"
	FleetAttributeDomainJoinInfo                   FleetAttribute = "DOMAIN_JOIN_INFO"
	FleetAttributeIamRoleArn                       FleetAttribute = "IAM_ROLE_ARN"
)

func (enum FleetAttribute) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum FleetAttribute) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type FleetErrorCode string

// Enum values for FleetErrorCode
const (
	FleetErrorCodeIamServiceRoleMissingEniDescribeAction            FleetErrorCode = "IAM_SERVICE_ROLE_MISSING_ENI_DESCRIBE_ACTION"
	FleetErrorCodeIamServiceRoleMissingEniCreateAction              FleetErrorCode = "IAM_SERVICE_ROLE_MISSING_ENI_CREATE_ACTION"
	FleetErrorCodeIamServiceRoleMissingEniDeleteAction              FleetErrorCode = "IAM_SERVICE_ROLE_MISSING_ENI_DELETE_ACTION"
	FleetErrorCodeNetworkInterfaceLimitExceeded                     FleetErrorCode = "NETWORK_INTERFACE_LIMIT_EXCEEDED"
	FleetErrorCodeInternalServiceError                              FleetErrorCode = "INTERNAL_SERVICE_ERROR"
	FleetErrorCodeIamServiceRoleIsMissing                           FleetErrorCode = "IAM_SERVICE_ROLE_IS_MISSING"
	FleetErrorCodeMachineRoleIsMissing                              FleetErrorCode = "MACHINE_ROLE_IS_MISSING"
	FleetErrorCodeStsDisabledInRegion                               FleetErrorCode = "STS_DISABLED_IN_REGION"
	FleetErrorCodeSubnetHasInsufficientIpAddresses                  FleetErrorCode = "SUBNET_HAS_INSUFFICIENT_IP_ADDRESSES"
	FleetErrorCodeIamServiceRoleMissingDescribeSubnetAction         FleetErrorCode = "IAM_SERVICE_ROLE_MISSING_DESCRIBE_SUBNET_ACTION"
	FleetErrorCodeSubnetNotFound                                    FleetErrorCode = "SUBNET_NOT_FOUND"
	FleetErrorCodeImageNotFound                                     FleetErrorCode = "IMAGE_NOT_FOUND"
	FleetErrorCodeInvalidSubnetConfiguration                        FleetErrorCode = "INVALID_SUBNET_CONFIGURATION"
	FleetErrorCodeSecurityGroupsNotFound                            FleetErrorCode = "SECURITY_GROUPS_NOT_FOUND"
	FleetErrorCodeIgwNotAttached                                    FleetErrorCode = "IGW_NOT_ATTACHED"
	FleetErrorCodeIamServiceRoleMissingDescribeSecurityGroupsAction FleetErrorCode = "IAM_SERVICE_ROLE_MISSING_DESCRIBE_SECURITY_GROUPS_ACTION"
	FleetErrorCodeDomainJoinErrorFileNotFound                       FleetErrorCode = "DOMAIN_JOIN_ERROR_FILE_NOT_FOUND"
	FleetErrorCodeDomainJoinErrorAccessDenied                       FleetErrorCode = "DOMAIN_JOIN_ERROR_ACCESS_DENIED"
	FleetErrorCodeDomainJoinErrorLogonFailure                       FleetErrorCode = "DOMAIN_JOIN_ERROR_LOGON_FAILURE"
	FleetErrorCodeDomainJoinErrorInvalidParameter                   FleetErrorCode = "DOMAIN_JOIN_ERROR_INVALID_PARAMETER"
	FleetErrorCodeDomainJoinErrorMoreData                           FleetErrorCode = "DOMAIN_JOIN_ERROR_MORE_DATA"
	FleetErrorCodeDomainJoinErrorNoSuchDomain                       FleetErrorCode = "DOMAIN_JOIN_ERROR_NO_SUCH_DOMAIN"
	FleetErrorCodeDomainJoinErrorNotSupported                       FleetErrorCode = "DOMAIN_JOIN_ERROR_NOT_SUPPORTED"
	FleetErrorCodeDomainJoinNerrInvalidWorkgroupName                FleetErrorCode = "DOMAIN_JOIN_NERR_INVALID_WORKGROUP_NAME"
	FleetErrorCodeDomainJoinNerrWorkstationNotStarted               FleetErrorCode = "DOMAIN_JOIN_NERR_WORKSTATION_NOT_STARTED"
	FleetErrorCodeDomainJoinErrorDsMachineAccountQuotaExceeded      FleetErrorCode = "DOMAIN_JOIN_ERROR_DS_MACHINE_ACCOUNT_QUOTA_EXCEEDED"
	FleetErrorCodeDomainJoinNerrPasswordExpired                     FleetErrorCode = "DOMAIN_JOIN_NERR_PASSWORD_EXPIRED"
	FleetErrorCodeDomainJoinInternalServiceError                    FleetErrorCode = "DOMAIN_JOIN_INTERNAL_SERVICE_ERROR"
)

func (enum FleetErrorCode) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum FleetErrorCode) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type FleetState string

// Enum values for FleetState
const (
	FleetStateStarting FleetState = "STARTING"
	FleetStateRunning  FleetState = "RUNNING"
	FleetStateStopping FleetState = "STOPPING"
	FleetStateStopped  FleetState = "STOPPED"
)

func (enum FleetState) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum FleetState) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type FleetType string

// Enum values for FleetType
const (
	FleetTypeAlwaysOn FleetType = "ALWAYS_ON"
	FleetTypeOnDemand FleetType = "ON_DEMAND"
)

func (enum FleetType) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum FleetType) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type ImageBuilderState string

// Enum values for ImageBuilderState
const (
	ImageBuilderStatePending       ImageBuilderState = "PENDING"
	ImageBuilderStateUpdatingAgent ImageBuilderState = "UPDATING_AGENT"
	ImageBuilderStateRunning       ImageBuilderState = "RUNNING"
	ImageBuilderStateStopping      ImageBuilderState = "STOPPING"
	ImageBuilderStateStopped       ImageBuilderState = "STOPPED"
	ImageBuilderStateRebooting     ImageBuilderState = "REBOOTING"
	ImageBuilderStateSnapshotting  ImageBuilderState = "SNAPSHOTTING"
	ImageBuilderStateDeleting      ImageBuilderState = "DELETING"
	ImageBuilderStateFailed        ImageBuilderState = "FAILED"
)

func (enum ImageBuilderState) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum ImageBuilderState) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type ImageBuilderStateChangeReasonCode string

// Enum values for ImageBuilderStateChangeReasonCode
const (
	ImageBuilderStateChangeReasonCodeInternalError    ImageBuilderStateChangeReasonCode = "INTERNAL_ERROR"
	ImageBuilderStateChangeReasonCodeImageUnavailable ImageBuilderStateChangeReasonCode = "IMAGE_UNAVAILABLE"
)

func (enum ImageBuilderStateChangeReasonCode) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum ImageBuilderStateChangeReasonCode) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type ImageState string

// Enum values for ImageState
const (
	ImageStatePending   ImageState = "PENDING"
	ImageStateAvailable ImageState = "AVAILABLE"
	ImageStateFailed    ImageState = "FAILED"
	ImageStateCopying   ImageState = "COPYING"
	ImageStateDeleting  ImageState = "DELETING"
)

func (enum ImageState) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum ImageState) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type ImageStateChangeReasonCode string

// Enum values for ImageStateChangeReasonCode
const (
	ImageStateChangeReasonCodeInternalError            ImageStateChangeReasonCode = "INTERNAL_ERROR"
	ImageStateChangeReasonCodeImageBuilderNotAvailable ImageStateChangeReasonCode = "IMAGE_BUILDER_NOT_AVAILABLE"
	ImageStateChangeReasonCodeImageCopyFailure         ImageStateChangeReasonCode = "IMAGE_COPY_FAILURE"
)

func (enum ImageStateChangeReasonCode) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum ImageStateChangeReasonCode) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type MessageAction string

// Enum values for MessageAction
const (
	MessageActionSuppress MessageAction = "SUPPRESS"
	MessageActionResend   MessageAction = "RESEND"
)

func (enum MessageAction) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum MessageAction) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type Permission string

// Enum values for Permission
const (
	PermissionEnabled  Permission = "ENABLED"
	PermissionDisabled Permission = "DISABLED"
)

func (enum Permission) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum Permission) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type PlatformType string

// Enum values for PlatformType
const (
	PlatformTypeWindows           PlatformType = "WINDOWS"
	PlatformTypeWindowsServer2016 PlatformType = "WINDOWS_SERVER_2016"
	PlatformTypeWindowsServer2019 PlatformType = "WINDOWS_SERVER_2019"
)

func (enum PlatformType) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum PlatformType) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type SessionConnectionState string

// Enum values for SessionConnectionState
const (
	SessionConnectionStateConnected    SessionConnectionState = "CONNECTED"
	SessionConnectionStateNotConnected SessionConnectionState = "NOT_CONNECTED"
)

func (enum SessionConnectionState) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum SessionConnectionState) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

// Possible values for the state of a streaming session.
type SessionState string

// Enum values for SessionState
const (
	SessionStateActive  SessionState = "ACTIVE"
	SessionStatePending SessionState = "PENDING"
	SessionStateExpired SessionState = "EXPIRED"
)

func (enum SessionState) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum SessionState) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type StackAttribute string

// Enum values for StackAttribute
const (
	StackAttributeStorageConnectors           StackAttribute = "STORAGE_CONNECTORS"
	StackAttributeStorageConnectorHomefolders StackAttribute = "STORAGE_CONNECTOR_HOMEFOLDERS"
	StackAttributeStorageConnectorGoogleDrive StackAttribute = "STORAGE_CONNECTOR_GOOGLE_DRIVE"
	StackAttributeStorageConnectorOneDrive    StackAttribute = "STORAGE_CONNECTOR_ONE_DRIVE"
	StackAttributeRedirectUrl                 StackAttribute = "REDIRECT_URL"
	StackAttributeFeedbackUrl                 StackAttribute = "FEEDBACK_URL"
	StackAttributeThemeName                   StackAttribute = "THEME_NAME"
	StackAttributeUserSettings                StackAttribute = "USER_SETTINGS"
	StackAttributeEmbedHostDomains            StackAttribute = "EMBED_HOST_DOMAINS"
	StackAttributeIamRoleArn                  StackAttribute = "IAM_ROLE_ARN"
	StackAttributeAccessEndpoints             StackAttribute = "ACCESS_ENDPOINTS"
)

func (enum StackAttribute) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum StackAttribute) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type StackErrorCode string

// Enum values for StackErrorCode
const (
	StackErrorCodeStorageConnectorError StackErrorCode = "STORAGE_CONNECTOR_ERROR"
	StackErrorCodeInternalServiceError  StackErrorCode = "INTERNAL_SERVICE_ERROR"
)

func (enum StackErrorCode) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum StackErrorCode) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

// The type of storage connector.
type StorageConnectorType string

// Enum values for StorageConnectorType
const (
	StorageConnectorTypeHomefolders StorageConnectorType = "HOMEFOLDERS"
	StorageConnectorTypeGoogleDrive StorageConnectorType = "GOOGLE_DRIVE"
	StorageConnectorTypeOneDrive    StorageConnectorType = "ONE_DRIVE"
)

func (enum StorageConnectorType) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum StorageConnectorType) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type UsageReportExecutionErrorCode string

// Enum values for UsageReportExecutionErrorCode
const (
	UsageReportExecutionErrorCodeResourceNotFound     UsageReportExecutionErrorCode = "RESOURCE_NOT_FOUND"
	UsageReportExecutionErrorCodeAccessDenied         UsageReportExecutionErrorCode = "ACCESS_DENIED"
	UsageReportExecutionErrorCodeInternalServiceError UsageReportExecutionErrorCode = "INTERNAL_SERVICE_ERROR"
)

func (enum UsageReportExecutionErrorCode) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum UsageReportExecutionErrorCode) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type UsageReportSchedule string

// Enum values for UsageReportSchedule
const (
	UsageReportScheduleDaily UsageReportSchedule = "DAILY"
)

func (enum UsageReportSchedule) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum UsageReportSchedule) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type UserStackAssociationErrorCode string

// Enum values for UserStackAssociationErrorCode
const (
	UserStackAssociationErrorCodeStackNotFound    UserStackAssociationErrorCode = "STACK_NOT_FOUND"
	UserStackAssociationErrorCodeUserNameNotFound UserStackAssociationErrorCode = "USER_NAME_NOT_FOUND"
	UserStackAssociationErrorCodeInternalError    UserStackAssociationErrorCode = "INTERNAL_ERROR"
)

func (enum UserStackAssociationErrorCode) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum UserStackAssociationErrorCode) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type VisibilityType string

// Enum values for VisibilityType
const (
	VisibilityTypePublic  VisibilityType = "PUBLIC"
	VisibilityTypePrivate VisibilityType = "PRIVATE"
	VisibilityTypeShared  VisibilityType = "SHARED"
)

func (enum VisibilityType) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum VisibilityType) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}
