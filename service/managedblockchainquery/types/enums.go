// Code generated by smithy-go-codegen DO NOT EDIT.

package types

type ErrorType string

// Enum values for ErrorType
const (
	// An API request validation exception
	ErrorTypeValidationException ErrorType = "VALIDATION_EXCEPTION"
	// An API request retrieving an item that can't be found
	ErrorTypeResourceNotFoundException ErrorType = "RESOURCE_NOT_FOUND_EXCEPTION"
)

// Values returns all known values for ErrorType. Note that this can be expanded
// in the future, and so it is only as up to date as the client. The ordering of
// this slice is not guaranteed to be stable across updates.
func (ErrorType) Values() []ErrorType {
	return []ErrorType{
		"VALIDATION_EXCEPTION",
		"RESOURCE_NOT_FOUND_EXCEPTION",
	}
}

type ListTransactionsSortBy string

// Enum values for ListTransactionsSortBy
const (
	// Timestamp of a transaction
	ListTransactionsSortByTransactionTimestamp ListTransactionsSortBy = "TRANSACTION_TIMESTAMP"
)

// Values returns all known values for ListTransactionsSortBy. Note that this can
// be expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (ListTransactionsSortBy) Values() []ListTransactionsSortBy {
	return []ListTransactionsSortBy{
		"TRANSACTION_TIMESTAMP",
	}
}

type QueryNetwork string

// Enum values for QueryNetwork
const (
	// Ethereum main network
	QueryNetworkEthereumMainnet QueryNetwork = "ETHEREUM_MAINNET"
	// Bitcoin main network
	QueryNetworkBitcoinMainnet QueryNetwork = "BITCOIN_MAINNET"
)

// Values returns all known values for QueryNetwork. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (QueryNetwork) Values() []QueryNetwork {
	return []QueryNetwork{
		"ETHEREUM_MAINNET",
		"BITCOIN_MAINNET",
	}
}

type QueryTransactionEventType string

// Enum values for QueryTransactionEventType
const (
	// An ERC20 transfer type
	QueryTransactionEventTypeErc20Transfer QueryTransactionEventType = "ERC20_TRANSFER"
	// An ERC20_MINT transfer type
	QueryTransactionEventTypeErc20Mint QueryTransactionEventType = "ERC20_MINT"
	// An ERC20_BURN transfer type
	QueryTransactionEventTypeErc20Burn QueryTransactionEventType = "ERC20_BURN"
	// An ERC20_DEPOSIT transfer type
	QueryTransactionEventTypeErc20Deposit QueryTransactionEventType = "ERC20_DEPOSIT"
	// An ERC20_WITHDRAWAL transfer type
	QueryTransactionEventTypeErc20Withdrawal QueryTransactionEventType = "ERC20_WITHDRAWAL"
	// An ERC721 transfer type
	QueryTransactionEventTypeErc721Transfer QueryTransactionEventType = "ERC721_TRANSFER"
	// An ERC1155 transfer type
	QueryTransactionEventTypeErc1155Transfer QueryTransactionEventType = "ERC1155_TRANSFER"
	// A Bitcoin Vin transfer type
	QueryTransactionEventTypeBitcoinVin QueryTransactionEventType = "BITCOIN_VIN"
	// A Bitcoin Vout transfer type
	QueryTransactionEventTypeBitcoinVout QueryTransactionEventType = "BITCOIN_VOUT"
	// An internal ETH transfer type
	QueryTransactionEventTypeInternalEthTransfer QueryTransactionEventType = "INTERNAL_ETH_TRANSFER"
	// An ETH transfer type
	QueryTransactionEventTypeEthTransfer QueryTransactionEventType = "ETH_TRANSFER"
)

// Values returns all known values for QueryTransactionEventType. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
// The ordering of this slice is not guaranteed to be stable across updates.
func (QueryTransactionEventType) Values() []QueryTransactionEventType {
	return []QueryTransactionEventType{
		"ERC20_TRANSFER",
		"ERC20_MINT",
		"ERC20_BURN",
		"ERC20_DEPOSIT",
		"ERC20_WITHDRAWAL",
		"ERC721_TRANSFER",
		"ERC1155_TRANSFER",
		"BITCOIN_VIN",
		"BITCOIN_VOUT",
		"INTERNAL_ETH_TRANSFER",
		"ETH_TRANSFER",
	}
}

type QueryTransactionStatus string

// Enum values for QueryTransactionStatus
const (
	// The transaction has been confirmed and is final in the blockchain
	QueryTransactionStatusFinal QueryTransactionStatus = "FINAL"
	// The transaction completed on the blockchain, but failed
	QueryTransactionStatusFailed QueryTransactionStatus = "FAILED"
)

// Values returns all known values for QueryTransactionStatus. Note that this can
// be expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (QueryTransactionStatus) Values() []QueryTransactionStatus {
	return []QueryTransactionStatus{
		"FINAL",
		"FAILED",
	}
}

type ResourceType string

// Enum values for ResourceType
const (
	ResourceTypeCollection ResourceType = "collection"
)

// Values returns all known values for ResourceType. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (ResourceType) Values() []ResourceType {
	return []ResourceType{
		"collection",
	}
}

type SortOrder string

// Enum values for SortOrder
const (
	// Result sorted in ascending order
	SortOrderAscending SortOrder = "ASCENDING"
	// Result sorted in descending order
	SortOrderDescending SortOrder = "DESCENDING"
)

// Values returns all known values for SortOrder. Note that this can be expanded
// in the future, and so it is only as up to date as the client. The ordering of
// this slice is not guaranteed to be stable across updates.
func (SortOrder) Values() []SortOrder {
	return []SortOrder{
		"ASCENDING",
		"DESCENDING",
	}
}

type ValidationExceptionReason string

// Enum values for ValidationExceptionReason
const (
	ValidationExceptionReasonUnknownOperation      ValidationExceptionReason = "unknownOperation"
	ValidationExceptionReasonCannotParse           ValidationExceptionReason = "cannotParse"
	ValidationExceptionReasonFieldValidationFailed ValidationExceptionReason = "fieldValidationFailed"
	ValidationExceptionReasonOther                 ValidationExceptionReason = "other"
)

// Values returns all known values for ValidationExceptionReason. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
// The ordering of this slice is not guaranteed to be stable across updates.
func (ValidationExceptionReason) Values() []ValidationExceptionReason {
	return []ValidationExceptionReason{
		"unknownOperation",
		"cannotParse",
		"fieldValidationFailed",
		"other",
	}
}
