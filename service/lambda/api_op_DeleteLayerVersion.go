// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package lambda

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/private/protocol"
	"github.com/aws/aws-sdk-go-v2/private/protocol/restjson"
	"github.com/aws/aws-sdk-go-v2/service/lambda/types"
)

const opDeleteLayerVersion = "DeleteLayerVersion"

// DeleteLayerVersionRequest returns a request value for making API operation for
// AWS Lambda.
//
// Deletes a version of an AWS Lambda layer (https://docs.aws.amazon.com/lambda/latest/dg/configuration-layers.html).
// Deleted versions can no longer be viewed or added to functions. To avoid
// breaking functions, a copy of the version remains in Lambda until no functions
// refer to it.
//
//    // Example sending a request using DeleteLayerVersionRequest.
//    req := client.DeleteLayerVersionRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/lambda-2015-03-31/DeleteLayerVersion
func (c *Client) DeleteLayerVersionRequest(input *types.DeleteLayerVersionInput) DeleteLayerVersionRequest {
	op := &aws.Operation{
		Name:       opDeleteLayerVersion,
		HTTPMethod: "DELETE",
		HTTPPath:   "/2018-10-31/layers/{LayerName}/versions/{VersionNumber}",
	}

	if input == nil {
		input = &types.DeleteLayerVersionInput{}
	}

	req := c.newRequest(op, input, &types.DeleteLayerVersionOutput{})
	req.Handlers.Unmarshal.Remove(restjson.UnmarshalHandler)
	req.Handlers.Unmarshal.PushBackNamed(protocol.UnmarshalDiscardBodyHandler)
	return DeleteLayerVersionRequest{Request: req, Input: input, Copy: c.DeleteLayerVersionRequest}
}

// DeleteLayerVersionRequest is the request type for the
// DeleteLayerVersion API operation.
type DeleteLayerVersionRequest struct {
	*aws.Request
	Input *types.DeleteLayerVersionInput
	Copy  func(*types.DeleteLayerVersionInput) DeleteLayerVersionRequest
}

// Send marshals and sends the DeleteLayerVersion API request.
func (r DeleteLayerVersionRequest) Send(ctx context.Context) (*DeleteLayerVersionResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &DeleteLayerVersionResponse{
		DeleteLayerVersionOutput: r.Request.Data.(*types.DeleteLayerVersionOutput),
		response:                 &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// DeleteLayerVersionResponse is the response type for the
// DeleteLayerVersion API operation.
type DeleteLayerVersionResponse struct {
	*types.DeleteLayerVersionOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// DeleteLayerVersion request.
func (r *DeleteLayerVersionResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
