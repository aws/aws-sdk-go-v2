// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package lambda

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/lambda/types"
)

const opUpdateFunctionConfiguration = "UpdateFunctionConfiguration"

// UpdateFunctionConfigurationRequest returns a request value for making API operation for
// AWS Lambda.
//
// Modify the version-specific settings of a Lambda function.
//
// These settings can vary between versions of a function and are locked when
// you publish a version. You can't modify the configuration of a published
// version, only the unpublished version.
//
// To configure function concurrency, use PutFunctionConcurrency. To grant invoke
// permissions to an account or AWS service, use AddPermission.
//
//    // Example sending a request using UpdateFunctionConfigurationRequest.
//    req := client.UpdateFunctionConfigurationRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/lambda-2015-03-31/UpdateFunctionConfiguration
func (c *Client) UpdateFunctionConfigurationRequest(input *types.UpdateFunctionConfigurationInput) UpdateFunctionConfigurationRequest {
	op := &aws.Operation{
		Name:       opUpdateFunctionConfiguration,
		HTTPMethod: "PUT",
		HTTPPath:   "/2015-03-31/functions/{FunctionName}/configuration",
	}

	if input == nil {
		input = &types.UpdateFunctionConfigurationInput{}
	}

	req := c.newRequest(op, input, &types.UpdateFunctionConfigurationOutput{})
	return UpdateFunctionConfigurationRequest{Request: req, Input: input, Copy: c.UpdateFunctionConfigurationRequest}
}

// UpdateFunctionConfigurationRequest is the request type for the
// UpdateFunctionConfiguration API operation.
type UpdateFunctionConfigurationRequest struct {
	*aws.Request
	Input *types.UpdateFunctionConfigurationInput
	Copy  func(*types.UpdateFunctionConfigurationInput) UpdateFunctionConfigurationRequest
}

// Send marshals and sends the UpdateFunctionConfiguration API request.
func (r UpdateFunctionConfigurationRequest) Send(ctx context.Context) (*UpdateFunctionConfigurationResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &UpdateFunctionConfigurationResponse{
		UpdateFunctionConfigurationOutput: r.Request.Data.(*types.UpdateFunctionConfigurationOutput),
		response:                          &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// UpdateFunctionConfigurationResponse is the response type for the
// UpdateFunctionConfiguration API operation.
type UpdateFunctionConfigurationResponse struct {
	*types.UpdateFunctionConfigurationOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// UpdateFunctionConfiguration request.
func (r *UpdateFunctionConfigurationResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
