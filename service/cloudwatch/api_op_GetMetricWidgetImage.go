// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package cloudwatch

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/cloudwatch/types"
)

const opGetMetricWidgetImage = "GetMetricWidgetImage"

// GetMetricWidgetImageRequest returns a request value for making API operation for
// Amazon CloudWatch.
//
// You can use the GetMetricWidgetImage API to retrieve a snapshot graph of
// one or more Amazon CloudWatch metrics as a bitmap image. You can then embed
// this image into your services and products, such as wiki pages, reports,
// and documents. You could also retrieve images regularly, such as every minute,
// and create your own custom live dashboard.
//
// The graph you retrieve can include all CloudWatch metric graph features,
// including metric math and horizontal and vertical annotations.
//
// There is a limit of 20 transactions per second for this API. Each GetMetricWidgetImage
// action has the following limits:
//
//    * As many as 100 metrics in the graph.
//
//    * Up to 100 KB uncompressed payload.
//
//    // Example sending a request using GetMetricWidgetImageRequest.
//    req := client.GetMetricWidgetImageRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/monitoring-2010-08-01/GetMetricWidgetImage
func (c *Client) GetMetricWidgetImageRequest(input *types.GetMetricWidgetImageInput) GetMetricWidgetImageRequest {
	op := &aws.Operation{
		Name:       opGetMetricWidgetImage,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &types.GetMetricWidgetImageInput{}
	}

	req := c.newRequest(op, input, &types.GetMetricWidgetImageOutput{})
	return GetMetricWidgetImageRequest{Request: req, Input: input, Copy: c.GetMetricWidgetImageRequest}
}

// GetMetricWidgetImageRequest is the request type for the
// GetMetricWidgetImage API operation.
type GetMetricWidgetImageRequest struct {
	*aws.Request
	Input *types.GetMetricWidgetImageInput
	Copy  func(*types.GetMetricWidgetImageInput) GetMetricWidgetImageRequest
}

// Send marshals and sends the GetMetricWidgetImage API request.
func (r GetMetricWidgetImageRequest) Send(ctx context.Context) (*GetMetricWidgetImageResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &GetMetricWidgetImageResponse{
		GetMetricWidgetImageOutput: r.Request.Data.(*types.GetMetricWidgetImageOutput),
		response:                   &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// GetMetricWidgetImageResponse is the response type for the
// GetMetricWidgetImage API operation.
type GetMetricWidgetImageResponse struct {
	*types.GetMetricWidgetImageOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// GetMetricWidgetImage request.
func (r *GetMetricWidgetImageResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
