// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package cloudwatch

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/cloudwatch/types"
)

const opGetDashboard = "GetDashboard"

// GetDashboardRequest returns a request value for making API operation for
// Amazon CloudWatch.
//
// Displays the details of the dashboard that you specify.
//
// To copy an existing dashboard, use GetDashboard, and then use the data returned
// within DashboardBody as the template for the new dashboard when you call
// PutDashboard to create the copy.
//
//    // Example sending a request using GetDashboardRequest.
//    req := client.GetDashboardRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/monitoring-2010-08-01/GetDashboard
func (c *Client) GetDashboardRequest(input *types.GetDashboardInput) GetDashboardRequest {
	op := &aws.Operation{
		Name:       opGetDashboard,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &types.GetDashboardInput{}
	}

	req := c.newRequest(op, input, &types.GetDashboardOutput{})
	return GetDashboardRequest{Request: req, Input: input, Copy: c.GetDashboardRequest}
}

// GetDashboardRequest is the request type for the
// GetDashboard API operation.
type GetDashboardRequest struct {
	*aws.Request
	Input *types.GetDashboardInput
	Copy  func(*types.GetDashboardInput) GetDashboardRequest
}

// Send marshals and sends the GetDashboard API request.
func (r GetDashboardRequest) Send(ctx context.Context) (*GetDashboardResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &GetDashboardResponse{
		GetDashboardOutput: r.Request.Data.(*types.GetDashboardOutput),
		response:           &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// GetDashboardResponse is the response type for the
// GetDashboard API operation.
type GetDashboardResponse struct {
	*types.GetDashboardOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// GetDashboard request.
func (r *GetDashboardResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
