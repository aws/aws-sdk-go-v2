// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

// Package cloudwatchiface provides an interface to enable mocking the Amazon CloudWatch service client
// for testing your code.
//
// It is important to note that this interface will have breaking changes
// when the service model is updated and adds new API operations, paginators,
// and waiters.
package cloudwatchiface

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/cloudwatch"
	"github.com/aws/aws-sdk-go-v2/service/cloudwatch/types"
)

// ClientAPI provides an interface to enable mocking the
// cloudwatch.Client methods. This make unit testing your code that
// calls out to the SDK's service client's calls easier.
//
// The best way to use this interface is so the SDK's service client's calls
// can be stubbed out for unit testing your code with the SDK without needing
// to inject custom request handlers into the SDK's request pipeline.
//
//    // myFunc uses an SDK service client to make a request to
//    // CloudWatch.
//    func myFunc(svc cloudwatchiface.ClientAPI) bool {
//        // Make svc.DeleteAlarms request
//    }
//
//    func main() {
//        cfg, err := external.LoadDefaultAWSConfig()
//        if err != nil {
//            panic("failed to load config, " + err.Error())
//        }
//
//        svc := cloudwatch.New(cfg)
//
//        myFunc(svc)
//    }
//
// In your _test.go file:
//
//    // Define a mock struct to be used in your unit tests of myFunc.
//    type mockClientClient struct {
//        cloudwatchiface.ClientPI
//    }
//    func (m *mockClientClient) DeleteAlarms(input *types.DeleteAlarmsInput) (*types.DeleteAlarmsOutput, error) {
//        // mock response/functionality
//    }
//
//    func TestMyFunc(t *testing.T) {
//        // Setup Test
//        mockSvc := &mockClientClient{}
//
//        myfunc(mockSvc)
//
//        // Verify myFunc's functionality
//    }
//
// It is important to note that this interface will have breaking changes
// when the service model is updated and adds new API operations, paginators,
// and waiters. Its suggested to use the pattern above for testing, or using
// tooling to generate mocks to satisfy the interfaces.
type ClientAPI interface {
	DeleteAlarmsRequest(*types.DeleteAlarmsInput) cloudwatch.DeleteAlarmsRequest

	DeleteAnomalyDetectorRequest(*types.DeleteAnomalyDetectorInput) cloudwatch.DeleteAnomalyDetectorRequest

	DeleteDashboardsRequest(*types.DeleteDashboardsInput) cloudwatch.DeleteDashboardsRequest

	DescribeAlarmHistoryRequest(*types.DescribeAlarmHistoryInput) cloudwatch.DescribeAlarmHistoryRequest

	DescribeAlarmsRequest(*types.DescribeAlarmsInput) cloudwatch.DescribeAlarmsRequest

	DescribeAlarmsForMetricRequest(*types.DescribeAlarmsForMetricInput) cloudwatch.DescribeAlarmsForMetricRequest

	DescribeAnomalyDetectorsRequest(*types.DescribeAnomalyDetectorsInput) cloudwatch.DescribeAnomalyDetectorsRequest

	DisableAlarmActionsRequest(*types.DisableAlarmActionsInput) cloudwatch.DisableAlarmActionsRequest

	EnableAlarmActionsRequest(*types.EnableAlarmActionsInput) cloudwatch.EnableAlarmActionsRequest

	GetDashboardRequest(*types.GetDashboardInput) cloudwatch.GetDashboardRequest

	GetMetricDataRequest(*types.GetMetricDataInput) cloudwatch.GetMetricDataRequest

	GetMetricStatisticsRequest(*types.GetMetricStatisticsInput) cloudwatch.GetMetricStatisticsRequest

	GetMetricWidgetImageRequest(*types.GetMetricWidgetImageInput) cloudwatch.GetMetricWidgetImageRequest

	ListDashboardsRequest(*types.ListDashboardsInput) cloudwatch.ListDashboardsRequest

	ListMetricsRequest(*types.ListMetricsInput) cloudwatch.ListMetricsRequest

	ListTagsForResourceRequest(*types.ListTagsForResourceInput) cloudwatch.ListTagsForResourceRequest

	PutAnomalyDetectorRequest(*types.PutAnomalyDetectorInput) cloudwatch.PutAnomalyDetectorRequest

	PutDashboardRequest(*types.PutDashboardInput) cloudwatch.PutDashboardRequest

	PutMetricAlarmRequest(*types.PutMetricAlarmInput) cloudwatch.PutMetricAlarmRequest

	PutMetricDataRequest(*types.PutMetricDataInput) cloudwatch.PutMetricDataRequest

	SetAlarmStateRequest(*types.SetAlarmStateInput) cloudwatch.SetAlarmStateRequest

	TagResourceRequest(*types.TagResourceInput) cloudwatch.TagResourceRequest

	UntagResourceRequest(*types.UntagResourceInput) cloudwatch.UntagResourceRequest

	WaitUntilAlarmExists(context.Context, *types.DescribeAlarmsInput, ...aws.WaiterOption) error
}

var _ ClientAPI = (*cloudwatch.Client)(nil)
