// Code generated by smithy-go-codegen DO NOT EDIT.

package fsx

import (
	"context"
	awsmiddleware "github.com/aws/aws-sdk-go-v2/aws/middleware"
	"github.com/aws/aws-sdk-go-v2/aws/signer/v4"
	"github.com/aws/aws-sdk-go-v2/service/fsx/types"
	"github.com/awslabs/smithy-go/middleware"
	smithyhttp "github.com/awslabs/smithy-go/transport/http"
)

// Returns the description of specific Amazon FSx backups, if a BackupIds value is
// provided for that backup. Otherwise, it returns all backups owned by your AWS
// account in the AWS Region of the endpoint that you're calling. When retrieving
// all backups, you can optionally specify the MaxResults parameter to limit the
// number of backups in a response. If more backups remain, Amazon FSx returns a
// NextToken value in the response. In this case, send a later request with the
// NextToken request parameter set to the value of NextToken from the last
// response. This action is used in an iterative process to retrieve a list of your
// backups. DescribeBackups is called first without a NextTokenvalue. Then the
// action continues to be called with the NextToken parameter set to the value of
// the last NextToken value until a response has no NextToken. When using this
// action, keep the following in mind:
//
//     * The implementation might return fewer
// than MaxResults file system descriptions while still including a NextToken
// value.
//
//     * The order of backups returned in the response of one
// DescribeBackups call and the order of backups returned across the responses of a
// multi-call iteration is unspecified.
func (c *Client) DescribeBackups(ctx context.Context, params *DescribeBackupsInput, optFns ...func(*Options)) (*DescribeBackupsOutput, error) {
	if params == nil {
		params = &DescribeBackupsInput{}
	}

	result, metadata, err := c.invokeOperation(ctx, "DescribeBackups", params, optFns, addOperationDescribeBackupsMiddlewares)
	if err != nil {
		return nil, err
	}

	out := result.(*DescribeBackupsOutput)
	out.ResultMetadata = metadata
	return out, nil
}

// The request object for DescribeBackups operation.
type DescribeBackupsInput struct {

	// IDs of the backups you want to retrieve (String). This overrides any filters. If
	// any IDs are not found, BackupNotFound will be thrown.
	BackupIds []*string

	// Filters structure. Supported names are file-system-id and backup-type.
	Filters []*types.Filter

	// Maximum number of backups to return in the response (integer). This parameter
	// value must be greater than 0. The number of items that Amazon FSx returns is the
	// minimum of the MaxResults parameter specified in the request and the service's
	// internal maximum number of items per page.
	MaxResults *int32

	// Opaque pagination token returned from a previous DescribeBackups operation
	// (String). If a token present, the action continues the list from where the
	// returning call left off.
	NextToken *string
}

// Response object for DescribeBackups operation.
type DescribeBackupsOutput struct {

	// Any array of backups.
	Backups []*types.Backup

	// This is present if there are more backups than returned in the response
	// (String). You can use the NextToken value in the later request to fetch the
	// backups.
	NextToken *string

	// Metadata pertaining to the operation's result.
	ResultMetadata middleware.Metadata
}

func addOperationDescribeBackupsMiddlewares(stack *middleware.Stack, options Options) (err error) {
	err = stack.Serialize.Add(&awsAwsjson11_serializeOpDescribeBackups{}, middleware.After)
	if err != nil {
		return err
	}
	err = stack.Deserialize.Add(&awsAwsjson11_deserializeOpDescribeBackups{}, middleware.After)
	if err != nil {
		return err
	}
	awsmiddleware.AddRequestInvocationIDMiddleware(stack)
	smithyhttp.AddContentLengthMiddleware(stack)
	addResolveEndpointMiddleware(stack, options)
	v4.AddComputePayloadSHA256Middleware(stack)
	addRetryMiddlewares(stack, options)
	addHTTPSignerV4Middleware(stack, options)
	awsmiddleware.AddAttemptClockSkewMiddleware(stack)
	addClientUserAgent(stack)
	smithyhttp.AddErrorCloseResponseBodyMiddleware(stack)
	smithyhttp.AddCloseResponseBodyMiddleware(stack)
	stack.Initialize.Add(newServiceMetadataMiddleware_opDescribeBackups(options.Region), middleware.Before)
	addRequestIDRetrieverMiddleware(stack)
	addResponseErrorMiddleware(stack)
	return nil
}

func newServiceMetadataMiddleware_opDescribeBackups(region string) awsmiddleware.RegisterServiceMetadata {
	return awsmiddleware.RegisterServiceMetadata{
		Region:        region,
		ServiceID:     ServiceID,
		SigningName:   "fsx",
		OperationName: "DescribeBackups",
	}
}
