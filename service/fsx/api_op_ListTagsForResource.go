// Code generated by smithy-go-codegen DO NOT EDIT.

package fsx

import (
	"context"
	awsmiddleware "github.com/aws/aws-sdk-go-v2/aws/middleware"
	"github.com/aws/aws-sdk-go-v2/aws/retry"
	"github.com/aws/aws-sdk-go-v2/aws/signer/v4"
	"github.com/aws/aws-sdk-go-v2/service/fsx/types"
	smithy "github.com/awslabs/smithy-go"
	"github.com/awslabs/smithy-go/middleware"
	smithyhttp "github.com/awslabs/smithy-go/transport/http"
)

// Lists tags for an Amazon FSx file systems and backups in the case of Amazon FSx
// for Windows File Server.  <p>When retrieving all tags, you can optionally
// specify the <code>MaxResults</code> parameter to limit the number of tags in a
// response. If more tags remain, Amazon FSx returns a <code>NextToken</code> value
// in the response. In this case, send a later request with the
// <code>NextToken</code> request parameter set to the value of
// <code>NextToken</code> from the last response.</p> <p>This action is used in an
// iterative process to retrieve a list of your tags.
// <code>ListTagsForResource</code> is called first without a
// <code>NextToken</code>value. Then the action continues to be called with the
// <code>NextToken</code> parameter set to the value of the last
// <code>NextToken</code> value until a response has no <code>NextToken</code>.</p>
// <p>When using this action, keep the following in mind:</p> <ul> <li> <p>The
// implementation might return fewer than <code>MaxResults</code> file system
// descriptions while still including a <code>NextToken</code> value.</p> </li>
// <li> <p>The order of tags returned in the response of one
// <code>ListTagsForResource</code> call and the order of tags returned across the
// responses of a multi-call iteration is unspecified.</p> </li> </ul>
func (c *Client) ListTagsForResource(ctx context.Context, params *ListTagsForResourceInput, optFns ...func(*Options)) (*ListTagsForResourceOutput, error) {
	stack := middleware.NewStack("ListTagsForResource", smithyhttp.NewStackRequest)
	options := c.options.Copy()
	for _, fn := range optFns {
		fn(&options)
	}
	addawsAwsjson11_serdeOpListTagsForResourceMiddlewares(stack)
	awsmiddleware.AddRequestInvocationIDMiddleware(stack)
	smithyhttp.AddContentLengthMiddleware(stack)
	AddResolveEndpointMiddleware(stack, options)
	v4.AddComputePayloadSHA256Middleware(stack)
	retry.AddRetryMiddlewares(stack, options)
	addHTTPSignerV4Middleware(stack, options)
	awsmiddleware.AddAttemptClockSkewMiddleware(stack)
	addClientUserAgent(stack)
	smithyhttp.AddErrorCloseResponseBodyMiddleware(stack)
	smithyhttp.AddCloseResponseBodyMiddleware(stack)
	addOpListTagsForResourceValidationMiddleware(stack)
	stack.Initialize.Add(newServiceMetadataMiddleware_opListTagsForResource(options.Region), middleware.Before)

	for _, fn := range options.APIOptions {
		if err := fn(stack); err != nil {
			return nil, err
		}
	}
	handler := middleware.DecorateHandler(smithyhttp.NewClientHandler(options.HTTPClient), stack)
	result, metadata, err := handler.Handle(ctx, params)
	if err != nil {
		return nil, &smithy.OperationError{
			ServiceID:     ServiceID,
			OperationName: "ListTagsForResource",
			Err:           err,
		}
	}
	out := result.(*ListTagsForResourceOutput)
	out.ResultMetadata = metadata
	return out, nil
}

// The request object for ListTagsForResource operation.
type ListTagsForResourceInput struct {
	// Opaque pagination token returned from a previous ListTagsForResource operation
	// (String). If a token present, the action continues the list from where the
	// returning call left off.
	NextToken *string
	// The ARN of the Amazon FSx resource that will have its tags listed.
	ResourceARN *string
	// Maximum number of tags to return in the response (integer). This parameter value
	// must be greater than 0. The number of items that Amazon FSx returns is the
	// minimum of the MaxResults parameter specified in the request and the service's
	// internal maximum number of items per page.
	MaxResults *int32
}

// The response object for ListTagsForResource operation.
type ListTagsForResourceOutput struct {
	// This is present if there are more tags than returned in the response (String).
	// You can use the NextToken value in the later request to fetch the tags.
	NextToken *string
	// A list of tags on the resource.
	Tags []*types.Tag

	// Metadata pertaining to the operation's result.
	ResultMetadata middleware.Metadata
}

func addawsAwsjson11_serdeOpListTagsForResourceMiddlewares(stack *middleware.Stack) {
	stack.Serialize.Add(&awsAwsjson11_serializeOpListTagsForResource{}, middleware.After)
	stack.Deserialize.Add(&awsAwsjson11_deserializeOpListTagsForResource{}, middleware.After)
}

func newServiceMetadataMiddleware_opListTagsForResource(region string) awsmiddleware.RegisterServiceMetadata {
	return awsmiddleware.RegisterServiceMetadata{
		Region:        region,
		ServiceID:     ServiceID,
		SigningName:   "fsx",
		OperationName: "ListTagsForResource",
	}
}
