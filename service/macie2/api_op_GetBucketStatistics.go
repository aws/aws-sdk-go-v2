// Code generated by smithy-go-codegen DO NOT EDIT.

package macie2

import (
	"context"
	awsmiddleware "github.com/aws/aws-sdk-go-v2/aws/middleware"
	"github.com/aws/aws-sdk-go-v2/aws/retry"
	"github.com/aws/aws-sdk-go-v2/aws/signer/v4"
	"github.com/aws/aws-sdk-go-v2/service/macie2/types"
	smithy "github.com/awslabs/smithy-go"
	"github.com/awslabs/smithy-go/middleware"
	smithyhttp "github.com/awslabs/smithy-go/transport/http"
	"time"
)

// Retrieves (queries) aggregated statistical data for all the S3 buckets that
// Amazon Macie monitors and analyzes.
func (c *Client) GetBucketStatistics(ctx context.Context, params *GetBucketStatisticsInput, optFns ...func(*Options)) (*GetBucketStatisticsOutput, error) {
	stack := middleware.NewStack("GetBucketStatistics", smithyhttp.NewStackRequest)
	options := c.options.Copy()
	for _, fn := range optFns {
		fn(&options)
	}
	addawsRestjson1_serdeOpGetBucketStatisticsMiddlewares(stack)
	awsmiddleware.AddRequestInvocationIDMiddleware(stack)
	smithyhttp.AddContentLengthMiddleware(stack)
	AddResolveEndpointMiddleware(stack, options)
	v4.AddComputePayloadSHA256Middleware(stack)
	retry.AddRetryMiddlewares(stack, options)
	addHTTPSignerV4Middleware(stack, options)
	awsmiddleware.AddAttemptClockSkewMiddleware(stack)
	addClientUserAgent(stack)
	smithyhttp.AddErrorCloseResponseBodyMiddleware(stack)
	smithyhttp.AddCloseResponseBodyMiddleware(stack)
	stack.Initialize.Add(newServiceMetadataMiddleware_opGetBucketStatistics(options.Region), middleware.Before)

	for _, fn := range options.APIOptions {
		if err := fn(stack); err != nil {
			return nil, err
		}
	}
	handler := middleware.DecorateHandler(smithyhttp.NewClientHandler(options.HTTPClient), stack)
	result, metadata, err := handler.Handle(ctx, params)
	if err != nil {
		return nil, &smithy.OperationError{
			ServiceID:     ServiceID,
			OperationName: "GetBucketStatistics",
			Err:           err,
		}
	}
	out := result.(*GetBucketStatisticsOutput)
	out.ResultMetadata = metadata
	return out, nil
}

type GetBucketStatisticsInput struct {
	// The unique identifier for the AWS account.
	AccountId *string
}

type GetBucketStatisticsOutput struct {
	// The total number of buckets, grouped by server-side encryption type. This object
	// also reports the total number of buckets that aren't encrypted.
	BucketCountByEncryptionType *types.BucketCountByEncryptionType
	// The total storage size, in bytes, of all the buckets.
	SizeInBytes *int64
	// The date and time, in UTC and extended ISO 8601 format, when Amazon Macie last
	// analyzed the buckets.
	LastUpdated *time.Time
	// The total number of objects that Amazon Macie can analyze in all the buckets.
	// These objects use a file format, file extension, or content type that Amazon
	// Macie supports.
	ClassifiableObjectCount *int64
	// The total number of buckets that are publicly accessible based on a combination
	// of permissions settings for each bucket.
	BucketCountByEffectivePermission *types.BucketCountByEffectivePermission
	// The total number of objects in all the buckets.
	ObjectCount *int64
	// The total compressed storage size, in bytes, of all the buckets.
	SizeInBytesCompressed *int64
	// The total number of buckets that are shared with another AWS account.
	BucketCountBySharedAccessType *types.BucketCountBySharedAccessType
	// The total number of buckets.
	BucketCount *int64

	// Metadata pertaining to the operation's result.
	ResultMetadata middleware.Metadata
}

func addawsRestjson1_serdeOpGetBucketStatisticsMiddlewares(stack *middleware.Stack) {
	stack.Serialize.Add(&awsRestjson1_serializeOpGetBucketStatistics{}, middleware.After)
	stack.Deserialize.Add(&awsRestjson1_deserializeOpGetBucketStatistics{}, middleware.After)
}

func newServiceMetadataMiddleware_opGetBucketStatistics(region string) awsmiddleware.RegisterServiceMetadata {
	return awsmiddleware.RegisterServiceMetadata{
		Region:        region,
		ServiceID:     ServiceID,
		SigningName:   "macie2",
		OperationName: "GetBucketStatistics",
	}
}
