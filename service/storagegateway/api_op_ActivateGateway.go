// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package storagegateway

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/storagegateway/types"
)

const opActivateGateway = "ActivateGateway"

// ActivateGatewayRequest returns a request value for making API operation for
// AWS Storage Gateway.
//
// Activates the gateway you previously deployed on your host. In the activation
// process, you specify information such as the AWS Region that you want to
// use for storing snapshots or tapes, the time zone for scheduled snapshots
// the gateway snapshot schedule window, an activation key, and a name for your
// gateway. The activation process also associates your gateway with your account;
// for more information, see UpdateGatewayInformation.
//
// You must turn on the gateway VM before you can activate your gateway.
//
//    // Example sending a request using ActivateGatewayRequest.
//    req := client.ActivateGatewayRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/storagegateway-2013-06-30/ActivateGateway
func (c *Client) ActivateGatewayRequest(input *types.ActivateGatewayInput) ActivateGatewayRequest {
	op := &aws.Operation{
		Name:       opActivateGateway,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &types.ActivateGatewayInput{}
	}

	req := c.newRequest(op, input, &types.ActivateGatewayOutput{})
	return ActivateGatewayRequest{Request: req, Input: input, Copy: c.ActivateGatewayRequest}
}

// ActivateGatewayRequest is the request type for the
// ActivateGateway API operation.
type ActivateGatewayRequest struct {
	*aws.Request
	Input *types.ActivateGatewayInput
	Copy  func(*types.ActivateGatewayInput) ActivateGatewayRequest
}

// Send marshals and sends the ActivateGateway API request.
func (r ActivateGatewayRequest) Send(ctx context.Context) (*ActivateGatewayResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &ActivateGatewayResponse{
		ActivateGatewayOutput: r.Request.Data.(*types.ActivateGatewayOutput),
		response:              &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// ActivateGatewayResponse is the response type for the
// ActivateGateway API operation.
type ActivateGatewayResponse struct {
	*types.ActivateGatewayOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// ActivateGateway request.
func (r *ActivateGatewayResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
