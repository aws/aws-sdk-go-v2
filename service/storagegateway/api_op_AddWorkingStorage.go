// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package storagegateway

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/storagegateway/types"
)

const opAddWorkingStorage = "AddWorkingStorage"

// AddWorkingStorageRequest returns a request value for making API operation for
// AWS Storage Gateway.
//
// Configures one or more gateway local disks as working storage for a gateway.
// This operation is only supported in the stored volume gateway type. This
// operation is deprecated in cached volume API version 20120630. Use AddUploadBuffer
// instead.
//
// Working storage is also referred to as upload buffer. You can also use the
// AddUploadBuffer operation to add upload buffer to a stored volume gateway.
//
// In the request, you specify the gateway Amazon Resource Name (ARN) to which
// you want to add working storage, and one or more disk IDs that you want to
// configure as working storage.
//
//    // Example sending a request using AddWorkingStorageRequest.
//    req := client.AddWorkingStorageRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/storagegateway-2013-06-30/AddWorkingStorage
func (c *Client) AddWorkingStorageRequest(input *types.AddWorkingStorageInput) AddWorkingStorageRequest {
	op := &aws.Operation{
		Name:       opAddWorkingStorage,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &types.AddWorkingStorageInput{}
	}

	req := c.newRequest(op, input, &types.AddWorkingStorageOutput{})
	return AddWorkingStorageRequest{Request: req, Input: input, Copy: c.AddWorkingStorageRequest}
}

// AddWorkingStorageRequest is the request type for the
// AddWorkingStorage API operation.
type AddWorkingStorageRequest struct {
	*aws.Request
	Input *types.AddWorkingStorageInput
	Copy  func(*types.AddWorkingStorageInput) AddWorkingStorageRequest
}

// Send marshals and sends the AddWorkingStorage API request.
func (r AddWorkingStorageRequest) Send(ctx context.Context) (*AddWorkingStorageResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &AddWorkingStorageResponse{
		AddWorkingStorageOutput: r.Request.Data.(*types.AddWorkingStorageOutput),
		response:                &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// AddWorkingStorageResponse is the response type for the
// AddWorkingStorage API operation.
type AddWorkingStorageResponse struct {
	*types.AddWorkingStorageOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// AddWorkingStorage request.
func (r *AddWorkingStorageResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
