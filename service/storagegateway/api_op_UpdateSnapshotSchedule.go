// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package storagegateway

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/storagegateway/types"
)

const opUpdateSnapshotSchedule = "UpdateSnapshotSchedule"

// UpdateSnapshotScheduleRequest returns a request value for making API operation for
// AWS Storage Gateway.
//
// Updates a snapshot schedule configured for a gateway volume. This operation
// is only supported in the cached volume and stored volume gateway types.
//
// The default snapshot schedule for volume is once every 24 hours, starting
// at the creation time of the volume. You can use this API to change the snapshot
// schedule configured for the volume.
//
// In the request you must identify the gateway volume whose snapshot schedule
// you want to update, and the schedule information, including when you want
// the snapshot to begin on a day and the frequency (in hours) of snapshots.
//
//    // Example sending a request using UpdateSnapshotScheduleRequest.
//    req := client.UpdateSnapshotScheduleRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/storagegateway-2013-06-30/UpdateSnapshotSchedule
func (c *Client) UpdateSnapshotScheduleRequest(input *types.UpdateSnapshotScheduleInput) UpdateSnapshotScheduleRequest {
	op := &aws.Operation{
		Name:       opUpdateSnapshotSchedule,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &types.UpdateSnapshotScheduleInput{}
	}

	req := c.newRequest(op, input, &types.UpdateSnapshotScheduleOutput{})
	return UpdateSnapshotScheduleRequest{Request: req, Input: input, Copy: c.UpdateSnapshotScheduleRequest}
}

// UpdateSnapshotScheduleRequest is the request type for the
// UpdateSnapshotSchedule API operation.
type UpdateSnapshotScheduleRequest struct {
	*aws.Request
	Input *types.UpdateSnapshotScheduleInput
	Copy  func(*types.UpdateSnapshotScheduleInput) UpdateSnapshotScheduleRequest
}

// Send marshals and sends the UpdateSnapshotSchedule API request.
func (r UpdateSnapshotScheduleRequest) Send(ctx context.Context) (*UpdateSnapshotScheduleResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &UpdateSnapshotScheduleResponse{
		UpdateSnapshotScheduleOutput: r.Request.Data.(*types.UpdateSnapshotScheduleOutput),
		response:                     &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// UpdateSnapshotScheduleResponse is the response type for the
// UpdateSnapshotSchedule API operation.
type UpdateSnapshotScheduleResponse struct {
	*types.UpdateSnapshotScheduleOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// UpdateSnapshotSchedule request.
func (r *UpdateSnapshotScheduleResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
