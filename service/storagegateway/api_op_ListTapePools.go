// Code generated by smithy-go-codegen DO NOT EDIT.

package storagegateway

import (
	"context"
	awsmiddleware "github.com/aws/aws-sdk-go-v2/aws/middleware"
	"github.com/aws/aws-sdk-go-v2/aws/signer/v4"
	"github.com/aws/aws-sdk-go-v2/service/storagegateway/types"
	"github.com/awslabs/smithy-go/middleware"
	smithyhttp "github.com/awslabs/smithy-go/transport/http"
)

// Lists custom tape pools. You specify custom tape pools to list by specifying one
// or more custom tape pool Amazon Resource Names (ARNs). If you don't specify a
// custom tape pool ARN, the operation lists all custom tape pools. This operation
// supports pagination. You can optionally specify the Limit parameter in the body
// to limit the number of tape pools in the response. If the number of tape pools
// returned in the response is truncated, the response includes a Marker element
// that you can use in your subsequent request to retrieve the next set of tape
// pools.
func (c *Client) ListTapePools(ctx context.Context, params *ListTapePoolsInput, optFns ...func(*Options)) (*ListTapePoolsOutput, error) {
	if params == nil {
		params = &ListTapePoolsInput{}
	}

	result, metadata, err := c.invokeOperation(ctx, "ListTapePools", params, optFns, addOperationListTapePoolsMiddlewares)
	if err != nil {
		return nil, err
	}

	out := result.(*ListTapePoolsOutput)
	out.ResultMetadata = metadata
	return out, nil
}

type ListTapePoolsInput struct {

	// An optional number limit for the tape pools in the list returned by this call.
	Limit *int32

	// A string that indicates the position at which to begin the returned list of tape
	// pools.
	Marker *string

	// The Amazon Resource Name (ARN) of each of the custom tape pools you want to
	// list. If you don't specify a custom tape pool ARN, the response lists all custom
	// tape pools.
	PoolARNs []*string
}

type ListTapePoolsOutput struct {

	// A string that indicates the position at which to begin the returned list of tape
	// pools. Use the marker in your next request to continue pagination of tape pools.
	// If there are no more tape pools to list, this element does not appear in the
	// response body.
	Marker *string

	// An array of PoolInfo objects, where each object describes a single custom tape
	// pool. If there are no custom tape pools, the PoolInfos is an empty array.
	PoolInfos []*types.PoolInfo

	// Metadata pertaining to the operation's result.
	ResultMetadata middleware.Metadata
}

func addOperationListTapePoolsMiddlewares(stack *middleware.Stack, options Options) (err error) {
	err = stack.Serialize.Add(&awsAwsjson11_serializeOpListTapePools{}, middleware.After)
	if err != nil {
		return err
	}
	err = stack.Deserialize.Add(&awsAwsjson11_deserializeOpListTapePools{}, middleware.After)
	if err != nil {
		return err
	}
	awsmiddleware.AddRequestInvocationIDMiddleware(stack)
	smithyhttp.AddContentLengthMiddleware(stack)
	addResolveEndpointMiddleware(stack, options)
	v4.AddComputePayloadSHA256Middleware(stack)
	addRetryMiddlewares(stack, options)
	addHTTPSignerV4Middleware(stack, options)
	awsmiddleware.AddAttemptClockSkewMiddleware(stack)
	addClientUserAgent(stack)
	smithyhttp.AddErrorCloseResponseBodyMiddleware(stack)
	smithyhttp.AddCloseResponseBodyMiddleware(stack)
	stack.Initialize.Add(newServiceMetadataMiddleware_opListTapePools(options.Region), middleware.Before)
	addRequestIDRetrieverMiddleware(stack)
	addResponseErrorMiddleware(stack)
	return nil
}

func newServiceMetadataMiddleware_opListTapePools(region string) awsmiddleware.RegisterServiceMetadata {
	return awsmiddleware.RegisterServiceMetadata{
		Region:        region,
		ServiceID:     ServiceID,
		SigningName:   "storagegateway",
		OperationName: "ListTapePools",
	}
}
