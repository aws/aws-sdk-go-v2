// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package storagegateway

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/storagegateway/types"
)

const opUpdateNFSFileShare = "UpdateNFSFileShare"

// UpdateNFSFileShareRequest returns a request value for making API operation for
// AWS Storage Gateway.
//
// Updates a Network File System (NFS) file share. This operation is only supported
// in the file gateway type.
//
// To leave a file share field unchanged, set the corresponding input field
// to null.
//
// Updates the following file share setting:
//
//    * Default storage class for your S3 bucket
//
//    * Metadata defaults for your S3 bucket
//
//    * Allowed NFS clients for your file share
//
//    * Squash settings
//
//    * Write status of your file share
//
// To leave a file share field unchanged, set the corresponding input field
// to null. This operation is only supported in file gateways.
//
//    // Example sending a request using UpdateNFSFileShareRequest.
//    req := client.UpdateNFSFileShareRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/storagegateway-2013-06-30/UpdateNFSFileShare
func (c *Client) UpdateNFSFileShareRequest(input *types.UpdateNFSFileShareInput) UpdateNFSFileShareRequest {
	op := &aws.Operation{
		Name:       opUpdateNFSFileShare,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &types.UpdateNFSFileShareInput{}
	}

	req := c.newRequest(op, input, &types.UpdateNFSFileShareOutput{})
	return UpdateNFSFileShareRequest{Request: req, Input: input, Copy: c.UpdateNFSFileShareRequest}
}

// UpdateNFSFileShareRequest is the request type for the
// UpdateNFSFileShare API operation.
type UpdateNFSFileShareRequest struct {
	*aws.Request
	Input *types.UpdateNFSFileShareInput
	Copy  func(*types.UpdateNFSFileShareInput) UpdateNFSFileShareRequest
}

// Send marshals and sends the UpdateNFSFileShare API request.
func (r UpdateNFSFileShareRequest) Send(ctx context.Context) (*UpdateNFSFileShareResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &UpdateNFSFileShareResponse{
		UpdateNFSFileShareOutput: r.Request.Data.(*types.UpdateNFSFileShareOutput),
		response:                 &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// UpdateNFSFileShareResponse is the response type for the
// UpdateNFSFileShare API operation.
type UpdateNFSFileShareResponse struct {
	*types.UpdateNFSFileShareOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// UpdateNFSFileShare request.
func (r *UpdateNFSFileShareResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
