// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package storagegateway

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/storagegateway/types"
)

const opCreateSnapshotFromVolumeRecoveryPoint = "CreateSnapshotFromVolumeRecoveryPoint"

// CreateSnapshotFromVolumeRecoveryPointRequest returns a request value for making API operation for
// AWS Storage Gateway.
//
// Initiates a snapshot of a gateway from a volume recovery point. This operation
// is only supported in the cached volume gateway type.
//
// A volume recovery point is a point in time at which all data of the volume
// is consistent and from which you can create a snapshot. To get a list of
// volume recovery point for cached volume gateway, use ListVolumeRecoveryPoints.
//
// In the CreateSnapshotFromVolumeRecoveryPoint request, you identify the volume
// by providing its Amazon Resource Name (ARN). You must also provide a description
// for the snapshot. When the gateway takes a snapshot of the specified volume,
// the snapshot and its description appear in the AWS Storage Gateway console.
// In response, the gateway returns you a snapshot ID. You can use this snapshot
// ID to check the snapshot progress or later use it when you want to create
// a volume from a snapshot.
//
// To list or delete a snapshot, you must use the Amazon EC2 API. For more information,
// in Amazon Elastic Compute Cloud API Reference.
//
//    // Example sending a request using CreateSnapshotFromVolumeRecoveryPointRequest.
//    req := client.CreateSnapshotFromVolumeRecoveryPointRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/storagegateway-2013-06-30/CreateSnapshotFromVolumeRecoveryPoint
func (c *Client) CreateSnapshotFromVolumeRecoveryPointRequest(input *types.CreateSnapshotFromVolumeRecoveryPointInput) CreateSnapshotFromVolumeRecoveryPointRequest {
	op := &aws.Operation{
		Name:       opCreateSnapshotFromVolumeRecoveryPoint,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &types.CreateSnapshotFromVolumeRecoveryPointInput{}
	}

	req := c.newRequest(op, input, &types.CreateSnapshotFromVolumeRecoveryPointOutput{})
	return CreateSnapshotFromVolumeRecoveryPointRequest{Request: req, Input: input, Copy: c.CreateSnapshotFromVolumeRecoveryPointRequest}
}

// CreateSnapshotFromVolumeRecoveryPointRequest is the request type for the
// CreateSnapshotFromVolumeRecoveryPoint API operation.
type CreateSnapshotFromVolumeRecoveryPointRequest struct {
	*aws.Request
	Input *types.CreateSnapshotFromVolumeRecoveryPointInput
	Copy  func(*types.CreateSnapshotFromVolumeRecoveryPointInput) CreateSnapshotFromVolumeRecoveryPointRequest
}

// Send marshals and sends the CreateSnapshotFromVolumeRecoveryPoint API request.
func (r CreateSnapshotFromVolumeRecoveryPointRequest) Send(ctx context.Context) (*CreateSnapshotFromVolumeRecoveryPointResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &CreateSnapshotFromVolumeRecoveryPointResponse{
		CreateSnapshotFromVolumeRecoveryPointOutput: r.Request.Data.(*types.CreateSnapshotFromVolumeRecoveryPointOutput),
		response: &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// CreateSnapshotFromVolumeRecoveryPointResponse is the response type for the
// CreateSnapshotFromVolumeRecoveryPoint API operation.
type CreateSnapshotFromVolumeRecoveryPointResponse struct {
	*types.CreateSnapshotFromVolumeRecoveryPointOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// CreateSnapshotFromVolumeRecoveryPoint request.
func (r *CreateSnapshotFromVolumeRecoveryPointResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
