// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package storagegateway

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/storagegateway/types"
)

const opCreateTapeWithBarcode = "CreateTapeWithBarcode"

// CreateTapeWithBarcodeRequest returns a request value for making API operation for
// AWS Storage Gateway.
//
// Creates a virtual tape by using your own barcode. You write data to the virtual
// tape and then archive the tape. A barcode is unique and can not be reused
// if it has already been used on a tape . This applies to barcodes used on
// deleted tapes. This operation is only supported in the tape gateway type.
//
// Cache storage must be allocated to the gateway before you can create a virtual
// tape. Use the AddCache operation to add cache storage to a gateway.
//
//    // Example sending a request using CreateTapeWithBarcodeRequest.
//    req := client.CreateTapeWithBarcodeRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/storagegateway-2013-06-30/CreateTapeWithBarcode
func (c *Client) CreateTapeWithBarcodeRequest(input *types.CreateTapeWithBarcodeInput) CreateTapeWithBarcodeRequest {
	op := &aws.Operation{
		Name:       opCreateTapeWithBarcode,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &types.CreateTapeWithBarcodeInput{}
	}

	req := c.newRequest(op, input, &types.CreateTapeWithBarcodeOutput{})
	return CreateTapeWithBarcodeRequest{Request: req, Input: input, Copy: c.CreateTapeWithBarcodeRequest}
}

// CreateTapeWithBarcodeRequest is the request type for the
// CreateTapeWithBarcode API operation.
type CreateTapeWithBarcodeRequest struct {
	*aws.Request
	Input *types.CreateTapeWithBarcodeInput
	Copy  func(*types.CreateTapeWithBarcodeInput) CreateTapeWithBarcodeRequest
}

// Send marshals and sends the CreateTapeWithBarcode API request.
func (r CreateTapeWithBarcodeRequest) Send(ctx context.Context) (*CreateTapeWithBarcodeResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &CreateTapeWithBarcodeResponse{
		CreateTapeWithBarcodeOutput: r.Request.Data.(*types.CreateTapeWithBarcodeOutput),
		response:                    &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// CreateTapeWithBarcodeResponse is the response type for the
// CreateTapeWithBarcode API operation.
type CreateTapeWithBarcodeResponse struct {
	*types.CreateTapeWithBarcodeOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// CreateTapeWithBarcode request.
func (r *CreateTapeWithBarcodeResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
