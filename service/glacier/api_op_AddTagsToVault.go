// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package glacier

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/private/protocol"
	"github.com/aws/aws-sdk-go-v2/private/protocol/restjson"
	"github.com/aws/aws-sdk-go-v2/service/glacier/types"
)

const opAddTagsToVault = "AddTagsToVault"

// AddTagsToVaultRequest returns a request value for making API operation for
// Amazon Glacier.
//
// This operation adds the specified tags to a vault. Each tag is composed of
// a key and a value. Each vault can have up to 10 tags. If your request would
// cause the tag limit for the vault to be exceeded, the operation throws the
// LimitExceededException error. If a tag already exists on the vault under
// a specified key, the existing key value will be overwritten. For more information
// about tags, see Tagging Amazon S3 Glacier Resources (https://docs.aws.amazon.com/amazonglacier/latest/dev/tagging.html).
//
//    // Example sending a request using AddTagsToVaultRequest.
//    req := client.AddTagsToVaultRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
func (c *Client) AddTagsToVaultRequest(input *types.AddTagsToVaultInput) AddTagsToVaultRequest {
	op := &aws.Operation{
		Name:       opAddTagsToVault,
		HTTPMethod: "POST",
		HTTPPath:   "/{accountId}/vaults/{vaultName}/tags?operation=add",
	}

	if input == nil {
		input = &types.AddTagsToVaultInput{}
	}

	req := c.newRequest(op, input, &types.AddTagsToVaultOutput{})
	req.Handlers.Unmarshal.Remove(restjson.UnmarshalHandler)
	req.Handlers.Unmarshal.PushBackNamed(protocol.UnmarshalDiscardBodyHandler)
	return AddTagsToVaultRequest{Request: req, Input: input, Copy: c.AddTagsToVaultRequest}
}

// AddTagsToVaultRequest is the request type for the
// AddTagsToVault API operation.
type AddTagsToVaultRequest struct {
	*aws.Request
	Input *types.AddTagsToVaultInput
	Copy  func(*types.AddTagsToVaultInput) AddTagsToVaultRequest
}

// Send marshals and sends the AddTagsToVault API request.
func (r AddTagsToVaultRequest) Send(ctx context.Context) (*AddTagsToVaultResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &AddTagsToVaultResponse{
		AddTagsToVaultOutput: r.Request.Data.(*types.AddTagsToVaultOutput),
		response:             &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// AddTagsToVaultResponse is the response type for the
// AddTagsToVault API operation.
type AddTagsToVaultResponse struct {
	*types.AddTagsToVaultOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// AddTagsToVault request.
func (r *AddTagsToVaultResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
