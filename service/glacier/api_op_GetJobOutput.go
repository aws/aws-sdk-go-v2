// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package glacier

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/glacier/types"
)

const opGetJobOutput = "GetJobOutput"

// GetJobOutputRequest returns a request value for making API operation for
// Amazon Glacier.
//
// This operation downloads the output of the job you initiated using InitiateJob.
// Depending on the job type you specified when you initiated the job, the output
// will be either the content of an archive or a vault inventory.
//
// You can download all the job output or download a portion of the output by
// specifying a byte range. In the case of an archive retrieval job, depending
// on the byte range you specify, Amazon S3 Glacier (Glacier) returns the checksum
// for the portion of the data. You can compute the checksum on the client and
// verify that the values match to ensure the portion you downloaded is the
// correct data.
//
// A job ID will not expire for at least 24 hours after Glacier completes the
// job. That a byte range. For both archive and inventory retrieval jobs, you
// should verify the downloaded size against the size returned in the headers
// from the Get Job Output response.
//
// For archive retrieval jobs, you should also verify that the size is what
// you expected. If you download a portion of the output, the expected size
// is based on the range of bytes you specified. For example, if you specify
// a range of bytes=0-1048575, you should verify your download size is 1,048,576
// bytes. If you download an entire archive, the expected size is the size of
// the archive when you uploaded it to Amazon S3 Glacier The expected size is
// also returned in the headers from the Get Job Output response.
//
// In the case of an archive retrieval job, depending on the byte range you
// specify, Glacier returns the checksum for the portion of the data. To ensure
// the portion you downloaded is the correct data, compute the checksum on the
// client, verify that the values match, and verify that the size is what you
// expected.
//
// A job ID does not expire for at least 24 hours after Glacier completes the
// job. That is, you can download the job output within the 24 hours period
// after Amazon Glacier completes the job.
//
// An AWS account has full permission to perform all operations (actions). However,
// AWS Identity and Access Management (IAM) users don't have any permissions
// by default. You must grant them explicit permission to perform specific actions.
// For more information, see Access Control Using AWS Identity and Access Management
// (IAM) (https://docs.aws.amazon.com/amazonglacier/latest/dev/using-iam-with-amazon-glacier.html).
//
// For conceptual information and the underlying REST API, see Downloading a
// Vault Inventory (https://docs.aws.amazon.com/amazonglacier/latest/dev/vault-inventory.html),
// Downloading an Archive (https://docs.aws.amazon.com/amazonglacier/latest/dev/downloading-an-archive.html),
// and Get Job Output (https://docs.aws.amazon.com/amazonglacier/latest/dev/api-job-output-get.html)
//
//    // Example sending a request using GetJobOutputRequest.
//    req := client.GetJobOutputRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
func (c *Client) GetJobOutputRequest(input *types.GetJobOutputInput) GetJobOutputRequest {
	op := &aws.Operation{
		Name:       opGetJobOutput,
		HTTPMethod: "GET",
		HTTPPath:   "/{accountId}/vaults/{vaultName}/jobs/{jobId}/output",
	}

	if input == nil {
		input = &types.GetJobOutputInput{}
	}

	req := c.newRequest(op, input, &types.GetJobOutputOutput{})
	return GetJobOutputRequest{Request: req, Input: input, Copy: c.GetJobOutputRequest}
}

// GetJobOutputRequest is the request type for the
// GetJobOutput API operation.
type GetJobOutputRequest struct {
	*aws.Request
	Input *types.GetJobOutputInput
	Copy  func(*types.GetJobOutputInput) GetJobOutputRequest
}

// Send marshals and sends the GetJobOutput API request.
func (r GetJobOutputRequest) Send(ctx context.Context) (*GetJobOutputResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &GetJobOutputResponse{
		GetJobOutputOutput: r.Request.Data.(*types.GetJobOutputOutput),
		response:           &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// GetJobOutputResponse is the response type for the
// GetJobOutput API operation.
type GetJobOutputResponse struct {
	*types.GetJobOutputOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// GetJobOutput request.
func (r *GetJobOutputResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
