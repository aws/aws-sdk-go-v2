// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package glacier

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/glacier/types"
)

const opDescribeVault = "DescribeVault"

// DescribeVaultRequest returns a request value for making API operation for
// Amazon Glacier.
//
// This operation returns information about a vault, including the vault's Amazon
// Resource Name (ARN), the date the vault was created, the number of archives
// it contains, and the total size of all the archives in the vault. The number
// of archives and their total size are as of the last inventory generation.
// This means that if you add or remove an archive from a vault, and then immediately
// use Describe Vault, the change in contents will not be immediately reflected.
// If you want to retrieve the latest inventory of the vault, use InitiateJob.
// Amazon S3 Glacier generates vault inventories approximately daily. For more
// information, see Downloading a Vault Inventory in Amazon S3 Glacier (https://docs.aws.amazon.com/amazonglacier/latest/dev/vault-inventory.html).
//
// An AWS account has full permission to perform all operations (actions). However,
// AWS Identity and Access Management (IAM) users don't have any permissions
// by default. You must grant them explicit permission to perform specific actions.
// For more information, see Access Control Using AWS Identity and Access Management
// (IAM) (https://docs.aws.amazon.com/amazonglacier/latest/dev/using-iam-with-amazon-glacier.html).
//
// For conceptual information and underlying REST API, see Retrieving Vault
// Metadata in Amazon S3 Glacier (https://docs.aws.amazon.com/amazonglacier/latest/dev/retrieving-vault-info.html)
// and Describe Vault (https://docs.aws.amazon.com/amazonglacier/latest/dev/api-vault-get.html)
// in the Amazon Glacier Developer Guide.
//
//    // Example sending a request using DescribeVaultRequest.
//    req := client.DescribeVaultRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
func (c *Client) DescribeVaultRequest(input *types.DescribeVaultInput) DescribeVaultRequest {
	op := &aws.Operation{
		Name:       opDescribeVault,
		HTTPMethod: "GET",
		HTTPPath:   "/{accountId}/vaults/{vaultName}",
	}

	if input == nil {
		input = &types.DescribeVaultInput{}
	}

	req := c.newRequest(op, input, &types.DescribeVaultOutput{})
	return DescribeVaultRequest{Request: req, Input: input, Copy: c.DescribeVaultRequest}
}

// DescribeVaultRequest is the request type for the
// DescribeVault API operation.
type DescribeVaultRequest struct {
	*aws.Request
	Input *types.DescribeVaultInput
	Copy  func(*types.DescribeVaultInput) DescribeVaultRequest
}

// Send marshals and sends the DescribeVault API request.
func (r DescribeVaultRequest) Send(ctx context.Context) (*DescribeVaultResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &DescribeVaultResponse{
		DescribeVaultOutput: r.Request.Data.(*types.DescribeVaultOutput),
		response:            &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// DescribeVaultResponse is the response type for the
// DescribeVault API operation.
type DescribeVaultResponse struct {
	*types.DescribeVaultOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// DescribeVault request.
func (r *DescribeVaultResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
