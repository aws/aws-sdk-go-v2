// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package glacier

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/private/protocol"
	"github.com/aws/aws-sdk-go-v2/private/protocol/restjson"
	"github.com/aws/aws-sdk-go-v2/service/glacier/types"
)

const opDeleteVaultAccessPolicy = "DeleteVaultAccessPolicy"

// DeleteVaultAccessPolicyRequest returns a request value for making API operation for
// Amazon Glacier.
//
// This operation deletes the access policy associated with the specified vault.
// The operation is eventually consistent; that is, it might take some time
// for Amazon S3 Glacier to completely remove the access policy, and you might
// still see the effect of the policy for a short time after you send the delete
// request.
//
// This operation is idempotent. You can invoke delete multiple times, even
// if there is no policy associated with the vault. For more information about
// vault access policies, see Amazon Glacier Access Control with Vault Access
// Policies (https://docs.aws.amazon.com/amazonglacier/latest/dev/vault-access-policy.html).
//
//    // Example sending a request using DeleteVaultAccessPolicyRequest.
//    req := client.DeleteVaultAccessPolicyRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
func (c *Client) DeleteVaultAccessPolicyRequest(input *types.DeleteVaultAccessPolicyInput) DeleteVaultAccessPolicyRequest {
	op := &aws.Operation{
		Name:       opDeleteVaultAccessPolicy,
		HTTPMethod: "DELETE",
		HTTPPath:   "/{accountId}/vaults/{vaultName}/access-policy",
	}

	if input == nil {
		input = &types.DeleteVaultAccessPolicyInput{}
	}

	req := c.newRequest(op, input, &types.DeleteVaultAccessPolicyOutput{})
	req.Handlers.Unmarshal.Remove(restjson.UnmarshalHandler)
	req.Handlers.Unmarshal.PushBackNamed(protocol.UnmarshalDiscardBodyHandler)
	return DeleteVaultAccessPolicyRequest{Request: req, Input: input, Copy: c.DeleteVaultAccessPolicyRequest}
}

// DeleteVaultAccessPolicyRequest is the request type for the
// DeleteVaultAccessPolicy API operation.
type DeleteVaultAccessPolicyRequest struct {
	*aws.Request
	Input *types.DeleteVaultAccessPolicyInput
	Copy  func(*types.DeleteVaultAccessPolicyInput) DeleteVaultAccessPolicyRequest
}

// Send marshals and sends the DeleteVaultAccessPolicy API request.
func (r DeleteVaultAccessPolicyRequest) Send(ctx context.Context) (*DeleteVaultAccessPolicyResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &DeleteVaultAccessPolicyResponse{
		DeleteVaultAccessPolicyOutput: r.Request.Data.(*types.DeleteVaultAccessPolicyOutput),
		response:                      &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// DeleteVaultAccessPolicyResponse is the response type for the
// DeleteVaultAccessPolicy API operation.
type DeleteVaultAccessPolicyResponse struct {
	*types.DeleteVaultAccessPolicyOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// DeleteVaultAccessPolicy request.
func (r *DeleteVaultAccessPolicyResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
