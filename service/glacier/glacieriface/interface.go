// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

// Package glacieriface provides an interface to enable mocking the Amazon Glacier service client
// for testing your code.
//
// It is important to note that this interface will have breaking changes
// when the service model is updated and adds new API operations, paginators,
// and waiters.
package glacieriface

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/glacier"
	"github.com/aws/aws-sdk-go-v2/service/glacier/types"
)

// ClientAPI provides an interface to enable mocking the
// glacier.Client methods. This make unit testing your code that
// calls out to the SDK's service client's calls easier.
//
// The best way to use this interface is so the SDK's service client's calls
// can be stubbed out for unit testing your code with the SDK without needing
// to inject custom request handlers into the SDK's request pipeline.
//
//    // myFunc uses an SDK service client to make a request to
//    // Amazon Glacier.
//    func myFunc(svc glacieriface.ClientAPI) bool {
//        // Make svc.AbortMultipartUpload request
//    }
//
//    func main() {
//        cfg, err := external.LoadDefaultAWSConfig()
//        if err != nil {
//            panic("failed to load config, " + err.Error())
//        }
//
//        svc := glacier.New(cfg)
//
//        myFunc(svc)
//    }
//
// In your _test.go file:
//
//    // Define a mock struct to be used in your unit tests of myFunc.
//    type mockClientClient struct {
//        glacieriface.ClientPI
//    }
//    func (m *mockClientClient) AbortMultipartUpload(input *types.AbortMultipartUploadInput) (*types.AbortMultipartUploadOutput, error) {
//        // mock response/functionality
//    }
//
//    func TestMyFunc(t *testing.T) {
//        // Setup Test
//        mockSvc := &mockClientClient{}
//
//        myfunc(mockSvc)
//
//        // Verify myFunc's functionality
//    }
//
// It is important to note that this interface will have breaking changes
// when the service model is updated and adds new API operations, paginators,
// and waiters. Its suggested to use the pattern above for testing, or using
// tooling to generate mocks to satisfy the interfaces.
type ClientAPI interface {
	AbortMultipartUploadRequest(*types.AbortMultipartUploadInput) glacier.AbortMultipartUploadRequest

	AbortVaultLockRequest(*types.AbortVaultLockInput) glacier.AbortVaultLockRequest

	AddTagsToVaultRequest(*types.AddTagsToVaultInput) glacier.AddTagsToVaultRequest

	CompleteMultipartUploadRequest(*types.CompleteMultipartUploadInput) glacier.CompleteMultipartUploadRequest

	CompleteVaultLockRequest(*types.CompleteVaultLockInput) glacier.CompleteVaultLockRequest

	CreateVaultRequest(*types.CreateVaultInput) glacier.CreateVaultRequest

	DeleteArchiveRequest(*types.DeleteArchiveInput) glacier.DeleteArchiveRequest

	DeleteVaultRequest(*types.DeleteVaultInput) glacier.DeleteVaultRequest

	DeleteVaultAccessPolicyRequest(*types.DeleteVaultAccessPolicyInput) glacier.DeleteVaultAccessPolicyRequest

	DeleteVaultNotificationsRequest(*types.DeleteVaultNotificationsInput) glacier.DeleteVaultNotificationsRequest

	DescribeJobRequest(*types.DescribeJobInput) glacier.DescribeJobRequest

	DescribeVaultRequest(*types.DescribeVaultInput) glacier.DescribeVaultRequest

	GetDataRetrievalPolicyRequest(*types.GetDataRetrievalPolicyInput) glacier.GetDataRetrievalPolicyRequest

	GetJobOutputRequest(*types.GetJobOutputInput) glacier.GetJobOutputRequest

	GetVaultAccessPolicyRequest(*types.GetVaultAccessPolicyInput) glacier.GetVaultAccessPolicyRequest

	GetVaultLockRequest(*types.GetVaultLockInput) glacier.GetVaultLockRequest

	GetVaultNotificationsRequest(*types.GetVaultNotificationsInput) glacier.GetVaultNotificationsRequest

	InitiateJobRequest(*types.InitiateJobInput) glacier.InitiateJobRequest

	InitiateMultipartUploadRequest(*types.InitiateMultipartUploadInput) glacier.InitiateMultipartUploadRequest

	InitiateVaultLockRequest(*types.InitiateVaultLockInput) glacier.InitiateVaultLockRequest

	ListJobsRequest(*types.ListJobsInput) glacier.ListJobsRequest

	ListMultipartUploadsRequest(*types.ListMultipartUploadsInput) glacier.ListMultipartUploadsRequest

	ListPartsRequest(*types.ListPartsInput) glacier.ListPartsRequest

	ListProvisionedCapacityRequest(*types.ListProvisionedCapacityInput) glacier.ListProvisionedCapacityRequest

	ListTagsForVaultRequest(*types.ListTagsForVaultInput) glacier.ListTagsForVaultRequest

	ListVaultsRequest(*types.ListVaultsInput) glacier.ListVaultsRequest

	PurchaseProvisionedCapacityRequest(*types.PurchaseProvisionedCapacityInput) glacier.PurchaseProvisionedCapacityRequest

	RemoveTagsFromVaultRequest(*types.RemoveTagsFromVaultInput) glacier.RemoveTagsFromVaultRequest

	SetDataRetrievalPolicyRequest(*types.SetDataRetrievalPolicyInput) glacier.SetDataRetrievalPolicyRequest

	SetVaultAccessPolicyRequest(*types.SetVaultAccessPolicyInput) glacier.SetVaultAccessPolicyRequest

	SetVaultNotificationsRequest(*types.SetVaultNotificationsInput) glacier.SetVaultNotificationsRequest

	UploadArchiveRequest(*types.UploadArchiveInput) glacier.UploadArchiveRequest

	UploadMultipartPartRequest(*types.UploadMultipartPartInput) glacier.UploadMultipartPartRequest

	WaitUntilVaultExists(context.Context, *types.DescribeVaultInput, ...aws.WaiterOption) error

	WaitUntilVaultNotExists(context.Context, *types.DescribeVaultInput, ...aws.WaiterOption) error
}

var _ ClientAPI = (*glacier.Client)(nil)
