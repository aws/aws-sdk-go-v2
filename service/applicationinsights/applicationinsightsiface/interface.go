// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

// Package applicationinsightsiface provides an interface to enable mocking the Amazon CloudWatch Application Insights service client
// for testing your code.
//
// It is important to note that this interface will have breaking changes
// when the service model is updated and adds new API operations, paginators,
// and waiters.
package applicationinsightsiface

import (
	"github.com/aws/aws-sdk-go-v2/service/applicationinsights"
	"github.com/aws/aws-sdk-go-v2/service/applicationinsights/types"
)

// ClientAPI provides an interface to enable mocking the
// applicationinsights.Client methods. This make unit testing your code that
// calls out to the SDK's service client's calls easier.
//
// The best way to use this interface is so the SDK's service client's calls
// can be stubbed out for unit testing your code with the SDK without needing
// to inject custom request handlers into the SDK's request pipeline.
//
//    // myFunc uses an SDK service client to make a request to
//    // Application Insights.
//    func myFunc(svc applicationinsightsiface.ClientAPI) bool {
//        // Make svc.CreateApplication request
//    }
//
//    func main() {
//        cfg, err := external.LoadDefaultAWSConfig()
//        if err != nil {
//            panic("failed to load config, " + err.Error())
//        }
//
//        svc := applicationinsights.New(cfg)
//
//        myFunc(svc)
//    }
//
// In your _test.go file:
//
//    // Define a mock struct to be used in your unit tests of myFunc.
//    type mockClientClient struct {
//        applicationinsightsiface.ClientPI
//    }
//    func (m *mockClientClient) CreateApplication(input *types.CreateApplicationInput) (*types.CreateApplicationOutput, error) {
//        // mock response/functionality
//    }
//
//    func TestMyFunc(t *testing.T) {
//        // Setup Test
//        mockSvc := &mockClientClient{}
//
//        myfunc(mockSvc)
//
//        // Verify myFunc's functionality
//    }
//
// It is important to note that this interface will have breaking changes
// when the service model is updated and adds new API operations, paginators,
// and waiters. Its suggested to use the pattern above for testing, or using
// tooling to generate mocks to satisfy the interfaces.
type ClientAPI interface {
	CreateApplicationRequest(*types.CreateApplicationInput) applicationinsights.CreateApplicationRequest

	CreateComponentRequest(*types.CreateComponentInput) applicationinsights.CreateComponentRequest

	DeleteApplicationRequest(*types.DeleteApplicationInput) applicationinsights.DeleteApplicationRequest

	DeleteComponentRequest(*types.DeleteComponentInput) applicationinsights.DeleteComponentRequest

	DescribeApplicationRequest(*types.DescribeApplicationInput) applicationinsights.DescribeApplicationRequest

	DescribeComponentRequest(*types.DescribeComponentInput) applicationinsights.DescribeComponentRequest

	DescribeComponentConfigurationRequest(*types.DescribeComponentConfigurationInput) applicationinsights.DescribeComponentConfigurationRequest

	DescribeComponentConfigurationRecommendationRequest(*types.DescribeComponentConfigurationRecommendationInput) applicationinsights.DescribeComponentConfigurationRecommendationRequest

	DescribeObservationRequest(*types.DescribeObservationInput) applicationinsights.DescribeObservationRequest

	DescribeProblemRequest(*types.DescribeProblemInput) applicationinsights.DescribeProblemRequest

	DescribeProblemObservationsRequest(*types.DescribeProblemObservationsInput) applicationinsights.DescribeProblemObservationsRequest

	ListApplicationsRequest(*types.ListApplicationsInput) applicationinsights.ListApplicationsRequest

	ListComponentsRequest(*types.ListComponentsInput) applicationinsights.ListComponentsRequest

	ListProblemsRequest(*types.ListProblemsInput) applicationinsights.ListProblemsRequest

	UpdateApplicationRequest(*types.UpdateApplicationInput) applicationinsights.UpdateApplicationRequest

	UpdateComponentRequest(*types.UpdateComponentInput) applicationinsights.UpdateComponentRequest

	UpdateComponentConfigurationRequest(*types.UpdateComponentConfigurationInput) applicationinsights.UpdateComponentConfigurationRequest
}

var _ ClientAPI = (*applicationinsights.Client)(nil)
