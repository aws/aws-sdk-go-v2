// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package applicationinsights

type ConfigurationEventResourceType string

// Enum values for ConfigurationEventResourceType
const (
	ConfigurationEventResourceTypeCloudwatchAlarm ConfigurationEventResourceType = "CLOUDWATCH_ALARM"
	ConfigurationEventResourceTypeCloudformation  ConfigurationEventResourceType = "CLOUDFORMATION"
	ConfigurationEventResourceTypeSsmAssociation  ConfigurationEventResourceType = "SSM_ASSOCIATION"
)

func (enum ConfigurationEventResourceType) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum ConfigurationEventResourceType) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type ConfigurationEventStatus string

// Enum values for ConfigurationEventStatus
const (
	ConfigurationEventStatusInfo  ConfigurationEventStatus = "INFO"
	ConfigurationEventStatusWarn  ConfigurationEventStatus = "WARN"
	ConfigurationEventStatusError ConfigurationEventStatus = "ERROR"
)

func (enum ConfigurationEventStatus) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum ConfigurationEventStatus) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type FeedbackKey string

// Enum values for FeedbackKey
const (
	FeedbackKeyInsightsFeedback FeedbackKey = "INSIGHTS_FEEDBACK"
)

func (enum FeedbackKey) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum FeedbackKey) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type FeedbackValue string

// Enum values for FeedbackValue
const (
	FeedbackValueNotSpecified FeedbackValue = "NOT_SPECIFIED"
	FeedbackValueUseful       FeedbackValue = "USEFUL"
	FeedbackValueNotUseful    FeedbackValue = "NOT_USEFUL"
)

func (enum FeedbackValue) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum FeedbackValue) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type LogFilter string

// Enum values for LogFilter
const (
	LogFilterError LogFilter = "ERROR"
	LogFilterWarn  LogFilter = "WARN"
	LogFilterInfo  LogFilter = "INFO"
)

func (enum LogFilter) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum LogFilter) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type SeverityLevel string

// Enum values for SeverityLevel
const (
	SeverityLevelLow    SeverityLevel = "Low"
	SeverityLevelMedium SeverityLevel = "Medium"
	SeverityLevelHigh   SeverityLevel = "High"
)

func (enum SeverityLevel) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum SeverityLevel) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type Status string

// Enum values for Status
const (
	StatusIgnore   Status = "IGNORE"
	StatusResolved Status = "RESOLVED"
	StatusPending  Status = "PENDING"
)

func (enum Status) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum Status) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type Tier string

// Enum values for Tier
const (
	TierDefault      Tier = "DEFAULT"
	TierDotNetCore   Tier = "DOT_NET_CORE"
	TierDotNetWorker Tier = "DOT_NET_WORKER"
	TierDotNetWeb    Tier = "DOT_NET_WEB"
	TierSqlServer    Tier = "SQL_SERVER"
)

func (enum Tier) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum Tier) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}
