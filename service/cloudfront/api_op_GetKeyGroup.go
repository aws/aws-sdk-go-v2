// Code generated by smithy-go-codegen DO NOT EDIT.

package cloudfront

import (
	"context"
	awsmiddleware "github.com/aws/aws-sdk-go-v2/aws/middleware"
	"github.com/aws/aws-sdk-go-v2/aws/signer/v4"
	"github.com/aws/aws-sdk-go-v2/service/cloudfront/types"
	"github.com/awslabs/smithy-go/middleware"
	smithyhttp "github.com/awslabs/smithy-go/transport/http"
)

// Gets a key group, including the date and time when the key group was last
// modified. To get a key group, you must provide the key group’s identifier. If
// the key group is referenced in a distribution’s cache behavior, you can get the
// key group’s identifier using ListDistributions or GetDistribution. If the key
// group is not referenced in a cache behavior, you can get the identifier using
// ListKeyGroups.
func (c *Client) GetKeyGroup(ctx context.Context, params *GetKeyGroupInput, optFns ...func(*Options)) (*GetKeyGroupOutput, error) {
	if params == nil {
		params = &GetKeyGroupInput{}
	}

	result, metadata, err := c.invokeOperation(ctx, "GetKeyGroup", params, optFns, addOperationGetKeyGroupMiddlewares)
	if err != nil {
		return nil, err
	}

	out := result.(*GetKeyGroupOutput)
	out.ResultMetadata = metadata
	return out, nil
}

type GetKeyGroupInput struct {

	// The identifier of the key group that you are getting. To get the identifier, use
	// ListKeyGroups.
	//
	// This member is required.
	Id *string
}

type GetKeyGroupOutput struct {

	// The identifier for this version of the key group.
	ETag *string

	// The key group.
	KeyGroup *types.KeyGroup

	// Metadata pertaining to the operation's result.
	ResultMetadata middleware.Metadata
}

func addOperationGetKeyGroupMiddlewares(stack *middleware.Stack, options Options) (err error) {
	err = stack.Serialize.Add(&awsRestxml_serializeOpGetKeyGroup{}, middleware.After)
	if err != nil {
		return err
	}
	err = stack.Deserialize.Add(&awsRestxml_deserializeOpGetKeyGroup{}, middleware.After)
	if err != nil {
		return err
	}
	awsmiddleware.AddRequestInvocationIDMiddleware(stack)
	smithyhttp.AddContentLengthMiddleware(stack)
	addResolveEndpointMiddleware(stack, options)
	v4.AddComputePayloadSHA256Middleware(stack)
	addRetryMiddlewares(stack, options)
	addHTTPSignerV4Middleware(stack, options)
	awsmiddleware.AddAttemptClockSkewMiddleware(stack)
	addClientUserAgent(stack)
	smithyhttp.AddErrorCloseResponseBodyMiddleware(stack)
	smithyhttp.AddCloseResponseBodyMiddleware(stack)
	addOpGetKeyGroupValidationMiddleware(stack)
	stack.Initialize.Add(newServiceMetadataMiddleware_opGetKeyGroup(options.Region), middleware.Before)
	addRequestIDRetrieverMiddleware(stack)
	addResponseErrorMiddleware(stack)
	return nil
}

func newServiceMetadataMiddleware_opGetKeyGroup(region string) awsmiddleware.RegisterServiceMetadata {
	return awsmiddleware.RegisterServiceMetadata{
		Region:        region,
		ServiceID:     ServiceID,
		SigningName:   "cloudfront",
		OperationName: "GetKeyGroup",
	}
}
