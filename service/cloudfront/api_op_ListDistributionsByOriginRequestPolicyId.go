// Code generated by smithy-go-codegen DO NOT EDIT.

package cloudfront

import (
	"context"
	awsmiddleware "github.com/aws/aws-sdk-go-v2/aws/middleware"
	"github.com/aws/aws-sdk-go-v2/aws/retry"
	"github.com/aws/aws-sdk-go-v2/aws/signer/v4"
	"github.com/aws/aws-sdk-go-v2/service/cloudfront/types"
	smithy "github.com/awslabs/smithy-go"
	"github.com/awslabs/smithy-go/middleware"
	smithyhttp "github.com/awslabs/smithy-go/transport/http"
)

// Gets a list of distribution IDs for distributions that have a cache behavior
// that’s associated with the specified origin request policy. You can optionally
// specify the maximum number of items to receive in the response. If the total
// number of items in the list exceeds the maximum that you specify, or the default
// maximum, the response is paginated. To get the next page of items, send a
// subsequent request that specifies the NextMarker value from the current response
// as the Marker value in the subsequent request.
func (c *Client) ListDistributionsByOriginRequestPolicyId(ctx context.Context, params *ListDistributionsByOriginRequestPolicyIdInput, optFns ...func(*Options)) (*ListDistributionsByOriginRequestPolicyIdOutput, error) {
	stack := middleware.NewStack("ListDistributionsByOriginRequestPolicyId", smithyhttp.NewStackRequest)
	options := c.options.Copy()
	for _, fn := range optFns {
		fn(&options)
	}
	addawsRestxml_serdeOpListDistributionsByOriginRequestPolicyIdMiddlewares(stack)
	awsmiddleware.AddRequestInvocationIDMiddleware(stack)
	smithyhttp.AddContentLengthMiddleware(stack)
	AddResolveEndpointMiddleware(stack, options)
	v4.AddComputePayloadSHA256Middleware(stack)
	retry.AddRetryMiddlewares(stack, options)
	addHTTPSignerV4Middleware(stack, options)
	awsmiddleware.AddAttemptClockSkewMiddleware(stack)
	addClientUserAgent(stack)
	smithyhttp.AddErrorCloseResponseBodyMiddleware(stack)
	smithyhttp.AddCloseResponseBodyMiddleware(stack)
	addOpListDistributionsByOriginRequestPolicyIdValidationMiddleware(stack)
	stack.Initialize.Add(newServiceMetadataMiddleware_opListDistributionsByOriginRequestPolicyId(options.Region), middleware.Before)

	for _, fn := range options.APIOptions {
		if err := fn(stack); err != nil {
			return nil, err
		}
	}
	handler := middleware.DecorateHandler(smithyhttp.NewClientHandler(options.HTTPClient), stack)
	result, metadata, err := handler.Handle(ctx, params)
	if err != nil {
		return nil, &smithy.OperationError{
			ServiceID:     ServiceID,
			OperationName: "ListDistributionsByOriginRequestPolicyId",
			Err:           err,
		}
	}
	out := result.(*ListDistributionsByOriginRequestPolicyIdOutput)
	out.ResultMetadata = metadata
	return out, nil
}

type ListDistributionsByOriginRequestPolicyIdInput struct {
	// Use this field when paginating results to indicate where to begin in your list
	// of distribution IDs. The response includes distribution IDs in the list that
	// occur after the marker. To get the next page of the list, set this field’s value
	// to the value of NextMarker from the current page’s response.
	Marker *string
	// The ID of the origin request policy whose associated distribution IDs you want
	// to list.
	OriginRequestPolicyId *string
	// The maximum number of distribution IDs that you want in the response.
	MaxItems *string
}

type ListDistributionsByOriginRequestPolicyIdOutput struct {
	// A list of distribution IDs.
	DistributionIdList *types.DistributionIdList

	// Metadata pertaining to the operation's result.
	ResultMetadata middleware.Metadata
}

func addawsRestxml_serdeOpListDistributionsByOriginRequestPolicyIdMiddlewares(stack *middleware.Stack) {
	stack.Serialize.Add(&awsRestxml_serializeOpListDistributionsByOriginRequestPolicyId{}, middleware.After)
	stack.Deserialize.Add(&awsRestxml_deserializeOpListDistributionsByOriginRequestPolicyId{}, middleware.After)
}

func newServiceMetadataMiddleware_opListDistributionsByOriginRequestPolicyId(region string) awsmiddleware.RegisterServiceMetadata {
	return awsmiddleware.RegisterServiceMetadata{
		Region:        region,
		ServiceID:     ServiceID,
		SigningName:   "cloudfront",
		OperationName: "ListDistributionsByOriginRequestPolicyId",
	}
}
