// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package apigatewaymanagementapi

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/private/protocol"
	"github.com/aws/aws-sdk-go-v2/private/protocol/restjson"
	"github.com/aws/aws-sdk-go-v2/service/apigatewaymanagementapi/types"
)

const opPostToConnection = "PostToConnection"

// PostToConnectionRequest returns a request value for making API operation for
// AmazonApiGatewayManagementApi.
//
// Sends the provided data to the specified connection.
//
//    // Example sending a request using PostToConnectionRequest.
//    req := client.PostToConnectionRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/apigatewaymanagementapi-2018-11-29/PostToConnection
func (c *Client) PostToConnectionRequest(input *types.PostToConnectionInput) PostToConnectionRequest {
	op := &aws.Operation{
		Name:       opPostToConnection,
		HTTPMethod: "POST",
		HTTPPath:   "/@connections/{connectionId}",
	}

	if input == nil {
		input = &types.PostToConnectionInput{}
	}

	req := c.newRequest(op, input, &types.PostToConnectionOutput{})
	req.Handlers.Unmarshal.Remove(restjson.UnmarshalHandler)
	req.Handlers.Unmarshal.PushBackNamed(protocol.UnmarshalDiscardBodyHandler)
	return PostToConnectionRequest{Request: req, Input: input, Copy: c.PostToConnectionRequest}
}

// PostToConnectionRequest is the request type for the
// PostToConnection API operation.
type PostToConnectionRequest struct {
	*aws.Request
	Input *types.PostToConnectionInput
	Copy  func(*types.PostToConnectionInput) PostToConnectionRequest
}

// Send marshals and sends the PostToConnection API request.
func (r PostToConnectionRequest) Send(ctx context.Context) (*PostToConnectionResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &PostToConnectionResponse{
		PostToConnectionOutput: r.Request.Data.(*types.PostToConnectionOutput),
		response:               &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// PostToConnectionResponse is the response type for the
// PostToConnection API operation.
type PostToConnectionResponse struct {
	*types.PostToConnectionOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// PostToConnection request.
func (r *PostToConnectionResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
