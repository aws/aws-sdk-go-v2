// Code generated by smithy-go-codegen DO NOT EDIT.

package types

import (
	"fmt"
	smithy "github.com/aws/smithy-go"
)

// The caller is not authorized to invoke this operation.
type ForbiddenException struct {
	Message *string

	DynamicErrorCode *string

	noSmithyDocumentSerde
}

func (e *ForbiddenException) Error() string {
	return fmt.Sprintf("%s: %s", e.ErrorCode(), e.ErrorMessage())
}
func (e *ForbiddenException) ErrorMessage() string {
	if e.Message == nil {
		return ""
	}
	return *e.Message
}
func (e *ForbiddenException) ErrorCode() string {
	if e.DynamicErrorCode == nil {
		return "ForbiddenException"
	}
	return *e.DynamicErrorCode
}
func (e *ForbiddenException) ErrorFault() smithy.ErrorFault { return smithy.FaultClient }

// The connection with the provided id no longer exists.
type GoneException struct {
	Message *string

	DynamicErrorCode *string

	noSmithyDocumentSerde
}

func (e *GoneException) Error() string {
	return fmt.Sprintf("%s: %s", e.ErrorCode(), e.ErrorMessage())
}
func (e *GoneException) ErrorMessage() string {
	if e.Message == nil {
		return ""
	}
	return *e.Message
}
func (e *GoneException) ErrorCode() string {
	if e.DynamicErrorCode == nil {
		return "GoneException"
	}
	return *e.DynamicErrorCode
}
func (e *GoneException) ErrorFault() smithy.ErrorFault { return smithy.FaultClient }

// The client is sending more than the allowed number of requests per unit of time
// or the WebSocket client side buffer is full.
type LimitExceededException struct {
	Message *string

	DynamicErrorCode *string

	noSmithyDocumentSerde
}

func (e *LimitExceededException) Error() string {
	return fmt.Sprintf("%s: %s", e.ErrorCode(), e.ErrorMessage())
}
func (e *LimitExceededException) ErrorMessage() string {
	if e.Message == nil {
		return ""
	}
	return *e.Message
}
func (e *LimitExceededException) ErrorCode() string {
	if e.DynamicErrorCode == nil {
		return "LimitExceededException"
	}
	return *e.DynamicErrorCode
}
func (e *LimitExceededException) ErrorFault() smithy.ErrorFault { return smithy.FaultClient }

// The data has exceeded the maximum size allowed.
type PayloadTooLargeException struct {
	Message *string

	DynamicErrorCode *string

	noSmithyDocumentSerde
}

func (e *PayloadTooLargeException) Error() string {
	return fmt.Sprintf("%s: %s", e.ErrorCode(), e.ErrorMessage())
}
func (e *PayloadTooLargeException) ErrorMessage() string {
	if e.Message == nil {
		return ""
	}
	return *e.Message
}
func (e *PayloadTooLargeException) ErrorCode() string {
	if e.DynamicErrorCode == nil {
		return "PayloadTooLargeException"
	}
	return *e.DynamicErrorCode
}
func (e *PayloadTooLargeException) ErrorFault() smithy.ErrorFault { return smithy.FaultClient }
