// Code generated by smithy-go-codegen DO NOT EDIT.

package types_test

import (
	"fmt"
	"github.com/aws/aws-sdk-go-v2/service/appmesh/types"
)

func ExampleAccessLog_outputUsage() {
	var union types.AccessLog
	// type switches can be used to check the union value
	switch v := union.(type) {
	case *types.AccessLogMemberFile:
		_ = v.Value // Value is FileAccessLog

	case *types.UnknownUnionMember:
		fmt.Println("unknown tag:", v.Tag)

	default:
		fmt.Println("union is nil or unknown type")

	}
}

func ExampleBackend_outputUsage() {
	var union types.Backend
	// type switches can be used to check the union value
	switch v := union.(type) {
	case *types.BackendMemberVirtualService:
		_ = v.Value // Value is VirtualServiceBackend

	case *types.UnknownUnionMember:
		fmt.Println("unknown tag:", v.Tag)

	default:
		fmt.Println("union is nil or unknown type")

	}
}

func ExampleGrpcRouteMetadataMatchMethod_outputUsage() {
	var union types.GrpcRouteMetadataMatchMethod
	// type switches can be used to check the union value
	switch v := union.(type) {
	case *types.GrpcRouteMetadataMatchMethodMemberExact:
		_ = v.Value // Value is string

	case *types.GrpcRouteMetadataMatchMethodMemberPrefix:
		_ = v.Value // Value is string

	case *types.GrpcRouteMetadataMatchMethodMemberRange:
		_ = v.Value // Value is MatchRange

	case *types.GrpcRouteMetadataMatchMethodMemberRegex:
		_ = v.Value // Value is string

	case *types.GrpcRouteMetadataMatchMethodMemberSuffix:
		_ = v.Value // Value is string

	case *types.UnknownUnionMember:
		fmt.Println("unknown tag:", v.Tag)

	default:
		fmt.Println("union is nil or unknown type")

	}
}

func ExampleHeaderMatchMethod_outputUsage() {
	var union types.HeaderMatchMethod
	// type switches can be used to check the union value
	switch v := union.(type) {
	case *types.HeaderMatchMethodMemberExact:
		_ = v.Value // Value is string

	case *types.HeaderMatchMethodMemberPrefix:
		_ = v.Value // Value is string

	case *types.HeaderMatchMethodMemberRange:
		_ = v.Value // Value is MatchRange

	case *types.HeaderMatchMethodMemberRegex:
		_ = v.Value // Value is string

	case *types.HeaderMatchMethodMemberSuffix:
		_ = v.Value // Value is string

	case *types.UnknownUnionMember:
		fmt.Println("unknown tag:", v.Tag)

	default:
		fmt.Println("union is nil or unknown type")

	}
}

func ExampleListenerTimeout_outputUsage() {
	var union types.ListenerTimeout
	// type switches can be used to check the union value
	switch v := union.(type) {
	case *types.ListenerTimeoutMemberGrpc:
		_ = v.Value // Value is GrpcTimeout

	case *types.ListenerTimeoutMemberHttp:
		_ = v.Value // Value is HttpTimeout

	case *types.ListenerTimeoutMemberHttp2:
		_ = v.Value // Value is HttpTimeout

	case *types.ListenerTimeoutMemberTcp:
		_ = v.Value // Value is TcpTimeout

	case *types.UnknownUnionMember:
		fmt.Println("unknown tag:", v.Tag)

	default:
		fmt.Println("union is nil or unknown type")

	}
}

func ExampleListenerTlsCertificate_outputUsage() {
	var union types.ListenerTlsCertificate
	// type switches can be used to check the union value
	switch v := union.(type) {
	case *types.ListenerTlsCertificateMemberAcm:
		_ = v.Value // Value is ListenerTlsAcmCertificate

	case *types.ListenerTlsCertificateMemberFile:
		_ = v.Value // Value is ListenerTlsFileCertificate

	case *types.UnknownUnionMember:
		fmt.Println("unknown tag:", v.Tag)

	default:
		fmt.Println("union is nil or unknown type")

	}
}

func ExampleServiceDiscovery_outputUsage() {
	var union types.ServiceDiscovery
	// type switches can be used to check the union value
	switch v := union.(type) {
	case *types.ServiceDiscoveryMemberAwsCloudMap:
		_ = v.Value // Value is AwsCloudMapServiceDiscovery

	case *types.ServiceDiscoveryMemberDns:
		_ = v.Value // Value is DnsServiceDiscovery

	case *types.UnknownUnionMember:
		fmt.Println("unknown tag:", v.Tag)

	default:
		fmt.Println("union is nil or unknown type")

	}
}

func ExampleTlsValidationContextTrust_outputUsage() {
	var union types.TlsValidationContextTrust
	// type switches can be used to check the union value
	switch v := union.(type) {
	case *types.TlsValidationContextTrustMemberAcm:
		_ = v.Value // Value is TlsValidationContextAcmTrust

	case *types.TlsValidationContextTrustMemberFile:
		_ = v.Value // Value is TlsValidationContextFileTrust

	case *types.UnknownUnionMember:
		fmt.Println("unknown tag:", v.Tag)

	default:
		fmt.Println("union is nil or unknown type")

	}
}

func ExampleVirtualGatewayAccessLog_outputUsage() {
	var union types.VirtualGatewayAccessLog
	// type switches can be used to check the union value
	switch v := union.(type) {
	case *types.VirtualGatewayAccessLogMemberFile:
		_ = v.Value // Value is VirtualGatewayFileAccessLog

	case *types.UnknownUnionMember:
		fmt.Println("unknown tag:", v.Tag)

	default:
		fmt.Println("union is nil or unknown type")

	}
}

func ExampleVirtualGatewayListenerTlsCertificate_outputUsage() {
	var union types.VirtualGatewayListenerTlsCertificate
	// type switches can be used to check the union value
	switch v := union.(type) {
	case *types.VirtualGatewayListenerTlsCertificateMemberAcm:
		_ = v.Value // Value is VirtualGatewayListenerTlsAcmCertificate

	case *types.VirtualGatewayListenerTlsCertificateMemberFile:
		_ = v.Value // Value is VirtualGatewayListenerTlsFileCertificate

	case *types.UnknownUnionMember:
		fmt.Println("unknown tag:", v.Tag)

	default:
		fmt.Println("union is nil or unknown type")

	}
}

func ExampleVirtualGatewayTlsValidationContextTrust_outputUsage() {
	var union types.VirtualGatewayTlsValidationContextTrust
	// type switches can be used to check the union value
	switch v := union.(type) {
	case *types.VirtualGatewayTlsValidationContextTrustMemberAcm:
		_ = v.Value // Value is VirtualGatewayTlsValidationContextAcmTrust

	case *types.VirtualGatewayTlsValidationContextTrustMemberFile:
		_ = v.Value // Value is VirtualGatewayTlsValidationContextFileTrust

	case *types.UnknownUnionMember:
		fmt.Println("unknown tag:", v.Tag)

	default:
		fmt.Println("union is nil or unknown type")

	}
}

func ExampleVirtualServiceProvider_outputUsage() {
	var union types.VirtualServiceProvider
	// type switches can be used to check the union value
	switch v := union.(type) {
	case *types.VirtualServiceProviderMemberVirtualNode:
		_ = v.Value // Value is VirtualNodeServiceProvider

	case *types.VirtualServiceProviderMemberVirtualRouter:
		_ = v.Value // Value is VirtualRouterServiceProvider

	case *types.UnknownUnionMember:
		fmt.Println("unknown tag:", v.Tag)

	default:
		fmt.Println("union is nil or unknown type")

	}
}
