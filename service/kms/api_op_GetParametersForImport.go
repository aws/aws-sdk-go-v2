// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package kms

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/kms/types"
)

const opGetParametersForImport = "GetParametersForImport"

// GetParametersForImportRequest returns a request value for making API operation for
// AWS Key Management Service.
//
// Returns the items you need in order to import key material into AWS KMS from
// your existing key management infrastructure. For more information about importing
// key material into AWS KMS, see Importing Key Material (https://docs.aws.amazon.com/kms/latest/developerguide/importing-keys.html)
// in the AWS Key Management Service Developer Guide.
//
// You must specify the key ID of the customer master key (CMK) into which you
// will import key material. This CMK's Origin must be EXTERNAL. You must also
// specify the wrapping algorithm and type of wrapping key (public key) that
// you will use to encrypt the key material. You cannot perform this operation
// on a CMK in a different AWS account.
//
// This operation returns a public key and an import token. Use the public key
// to encrypt the key material. Store the import token to send with a subsequent
// ImportKeyMaterial request. The public key and import token from the same
// response must be used together. These items are valid for 24 hours. When
// they expire, they cannot be used for a subsequent ImportKeyMaterial request.
// To get new ones, send another GetParametersForImport request.
//
// The result of this operation varies with the key state of the CMK. For details,
// see How Key State Affects Use of a Customer Master Key (https://docs.aws.amazon.com/kms/latest/developerguide/key-state.html)
// in the AWS Key Management Service Developer Guide.
//
//    // Example sending a request using GetParametersForImportRequest.
//    req := client.GetParametersForImportRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/kms-2014-11-01/GetParametersForImport
func (c *Client) GetParametersForImportRequest(input *types.GetParametersForImportInput) GetParametersForImportRequest {
	op := &aws.Operation{
		Name:       opGetParametersForImport,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &types.GetParametersForImportInput{}
	}

	req := c.newRequest(op, input, &types.GetParametersForImportOutput{})
	return GetParametersForImportRequest{Request: req, Input: input, Copy: c.GetParametersForImportRequest}
}

// GetParametersForImportRequest is the request type for the
// GetParametersForImport API operation.
type GetParametersForImportRequest struct {
	*aws.Request
	Input *types.GetParametersForImportInput
	Copy  func(*types.GetParametersForImportInput) GetParametersForImportRequest
}

// Send marshals and sends the GetParametersForImport API request.
func (r GetParametersForImportRequest) Send(ctx context.Context) (*GetParametersForImportResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &GetParametersForImportResponse{
		GetParametersForImportOutput: r.Request.Data.(*types.GetParametersForImportOutput),
		response:                     &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// GetParametersForImportResponse is the response type for the
// GetParametersForImport API operation.
type GetParametersForImportResponse struct {
	*types.GetParametersForImportOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// GetParametersForImport request.
func (r *GetParametersForImportResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
