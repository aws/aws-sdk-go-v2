// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package kms

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/kms/types"
)

const opCancelKeyDeletion = "CancelKeyDeletion"

// CancelKeyDeletionRequest returns a request value for making API operation for
// AWS Key Management Service.
//
// Cancels the deletion of a customer master key (CMK). When this operation
// is successful, the CMK is set to the Disabled state. To enable a CMK, use
// EnableKey. You cannot perform this operation on a CMK in a different AWS
// account.
//
// For more information about scheduling and canceling deletion of a CMK, see
// Deleting Customer Master Keys (https://docs.aws.amazon.com/kms/latest/developerguide/deleting-keys.html)
// in the AWS Key Management Service Developer Guide.
//
// The result of this operation varies with the key state of the CMK. For details,
// see How Key State Affects Use of a Customer Master Key (https://docs.aws.amazon.com/kms/latest/developerguide/key-state.html)
// in the AWS Key Management Service Developer Guide.
//
//    // Example sending a request using CancelKeyDeletionRequest.
//    req := client.CancelKeyDeletionRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/kms-2014-11-01/CancelKeyDeletion
func (c *Client) CancelKeyDeletionRequest(input *types.CancelKeyDeletionInput) CancelKeyDeletionRequest {
	op := &aws.Operation{
		Name:       opCancelKeyDeletion,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &types.CancelKeyDeletionInput{}
	}

	req := c.newRequest(op, input, &types.CancelKeyDeletionOutput{})
	return CancelKeyDeletionRequest{Request: req, Input: input, Copy: c.CancelKeyDeletionRequest}
}

// CancelKeyDeletionRequest is the request type for the
// CancelKeyDeletion API operation.
type CancelKeyDeletionRequest struct {
	*aws.Request
	Input *types.CancelKeyDeletionInput
	Copy  func(*types.CancelKeyDeletionInput) CancelKeyDeletionRequest
}

// Send marshals and sends the CancelKeyDeletion API request.
func (r CancelKeyDeletionRequest) Send(ctx context.Context) (*CancelKeyDeletionResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &CancelKeyDeletionResponse{
		CancelKeyDeletionOutput: r.Request.Data.(*types.CancelKeyDeletionOutput),
		response:                &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// CancelKeyDeletionResponse is the response type for the
// CancelKeyDeletion API operation.
type CancelKeyDeletionResponse struct {
	*types.CancelKeyDeletionOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// CancelKeyDeletion request.
func (r *CancelKeyDeletionResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
