// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package kms

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/kms/types"
)

const opScheduleKeyDeletion = "ScheduleKeyDeletion"

// ScheduleKeyDeletionRequest returns a request value for making API operation for
// AWS Key Management Service.
//
// Schedules the deletion of a customer master key (CMK). You may provide a
// waiting period, specified in days, before deletion occurs. If you do not
// provide a waiting period, the default period of 30 days is used. When this
// operation is successful, the key state of the CMK changes to PendingDeletion.
// Before the waiting period ends, you can use CancelKeyDeletion to cancel the
// deletion of the CMK. After the waiting period ends, AWS KMS deletes the CMK
// and all AWS KMS data associated with it, including all aliases that refer
// to it.
//
// Deleting a CMK is a destructive and potentially dangerous operation. When
// a CMK is deleted, all data that was encrypted under the CMK is unrecoverable.
// To prevent the use of a CMK without deleting it, use DisableKey.
//
// If you schedule deletion of a CMK from a custom key store (https://docs.aws.amazon.com/kms/latest/developerguide/custom-key-store-overview.html),
// when the waiting period expires, ScheduleKeyDeletion deletes the CMK from
// AWS KMS. Then AWS KMS makes a best effort to delete the key material from
// the associated AWS CloudHSM cluster. However, you might need to manually
// delete the orphaned key material (https://docs.aws.amazon.com/kms/latest/developerguide/fix-keystore.html#fix-keystore-orphaned-key)
// from the cluster and its backups.
//
// You cannot perform this operation on a CMK in a different AWS account.
//
// For more information about scheduling a CMK for deletion, see Deleting Customer
// Master Keys (https://docs.aws.amazon.com/kms/latest/developerguide/deleting-keys.html)
// in the AWS Key Management Service Developer Guide.
//
// The result of this operation varies with the key state of the CMK. For details,
// see How Key State Affects Use of a Customer Master Key (https://docs.aws.amazon.com/kms/latest/developerguide/key-state.html)
// in the AWS Key Management Service Developer Guide.
//
//    // Example sending a request using ScheduleKeyDeletionRequest.
//    req := client.ScheduleKeyDeletionRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/kms-2014-11-01/ScheduleKeyDeletion
func (c *Client) ScheduleKeyDeletionRequest(input *types.ScheduleKeyDeletionInput) ScheduleKeyDeletionRequest {
	op := &aws.Operation{
		Name:       opScheduleKeyDeletion,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &types.ScheduleKeyDeletionInput{}
	}

	req := c.newRequest(op, input, &types.ScheduleKeyDeletionOutput{})
	return ScheduleKeyDeletionRequest{Request: req, Input: input, Copy: c.ScheduleKeyDeletionRequest}
}

// ScheduleKeyDeletionRequest is the request type for the
// ScheduleKeyDeletion API operation.
type ScheduleKeyDeletionRequest struct {
	*aws.Request
	Input *types.ScheduleKeyDeletionInput
	Copy  func(*types.ScheduleKeyDeletionInput) ScheduleKeyDeletionRequest
}

// Send marshals and sends the ScheduleKeyDeletion API request.
func (r ScheduleKeyDeletionRequest) Send(ctx context.Context) (*ScheduleKeyDeletionResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &ScheduleKeyDeletionResponse{
		ScheduleKeyDeletionOutput: r.Request.Data.(*types.ScheduleKeyDeletionOutput),
		response:                  &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// ScheduleKeyDeletionResponse is the response type for the
// ScheduleKeyDeletion API operation.
type ScheduleKeyDeletionResponse struct {
	*types.ScheduleKeyDeletionOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// ScheduleKeyDeletion request.
func (r *ScheduleKeyDeletionResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
