// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package kms

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/private/protocol"
	"github.com/aws/aws-sdk-go-v2/private/protocol/jsonrpc"
	"github.com/aws/aws-sdk-go-v2/service/kms/types"
)

const opDisableKey = "DisableKey"

// DisableKeyRequest returns a request value for making API operation for
// AWS Key Management Service.
//
// Sets the state of a customer master key (CMK) to disabled, thereby preventing
// its use for cryptographic operations. You cannot perform this operation on
// a CMK in a different AWS account.
//
// For more information about how key state affects the use of a CMK, see How
// Key State Affects the Use of a Customer Master Key (https://docs.aws.amazon.com/kms/latest/developerguide/key-state.html)
// in the AWS Key Management Service Developer Guide .
//
// The result of this operation varies with the key state of the CMK. For details,
// see How Key State Affects Use of a Customer Master Key (https://docs.aws.amazon.com/kms/latest/developerguide/key-state.html)
// in the AWS Key Management Service Developer Guide.
//
//    // Example sending a request using DisableKeyRequest.
//    req := client.DisableKeyRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/kms-2014-11-01/DisableKey
func (c *Client) DisableKeyRequest(input *types.DisableKeyInput) DisableKeyRequest {
	op := &aws.Operation{
		Name:       opDisableKey,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &types.DisableKeyInput{}
	}

	req := c.newRequest(op, input, &types.DisableKeyOutput{})
	req.Handlers.Unmarshal.Remove(jsonrpc.UnmarshalHandler)
	req.Handlers.Unmarshal.PushBackNamed(protocol.UnmarshalDiscardBodyHandler)
	return DisableKeyRequest{Request: req, Input: input, Copy: c.DisableKeyRequest}
}

// DisableKeyRequest is the request type for the
// DisableKey API operation.
type DisableKeyRequest struct {
	*aws.Request
	Input *types.DisableKeyInput
	Copy  func(*types.DisableKeyInput) DisableKeyRequest
}

// Send marshals and sends the DisableKey API request.
func (r DisableKeyRequest) Send(ctx context.Context) (*DisableKeyResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &DisableKeyResponse{
		DisableKeyOutput: r.Request.Data.(*types.DisableKeyOutput),
		response:         &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// DisableKeyResponse is the response type for the
// DisableKey API operation.
type DisableKeyResponse struct {
	*types.DisableKeyOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// DisableKey request.
func (r *DisableKeyResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
