// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

// Package kmsiface provides an interface to enable mocking the AWS Key Management Service service client
// for testing your code.
//
// It is important to note that this interface will have breaking changes
// when the service model is updated and adds new API operations, paginators,
// and waiters.
package kmsiface

import (
	"github.com/aws/aws-sdk-go-v2/service/kms"
	"github.com/aws/aws-sdk-go-v2/service/kms/types"
)

// ClientAPI provides an interface to enable mocking the
// kms.Client methods. This make unit testing your code that
// calls out to the SDK's service client's calls easier.
//
// The best way to use this interface is so the SDK's service client's calls
// can be stubbed out for unit testing your code with the SDK without needing
// to inject custom request handlers into the SDK's request pipeline.
//
//    // myFunc uses an SDK service client to make a request to
//    // KMS.
//    func myFunc(svc kmsiface.ClientAPI) bool {
//        // Make svc.CancelKeyDeletion request
//    }
//
//    func main() {
//        cfg, err := external.LoadDefaultAWSConfig()
//        if err != nil {
//            panic("failed to load config, " + err.Error())
//        }
//
//        svc := kms.New(cfg)
//
//        myFunc(svc)
//    }
//
// In your _test.go file:
//
//    // Define a mock struct to be used in your unit tests of myFunc.
//    type mockClientClient struct {
//        kmsiface.ClientPI
//    }
//    func (m *mockClientClient) CancelKeyDeletion(input *types.CancelKeyDeletionInput) (*types.CancelKeyDeletionOutput, error) {
//        // mock response/functionality
//    }
//
//    func TestMyFunc(t *testing.T) {
//        // Setup Test
//        mockSvc := &mockClientClient{}
//
//        myfunc(mockSvc)
//
//        // Verify myFunc's functionality
//    }
//
// It is important to note that this interface will have breaking changes
// when the service model is updated and adds new API operations, paginators,
// and waiters. Its suggested to use the pattern above for testing, or using
// tooling to generate mocks to satisfy the interfaces.
type ClientAPI interface {
	CancelKeyDeletionRequest(*types.CancelKeyDeletionInput) kms.CancelKeyDeletionRequest

	ConnectCustomKeyStoreRequest(*types.ConnectCustomKeyStoreInput) kms.ConnectCustomKeyStoreRequest

	CreateAliasRequest(*types.CreateAliasInput) kms.CreateAliasRequest

	CreateCustomKeyStoreRequest(*types.CreateCustomKeyStoreInput) kms.CreateCustomKeyStoreRequest

	CreateGrantRequest(*types.CreateGrantInput) kms.CreateGrantRequest

	CreateKeyRequest(*types.CreateKeyInput) kms.CreateKeyRequest

	DecryptRequest(*types.DecryptInput) kms.DecryptRequest

	DeleteAliasRequest(*types.DeleteAliasInput) kms.DeleteAliasRequest

	DeleteCustomKeyStoreRequest(*types.DeleteCustomKeyStoreInput) kms.DeleteCustomKeyStoreRequest

	DeleteImportedKeyMaterialRequest(*types.DeleteImportedKeyMaterialInput) kms.DeleteImportedKeyMaterialRequest

	DescribeCustomKeyStoresRequest(*types.DescribeCustomKeyStoresInput) kms.DescribeCustomKeyStoresRequest

	DescribeKeyRequest(*types.DescribeKeyInput) kms.DescribeKeyRequest

	DisableKeyRequest(*types.DisableKeyInput) kms.DisableKeyRequest

	DisableKeyRotationRequest(*types.DisableKeyRotationInput) kms.DisableKeyRotationRequest

	DisconnectCustomKeyStoreRequest(*types.DisconnectCustomKeyStoreInput) kms.DisconnectCustomKeyStoreRequest

	EnableKeyRequest(*types.EnableKeyInput) kms.EnableKeyRequest

	EnableKeyRotationRequest(*types.EnableKeyRotationInput) kms.EnableKeyRotationRequest

	EncryptRequest(*types.EncryptInput) kms.EncryptRequest

	GenerateDataKeyRequest(*types.GenerateDataKeyInput) kms.GenerateDataKeyRequest

	GenerateDataKeyWithoutPlaintextRequest(*types.GenerateDataKeyWithoutPlaintextInput) kms.GenerateDataKeyWithoutPlaintextRequest

	GenerateRandomRequest(*types.GenerateRandomInput) kms.GenerateRandomRequest

	GetKeyPolicyRequest(*types.GetKeyPolicyInput) kms.GetKeyPolicyRequest

	GetKeyRotationStatusRequest(*types.GetKeyRotationStatusInput) kms.GetKeyRotationStatusRequest

	GetParametersForImportRequest(*types.GetParametersForImportInput) kms.GetParametersForImportRequest

	ImportKeyMaterialRequest(*types.ImportKeyMaterialInput) kms.ImportKeyMaterialRequest

	ListAliasesRequest(*types.ListAliasesInput) kms.ListAliasesRequest

	ListGrantsRequest(*types.ListGrantsInput) kms.ListGrantsRequest

	ListKeyPoliciesRequest(*types.ListKeyPoliciesInput) kms.ListKeyPoliciesRequest

	ListKeysRequest(*types.ListKeysInput) kms.ListKeysRequest

	ListResourceTagsRequest(*types.ListResourceTagsInput) kms.ListResourceTagsRequest

	ListRetirableGrantsRequest(*types.ListRetirableGrantsInput) kms.ListRetirableGrantsRequest

	PutKeyPolicyRequest(*types.PutKeyPolicyInput) kms.PutKeyPolicyRequest

	ReEncryptRequest(*types.ReEncryptInput) kms.ReEncryptRequest

	RetireGrantRequest(*types.RetireGrantInput) kms.RetireGrantRequest

	RevokeGrantRequest(*types.RevokeGrantInput) kms.RevokeGrantRequest

	ScheduleKeyDeletionRequest(*types.ScheduleKeyDeletionInput) kms.ScheduleKeyDeletionRequest

	TagResourceRequest(*types.TagResourceInput) kms.TagResourceRequest

	UntagResourceRequest(*types.UntagResourceInput) kms.UntagResourceRequest

	UpdateAliasRequest(*types.UpdateAliasInput) kms.UpdateAliasRequest

	UpdateCustomKeyStoreRequest(*types.UpdateCustomKeyStoreInput) kms.UpdateCustomKeyStoreRequest

	UpdateKeyDescriptionRequest(*types.UpdateKeyDescriptionInput) kms.UpdateKeyDescriptionRequest
}

var _ ClientAPI = (*kms.Client)(nil)
