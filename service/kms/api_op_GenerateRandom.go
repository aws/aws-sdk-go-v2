// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package kms

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/kms/types"
)

const opGenerateRandom = "GenerateRandom"

// GenerateRandomRequest returns a request value for making API operation for
// AWS Key Management Service.
//
// Returns a random byte string that is cryptographically secure.
//
// By default, the random byte string is generated in AWS KMS. To generate the
// byte string in the AWS CloudHSM cluster that is associated with a custom
// key store (https://docs.aws.amazon.com/kms/latest/developerguide/custom-key-store-overview.html),
// specify the custom key store ID.
//
// For more information about entropy and random number generation, see the
// AWS Key Management Service Cryptographic Details (https://d0.awsstatic.com/whitepapers/KMS-Cryptographic-Details.pdf)
// whitepaper.
//
//    // Example sending a request using GenerateRandomRequest.
//    req := client.GenerateRandomRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/kms-2014-11-01/GenerateRandom
func (c *Client) GenerateRandomRequest(input *types.GenerateRandomInput) GenerateRandomRequest {
	op := &aws.Operation{
		Name:       opGenerateRandom,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &types.GenerateRandomInput{}
	}

	req := c.newRequest(op, input, &types.GenerateRandomOutput{})
	return GenerateRandomRequest{Request: req, Input: input, Copy: c.GenerateRandomRequest}
}

// GenerateRandomRequest is the request type for the
// GenerateRandom API operation.
type GenerateRandomRequest struct {
	*aws.Request
	Input *types.GenerateRandomInput
	Copy  func(*types.GenerateRandomInput) GenerateRandomRequest
}

// Send marshals and sends the GenerateRandom API request.
func (r GenerateRandomRequest) Send(ctx context.Context) (*GenerateRandomResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &GenerateRandomResponse{
		GenerateRandomOutput: r.Request.Data.(*types.GenerateRandomOutput),
		response:             &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// GenerateRandomResponse is the response type for the
// GenerateRandom API operation.
type GenerateRandomResponse struct {
	*types.GenerateRandomOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// GenerateRandom request.
func (r *GenerateRandomResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
