// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package kms

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/kms/types"
)

const opUpdateCustomKeyStore = "UpdateCustomKeyStore"

// UpdateCustomKeyStoreRequest returns a request value for making API operation for
// AWS Key Management Service.
//
// Changes the properties of a custom key store. Use the CustomKeyStoreId parameter
// to identify the custom key store you want to edit. Use the remaining parameters
// to change the properties of the custom key store.
//
// You can only update a custom key store that is disconnected. To disconnect
// the custom key store, use DisconnectCustomKeyStore. To reconnect the custom
// key store after the update completes, use ConnectCustomKeyStore. To find
// the connection state of a custom key store, use the DescribeCustomKeyStores
// operation.
//
// Use the parameters of UpdateCustomKeyStore to edit your keystore settings.
//
//    * Use the NewCustomKeyStoreName parameter to change the friendly name
//    of the custom key store to the value that you specify.
//
//    * Use the KeyStorePassword parameter tell AWS KMS the current password
//    of the kmsuser crypto user (CU) (https://docs.aws.amazon.com/kms/latest/developerguide/key-store-concepts.html#concept-kmsuser)
//    in the associated AWS CloudHSM cluster. You can use this parameter to
//    fix connection failures (https://docs.aws.amazon.com/kms/latest/developerguide/fix-keystore.html#fix-keystore-password)
//    that occur when AWS KMS cannot log into the associated cluster because
//    the kmsuser password has changed. This value does not change the password
//    in the AWS CloudHSM cluster.
//
//    * Use the CloudHsmClusterId parameter to associate the custom key store
//    with a different, but related, AWS CloudHSM cluster. You can use this
//    parameter to repair a custom key store if its AWS CloudHSM cluster becomes
//    corrupted or is deleted, or when you need to create or restore a cluster
//    from a backup.
//
// If the operation succeeds, it returns a JSON object with no properties.
//
// This operation is part of the Custom Key Store feature (https://docs.aws.amazon.com/kms/latest/developerguide/custom-key-store-overview.html)
// feature in AWS KMS, which combines the convenience and extensive integration
// of AWS KMS with the isolation and control of a single-tenant key store.
//
//    // Example sending a request using UpdateCustomKeyStoreRequest.
//    req := client.UpdateCustomKeyStoreRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/kms-2014-11-01/UpdateCustomKeyStore
func (c *Client) UpdateCustomKeyStoreRequest(input *types.UpdateCustomKeyStoreInput) UpdateCustomKeyStoreRequest {
	op := &aws.Operation{
		Name:       opUpdateCustomKeyStore,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &types.UpdateCustomKeyStoreInput{}
	}

	req := c.newRequest(op, input, &types.UpdateCustomKeyStoreOutput{})
	return UpdateCustomKeyStoreRequest{Request: req, Input: input, Copy: c.UpdateCustomKeyStoreRequest}
}

// UpdateCustomKeyStoreRequest is the request type for the
// UpdateCustomKeyStore API operation.
type UpdateCustomKeyStoreRequest struct {
	*aws.Request
	Input *types.UpdateCustomKeyStoreInput
	Copy  func(*types.UpdateCustomKeyStoreInput) UpdateCustomKeyStoreRequest
}

// Send marshals and sends the UpdateCustomKeyStore API request.
func (r UpdateCustomKeyStoreRequest) Send(ctx context.Context) (*UpdateCustomKeyStoreResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &UpdateCustomKeyStoreResponse{
		UpdateCustomKeyStoreOutput: r.Request.Data.(*types.UpdateCustomKeyStoreOutput),
		response:                   &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// UpdateCustomKeyStoreResponse is the response type for the
// UpdateCustomKeyStore API operation.
type UpdateCustomKeyStoreResponse struct {
	*types.UpdateCustomKeyStoreOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// UpdateCustomKeyStore request.
func (r *UpdateCustomKeyStoreResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
