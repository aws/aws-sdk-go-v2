// Code generated by smithy-go-codegen DO NOT EDIT.

package amplify

import (
	"context"
	awsmiddleware "github.com/aws/aws-sdk-go-v2/aws/middleware"
	"github.com/aws/aws-sdk-go-v2/aws/signer/v4"
	"github.com/aws/aws-sdk-go-v2/service/amplify/types"
	"github.com/awslabs/smithy-go/middleware"
	smithyhttp "github.com/awslabs/smithy-go/transport/http"
)

// Updates a branch for an Amplify app.
func (c *Client) UpdateBranch(ctx context.Context, params *UpdateBranchInput, optFns ...func(*Options)) (*UpdateBranchOutput, error) {
	if params == nil {
		params = &UpdateBranchInput{}
	}

	result, metadata, err := c.invokeOperation(ctx, "UpdateBranch", params, optFns, addOperationUpdateBranchMiddlewares)
	if err != nil {
		return nil, err
	}

	out := result.(*UpdateBranchOutput)
	out.ResultMetadata = metadata
	return out, nil
}

// The request structure for the update branch request.
type UpdateBranchInput struct {

	// The unique ID for an Amplify app.
	//
	// This member is required.
	AppId *string

	// The name for the branch.
	//
	// This member is required.
	BranchName *string

	// The Amazon Resource Name (ARN) for a backend environment that is part of an
	// Amplify app.
	BackendEnvironmentArn *string

	// The basic authorization credentials for the branch.
	BasicAuthCredentials *string

	// The build specification (build spec) for the branch.
	BuildSpec *string

	// The description for the branch.
	Description *string

	// The display name for a branch. This is used as the default domain prefix.
	DisplayName *string

	// Enables auto building for the branch.
	EnableAutoBuild *bool

	// Enables basic authorization for the branch.
	EnableBasicAuth *bool

	// Enables notifications for the branch.
	EnableNotification *bool

	// Performance mode optimizes for faster hosting performance by keeping content
	// cached at the edge for a longer interval. Enabling performance mode will mean
	// that hosting configuration or code changes can take up to 10 minutes to roll
	// out.
	EnablePerformanceMode *bool

	// Enables pull request preview for this branch.
	EnablePullRequestPreview *bool

	// The environment variables for the branch.
	EnvironmentVariables map[string]*string

	// The framework for the branch.
	Framework *string

	// The Amplify environment name for the pull request.
	PullRequestEnvironmentName *string

	// Describes the current stage for the branch.
	Stage types.Stage

	// The content Time to Live (TTL) for the website in seconds.
	Ttl *string
}

// The result structure for the update branch request.
type UpdateBranchOutput struct {

	// The branch for an Amplify app, which maps to a third-party repository branch.
	//
	// This member is required.
	Branch *types.Branch

	// Metadata pertaining to the operation's result.
	ResultMetadata middleware.Metadata
}

func addOperationUpdateBranchMiddlewares(stack *middleware.Stack, options Options) (err error) {
	err = stack.Serialize.Add(&awsRestjson1_serializeOpUpdateBranch{}, middleware.After)
	if err != nil {
		return err
	}
	err = stack.Deserialize.Add(&awsRestjson1_deserializeOpUpdateBranch{}, middleware.After)
	if err != nil {
		return err
	}
	awsmiddleware.AddRequestInvocationIDMiddleware(stack)
	smithyhttp.AddContentLengthMiddleware(stack)
	addResolveEndpointMiddleware(stack, options)
	v4.AddComputePayloadSHA256Middleware(stack)
	addRetryMiddlewares(stack, options)
	addHTTPSignerV4Middleware(stack, options)
	awsmiddleware.AddAttemptClockSkewMiddleware(stack)
	addClientUserAgent(stack)
	smithyhttp.AddErrorCloseResponseBodyMiddleware(stack)
	smithyhttp.AddCloseResponseBodyMiddleware(stack)
	addOpUpdateBranchValidationMiddleware(stack)
	stack.Initialize.Add(newServiceMetadataMiddleware_opUpdateBranch(options.Region), middleware.Before)
	addRequestIDRetrieverMiddleware(stack)
	addResponseErrorMiddleware(stack)
	return nil
}

func newServiceMetadataMiddleware_opUpdateBranch(region string) awsmiddleware.RegisterServiceMetadata {
	return awsmiddleware.RegisterServiceMetadata{
		Region:        region,
		ServiceID:     ServiceID,
		SigningName:   "amplify",
		OperationName: "UpdateBranch",
	}
}
