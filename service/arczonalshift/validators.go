// Code generated by smithy-go-codegen DO NOT EDIT.

package arczonalshift

import (
	"context"
	"fmt"
	smithy "github.com/aws/smithy-go"
	"github.com/aws/smithy-go/middleware"
)

type validateOpCancelZonalShift struct {
}

func (*validateOpCancelZonalShift) ID() string {
	return "OperationInputValidation"
}

func (m *validateOpCancelZonalShift) HandleInitialize(ctx context.Context, in middleware.InitializeInput, next middleware.InitializeHandler) (
	out middleware.InitializeOutput, metadata middleware.Metadata, err error,
) {
	input, ok := in.Parameters.(*CancelZonalShiftInput)
	if !ok {
		return out, metadata, fmt.Errorf("unknown input parameters type %T", in.Parameters)
	}
	if err := validateOpCancelZonalShiftInput(input); err != nil {
		return out, metadata, err
	}
	return next.HandleInitialize(ctx, in)
}

type validateOpGetManagedResource struct {
}

func (*validateOpGetManagedResource) ID() string {
	return "OperationInputValidation"
}

func (m *validateOpGetManagedResource) HandleInitialize(ctx context.Context, in middleware.InitializeInput, next middleware.InitializeHandler) (
	out middleware.InitializeOutput, metadata middleware.Metadata, err error,
) {
	input, ok := in.Parameters.(*GetManagedResourceInput)
	if !ok {
		return out, metadata, fmt.Errorf("unknown input parameters type %T", in.Parameters)
	}
	if err := validateOpGetManagedResourceInput(input); err != nil {
		return out, metadata, err
	}
	return next.HandleInitialize(ctx, in)
}

type validateOpStartZonalShift struct {
}

func (*validateOpStartZonalShift) ID() string {
	return "OperationInputValidation"
}

func (m *validateOpStartZonalShift) HandleInitialize(ctx context.Context, in middleware.InitializeInput, next middleware.InitializeHandler) (
	out middleware.InitializeOutput, metadata middleware.Metadata, err error,
) {
	input, ok := in.Parameters.(*StartZonalShiftInput)
	if !ok {
		return out, metadata, fmt.Errorf("unknown input parameters type %T", in.Parameters)
	}
	if err := validateOpStartZonalShiftInput(input); err != nil {
		return out, metadata, err
	}
	return next.HandleInitialize(ctx, in)
}

type validateOpUpdateZonalShift struct {
}

func (*validateOpUpdateZonalShift) ID() string {
	return "OperationInputValidation"
}

func (m *validateOpUpdateZonalShift) HandleInitialize(ctx context.Context, in middleware.InitializeInput, next middleware.InitializeHandler) (
	out middleware.InitializeOutput, metadata middleware.Metadata, err error,
) {
	input, ok := in.Parameters.(*UpdateZonalShiftInput)
	if !ok {
		return out, metadata, fmt.Errorf("unknown input parameters type %T", in.Parameters)
	}
	if err := validateOpUpdateZonalShiftInput(input); err != nil {
		return out, metadata, err
	}
	return next.HandleInitialize(ctx, in)
}

func addOpCancelZonalShiftValidationMiddleware(stack *middleware.Stack) error {
	return stack.Initialize.Add(&validateOpCancelZonalShift{}, middleware.After)
}

func addOpGetManagedResourceValidationMiddleware(stack *middleware.Stack) error {
	return stack.Initialize.Add(&validateOpGetManagedResource{}, middleware.After)
}

func addOpStartZonalShiftValidationMiddleware(stack *middleware.Stack) error {
	return stack.Initialize.Add(&validateOpStartZonalShift{}, middleware.After)
}

func addOpUpdateZonalShiftValidationMiddleware(stack *middleware.Stack) error {
	return stack.Initialize.Add(&validateOpUpdateZonalShift{}, middleware.After)
}

func validateOpCancelZonalShiftInput(v *CancelZonalShiftInput) error {
	if v == nil {
		return nil
	}
	invalidParams := smithy.InvalidParamsError{Context: "CancelZonalShiftInput"}
	if v.ZonalShiftId == nil {
		invalidParams.Add(smithy.NewErrParamRequired("ZonalShiftId"))
	}
	if invalidParams.Len() > 0 {
		return invalidParams
	} else {
		return nil
	}
}

func validateOpGetManagedResourceInput(v *GetManagedResourceInput) error {
	if v == nil {
		return nil
	}
	invalidParams := smithy.InvalidParamsError{Context: "GetManagedResourceInput"}
	if v.ResourceIdentifier == nil {
		invalidParams.Add(smithy.NewErrParamRequired("ResourceIdentifier"))
	}
	if invalidParams.Len() > 0 {
		return invalidParams
	} else {
		return nil
	}
}

func validateOpStartZonalShiftInput(v *StartZonalShiftInput) error {
	if v == nil {
		return nil
	}
	invalidParams := smithy.InvalidParamsError{Context: "StartZonalShiftInput"}
	if v.ResourceIdentifier == nil {
		invalidParams.Add(smithy.NewErrParamRequired("ResourceIdentifier"))
	}
	if v.AwayFrom == nil {
		invalidParams.Add(smithy.NewErrParamRequired("AwayFrom"))
	}
	if v.ExpiresIn == nil {
		invalidParams.Add(smithy.NewErrParamRequired("ExpiresIn"))
	}
	if v.Comment == nil {
		invalidParams.Add(smithy.NewErrParamRequired("Comment"))
	}
	if invalidParams.Len() > 0 {
		return invalidParams
	} else {
		return nil
	}
}

func validateOpUpdateZonalShiftInput(v *UpdateZonalShiftInput) error {
	if v == nil {
		return nil
	}
	invalidParams := smithy.InvalidParamsError{Context: "UpdateZonalShiftInput"}
	if v.ZonalShiftId == nil {
		invalidParams.Add(smithy.NewErrParamRequired("ZonalShiftId"))
	}
	if invalidParams.Len() > 0 {
		return invalidParams
	} else {
		return nil
	}
}
