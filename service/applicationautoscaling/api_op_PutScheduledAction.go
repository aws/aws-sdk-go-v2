// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package applicationautoscaling

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/applicationautoscaling/types"
)

const opPutScheduledAction = "PutScheduledAction"

// PutScheduledActionRequest returns a request value for making API operation for
// Application Auto Scaling.
//
// Creates or updates a scheduled action for an Application Auto Scaling scalable
// target.
//
// Each scalable target is identified by a service namespace, resource ID, and
// scalable dimension. A scheduled action applies to the scalable target identified
// by those three attributes. You cannot create a scheduled action until you
// have registered the resource as a scalable target using RegisterScalableTarget.
//
// To update an action, specify its name and the parameters that you want to
// change. If you don't specify start and end times, the old values are deleted.
// Any other parameters that you don't specify are not changed by this update
// request.
//
// You can view the scheduled actions using DescribeScheduledActions. If you
// are no longer using a scheduled action, you can delete it using DeleteScheduledAction.
//
// Learn more about how to work with scheduled actions in the Application Auto
// Scaling User Guide (https://docs.aws.amazon.com/autoscaling/application/userguide/what-is-application-auto-scaling.html).
//
//    // Example sending a request using PutScheduledActionRequest.
//    req := client.PutScheduledActionRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/application-autoscaling-2016-02-06/PutScheduledAction
func (c *Client) PutScheduledActionRequest(input *types.PutScheduledActionInput) PutScheduledActionRequest {
	op := &aws.Operation{
		Name:       opPutScheduledAction,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &types.PutScheduledActionInput{}
	}

	req := c.newRequest(op, input, &types.PutScheduledActionOutput{})
	return PutScheduledActionRequest{Request: req, Input: input, Copy: c.PutScheduledActionRequest}
}

// PutScheduledActionRequest is the request type for the
// PutScheduledAction API operation.
type PutScheduledActionRequest struct {
	*aws.Request
	Input *types.PutScheduledActionInput
	Copy  func(*types.PutScheduledActionInput) PutScheduledActionRequest
}

// Send marshals and sends the PutScheduledAction API request.
func (r PutScheduledActionRequest) Send(ctx context.Context) (*PutScheduledActionResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &PutScheduledActionResponse{
		PutScheduledActionOutput: r.Request.Data.(*types.PutScheduledActionOutput),
		response:                 &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// PutScheduledActionResponse is the response type for the
// PutScheduledAction API operation.
type PutScheduledActionResponse struct {
	*types.PutScheduledActionOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// PutScheduledAction request.
func (r *PutScheduledActionResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
