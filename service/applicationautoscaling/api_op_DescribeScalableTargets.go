// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package applicationautoscaling

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/applicationautoscaling/types"
)

const opDescribeScalableTargets = "DescribeScalableTargets"

// DescribeScalableTargetsRequest returns a request value for making API operation for
// Application Auto Scaling.
//
// Gets information about the scalable targets in the specified namespace.
//
// You can filter the results using ResourceIds and ScalableDimension.
//
// To create a scalable target or update an existing one, see RegisterScalableTarget.
// If you are no longer using a scalable target, you can deregister it using
// DeregisterScalableTarget.
//
//    // Example sending a request using DescribeScalableTargetsRequest.
//    req := client.DescribeScalableTargetsRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/application-autoscaling-2016-02-06/DescribeScalableTargets
func (c *Client) DescribeScalableTargetsRequest(input *types.DescribeScalableTargetsInput) DescribeScalableTargetsRequest {
	op := &aws.Operation{
		Name:       opDescribeScalableTargets,
		HTTPMethod: "POST",
		HTTPPath:   "/",
		Paginator: &aws.Paginator{
			InputTokens:     []string{"NextToken"},
			OutputTokens:    []string{"NextToken"},
			LimitToken:      "MaxResults",
			TruncationToken: "",
		},
	}

	if input == nil {
		input = &types.DescribeScalableTargetsInput{}
	}

	req := c.newRequest(op, input, &types.DescribeScalableTargetsOutput{})
	return DescribeScalableTargetsRequest{Request: req, Input: input, Copy: c.DescribeScalableTargetsRequest}
}

// DescribeScalableTargetsRequest is the request type for the
// DescribeScalableTargets API operation.
type DescribeScalableTargetsRequest struct {
	*aws.Request
	Input *types.DescribeScalableTargetsInput
	Copy  func(*types.DescribeScalableTargetsInput) DescribeScalableTargetsRequest
}

// Send marshals and sends the DescribeScalableTargets API request.
func (r DescribeScalableTargetsRequest) Send(ctx context.Context) (*DescribeScalableTargetsResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &DescribeScalableTargetsResponse{
		DescribeScalableTargetsOutput: r.Request.Data.(*types.DescribeScalableTargetsOutput),
		response:                      &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// NewDescribeScalableTargetsRequestPaginator returns a paginator for DescribeScalableTargets.
// Use Next method to get the next page, and CurrentPage to get the current
// response page from the paginator. Next will return false, if there are
// no more pages, or an error was encountered.
//
// Note: This operation can generate multiple requests to a service.
//
//   // Example iterating over pages.
//   req := client.DescribeScalableTargetsRequest(input)
//   p := applicationautoscaling.NewDescribeScalableTargetsRequestPaginator(req)
//
//   for p.Next(context.TODO()) {
//       page := p.CurrentPage()
//   }
//
//   if err := p.Err(); err != nil {
//       return err
//   }
//
func NewDescribeScalableTargetsPaginator(req DescribeScalableTargetsRequest) DescribeScalableTargetsPaginator {
	return DescribeScalableTargetsPaginator{
		Pager: aws.Pager{
			NewRequest: func(ctx context.Context) (*aws.Request, error) {
				var inCpy *types.DescribeScalableTargetsInput
				if req.Input != nil {
					tmp := *req.Input
					inCpy = &tmp
				}

				newReq := req.Copy(inCpy)
				newReq.SetContext(ctx)
				return newReq.Request, nil
			},
		},
	}
}

// DescribeScalableTargetsPaginator is used to paginate the request. This can be done by
// calling Next and CurrentPage.
type DescribeScalableTargetsPaginator struct {
	aws.Pager
}

func (p *DescribeScalableTargetsPaginator) CurrentPage() *types.DescribeScalableTargetsOutput {
	return p.Pager.CurrentPage().(*types.DescribeScalableTargetsOutput)
}

// DescribeScalableTargetsResponse is the response type for the
// DescribeScalableTargets API operation.
type DescribeScalableTargetsResponse struct {
	*types.DescribeScalableTargetsOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// DescribeScalableTargets request.
func (r *DescribeScalableTargetsResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
