// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package applicationautoscaling

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/applicationautoscaling/types"
)

const opRegisterScalableTarget = "RegisterScalableTarget"

// RegisterScalableTargetRequest returns a request value for making API operation for
// Application Auto Scaling.
//
// Registers or updates a scalable target. A scalable target is a resource that
// Application Auto Scaling can scale out and scale in. Scalable targets are
// uniquely identified by the combination of resource ID, scalable dimension,
// and namespace.
//
// When you register a new scalable target, you must specify values for minimum
// and maximum capacity. Application Auto Scaling will not scale capacity to
// values that are outside of this range.
//
// To update a scalable target, specify the parameter that you want to change
// as well as the following parameters that identify the scalable target: resource
// ID, scalable dimension, and namespace. Any parameters that you don't specify
// are not changed by this update request.
//
// After you register a scalable target, you do not need to register it again
// to use other Application Auto Scaling operations. To see which resources
// have been registered, use DescribeScalableTargets. You can also view the
// scaling policies for a service namespace by using DescribeScalableTargets.
//
// If you no longer need a scalable target, you can deregister it by using DeregisterScalableTarget.
//
//    // Example sending a request using RegisterScalableTargetRequest.
//    req := client.RegisterScalableTargetRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/application-autoscaling-2016-02-06/RegisterScalableTarget
func (c *Client) RegisterScalableTargetRequest(input *types.RegisterScalableTargetInput) RegisterScalableTargetRequest {
	op := &aws.Operation{
		Name:       opRegisterScalableTarget,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &types.RegisterScalableTargetInput{}
	}

	req := c.newRequest(op, input, &types.RegisterScalableTargetOutput{})
	return RegisterScalableTargetRequest{Request: req, Input: input, Copy: c.RegisterScalableTargetRequest}
}

// RegisterScalableTargetRequest is the request type for the
// RegisterScalableTarget API operation.
type RegisterScalableTargetRequest struct {
	*aws.Request
	Input *types.RegisterScalableTargetInput
	Copy  func(*types.RegisterScalableTargetInput) RegisterScalableTargetRequest
}

// Send marshals and sends the RegisterScalableTarget API request.
func (r RegisterScalableTargetRequest) Send(ctx context.Context) (*RegisterScalableTargetResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &RegisterScalableTargetResponse{
		RegisterScalableTargetOutput: r.Request.Data.(*types.RegisterScalableTargetOutput),
		response:                     &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// RegisterScalableTargetResponse is the response type for the
// RegisterScalableTarget API operation.
type RegisterScalableTargetResponse struct {
	*types.RegisterScalableTargetOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// RegisterScalableTarget request.
func (r *RegisterScalableTargetResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
