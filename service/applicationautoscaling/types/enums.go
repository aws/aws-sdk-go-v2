// Code generated by smithy-go-codegen DO NOT EDIT.

package types

type AdjustmentType string

// Enum values for AdjustmentType
const (
	AdjustmentTypeChangeincapacity        AdjustmentType = "ChangeInCapacity"
	AdjustmentTypePercentchangeincapacity AdjustmentType = "PercentChangeInCapacity"
	AdjustmentTypeExactcapacity           AdjustmentType = "ExactCapacity"
)

// Values returns all known values for AdjustmentType. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (AdjustmentType) Values() []AdjustmentType {
	return []AdjustmentType{
		"ChangeInCapacity",
		"PercentChangeInCapacity",
		"ExactCapacity",
	}
}

type MetricAggregationType string

// Enum values for MetricAggregationType
const (
	MetricAggregationTypeAverage MetricAggregationType = "Average"
	MetricAggregationTypeMinimum MetricAggregationType = "Minimum"
	MetricAggregationTypeMaximum MetricAggregationType = "Maximum"
)

// Values returns all known values for MetricAggregationType. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (MetricAggregationType) Values() []MetricAggregationType {
	return []MetricAggregationType{
		"Average",
		"Minimum",
		"Maximum",
	}
}

type MetricStatistic string

// Enum values for MetricStatistic
const (
	MetricStatisticAverage     MetricStatistic = "Average"
	MetricStatisticMinimum     MetricStatistic = "Minimum"
	MetricStatisticMaximum     MetricStatistic = "Maximum"
	MetricStatisticSamplecount MetricStatistic = "SampleCount"
	MetricStatisticSum         MetricStatistic = "Sum"
)

// Values returns all known values for MetricStatistic. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (MetricStatistic) Values() []MetricStatistic {
	return []MetricStatistic{
		"Average",
		"Minimum",
		"Maximum",
		"SampleCount",
		"Sum",
	}
}

type MetricType string

// Enum values for MetricType
const (
	MetricTypeDynamodbreadcapacityutilization          MetricType = "DynamoDBReadCapacityUtilization"
	MetricTypeDynamodbwritecapacityutilization         MetricType = "DynamoDBWriteCapacityUtilization"
	MetricTypeAlbrequestcountpertarget                 MetricType = "ALBRequestCountPerTarget"
	MetricTypeRdsreaderaveragecpuutilization           MetricType = "RDSReaderAverageCPUUtilization"
	MetricTypeRdsreaderaveragedatabaseconnections      MetricType = "RDSReaderAverageDatabaseConnections"
	MetricTypeEc2spotfleetrequestaveragecpuutilization MetricType = "EC2SpotFleetRequestAverageCPUUtilization"
	MetricTypeEc2spotfleetrequestaveragenetworkin      MetricType = "EC2SpotFleetRequestAverageNetworkIn"
	MetricTypeEc2spotfleetrequestaveragenetworkout     MetricType = "EC2SpotFleetRequestAverageNetworkOut"
	MetricTypeSagemakervariantinvocationsperinstance   MetricType = "SageMakerVariantInvocationsPerInstance"
	MetricTypeEcsserviceaveragecpuutilization          MetricType = "ECSServiceAverageCPUUtilization"
	MetricTypeEcsserviceaveragememoryutilization       MetricType = "ECSServiceAverageMemoryUtilization"
	MetricTypeAppstreamaveragecapacityutilization      MetricType = "AppStreamAverageCapacityUtilization"
	MetricTypeComprehendinferenceutilization           MetricType = "ComprehendInferenceUtilization"
	MetricTypeLambdaprovisionedconcurrencyutilization  MetricType = "LambdaProvisionedConcurrencyUtilization"
	MetricTypeCassandrareadcapacityutilization         MetricType = "CassandraReadCapacityUtilization"
	MetricTypeCassandrawritecapacityutilization        MetricType = "CassandraWriteCapacityUtilization"
	MetricTypeKafkabrokerstorageutilization            MetricType = "KafkaBrokerStorageUtilization"
)

// Values returns all known values for MetricType. Note that this can be expanded
// in the future, and so it is only as up to date as the client. The ordering of
// this slice is not guaranteed to be stable across updates.
func (MetricType) Values() []MetricType {
	return []MetricType{
		"DynamoDBReadCapacityUtilization",
		"DynamoDBWriteCapacityUtilization",
		"ALBRequestCountPerTarget",
		"RDSReaderAverageCPUUtilization",
		"RDSReaderAverageDatabaseConnections",
		"EC2SpotFleetRequestAverageCPUUtilization",
		"EC2SpotFleetRequestAverageNetworkIn",
		"EC2SpotFleetRequestAverageNetworkOut",
		"SageMakerVariantInvocationsPerInstance",
		"ECSServiceAverageCPUUtilization",
		"ECSServiceAverageMemoryUtilization",
		"AppStreamAverageCapacityUtilization",
		"ComprehendInferenceUtilization",
		"LambdaProvisionedConcurrencyUtilization",
		"CassandraReadCapacityUtilization",
		"CassandraWriteCapacityUtilization",
		"KafkaBrokerStorageUtilization",
	}
}

type PolicyType string

// Enum values for PolicyType
const (
	PolicyTypeStepscaling           PolicyType = "StepScaling"
	PolicyTypeTargettrackingscaling PolicyType = "TargetTrackingScaling"
)

// Values returns all known values for PolicyType. Note that this can be expanded
// in the future, and so it is only as up to date as the client. The ordering of
// this slice is not guaranteed to be stable across updates.
func (PolicyType) Values() []PolicyType {
	return []PolicyType{
		"StepScaling",
		"TargetTrackingScaling",
	}
}

type ScalableDimension string

// Enum values for ScalableDimension
const (
	ScalableDimensionEcsservicedesiredcount                           ScalableDimension = "ecs:service:DesiredCount"
	ScalableDimensionEc2spotfleetrequesttargetcapacity                ScalableDimension = "ec2:spot-fleet-request:TargetCapacity"
	ScalableDimensionEmrinstancegroupinstancecount                    ScalableDimension = "elasticmapreduce:instancegroup:InstanceCount"
	ScalableDimensionAppstreamfleetdesiredcapacity                    ScalableDimension = "appstream:fleet:DesiredCapacity"
	ScalableDimensionDynamodbtablereadcapacityunits                   ScalableDimension = "dynamodb:table:ReadCapacityUnits"
	ScalableDimensionDynamodbtablewritecapacityunits                  ScalableDimension = "dynamodb:table:WriteCapacityUnits"
	ScalableDimensionDynamodbindexreadcapacityunits                   ScalableDimension = "dynamodb:index:ReadCapacityUnits"
	ScalableDimensionDynamodbindexwritecapacityunits                  ScalableDimension = "dynamodb:index:WriteCapacityUnits"
	ScalableDimensionRdsclusterreadreplicacount                       ScalableDimension = "rds:cluster:ReadReplicaCount"
	ScalableDimensionSagemakervariantdesiredinstancecount             ScalableDimension = "sagemaker:variant:DesiredInstanceCount"
	ScalableDimensionCustomresourcescalabledimension                  ScalableDimension = "custom-resource:ResourceType:Property"
	ScalableDimensionComprehenddocclassifierendpointinferenceunits    ScalableDimension = "comprehend:document-classifier-endpoint:DesiredInferenceUnits"
	ScalableDimensionComprehendentityrecognizerendpointinferenceunits ScalableDimension = "comprehend:entity-recognizer-endpoint:DesiredInferenceUnits"
	ScalableDimensionLambdafunctionprovisionedconcurrency             ScalableDimension = "lambda:function:ProvisionedConcurrency"
	ScalableDimensionCassandratablereadcapacityunits                  ScalableDimension = "cassandra:table:ReadCapacityUnits"
	ScalableDimensionCassandratablewritecapacityunits                 ScalableDimension = "cassandra:table:WriteCapacityUnits"
	ScalableDimensionKafkabrokerstoragevolumesize                     ScalableDimension = "kafka:broker-storage:VolumeSize"
)

// Values returns all known values for ScalableDimension. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (ScalableDimension) Values() []ScalableDimension {
	return []ScalableDimension{
		"ecs:service:DesiredCount",
		"ec2:spot-fleet-request:TargetCapacity",
		"elasticmapreduce:instancegroup:InstanceCount",
		"appstream:fleet:DesiredCapacity",
		"dynamodb:table:ReadCapacityUnits",
		"dynamodb:table:WriteCapacityUnits",
		"dynamodb:index:ReadCapacityUnits",
		"dynamodb:index:WriteCapacityUnits",
		"rds:cluster:ReadReplicaCount",
		"sagemaker:variant:DesiredInstanceCount",
		"custom-resource:ResourceType:Property",
		"comprehend:document-classifier-endpoint:DesiredInferenceUnits",
		"comprehend:entity-recognizer-endpoint:DesiredInferenceUnits",
		"lambda:function:ProvisionedConcurrency",
		"cassandra:table:ReadCapacityUnits",
		"cassandra:table:WriteCapacityUnits",
		"kafka:broker-storage:VolumeSize",
	}
}

type ScalingActivityStatusCode string

// Enum values for ScalingActivityStatusCode
const (
	ScalingActivityStatusCodePending     ScalingActivityStatusCode = "Pending"
	ScalingActivityStatusCodeInprogress  ScalingActivityStatusCode = "InProgress"
	ScalingActivityStatusCodeSuccessful  ScalingActivityStatusCode = "Successful"
	ScalingActivityStatusCodeOverridden  ScalingActivityStatusCode = "Overridden"
	ScalingActivityStatusCodeUnfulfilled ScalingActivityStatusCode = "Unfulfilled"
	ScalingActivityStatusCodeFailed      ScalingActivityStatusCode = "Failed"
)

// Values returns all known values for ScalingActivityStatusCode. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
// The ordering of this slice is not guaranteed to be stable across updates.
func (ScalingActivityStatusCode) Values() []ScalingActivityStatusCode {
	return []ScalingActivityStatusCode{
		"Pending",
		"InProgress",
		"Successful",
		"Overridden",
		"Unfulfilled",
		"Failed",
	}
}

type ServiceNamespace string

// Enum values for ServiceNamespace
const (
	ServiceNamespaceEcs             ServiceNamespace = "ecs"
	ServiceNamespaceEmr             ServiceNamespace = "elasticmapreduce"
	ServiceNamespaceEc2             ServiceNamespace = "ec2"
	ServiceNamespaceAppstream       ServiceNamespace = "appstream"
	ServiceNamespaceDynamodb        ServiceNamespace = "dynamodb"
	ServiceNamespaceRds             ServiceNamespace = "rds"
	ServiceNamespaceSagemaker       ServiceNamespace = "sagemaker"
	ServiceNamespaceCustom_resource ServiceNamespace = "custom-resource"
	ServiceNamespaceComprehend      ServiceNamespace = "comprehend"
	ServiceNamespaceLambda          ServiceNamespace = "lambda"
	ServiceNamespaceCassandra       ServiceNamespace = "cassandra"
	ServiceNamespaceKafka           ServiceNamespace = "kafka"
)

// Values returns all known values for ServiceNamespace. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (ServiceNamespace) Values() []ServiceNamespace {
	return []ServiceNamespace{
		"ecs",
		"elasticmapreduce",
		"ec2",
		"appstream",
		"dynamodb",
		"rds",
		"sagemaker",
		"custom-resource",
		"comprehend",
		"lambda",
		"cassandra",
		"kafka",
	}
}
