// Code generated by smithy-go-codegen DO NOT EDIT.

package types

type AggregationType string

// Enum values for AggregationType
const (
	AggregationTypeNone        AggregationType = "None"
	AggregationTypeSingle_file AggregationType = "SingleFile"
)

// Values returns all known values for AggregationType. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (AggregationType) Values() []AggregationType {
	return []AggregationType{
		"None",
		"SingleFile",
	}
}

type AmplitudeConnectorOperator string

// Enum values for AmplitudeConnectorOperator
const (
	AmplitudeConnectorOperatorBetween AmplitudeConnectorOperator = "BETWEEN"
)

// Values returns all known values for AmplitudeConnectorOperator. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
// The ordering of this slice is not guaranteed to be stable across updates.
func (AmplitudeConnectorOperator) Values() []AmplitudeConnectorOperator {
	return []AmplitudeConnectorOperator{
		"BETWEEN",
	}
}

type ConnectionMode string

// Enum values for ConnectionMode
const (
	ConnectionModePublic  ConnectionMode = "Public"
	ConnectionModePrivate ConnectionMode = "Private"
)

// Values returns all known values for ConnectionMode. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (ConnectionMode) Values() []ConnectionMode {
	return []ConnectionMode{
		"Public",
		"Private",
	}
}

type ConnectorType string

// Enum values for ConnectorType
const (
	ConnectorTypeSalesforce      ConnectorType = "Salesforce"
	ConnectorTypeSingular        ConnectorType = "Singular"
	ConnectorTypeSlack           ConnectorType = "Slack"
	ConnectorTypeRedshift        ConnectorType = "Redshift"
	ConnectorTypeS3              ConnectorType = "S3"
	ConnectorTypeMarketo         ConnectorType = "Marketo"
	ConnectorTypeGoogleanalytics ConnectorType = "Googleanalytics"
	ConnectorTypeZendesk         ConnectorType = "Zendesk"
	ConnectorTypeServicenow      ConnectorType = "Servicenow"
	ConnectorTypeDatadog         ConnectorType = "Datadog"
	ConnectorTypeTrendmicro      ConnectorType = "Trendmicro"
	ConnectorTypeSnowflake       ConnectorType = "Snowflake"
	ConnectorTypeDynatrace       ConnectorType = "Dynatrace"
	ConnectorTypeInfornexus      ConnectorType = "Infornexus"
	ConnectorTypeAmplitude       ConnectorType = "Amplitude"
	ConnectorTypeVeeva           ConnectorType = "Veeva"
	ConnectorTypeEventbridge     ConnectorType = "EventBridge"
)

// Values returns all known values for ConnectorType. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (ConnectorType) Values() []ConnectorType {
	return []ConnectorType{
		"Salesforce",
		"Singular",
		"Slack",
		"Redshift",
		"S3",
		"Marketo",
		"Googleanalytics",
		"Zendesk",
		"Servicenow",
		"Datadog",
		"Trendmicro",
		"Snowflake",
		"Dynatrace",
		"Infornexus",
		"Amplitude",
		"Veeva",
		"EventBridge",
	}
}

type DatadogConnectorOperator string

// Enum values for DatadogConnectorOperator
const (
	DatadogConnectorOperatorProjection            DatadogConnectorOperator = "PROJECTION"
	DatadogConnectorOperatorBetween               DatadogConnectorOperator = "BETWEEN"
	DatadogConnectorOperatorEqual_to              DatadogConnectorOperator = "EQUAL_TO"
	DatadogConnectorOperatorAddition              DatadogConnectorOperator = "ADDITION"
	DatadogConnectorOperatorMultiplication        DatadogConnectorOperator = "MULTIPLICATION"
	DatadogConnectorOperatorDivision              DatadogConnectorOperator = "DIVISION"
	DatadogConnectorOperatorSubtraction           DatadogConnectorOperator = "SUBTRACTION"
	DatadogConnectorOperatorMask_all              DatadogConnectorOperator = "MASK_ALL"
	DatadogConnectorOperatorMask_first_n          DatadogConnectorOperator = "MASK_FIRST_N"
	DatadogConnectorOperatorMask_last_n           DatadogConnectorOperator = "MASK_LAST_N"
	DatadogConnectorOperatorValidate_non_null     DatadogConnectorOperator = "VALIDATE_NON_NULL"
	DatadogConnectorOperatorValidate_non_zero     DatadogConnectorOperator = "VALIDATE_NON_ZERO"
	DatadogConnectorOperatorValidate_non_negative DatadogConnectorOperator = "VALIDATE_NON_NEGATIVE"
	DatadogConnectorOperatorValidate_numeric      DatadogConnectorOperator = "VALIDATE_NUMERIC"
	DatadogConnectorOperatorNo_op                 DatadogConnectorOperator = "NO_OP"
)

// Values returns all known values for DatadogConnectorOperator. Note that this can
// be expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (DatadogConnectorOperator) Values() []DatadogConnectorOperator {
	return []DatadogConnectorOperator{
		"PROJECTION",
		"BETWEEN",
		"EQUAL_TO",
		"ADDITION",
		"MULTIPLICATION",
		"DIVISION",
		"SUBTRACTION",
		"MASK_ALL",
		"MASK_FIRST_N",
		"MASK_LAST_N",
		"VALIDATE_NON_NULL",
		"VALIDATE_NON_ZERO",
		"VALIDATE_NON_NEGATIVE",
		"VALIDATE_NUMERIC",
		"NO_OP",
	}
}

type DataPullMode string

// Enum values for DataPullMode
const (
	DataPullModeIncremental DataPullMode = "Incremental"
	DataPullModeComplete    DataPullMode = "Complete"
)

// Values returns all known values for DataPullMode. Note that this can be expanded
// in the future, and so it is only as up to date as the client. The ordering of
// this slice is not guaranteed to be stable across updates.
func (DataPullMode) Values() []DataPullMode {
	return []DataPullMode{
		"Incremental",
		"Complete",
	}
}

type DynatraceConnectorOperator string

// Enum values for DynatraceConnectorOperator
const (
	DynatraceConnectorOperatorProjection            DynatraceConnectorOperator = "PROJECTION"
	DynatraceConnectorOperatorBetween               DynatraceConnectorOperator = "BETWEEN"
	DynatraceConnectorOperatorEqual_to              DynatraceConnectorOperator = "EQUAL_TO"
	DynatraceConnectorOperatorAddition              DynatraceConnectorOperator = "ADDITION"
	DynatraceConnectorOperatorMultiplication        DynatraceConnectorOperator = "MULTIPLICATION"
	DynatraceConnectorOperatorDivision              DynatraceConnectorOperator = "DIVISION"
	DynatraceConnectorOperatorSubtraction           DynatraceConnectorOperator = "SUBTRACTION"
	DynatraceConnectorOperatorMask_all              DynatraceConnectorOperator = "MASK_ALL"
	DynatraceConnectorOperatorMask_first_n          DynatraceConnectorOperator = "MASK_FIRST_N"
	DynatraceConnectorOperatorMask_last_n           DynatraceConnectorOperator = "MASK_LAST_N"
	DynatraceConnectorOperatorValidate_non_null     DynatraceConnectorOperator = "VALIDATE_NON_NULL"
	DynatraceConnectorOperatorValidate_non_zero     DynatraceConnectorOperator = "VALIDATE_NON_ZERO"
	DynatraceConnectorOperatorValidate_non_negative DynatraceConnectorOperator = "VALIDATE_NON_NEGATIVE"
	DynatraceConnectorOperatorValidate_numeric      DynatraceConnectorOperator = "VALIDATE_NUMERIC"
	DynatraceConnectorOperatorNo_op                 DynatraceConnectorOperator = "NO_OP"
)

// Values returns all known values for DynatraceConnectorOperator. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
// The ordering of this slice is not guaranteed to be stable across updates.
func (DynatraceConnectorOperator) Values() []DynatraceConnectorOperator {
	return []DynatraceConnectorOperator{
		"PROJECTION",
		"BETWEEN",
		"EQUAL_TO",
		"ADDITION",
		"MULTIPLICATION",
		"DIVISION",
		"SUBTRACTION",
		"MASK_ALL",
		"MASK_FIRST_N",
		"MASK_LAST_N",
		"VALIDATE_NON_NULL",
		"VALIDATE_NON_ZERO",
		"VALIDATE_NON_NEGATIVE",
		"VALIDATE_NUMERIC",
		"NO_OP",
	}
}

type ExecutionStatus string

// Enum values for ExecutionStatus
const (
	ExecutionStatusInprogress ExecutionStatus = "InProgress"
	ExecutionStatusSuccessful ExecutionStatus = "Successful"
	ExecutionStatusError      ExecutionStatus = "Error"
)

// Values returns all known values for ExecutionStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (ExecutionStatus) Values() []ExecutionStatus {
	return []ExecutionStatus{
		"InProgress",
		"Successful",
		"Error",
	}
}

type FileType string

// Enum values for FileType
const (
	FileTypeCsv     FileType = "CSV"
	FileTypeJson    FileType = "JSON"
	FileTypeParquet FileType = "PARQUET"
)

// Values returns all known values for FileType. Note that this can be expanded in
// the future, and so it is only as up to date as the client. The ordering of this
// slice is not guaranteed to be stable across updates.
func (FileType) Values() []FileType {
	return []FileType{
		"CSV",
		"JSON",
		"PARQUET",
	}
}

type FlowStatus string

// Enum values for FlowStatus
const (
	FlowStatusActive     FlowStatus = "Active"
	FlowStatusDeprecated FlowStatus = "Deprecated"
	FlowStatusDeleted    FlowStatus = "Deleted"
	FlowStatusDraft      FlowStatus = "Draft"
	FlowStatusErrored    FlowStatus = "Errored"
	FlowStatusSuspended  FlowStatus = "Suspended"
)

// Values returns all known values for FlowStatus. Note that this can be expanded
// in the future, and so it is only as up to date as the client. The ordering of
// this slice is not guaranteed to be stable across updates.
func (FlowStatus) Values() []FlowStatus {
	return []FlowStatus{
		"Active",
		"Deprecated",
		"Deleted",
		"Draft",
		"Errored",
		"Suspended",
	}
}

type GoogleAnalyticsConnectorOperator string

// Enum values for GoogleAnalyticsConnectorOperator
const (
	GoogleAnalyticsConnectorOperatorProjection GoogleAnalyticsConnectorOperator = "PROJECTION"
	GoogleAnalyticsConnectorOperatorBetween    GoogleAnalyticsConnectorOperator = "BETWEEN"
)

// Values returns all known values for GoogleAnalyticsConnectorOperator. Note that
// this can be expanded in the future, and so it is only as up to date as the
// client. The ordering of this slice is not guaranteed to be stable across
// updates.
func (GoogleAnalyticsConnectorOperator) Values() []GoogleAnalyticsConnectorOperator {
	return []GoogleAnalyticsConnectorOperator{
		"PROJECTION",
		"BETWEEN",
	}
}

type InforNexusConnectorOperator string

// Enum values for InforNexusConnectorOperator
const (
	InforNexusConnectorOperatorProjection            InforNexusConnectorOperator = "PROJECTION"
	InforNexusConnectorOperatorBetween               InforNexusConnectorOperator = "BETWEEN"
	InforNexusConnectorOperatorEqual_to              InforNexusConnectorOperator = "EQUAL_TO"
	InforNexusConnectorOperatorAddition              InforNexusConnectorOperator = "ADDITION"
	InforNexusConnectorOperatorMultiplication        InforNexusConnectorOperator = "MULTIPLICATION"
	InforNexusConnectorOperatorDivision              InforNexusConnectorOperator = "DIVISION"
	InforNexusConnectorOperatorSubtraction           InforNexusConnectorOperator = "SUBTRACTION"
	InforNexusConnectorOperatorMask_all              InforNexusConnectorOperator = "MASK_ALL"
	InforNexusConnectorOperatorMask_first_n          InforNexusConnectorOperator = "MASK_FIRST_N"
	InforNexusConnectorOperatorMask_last_n           InforNexusConnectorOperator = "MASK_LAST_N"
	InforNexusConnectorOperatorValidate_non_null     InforNexusConnectorOperator = "VALIDATE_NON_NULL"
	InforNexusConnectorOperatorValidate_non_zero     InforNexusConnectorOperator = "VALIDATE_NON_ZERO"
	InforNexusConnectorOperatorValidate_non_negative InforNexusConnectorOperator = "VALIDATE_NON_NEGATIVE"
	InforNexusConnectorOperatorValidate_numeric      InforNexusConnectorOperator = "VALIDATE_NUMERIC"
	InforNexusConnectorOperatorNo_op                 InforNexusConnectorOperator = "NO_OP"
)

// Values returns all known values for InforNexusConnectorOperator. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
// The ordering of this slice is not guaranteed to be stable across updates.
func (InforNexusConnectorOperator) Values() []InforNexusConnectorOperator {
	return []InforNexusConnectorOperator{
		"PROJECTION",
		"BETWEEN",
		"EQUAL_TO",
		"ADDITION",
		"MULTIPLICATION",
		"DIVISION",
		"SUBTRACTION",
		"MASK_ALL",
		"MASK_FIRST_N",
		"MASK_LAST_N",
		"VALIDATE_NON_NULL",
		"VALIDATE_NON_ZERO",
		"VALIDATE_NON_NEGATIVE",
		"VALIDATE_NUMERIC",
		"NO_OP",
	}
}

type MarketoConnectorOperator string

// Enum values for MarketoConnectorOperator
const (
	MarketoConnectorOperatorProjection            MarketoConnectorOperator = "PROJECTION"
	MarketoConnectorOperatorLess_than             MarketoConnectorOperator = "LESS_THAN"
	MarketoConnectorOperatorGreater_than          MarketoConnectorOperator = "GREATER_THAN"
	MarketoConnectorOperatorBetween               MarketoConnectorOperator = "BETWEEN"
	MarketoConnectorOperatorAddition              MarketoConnectorOperator = "ADDITION"
	MarketoConnectorOperatorMultiplication        MarketoConnectorOperator = "MULTIPLICATION"
	MarketoConnectorOperatorDivision              MarketoConnectorOperator = "DIVISION"
	MarketoConnectorOperatorSubtraction           MarketoConnectorOperator = "SUBTRACTION"
	MarketoConnectorOperatorMask_all              MarketoConnectorOperator = "MASK_ALL"
	MarketoConnectorOperatorMask_first_n          MarketoConnectorOperator = "MASK_FIRST_N"
	MarketoConnectorOperatorMask_last_n           MarketoConnectorOperator = "MASK_LAST_N"
	MarketoConnectorOperatorValidate_non_null     MarketoConnectorOperator = "VALIDATE_NON_NULL"
	MarketoConnectorOperatorValidate_non_zero     MarketoConnectorOperator = "VALIDATE_NON_ZERO"
	MarketoConnectorOperatorValidate_non_negative MarketoConnectorOperator = "VALIDATE_NON_NEGATIVE"
	MarketoConnectorOperatorValidate_numeric      MarketoConnectorOperator = "VALIDATE_NUMERIC"
	MarketoConnectorOperatorNo_op                 MarketoConnectorOperator = "NO_OP"
)

// Values returns all known values for MarketoConnectorOperator. Note that this can
// be expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (MarketoConnectorOperator) Values() []MarketoConnectorOperator {
	return []MarketoConnectorOperator{
		"PROJECTION",
		"LESS_THAN",
		"GREATER_THAN",
		"BETWEEN",
		"ADDITION",
		"MULTIPLICATION",
		"DIVISION",
		"SUBTRACTION",
		"MASK_ALL",
		"MASK_FIRST_N",
		"MASK_LAST_N",
		"VALIDATE_NON_NULL",
		"VALIDATE_NON_ZERO",
		"VALIDATE_NON_NEGATIVE",
		"VALIDATE_NUMERIC",
		"NO_OP",
	}
}

type Operator string

// Enum values for Operator
const (
	OperatorProjection               Operator = "PROJECTION"
	OperatorLess_than                Operator = "LESS_THAN"
	OperatorGreater_than             Operator = "GREATER_THAN"
	OperatorContains                 Operator = "CONTAINS"
	OperatorBetween                  Operator = "BETWEEN"
	OperatorLess_than_or_equal_to    Operator = "LESS_THAN_OR_EQUAL_TO"
	OperatorGreater_than_or_equal_to Operator = "GREATER_THAN_OR_EQUAL_TO"
	OperatorEqual_to                 Operator = "EQUAL_TO"
	OperatorNot_equal_to             Operator = "NOT_EQUAL_TO"
	OperatorAddition                 Operator = "ADDITION"
	OperatorMultiplication           Operator = "MULTIPLICATION"
	OperatorDivision                 Operator = "DIVISION"
	OperatorSubtraction              Operator = "SUBTRACTION"
	OperatorMask_all                 Operator = "MASK_ALL"
	OperatorMask_first_n             Operator = "MASK_FIRST_N"
	OperatorMask_last_n              Operator = "MASK_LAST_N"
	OperatorValidate_non_null        Operator = "VALIDATE_NON_NULL"
	OperatorValidate_non_zero        Operator = "VALIDATE_NON_ZERO"
	OperatorValidate_non_negative    Operator = "VALIDATE_NON_NEGATIVE"
	OperatorValidate_numeric         Operator = "VALIDATE_NUMERIC"
	OperatorNo_op                    Operator = "NO_OP"
)

// Values returns all known values for Operator. Note that this can be expanded in
// the future, and so it is only as up to date as the client. The ordering of this
// slice is not guaranteed to be stable across updates.
func (Operator) Values() []Operator {
	return []Operator{
		"PROJECTION",
		"LESS_THAN",
		"GREATER_THAN",
		"CONTAINS",
		"BETWEEN",
		"LESS_THAN_OR_EQUAL_TO",
		"GREATER_THAN_OR_EQUAL_TO",
		"EQUAL_TO",
		"NOT_EQUAL_TO",
		"ADDITION",
		"MULTIPLICATION",
		"DIVISION",
		"SUBTRACTION",
		"MASK_ALL",
		"MASK_FIRST_N",
		"MASK_LAST_N",
		"VALIDATE_NON_NULL",
		"VALIDATE_NON_ZERO",
		"VALIDATE_NON_NEGATIVE",
		"VALIDATE_NUMERIC",
		"NO_OP",
	}
}

type OperatorPropertiesKeys string

// Enum values for OperatorPropertiesKeys
const (
	OperatorPropertiesKeysValue                       OperatorPropertiesKeys = "VALUE"
	OperatorPropertiesKeysValues                      OperatorPropertiesKeys = "VALUES"
	OperatorPropertiesKeysData_type                   OperatorPropertiesKeys = "DATA_TYPE"
	OperatorPropertiesKeysUpper_bound                 OperatorPropertiesKeys = "UPPER_BOUND"
	OperatorPropertiesKeysLower_bound                 OperatorPropertiesKeys = "LOWER_BOUND"
	OperatorPropertiesKeysSource_data_type            OperatorPropertiesKeys = "SOURCE_DATA_TYPE"
	OperatorPropertiesKeysDestination_data_type       OperatorPropertiesKeys = "DESTINATION_DATA_TYPE"
	OperatorPropertiesKeysValidation_action           OperatorPropertiesKeys = "VALIDATION_ACTION"
	OperatorPropertiesKeysMask_value                  OperatorPropertiesKeys = "MASK_VALUE"
	OperatorPropertiesKeysMask_length                 OperatorPropertiesKeys = "MASK_LENGTH"
	OperatorPropertiesKeysTruncate_length             OperatorPropertiesKeys = "TRUNCATE_LENGTH"
	OperatorPropertiesKeysMath_operation_fields_order OperatorPropertiesKeys = "MATH_OPERATION_FIELDS_ORDER"
	OperatorPropertiesKeysConcat_format               OperatorPropertiesKeys = "CONCAT_FORMAT"
	OperatorPropertiesKeysSubfield_category_map       OperatorPropertiesKeys = "SUBFIELD_CATEGORY_MAP"
)

// Values returns all known values for OperatorPropertiesKeys. Note that this can
// be expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (OperatorPropertiesKeys) Values() []OperatorPropertiesKeys {
	return []OperatorPropertiesKeys{
		"VALUE",
		"VALUES",
		"DATA_TYPE",
		"UPPER_BOUND",
		"LOWER_BOUND",
		"SOURCE_DATA_TYPE",
		"DESTINATION_DATA_TYPE",
		"VALIDATION_ACTION",
		"MASK_VALUE",
		"MASK_LENGTH",
		"TRUNCATE_LENGTH",
		"MATH_OPERATION_FIELDS_ORDER",
		"CONCAT_FORMAT",
		"SUBFIELD_CATEGORY_MAP",
	}
}

type PrefixFormat string

// Enum values for PrefixFormat
const (
	PrefixFormatYear   PrefixFormat = "YEAR"
	PrefixFormatMonth  PrefixFormat = "MONTH"
	PrefixFormatDay    PrefixFormat = "DAY"
	PrefixFormatHour   PrefixFormat = "HOUR"
	PrefixFormatMinute PrefixFormat = "MINUTE"
)

// Values returns all known values for PrefixFormat. Note that this can be expanded
// in the future, and so it is only as up to date as the client. The ordering of
// this slice is not guaranteed to be stable across updates.
func (PrefixFormat) Values() []PrefixFormat {
	return []PrefixFormat{
		"YEAR",
		"MONTH",
		"DAY",
		"HOUR",
		"MINUTE",
	}
}

type PrefixType string

// Enum values for PrefixType
const (
	PrefixTypeFilename          PrefixType = "FILENAME"
	PrefixTypePath              PrefixType = "PATH"
	PrefixTypePath_and_filename PrefixType = "PATH_AND_FILENAME"
)

// Values returns all known values for PrefixType. Note that this can be expanded
// in the future, and so it is only as up to date as the client. The ordering of
// this slice is not guaranteed to be stable across updates.
func (PrefixType) Values() []PrefixType {
	return []PrefixType{
		"FILENAME",
		"PATH",
		"PATH_AND_FILENAME",
	}
}

type S3ConnectorOperator string

// Enum values for S3ConnectorOperator
const (
	S3ConnectorOperatorProjection               S3ConnectorOperator = "PROJECTION"
	S3ConnectorOperatorLess_than                S3ConnectorOperator = "LESS_THAN"
	S3ConnectorOperatorGreater_than             S3ConnectorOperator = "GREATER_THAN"
	S3ConnectorOperatorBetween                  S3ConnectorOperator = "BETWEEN"
	S3ConnectorOperatorLess_than_or_equal_to    S3ConnectorOperator = "LESS_THAN_OR_EQUAL_TO"
	S3ConnectorOperatorGreater_than_or_equal_to S3ConnectorOperator = "GREATER_THAN_OR_EQUAL_TO"
	S3ConnectorOperatorEqual_to                 S3ConnectorOperator = "EQUAL_TO"
	S3ConnectorOperatorNot_equal_to             S3ConnectorOperator = "NOT_EQUAL_TO"
	S3ConnectorOperatorAddition                 S3ConnectorOperator = "ADDITION"
	S3ConnectorOperatorMultiplication           S3ConnectorOperator = "MULTIPLICATION"
	S3ConnectorOperatorDivision                 S3ConnectorOperator = "DIVISION"
	S3ConnectorOperatorSubtraction              S3ConnectorOperator = "SUBTRACTION"
	S3ConnectorOperatorMask_all                 S3ConnectorOperator = "MASK_ALL"
	S3ConnectorOperatorMask_first_n             S3ConnectorOperator = "MASK_FIRST_N"
	S3ConnectorOperatorMask_last_n              S3ConnectorOperator = "MASK_LAST_N"
	S3ConnectorOperatorValidate_non_null        S3ConnectorOperator = "VALIDATE_NON_NULL"
	S3ConnectorOperatorValidate_non_zero        S3ConnectorOperator = "VALIDATE_NON_ZERO"
	S3ConnectorOperatorValidate_non_negative    S3ConnectorOperator = "VALIDATE_NON_NEGATIVE"
	S3ConnectorOperatorValidate_numeric         S3ConnectorOperator = "VALIDATE_NUMERIC"
	S3ConnectorOperatorNo_op                    S3ConnectorOperator = "NO_OP"
)

// Values returns all known values for S3ConnectorOperator. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (S3ConnectorOperator) Values() []S3ConnectorOperator {
	return []S3ConnectorOperator{
		"PROJECTION",
		"LESS_THAN",
		"GREATER_THAN",
		"BETWEEN",
		"LESS_THAN_OR_EQUAL_TO",
		"GREATER_THAN_OR_EQUAL_TO",
		"EQUAL_TO",
		"NOT_EQUAL_TO",
		"ADDITION",
		"MULTIPLICATION",
		"DIVISION",
		"SUBTRACTION",
		"MASK_ALL",
		"MASK_FIRST_N",
		"MASK_LAST_N",
		"VALIDATE_NON_NULL",
		"VALIDATE_NON_ZERO",
		"VALIDATE_NON_NEGATIVE",
		"VALIDATE_NUMERIC",
		"NO_OP",
	}
}

type SalesforceConnectorOperator string

// Enum values for SalesforceConnectorOperator
const (
	SalesforceConnectorOperatorProjection               SalesforceConnectorOperator = "PROJECTION"
	SalesforceConnectorOperatorLess_than                SalesforceConnectorOperator = "LESS_THAN"
	SalesforceConnectorOperatorContains                 SalesforceConnectorOperator = "CONTAINS"
	SalesforceConnectorOperatorGreater_than             SalesforceConnectorOperator = "GREATER_THAN"
	SalesforceConnectorOperatorBetween                  SalesforceConnectorOperator = "BETWEEN"
	SalesforceConnectorOperatorLess_than_or_equal_to    SalesforceConnectorOperator = "LESS_THAN_OR_EQUAL_TO"
	SalesforceConnectorOperatorGreater_than_or_equal_to SalesforceConnectorOperator = "GREATER_THAN_OR_EQUAL_TO"
	SalesforceConnectorOperatorEqual_to                 SalesforceConnectorOperator = "EQUAL_TO"
	SalesforceConnectorOperatorNot_equal_to             SalesforceConnectorOperator = "NOT_EQUAL_TO"
	SalesforceConnectorOperatorAddition                 SalesforceConnectorOperator = "ADDITION"
	SalesforceConnectorOperatorMultiplication           SalesforceConnectorOperator = "MULTIPLICATION"
	SalesforceConnectorOperatorDivision                 SalesforceConnectorOperator = "DIVISION"
	SalesforceConnectorOperatorSubtraction              SalesforceConnectorOperator = "SUBTRACTION"
	SalesforceConnectorOperatorMask_all                 SalesforceConnectorOperator = "MASK_ALL"
	SalesforceConnectorOperatorMask_first_n             SalesforceConnectorOperator = "MASK_FIRST_N"
	SalesforceConnectorOperatorMask_last_n              SalesforceConnectorOperator = "MASK_LAST_N"
	SalesforceConnectorOperatorValidate_non_null        SalesforceConnectorOperator = "VALIDATE_NON_NULL"
	SalesforceConnectorOperatorValidate_non_zero        SalesforceConnectorOperator = "VALIDATE_NON_ZERO"
	SalesforceConnectorOperatorValidate_non_negative    SalesforceConnectorOperator = "VALIDATE_NON_NEGATIVE"
	SalesforceConnectorOperatorValidate_numeric         SalesforceConnectorOperator = "VALIDATE_NUMERIC"
	SalesforceConnectorOperatorNo_op                    SalesforceConnectorOperator = "NO_OP"
)

// Values returns all known values for SalesforceConnectorOperator. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
// The ordering of this slice is not guaranteed to be stable across updates.
func (SalesforceConnectorOperator) Values() []SalesforceConnectorOperator {
	return []SalesforceConnectorOperator{
		"PROJECTION",
		"LESS_THAN",
		"CONTAINS",
		"GREATER_THAN",
		"BETWEEN",
		"LESS_THAN_OR_EQUAL_TO",
		"GREATER_THAN_OR_EQUAL_TO",
		"EQUAL_TO",
		"NOT_EQUAL_TO",
		"ADDITION",
		"MULTIPLICATION",
		"DIVISION",
		"SUBTRACTION",
		"MASK_ALL",
		"MASK_FIRST_N",
		"MASK_LAST_N",
		"VALIDATE_NON_NULL",
		"VALIDATE_NON_ZERO",
		"VALIDATE_NON_NEGATIVE",
		"VALIDATE_NUMERIC",
		"NO_OP",
	}
}

type ScheduleFrequencyType string

// Enum values for ScheduleFrequencyType
const (
	ScheduleFrequencyTypeByminute ScheduleFrequencyType = "BYMINUTE"
	ScheduleFrequencyTypeHourly   ScheduleFrequencyType = "HOURLY"
	ScheduleFrequencyTypeDaily    ScheduleFrequencyType = "DAILY"
	ScheduleFrequencyTypeWeekly   ScheduleFrequencyType = "WEEKLY"
	ScheduleFrequencyTypeMonthly  ScheduleFrequencyType = "MONTHLY"
	ScheduleFrequencyTypeOnce     ScheduleFrequencyType = "ONCE"
)

// Values returns all known values for ScheduleFrequencyType. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (ScheduleFrequencyType) Values() []ScheduleFrequencyType {
	return []ScheduleFrequencyType{
		"BYMINUTE",
		"HOURLY",
		"DAILY",
		"WEEKLY",
		"MONTHLY",
		"ONCE",
	}
}

type ServiceNowConnectorOperator string

// Enum values for ServiceNowConnectorOperator
const (
	ServiceNowConnectorOperatorProjection               ServiceNowConnectorOperator = "PROJECTION"
	ServiceNowConnectorOperatorContains                 ServiceNowConnectorOperator = "CONTAINS"
	ServiceNowConnectorOperatorLess_than                ServiceNowConnectorOperator = "LESS_THAN"
	ServiceNowConnectorOperatorGreater_than             ServiceNowConnectorOperator = "GREATER_THAN"
	ServiceNowConnectorOperatorBetween                  ServiceNowConnectorOperator = "BETWEEN"
	ServiceNowConnectorOperatorLess_than_or_equal_to    ServiceNowConnectorOperator = "LESS_THAN_OR_EQUAL_TO"
	ServiceNowConnectorOperatorGreater_than_or_equal_to ServiceNowConnectorOperator = "GREATER_THAN_OR_EQUAL_TO"
	ServiceNowConnectorOperatorEqual_to                 ServiceNowConnectorOperator = "EQUAL_TO"
	ServiceNowConnectorOperatorNot_equal_to             ServiceNowConnectorOperator = "NOT_EQUAL_TO"
	ServiceNowConnectorOperatorAddition                 ServiceNowConnectorOperator = "ADDITION"
	ServiceNowConnectorOperatorMultiplication           ServiceNowConnectorOperator = "MULTIPLICATION"
	ServiceNowConnectorOperatorDivision                 ServiceNowConnectorOperator = "DIVISION"
	ServiceNowConnectorOperatorSubtraction              ServiceNowConnectorOperator = "SUBTRACTION"
	ServiceNowConnectorOperatorMask_all                 ServiceNowConnectorOperator = "MASK_ALL"
	ServiceNowConnectorOperatorMask_first_n             ServiceNowConnectorOperator = "MASK_FIRST_N"
	ServiceNowConnectorOperatorMask_last_n              ServiceNowConnectorOperator = "MASK_LAST_N"
	ServiceNowConnectorOperatorValidate_non_null        ServiceNowConnectorOperator = "VALIDATE_NON_NULL"
	ServiceNowConnectorOperatorValidate_non_zero        ServiceNowConnectorOperator = "VALIDATE_NON_ZERO"
	ServiceNowConnectorOperatorValidate_non_negative    ServiceNowConnectorOperator = "VALIDATE_NON_NEGATIVE"
	ServiceNowConnectorOperatorValidate_numeric         ServiceNowConnectorOperator = "VALIDATE_NUMERIC"
	ServiceNowConnectorOperatorNo_op                    ServiceNowConnectorOperator = "NO_OP"
)

// Values returns all known values for ServiceNowConnectorOperator. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
// The ordering of this slice is not guaranteed to be stable across updates.
func (ServiceNowConnectorOperator) Values() []ServiceNowConnectorOperator {
	return []ServiceNowConnectorOperator{
		"PROJECTION",
		"CONTAINS",
		"LESS_THAN",
		"GREATER_THAN",
		"BETWEEN",
		"LESS_THAN_OR_EQUAL_TO",
		"GREATER_THAN_OR_EQUAL_TO",
		"EQUAL_TO",
		"NOT_EQUAL_TO",
		"ADDITION",
		"MULTIPLICATION",
		"DIVISION",
		"SUBTRACTION",
		"MASK_ALL",
		"MASK_FIRST_N",
		"MASK_LAST_N",
		"VALIDATE_NON_NULL",
		"VALIDATE_NON_ZERO",
		"VALIDATE_NON_NEGATIVE",
		"VALIDATE_NUMERIC",
		"NO_OP",
	}
}

type SingularConnectorOperator string

// Enum values for SingularConnectorOperator
const (
	SingularConnectorOperatorProjection            SingularConnectorOperator = "PROJECTION"
	SingularConnectorOperatorEqual_to              SingularConnectorOperator = "EQUAL_TO"
	SingularConnectorOperatorAddition              SingularConnectorOperator = "ADDITION"
	SingularConnectorOperatorMultiplication        SingularConnectorOperator = "MULTIPLICATION"
	SingularConnectorOperatorDivision              SingularConnectorOperator = "DIVISION"
	SingularConnectorOperatorSubtraction           SingularConnectorOperator = "SUBTRACTION"
	SingularConnectorOperatorMask_all              SingularConnectorOperator = "MASK_ALL"
	SingularConnectorOperatorMask_first_n          SingularConnectorOperator = "MASK_FIRST_N"
	SingularConnectorOperatorMask_last_n           SingularConnectorOperator = "MASK_LAST_N"
	SingularConnectorOperatorValidate_non_null     SingularConnectorOperator = "VALIDATE_NON_NULL"
	SingularConnectorOperatorValidate_non_zero     SingularConnectorOperator = "VALIDATE_NON_ZERO"
	SingularConnectorOperatorValidate_non_negative SingularConnectorOperator = "VALIDATE_NON_NEGATIVE"
	SingularConnectorOperatorValidate_numeric      SingularConnectorOperator = "VALIDATE_NUMERIC"
	SingularConnectorOperatorNo_op                 SingularConnectorOperator = "NO_OP"
)

// Values returns all known values for SingularConnectorOperator. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
// The ordering of this slice is not guaranteed to be stable across updates.
func (SingularConnectorOperator) Values() []SingularConnectorOperator {
	return []SingularConnectorOperator{
		"PROJECTION",
		"EQUAL_TO",
		"ADDITION",
		"MULTIPLICATION",
		"DIVISION",
		"SUBTRACTION",
		"MASK_ALL",
		"MASK_FIRST_N",
		"MASK_LAST_N",
		"VALIDATE_NON_NULL",
		"VALIDATE_NON_ZERO",
		"VALIDATE_NON_NEGATIVE",
		"VALIDATE_NUMERIC",
		"NO_OP",
	}
}

type SlackConnectorOperator string

// Enum values for SlackConnectorOperator
const (
	SlackConnectorOperatorProjection               SlackConnectorOperator = "PROJECTION"
	SlackConnectorOperatorLess_than                SlackConnectorOperator = "LESS_THAN"
	SlackConnectorOperatorGreater_than             SlackConnectorOperator = "GREATER_THAN"
	SlackConnectorOperatorBetween                  SlackConnectorOperator = "BETWEEN"
	SlackConnectorOperatorLess_than_or_equal_to    SlackConnectorOperator = "LESS_THAN_OR_EQUAL_TO"
	SlackConnectorOperatorGreater_than_or_equal_to SlackConnectorOperator = "GREATER_THAN_OR_EQUAL_TO"
	SlackConnectorOperatorEqual_to                 SlackConnectorOperator = "EQUAL_TO"
	SlackConnectorOperatorAddition                 SlackConnectorOperator = "ADDITION"
	SlackConnectorOperatorMultiplication           SlackConnectorOperator = "MULTIPLICATION"
	SlackConnectorOperatorDivision                 SlackConnectorOperator = "DIVISION"
	SlackConnectorOperatorSubtraction              SlackConnectorOperator = "SUBTRACTION"
	SlackConnectorOperatorMask_all                 SlackConnectorOperator = "MASK_ALL"
	SlackConnectorOperatorMask_first_n             SlackConnectorOperator = "MASK_FIRST_N"
	SlackConnectorOperatorMask_last_n              SlackConnectorOperator = "MASK_LAST_N"
	SlackConnectorOperatorValidate_non_null        SlackConnectorOperator = "VALIDATE_NON_NULL"
	SlackConnectorOperatorValidate_non_zero        SlackConnectorOperator = "VALIDATE_NON_ZERO"
	SlackConnectorOperatorValidate_non_negative    SlackConnectorOperator = "VALIDATE_NON_NEGATIVE"
	SlackConnectorOperatorValidate_numeric         SlackConnectorOperator = "VALIDATE_NUMERIC"
	SlackConnectorOperatorNo_op                    SlackConnectorOperator = "NO_OP"
)

// Values returns all known values for SlackConnectorOperator. Note that this can
// be expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (SlackConnectorOperator) Values() []SlackConnectorOperator {
	return []SlackConnectorOperator{
		"PROJECTION",
		"LESS_THAN",
		"GREATER_THAN",
		"BETWEEN",
		"LESS_THAN_OR_EQUAL_TO",
		"GREATER_THAN_OR_EQUAL_TO",
		"EQUAL_TO",
		"ADDITION",
		"MULTIPLICATION",
		"DIVISION",
		"SUBTRACTION",
		"MASK_ALL",
		"MASK_FIRST_N",
		"MASK_LAST_N",
		"VALIDATE_NON_NULL",
		"VALIDATE_NON_ZERO",
		"VALIDATE_NON_NEGATIVE",
		"VALIDATE_NUMERIC",
		"NO_OP",
	}
}

type TaskType string

// Enum values for TaskType
const (
	TaskTypeArithmetic TaskType = "Arithmetic"
	TaskTypeFilter     TaskType = "Filter"
	TaskTypeMap        TaskType = "Map"
	TaskTypeMask       TaskType = "Mask"
	TaskTypeMerge      TaskType = "Merge"
	TaskTypeTruncate   TaskType = "Truncate"
	TaskTypeValidate   TaskType = "Validate"
)

// Values returns all known values for TaskType. Note that this can be expanded in
// the future, and so it is only as up to date as the client. The ordering of this
// slice is not guaranteed to be stable across updates.
func (TaskType) Values() []TaskType {
	return []TaskType{
		"Arithmetic",
		"Filter",
		"Map",
		"Mask",
		"Merge",
		"Truncate",
		"Validate",
	}
}

type TrendmicroConnectorOperator string

// Enum values for TrendmicroConnectorOperator
const (
	TrendmicroConnectorOperatorProjection            TrendmicroConnectorOperator = "PROJECTION"
	TrendmicroConnectorOperatorEqual_to              TrendmicroConnectorOperator = "EQUAL_TO"
	TrendmicroConnectorOperatorAddition              TrendmicroConnectorOperator = "ADDITION"
	TrendmicroConnectorOperatorMultiplication        TrendmicroConnectorOperator = "MULTIPLICATION"
	TrendmicroConnectorOperatorDivision              TrendmicroConnectorOperator = "DIVISION"
	TrendmicroConnectorOperatorSubtraction           TrendmicroConnectorOperator = "SUBTRACTION"
	TrendmicroConnectorOperatorMask_all              TrendmicroConnectorOperator = "MASK_ALL"
	TrendmicroConnectorOperatorMask_first_n          TrendmicroConnectorOperator = "MASK_FIRST_N"
	TrendmicroConnectorOperatorMask_last_n           TrendmicroConnectorOperator = "MASK_LAST_N"
	TrendmicroConnectorOperatorValidate_non_null     TrendmicroConnectorOperator = "VALIDATE_NON_NULL"
	TrendmicroConnectorOperatorValidate_non_zero     TrendmicroConnectorOperator = "VALIDATE_NON_ZERO"
	TrendmicroConnectorOperatorValidate_non_negative TrendmicroConnectorOperator = "VALIDATE_NON_NEGATIVE"
	TrendmicroConnectorOperatorValidate_numeric      TrendmicroConnectorOperator = "VALIDATE_NUMERIC"
	TrendmicroConnectorOperatorNo_op                 TrendmicroConnectorOperator = "NO_OP"
)

// Values returns all known values for TrendmicroConnectorOperator. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
// The ordering of this slice is not guaranteed to be stable across updates.
func (TrendmicroConnectorOperator) Values() []TrendmicroConnectorOperator {
	return []TrendmicroConnectorOperator{
		"PROJECTION",
		"EQUAL_TO",
		"ADDITION",
		"MULTIPLICATION",
		"DIVISION",
		"SUBTRACTION",
		"MASK_ALL",
		"MASK_FIRST_N",
		"MASK_LAST_N",
		"VALIDATE_NON_NULL",
		"VALIDATE_NON_ZERO",
		"VALIDATE_NON_NEGATIVE",
		"VALIDATE_NUMERIC",
		"NO_OP",
	}
}

type TriggerType string

// Enum values for TriggerType
const (
	TriggerTypeScheduled TriggerType = "Scheduled"
	TriggerTypeEvent     TriggerType = "Event"
	TriggerTypeOndemand  TriggerType = "OnDemand"
)

// Values returns all known values for TriggerType. Note that this can be expanded
// in the future, and so it is only as up to date as the client. The ordering of
// this slice is not guaranteed to be stable across updates.
func (TriggerType) Values() []TriggerType {
	return []TriggerType{
		"Scheduled",
		"Event",
		"OnDemand",
	}
}

type VeevaConnectorOperator string

// Enum values for VeevaConnectorOperator
const (
	VeevaConnectorOperatorProjection               VeevaConnectorOperator = "PROJECTION"
	VeevaConnectorOperatorLess_than                VeevaConnectorOperator = "LESS_THAN"
	VeevaConnectorOperatorGreater_than             VeevaConnectorOperator = "GREATER_THAN"
	VeevaConnectorOperatorContains                 VeevaConnectorOperator = "CONTAINS"
	VeevaConnectorOperatorBetween                  VeevaConnectorOperator = "BETWEEN"
	VeevaConnectorOperatorLess_than_or_equal_to    VeevaConnectorOperator = "LESS_THAN_OR_EQUAL_TO"
	VeevaConnectorOperatorGreater_than_or_equal_to VeevaConnectorOperator = "GREATER_THAN_OR_EQUAL_TO"
	VeevaConnectorOperatorEqual_to                 VeevaConnectorOperator = "EQUAL_TO"
	VeevaConnectorOperatorNot_equal_to             VeevaConnectorOperator = "NOT_EQUAL_TO"
	VeevaConnectorOperatorAddition                 VeevaConnectorOperator = "ADDITION"
	VeevaConnectorOperatorMultiplication           VeevaConnectorOperator = "MULTIPLICATION"
	VeevaConnectorOperatorDivision                 VeevaConnectorOperator = "DIVISION"
	VeevaConnectorOperatorSubtraction              VeevaConnectorOperator = "SUBTRACTION"
	VeevaConnectorOperatorMask_all                 VeevaConnectorOperator = "MASK_ALL"
	VeevaConnectorOperatorMask_first_n             VeevaConnectorOperator = "MASK_FIRST_N"
	VeevaConnectorOperatorMask_last_n              VeevaConnectorOperator = "MASK_LAST_N"
	VeevaConnectorOperatorValidate_non_null        VeevaConnectorOperator = "VALIDATE_NON_NULL"
	VeevaConnectorOperatorValidate_non_zero        VeevaConnectorOperator = "VALIDATE_NON_ZERO"
	VeevaConnectorOperatorValidate_non_negative    VeevaConnectorOperator = "VALIDATE_NON_NEGATIVE"
	VeevaConnectorOperatorValidate_numeric         VeevaConnectorOperator = "VALIDATE_NUMERIC"
	VeevaConnectorOperatorNo_op                    VeevaConnectorOperator = "NO_OP"
)

// Values returns all known values for VeevaConnectorOperator. Note that this can
// be expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (VeevaConnectorOperator) Values() []VeevaConnectorOperator {
	return []VeevaConnectorOperator{
		"PROJECTION",
		"LESS_THAN",
		"GREATER_THAN",
		"CONTAINS",
		"BETWEEN",
		"LESS_THAN_OR_EQUAL_TO",
		"GREATER_THAN_OR_EQUAL_TO",
		"EQUAL_TO",
		"NOT_EQUAL_TO",
		"ADDITION",
		"MULTIPLICATION",
		"DIVISION",
		"SUBTRACTION",
		"MASK_ALL",
		"MASK_FIRST_N",
		"MASK_LAST_N",
		"VALIDATE_NON_NULL",
		"VALIDATE_NON_ZERO",
		"VALIDATE_NON_NEGATIVE",
		"VALIDATE_NUMERIC",
		"NO_OP",
	}
}

type WriteOperationType string

// Enum values for WriteOperationType
const (
	WriteOperationTypeInsert WriteOperationType = "INSERT"
	WriteOperationTypeUpsert WriteOperationType = "UPSERT"
	WriteOperationTypeUpdate WriteOperationType = "UPDATE"
)

// Values returns all known values for WriteOperationType. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (WriteOperationType) Values() []WriteOperationType {
	return []WriteOperationType{
		"INSERT",
		"UPSERT",
		"UPDATE",
	}
}

type ZendeskConnectorOperator string

// Enum values for ZendeskConnectorOperator
const (
	ZendeskConnectorOperatorProjection            ZendeskConnectorOperator = "PROJECTION"
	ZendeskConnectorOperatorGreater_than          ZendeskConnectorOperator = "GREATER_THAN"
	ZendeskConnectorOperatorAddition              ZendeskConnectorOperator = "ADDITION"
	ZendeskConnectorOperatorMultiplication        ZendeskConnectorOperator = "MULTIPLICATION"
	ZendeskConnectorOperatorDivision              ZendeskConnectorOperator = "DIVISION"
	ZendeskConnectorOperatorSubtraction           ZendeskConnectorOperator = "SUBTRACTION"
	ZendeskConnectorOperatorMask_all              ZendeskConnectorOperator = "MASK_ALL"
	ZendeskConnectorOperatorMask_first_n          ZendeskConnectorOperator = "MASK_FIRST_N"
	ZendeskConnectorOperatorMask_last_n           ZendeskConnectorOperator = "MASK_LAST_N"
	ZendeskConnectorOperatorValidate_non_null     ZendeskConnectorOperator = "VALIDATE_NON_NULL"
	ZendeskConnectorOperatorValidate_non_zero     ZendeskConnectorOperator = "VALIDATE_NON_ZERO"
	ZendeskConnectorOperatorValidate_non_negative ZendeskConnectorOperator = "VALIDATE_NON_NEGATIVE"
	ZendeskConnectorOperatorValidate_numeric      ZendeskConnectorOperator = "VALIDATE_NUMERIC"
	ZendeskConnectorOperatorNo_op                 ZendeskConnectorOperator = "NO_OP"
)

// Values returns all known values for ZendeskConnectorOperator. Note that this can
// be expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (ZendeskConnectorOperator) Values() []ZendeskConnectorOperator {
	return []ZendeskConnectorOperator{
		"PROJECTION",
		"GREATER_THAN",
		"ADDITION",
		"MULTIPLICATION",
		"DIVISION",
		"SUBTRACTION",
		"MASK_ALL",
		"MASK_FIRST_N",
		"MASK_LAST_N",
		"VALIDATE_NON_NULL",
		"VALIDATE_NON_ZERO",
		"VALIDATE_NON_NEGATIVE",
		"VALIDATE_NUMERIC",
		"NO_OP",
	}
}
