// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package personalize

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/personalize/types"
)

const opDescribeRecipe = "DescribeRecipe"

// DescribeRecipeRequest returns a request value for making API operation for
// Amazon Personalize.
//
// Describes a recipe.
//
// A recipe contains three items:
//
//    * An algorithm that trains a model.
//
//    * Hyperparameters that govern the training.
//
//    * Feature transformation information for modifying the input data before
//    training.
//
// Amazon Personalize provides a set of predefined recipes. You specify a recipe
// when you create a solution with the CreateSolution API. CreateSolution trains
// a model by using the algorithm in the specified recipe and a training dataset.
// The solution, when deployed as a campaign, can provide recommendations using
// the GetRecommendations (https://docs.aws.amazon.com/personalize/latest/dg/API_RS_GetRecommendations.html)
// API.
//
//    // Example sending a request using DescribeRecipeRequest.
//    req := client.DescribeRecipeRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/personalize-2018-05-22/DescribeRecipe
func (c *Client) DescribeRecipeRequest(input *types.DescribeRecipeInput) DescribeRecipeRequest {
	op := &aws.Operation{
		Name:       opDescribeRecipe,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &types.DescribeRecipeInput{}
	}

	req := c.newRequest(op, input, &types.DescribeRecipeOutput{})
	return DescribeRecipeRequest{Request: req, Input: input, Copy: c.DescribeRecipeRequest}
}

// DescribeRecipeRequest is the request type for the
// DescribeRecipe API operation.
type DescribeRecipeRequest struct {
	*aws.Request
	Input *types.DescribeRecipeInput
	Copy  func(*types.DescribeRecipeInput) DescribeRecipeRequest
}

// Send marshals and sends the DescribeRecipe API request.
func (r DescribeRecipeRequest) Send(ctx context.Context) (*DescribeRecipeResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &DescribeRecipeResponse{
		DescribeRecipeOutput: r.Request.Data.(*types.DescribeRecipeOutput),
		response:             &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// DescribeRecipeResponse is the response type for the
// DescribeRecipe API operation.
type DescribeRecipeResponse struct {
	*types.DescribeRecipeOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// DescribeRecipe request.
func (r *DescribeRecipeResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
