// Code generated by smithy-go-codegen DO NOT EDIT.

package route53

import (
	"context"
	awsmiddleware "github.com/aws/aws-sdk-go-v2/aws/middleware"
	"github.com/aws/aws-sdk-go-v2/aws/retry"
	"github.com/aws/aws-sdk-go-v2/aws/signer/v4"
	"github.com/aws/aws-sdk-go-v2/service/route53/types"
	smithy "github.com/awslabs/smithy-go"
	"github.com/awslabs/smithy-go/middleware"
	smithyhttp "github.com/awslabs/smithy-go/transport/http"
)

// Lists the resource record sets in a specified hosted zone.
// ListResourceRecordSets returns up to 100 resource record sets at a time in ASCII
// order, beginning at a position specified by the name and type elements.  <p>
// <b>Sort order</b> </p> <p> <code>ListResourceRecordSets</code> sorts results
// first by DNS name with the labels reversed, for example:</p> <p>
// <code>com.example.www.</code> </p> <p>Note the trailing dot, which can change
// the sort order when the record name contains characters that appear before
// <code>.</code> (decimal 46) in the ASCII table. These characters include the
// following: <code>! " # $ % & ' ( ) * + , -</code> </p> <p>When multiple records
// have the same DNS name, <code>ListResourceRecordSets</code> sorts results by the
// record type.</p> <p> <b>Specifying where to start listing records</b> </p>
// <p>You can use the name and type elements to specify the resource record set
// that the list begins with:</p> <dl> <dt>If you do not specify Name or Type</dt>
// <dd> <p>The results begin with the first resource record set that the hosted
// zone contains.</p> </dd> <dt>If you specify Name but not Type</dt> <dd> <p>The
// results begin with the first resource record set in the list whose name is
// greater than or equal to <code>Name</code>.</p> </dd> <dt>If you specify Type
// but not Name</dt> <dd> <p>Amazon Route 53 returns the <code>InvalidInput</code>
// error.</p> </dd> <dt>If you specify both Name and Type</dt> <dd> <p>The results
// begin with the first resource record set in the list whose name is greater than
// or equal to <code>Name</code>, and whose type is greater than or equal to
// <code>Type</code>.</p> </dd> </dl> <p> <b>Resource record sets that are
// PENDING</b> </p> <p>This action returns the most current version of the records.
// This includes records that are <code>PENDING</code>, and that are not yet
// available on all Route 53 DNS servers.</p> <p> <b>Changing resource record
// sets</b> </p> <p>To ensure that you get an accurate listing of the resource
// record sets for a hosted zone at a point in time, do not submit a
// <code>ChangeResourceRecordSets</code> request while you're paging through the
// results of a <code>ListResourceRecordSets</code> request. If you do, some pages
// may display results without the latest changes while other pages display results
// with the latest changes.</p> <p> <b>Displaying the next page of results</b> </p>
// <p>If a <code>ListResourceRecordSets</code> command returns more than one page
// of results, the value of <code>IsTruncated</code> is <code>true</code>. To
// display the next page of results, get the values of <code>NextRecordName</code>,
// <code>NextRecordType</code>, and <code>NextRecordIdentifier</code> (if any) from
// the response. Then submit another <code>ListResourceRecordSets</code> request,
// and specify those values for <code>StartRecordName</code>,
// <code>StartRecordType</code>, and <code>StartRecordIdentifier</code>.</p>
func (c *Client) ListResourceRecordSets(ctx context.Context, params *ListResourceRecordSetsInput, optFns ...func(*Options)) (*ListResourceRecordSetsOutput, error) {
	stack := middleware.NewStack("ListResourceRecordSets", smithyhttp.NewStackRequest)
	options := c.options.Copy()
	for _, fn := range optFns {
		fn(&options)
	}
	addawsRestxml_serdeOpListResourceRecordSetsMiddlewares(stack)
	awsmiddleware.AddRequestInvocationIDMiddleware(stack)
	smithyhttp.AddContentLengthMiddleware(stack)
	AddResolveEndpointMiddleware(stack, options)
	v4.AddComputePayloadSHA256Middleware(stack)
	retry.AddRetryMiddlewares(stack, options)
	addHTTPSignerV4Middleware(stack, options)
	awsmiddleware.AddAttemptClockSkewMiddleware(stack)
	addClientUserAgent(stack)
	smithyhttp.AddErrorCloseResponseBodyMiddleware(stack)
	smithyhttp.AddCloseResponseBodyMiddleware(stack)
	addOpListResourceRecordSetsValidationMiddleware(stack)
	stack.Initialize.Add(newServiceMetadataMiddleware_opListResourceRecordSets(options.Region), middleware.Before)

	for _, fn := range options.APIOptions {
		if err := fn(stack); err != nil {
			return nil, err
		}
	}
	handler := middleware.DecorateHandler(smithyhttp.NewClientHandler(options.HTTPClient), stack)
	result, metadata, err := handler.Handle(ctx, params)
	if err != nil {
		return nil, &smithy.OperationError{
			ServiceID:     ServiceID,
			OperationName: "ListResourceRecordSets",
			Err:           err,
		}
	}
	out := result.(*ListResourceRecordSetsOutput)
	out.ResultMetadata = metadata
	return out, nil
}

// A request for the resource record sets that are associated with a specified
// hosted zone.
type ListResourceRecordSetsInput struct {
	// The ID of the hosted zone that contains the resource record sets that you want
	// to list.
	HostedZoneId *string
	// The first name in the lexicographic ordering of resource record sets that you
	// want to list. If the specified record name doesn't exist, the results begin with
	// the first resource record set that has a name greater than the value of name.
	StartRecordName *string
	// (Optional) The maximum number of resource records sets to include in the
	// response body for this request. If the response includes more than maxitems
	// resource record sets, the value of the IsTruncated element in the response is
	// true, and the values of the NextRecordName and NextRecordType elements in the
	// response identify the first resource record set in the next group of maxitems
	// resource record sets.
	MaxItems *string
	// Resource record sets that have a routing policy other than simple: If results
	// were truncated for a given DNS name and type, specify the value of
	// NextRecordIdentifier from the previous response to get the next resource record
	// set that has the current DNS name and type.
	StartRecordIdentifier *string
	// The type of resource record set to begin the record listing from. Valid values
	// for basic resource record sets: A | AAAA | CAA | CNAME | MX | NAPTR | NS | PTR |
	// SOA | SPF | SRV | TXT Values for weighted, latency, geolocation, and failover
	// resource record sets: A | AAAA | CAA | CNAME | MX | NAPTR | PTR | SPF | SRV |
	// TXT Values for alias resource record sets:
	//
	//     * API Gateway custom regional
	// API or edge-optimized API: A
	//
	//     * CloudFront distribution: A or AAAA
	//
	//     *
	// Elastic Beanstalk environment that has a regionalized subdomain: A
	//
	//     *
	// Elastic Load Balancing load balancer: A | AAAA
	//
	//     * S3 bucket: A
	//
	//     * VPC
	// interface VPC endpoint: A
	//
	//     * Another resource record set in this hosted
	// zone: The type of the resource record set that the alias
	// references.
	//
	// Constraint: Specifying type without specifying name returns an
	// InvalidInput error.
	StartRecordType types.RRType
}

// A complex type that contains list information for the resource record set.
type ListResourceRecordSetsOutput struct {
	// A flag that indicates whether more resource record sets remain to be listed. If
	// your results were truncated, you can make a follow-up pagination request by
	// using the NextRecordName element.
	IsTruncated *bool
	// Information about multiple resource record sets.
	ResourceRecordSets []*types.ResourceRecordSet
	// The maximum number of records you requested.
	MaxItems *string
	// Resource record sets that have a routing policy other than simple: If results
	// were truncated for a given DNS name and type, the value of SetIdentifier for the
	// next resource record set that has the current DNS name and type. For information
	// about routing policies, see Choosing a Routing Policy
	// (https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/routing-policy.html)
	// in the Amazon Route 53 Developer Guide.
	NextRecordIdentifier *string
	// If the results were truncated, the type of the next record in the list. This
	// element is present only if IsTruncated is true.
	NextRecordType types.RRType
	// If the results were truncated, the name of the next record in the list. This
	// element is present only if IsTruncated is true.
	NextRecordName *string

	// Metadata pertaining to the operation's result.
	ResultMetadata middleware.Metadata
}

func addawsRestxml_serdeOpListResourceRecordSetsMiddlewares(stack *middleware.Stack) {
	stack.Serialize.Add(&awsRestxml_serializeOpListResourceRecordSets{}, middleware.After)
	stack.Deserialize.Add(&awsRestxml_deserializeOpListResourceRecordSets{}, middleware.After)
}

func newServiceMetadataMiddleware_opListResourceRecordSets(region string) awsmiddleware.RegisterServiceMetadata {
	return awsmiddleware.RegisterServiceMetadata{
		Region:        region,
		ServiceID:     ServiceID,
		SigningName:   "route53",
		OperationName: "ListResourceRecordSets",
	}
}
