// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package route53

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/route53/types"
)

const opListQueryLoggingConfigs = "ListQueryLoggingConfigs"

// ListQueryLoggingConfigsRequest returns a request value for making API operation for
// Amazon Route 53.
//
// Lists the configurations for DNS query logging that are associated with the
// current AWS account or the configuration that is associated with a specified
// hosted zone.
//
// For more information about DNS query logs, see CreateQueryLoggingConfig (https://docs.aws.amazon.com/Route53/latest/APIReference/API_CreateQueryLoggingConfig.html).
// Additional information, including the format of DNS query logs, appears in
// Logging DNS Queries (https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/query-logs.html)
// in the Amazon Route 53 Developer Guide.
//
//    // Example sending a request using ListQueryLoggingConfigsRequest.
//    req := client.ListQueryLoggingConfigsRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/route53-2013-04-01/ListQueryLoggingConfigs
func (c *Client) ListQueryLoggingConfigsRequest(input *types.ListQueryLoggingConfigsInput) ListQueryLoggingConfigsRequest {
	op := &aws.Operation{
		Name:       opListQueryLoggingConfigs,
		HTTPMethod: "GET",
		HTTPPath:   "/2013-04-01/queryloggingconfig",
	}

	if input == nil {
		input = &types.ListQueryLoggingConfigsInput{}
	}

	req := c.newRequest(op, input, &types.ListQueryLoggingConfigsOutput{})
	return ListQueryLoggingConfigsRequest{Request: req, Input: input, Copy: c.ListQueryLoggingConfigsRequest}
}

// ListQueryLoggingConfigsRequest is the request type for the
// ListQueryLoggingConfigs API operation.
type ListQueryLoggingConfigsRequest struct {
	*aws.Request
	Input *types.ListQueryLoggingConfigsInput
	Copy  func(*types.ListQueryLoggingConfigsInput) ListQueryLoggingConfigsRequest
}

// Send marshals and sends the ListQueryLoggingConfigs API request.
func (r ListQueryLoggingConfigsRequest) Send(ctx context.Context) (*ListQueryLoggingConfigsResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &ListQueryLoggingConfigsResponse{
		ListQueryLoggingConfigsOutput: r.Request.Data.(*types.ListQueryLoggingConfigsOutput),
		response:                      &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// ListQueryLoggingConfigsResponse is the response type for the
// ListQueryLoggingConfigs API operation.
type ListQueryLoggingConfigsResponse struct {
	*types.ListQueryLoggingConfigsOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// ListQueryLoggingConfigs request.
func (r *ListQueryLoggingConfigsResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
