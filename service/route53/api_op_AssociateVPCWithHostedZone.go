// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package route53

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/route53/types"
)

const opAssociateVPCWithHostedZone = "AssociateVPCWithHostedZone"

// AssociateVPCWithHostedZoneRequest returns a request value for making API operation for
// Amazon Route 53.
//
// Associates an Amazon VPC with a private hosted zone.
//
// To perform the association, the VPC and the private hosted zone must already
// exist. You can't convert a public hosted zone into a private hosted zone.
//
// If you want to associate a VPC that was created by using one AWS account
// with a private hosted zone that was created by using a different account,
// the AWS account that created the private hosted zone must first submit a
// CreateVPCAssociationAuthorization request. Then the account that created
// the VPC must submit an AssociateVPCWithHostedZone request.
//
//    // Example sending a request using AssociateVPCWithHostedZoneRequest.
//    req := client.AssociateVPCWithHostedZoneRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/route53-2013-04-01/AssociateVPCWithHostedZone
func (c *Client) AssociateVPCWithHostedZoneRequest(input *types.AssociateVPCWithHostedZoneInput) AssociateVPCWithHostedZoneRequest {
	op := &aws.Operation{
		Name:       opAssociateVPCWithHostedZone,
		HTTPMethod: "POST",
		HTTPPath:   "/2013-04-01/hostedzone/{Id}/associatevpc",
	}

	if input == nil {
		input = &types.AssociateVPCWithHostedZoneInput{}
	}

	req := c.newRequest(op, input, &types.AssociateVPCWithHostedZoneOutput{})
	return AssociateVPCWithHostedZoneRequest{Request: req, Input: input, Copy: c.AssociateVPCWithHostedZoneRequest}
}

// AssociateVPCWithHostedZoneRequest is the request type for the
// AssociateVPCWithHostedZone API operation.
type AssociateVPCWithHostedZoneRequest struct {
	*aws.Request
	Input *types.AssociateVPCWithHostedZoneInput
	Copy  func(*types.AssociateVPCWithHostedZoneInput) AssociateVPCWithHostedZoneRequest
}

// Send marshals and sends the AssociateVPCWithHostedZone API request.
func (r AssociateVPCWithHostedZoneRequest) Send(ctx context.Context) (*AssociateVPCWithHostedZoneResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &AssociateVPCWithHostedZoneResponse{
		AssociateVPCWithHostedZoneOutput: r.Request.Data.(*types.AssociateVPCWithHostedZoneOutput),
		response:                         &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// AssociateVPCWithHostedZoneResponse is the response type for the
// AssociateVPCWithHostedZone API operation.
type AssociateVPCWithHostedZoneResponse struct {
	*types.AssociateVPCWithHostedZoneOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// AssociateVPCWithHostedZone request.
func (r *AssociateVPCWithHostedZoneResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
