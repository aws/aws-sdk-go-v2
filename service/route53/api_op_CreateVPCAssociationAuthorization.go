// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package route53

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/route53/types"
)

const opCreateVPCAssociationAuthorization = "CreateVPCAssociationAuthorization"

// CreateVPCAssociationAuthorizationRequest returns a request value for making API operation for
// Amazon Route 53.
//
// Authorizes the AWS account that created a specified VPC to submit an AssociateVPCWithHostedZone
// request to associate the VPC with a specified hosted zone that was created
// by a different account. To submit a CreateVPCAssociationAuthorization request,
// you must use the account that created the hosted zone. After you authorize
// the association, use the account that created the VPC to submit an AssociateVPCWithHostedZone
// request.
//
// If you want to associate multiple VPCs that you created by using one account
// with a hosted zone that you created by using a different account, you must
// submit one authorization request for each VPC.
//
//    // Example sending a request using CreateVPCAssociationAuthorizationRequest.
//    req := client.CreateVPCAssociationAuthorizationRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/route53-2013-04-01/CreateVPCAssociationAuthorization
func (c *Client) CreateVPCAssociationAuthorizationRequest(input *types.CreateVPCAssociationAuthorizationInput) CreateVPCAssociationAuthorizationRequest {
	op := &aws.Operation{
		Name:       opCreateVPCAssociationAuthorization,
		HTTPMethod: "POST",
		HTTPPath:   "/2013-04-01/hostedzone/{Id}/authorizevpcassociation",
	}

	if input == nil {
		input = &types.CreateVPCAssociationAuthorizationInput{}
	}

	req := c.newRequest(op, input, &types.CreateVPCAssociationAuthorizationOutput{})
	return CreateVPCAssociationAuthorizationRequest{Request: req, Input: input, Copy: c.CreateVPCAssociationAuthorizationRequest}
}

// CreateVPCAssociationAuthorizationRequest is the request type for the
// CreateVPCAssociationAuthorization API operation.
type CreateVPCAssociationAuthorizationRequest struct {
	*aws.Request
	Input *types.CreateVPCAssociationAuthorizationInput
	Copy  func(*types.CreateVPCAssociationAuthorizationInput) CreateVPCAssociationAuthorizationRequest
}

// Send marshals and sends the CreateVPCAssociationAuthorization API request.
func (r CreateVPCAssociationAuthorizationRequest) Send(ctx context.Context) (*CreateVPCAssociationAuthorizationResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &CreateVPCAssociationAuthorizationResponse{
		CreateVPCAssociationAuthorizationOutput: r.Request.Data.(*types.CreateVPCAssociationAuthorizationOutput),
		response:                                &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// CreateVPCAssociationAuthorizationResponse is the response type for the
// CreateVPCAssociationAuthorization API operation.
type CreateVPCAssociationAuthorizationResponse struct {
	*types.CreateVPCAssociationAuthorizationOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// CreateVPCAssociationAuthorization request.
func (r *CreateVPCAssociationAuthorizationResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
