// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package fms

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/private/protocol"
	"github.com/aws/aws-sdk-go-v2/private/protocol/jsonrpc"
	"github.com/aws/aws-sdk-go-v2/service/fms/types"
)

const opAssociateAdminAccount = "AssociateAdminAccount"

// AssociateAdminAccountRequest returns a request value for making API operation for
// Firewall Management Service.
//
// Sets the AWS Firewall Manager administrator account. AWS Firewall Manager
// must be associated with the master account of your AWS organization or associated
// with a member account that has the appropriate permissions. If the account
// ID that you submit is not an AWS Organizations master account, AWS Firewall
// Manager will set the appropriate permissions for the given member account.
//
// The account that you associate with AWS Firewall Manager is called the AWS
// Firewall Manager administrator account.
//
//    // Example sending a request using AssociateAdminAccountRequest.
//    req := client.AssociateAdminAccountRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/fms-2018-01-01/AssociateAdminAccount
func (c *Client) AssociateAdminAccountRequest(input *types.AssociateAdminAccountInput) AssociateAdminAccountRequest {
	op := &aws.Operation{
		Name:       opAssociateAdminAccount,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &types.AssociateAdminAccountInput{}
	}

	req := c.newRequest(op, input, &types.AssociateAdminAccountOutput{})
	req.Handlers.Unmarshal.Remove(jsonrpc.UnmarshalHandler)
	req.Handlers.Unmarshal.PushBackNamed(protocol.UnmarshalDiscardBodyHandler)
	return AssociateAdminAccountRequest{Request: req, Input: input, Copy: c.AssociateAdminAccountRequest}
}

// AssociateAdminAccountRequest is the request type for the
// AssociateAdminAccount API operation.
type AssociateAdminAccountRequest struct {
	*aws.Request
	Input *types.AssociateAdminAccountInput
	Copy  func(*types.AssociateAdminAccountInput) AssociateAdminAccountRequest
}

// Send marshals and sends the AssociateAdminAccount API request.
func (r AssociateAdminAccountRequest) Send(ctx context.Context) (*AssociateAdminAccountResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &AssociateAdminAccountResponse{
		AssociateAdminAccountOutput: r.Request.Data.(*types.AssociateAdminAccountOutput),
		response:                    &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// AssociateAdminAccountResponse is the response type for the
// AssociateAdminAccount API operation.
type AssociateAdminAccountResponse struct {
	*types.AssociateAdminAccountOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// AssociateAdminAccount request.
func (r *AssociateAdminAccountResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
