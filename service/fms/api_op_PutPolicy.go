// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package fms

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/fms/types"
)

const opPutPolicy = "PutPolicy"

// PutPolicyRequest returns a request value for making API operation for
// Firewall Management Service.
//
// Creates an AWS Firewall Manager policy.
//
// Firewall Manager provides the following types of policies:
//
//    * A Shield Advanced policy, which applies Shield Advanced protection to
//    specified accounts and resources
//
//    * An AWS WAF policy, which contains a rule group and defines which resources
//    are to be protected by that rule group
//
//    * A security group policy, which manages VPC security groups across your
//    AWS organization.
//
// Each policy is specific to one of the three types. If you want to enforce
// more than one policy type across accounts, you can create multiple policies.
// You can create multiple policies for each type.
//
// You must be subscribed to Shield Advanced to create a Shield Advanced policy.
// For more information about subscribing to Shield Advanced, see CreateSubscription
// (https://docs.aws.amazon.com/waf/latest/DDOSAPIReference/API_CreateSubscription.html).
//
//    // Example sending a request using PutPolicyRequest.
//    req := client.PutPolicyRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/fms-2018-01-01/PutPolicy
func (c *Client) PutPolicyRequest(input *types.PutPolicyInput) PutPolicyRequest {
	op := &aws.Operation{
		Name:       opPutPolicy,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &types.PutPolicyInput{}
	}

	req := c.newRequest(op, input, &types.PutPolicyOutput{})
	return PutPolicyRequest{Request: req, Input: input, Copy: c.PutPolicyRequest}
}

// PutPolicyRequest is the request type for the
// PutPolicy API operation.
type PutPolicyRequest struct {
	*aws.Request
	Input *types.PutPolicyInput
	Copy  func(*types.PutPolicyInput) PutPolicyRequest
}

// Send marshals and sends the PutPolicy API request.
func (r PutPolicyRequest) Send(ctx context.Context) (*PutPolicyResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &PutPolicyResponse{
		PutPolicyOutput: r.Request.Data.(*types.PutPolicyOutput),
		response:        &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// PutPolicyResponse is the response type for the
// PutPolicy API operation.
type PutPolicyResponse struct {
	*types.PutPolicyOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// PutPolicy request.
func (r *PutPolicyResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
