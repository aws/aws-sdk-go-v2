// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

// Package firehoseiface provides an interface to enable mocking the Amazon Kinesis Firehose service client
// for testing your code.
//
// It is important to note that this interface will have breaking changes
// when the service model is updated and adds new API operations, paginators,
// and waiters.
package firehoseiface

import (
	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/firehose"
)

// FirehoseAPI provides an interface to enable mocking the
// firehose.Firehose service client's API operation,
// paginators, and waiters. This make unit testing your code that calls out
// to the SDK's service client's calls easier.
//
// The best way to use this interface is so the SDK's service client's calls
// can be stubbed out for unit testing your code with the SDK without needing
// to inject custom request handlers into the SDK's request pipeline.
//
//    // myFunc uses an SDK service client to make a request to
//    // Amazon Kinesis Firehose.
//    func myFunc(svc firehoseiface.FirehoseAPI) bool {
//        // Make svc.CreateDeliveryStream request
//    }
//
//    func main() {
//        cfg, err := external.LoadDefaultAWSConfig()
//        if err != nil {
//            panic("failed to load config, " + err.Error())
//        }
//
//        svc := firehose.New(cfg)
//
//        myFunc(svc)
//    }
//
// In your _test.go file:
//
//    // Define a mock struct to be used in your unit tests of myFunc.
//    type mockFirehoseClient struct {
//        firehoseiface.FirehoseAPI
//    }
//    func (m *mockFirehoseClient) CreateDeliveryStream(input *firehose.CreateDeliveryStreamInput) (*firehose.CreateDeliveryStreamOutput, error) {
//        // mock response/functionality
//    }
//
//    func TestMyFunc(t *testing.T) {
//        // Setup Test
//        mockSvc := &mockFirehoseClient{}
//
//        myfunc(mockSvc)
//
//        // Verify myFunc's functionality
//    }
//
// It is important to note that this interface will have breaking changes
// when the service model is updated and adds new API operations, paginators,
// and waiters. Its suggested to use the pattern above for testing, or using
// tooling to generate mocks to satisfy the interfaces.
type FirehoseAPI interface {
	CreateDeliveryStream(*firehose.CreateDeliveryStreamInput) (*firehose.CreateDeliveryStreamOutput, error)
	CreateDeliveryStreamWithContext(aws.Context, *firehose.CreateDeliveryStreamInput, ...aws.Option) (*firehose.CreateDeliveryStreamOutput, error)
	CreateDeliveryStreamRequest(*firehose.CreateDeliveryStreamInput) (*aws.Request, *firehose.CreateDeliveryStreamOutput)

	DeleteDeliveryStream(*firehose.DeleteDeliveryStreamInput) (*firehose.DeleteDeliveryStreamOutput, error)
	DeleteDeliveryStreamWithContext(aws.Context, *firehose.DeleteDeliveryStreamInput, ...aws.Option) (*firehose.DeleteDeliveryStreamOutput, error)
	DeleteDeliveryStreamRequest(*firehose.DeleteDeliveryStreamInput) (*aws.Request, *firehose.DeleteDeliveryStreamOutput)

	DescribeDeliveryStream(*firehose.DescribeDeliveryStreamInput) (*firehose.DescribeDeliveryStreamOutput, error)
	DescribeDeliveryStreamWithContext(aws.Context, *firehose.DescribeDeliveryStreamInput, ...aws.Option) (*firehose.DescribeDeliveryStreamOutput, error)
	DescribeDeliveryStreamRequest(*firehose.DescribeDeliveryStreamInput) (*aws.Request, *firehose.DescribeDeliveryStreamOutput)

	GetKinesisStream(*firehose.GetKinesisStreamInput) (*firehose.GetKinesisStreamOutput, error)
	GetKinesisStreamWithContext(aws.Context, *firehose.GetKinesisStreamInput, ...aws.Option) (*firehose.GetKinesisStreamOutput, error)
	GetKinesisStreamRequest(*firehose.GetKinesisStreamInput) (*aws.Request, *firehose.GetKinesisStreamOutput)

	ListDeliveryStreams(*firehose.ListDeliveryStreamsInput) (*firehose.ListDeliveryStreamsOutput, error)
	ListDeliveryStreamsWithContext(aws.Context, *firehose.ListDeliveryStreamsInput, ...aws.Option) (*firehose.ListDeliveryStreamsOutput, error)
	ListDeliveryStreamsRequest(*firehose.ListDeliveryStreamsInput) (*aws.Request, *firehose.ListDeliveryStreamsOutput)

	PutRecord(*firehose.PutRecordInput) (*firehose.PutRecordOutput, error)
	PutRecordWithContext(aws.Context, *firehose.PutRecordInput, ...aws.Option) (*firehose.PutRecordOutput, error)
	PutRecordRequest(*firehose.PutRecordInput) (*aws.Request, *firehose.PutRecordOutput)

	PutRecordBatch(*firehose.PutRecordBatchInput) (*firehose.PutRecordBatchOutput, error)
	PutRecordBatchWithContext(aws.Context, *firehose.PutRecordBatchInput, ...aws.Option) (*firehose.PutRecordBatchOutput, error)
	PutRecordBatchRequest(*firehose.PutRecordBatchInput) (*aws.Request, *firehose.PutRecordBatchOutput)

	UpdateDestination(*firehose.UpdateDestinationInput) (*firehose.UpdateDestinationOutput, error)
	UpdateDestinationWithContext(aws.Context, *firehose.UpdateDestinationInput, ...aws.Option) (*firehose.UpdateDestinationOutput, error)
	UpdateDestinationRequest(*firehose.UpdateDestinationInput) (*aws.Request, *firehose.UpdateDestinationOutput)
}

var _ FirehoseAPI = (*firehose.Firehose)(nil)
