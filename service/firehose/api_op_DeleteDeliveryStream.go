// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package firehose

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/firehose/types"
)

const opDeleteDeliveryStream = "DeleteDeliveryStream"

// DeleteDeliveryStreamRequest returns a request value for making API operation for
// Amazon Kinesis Firehose.
//
// Deletes a delivery stream and its data.
//
// To check the state of a delivery stream, use DescribeDeliveryStream. You
// can delete a delivery stream only if it is in one of the following states:
// ACTIVE, DELETING, CREATING_FAILED, or DELETING_FAILED. You can't delete a
// delivery stream that is in the CREATING state. While the deletion request
// is in process, the delivery stream is in the DELETING state.
//
// While the delivery stream is in the DELETING state, the service might continue
// to accept records, but it doesn't make any guarantees with respect to delivering
// the data. Therefore, as a best practice, first stop any applications that
// are sending records before you delete a delivery stream.
//
//    // Example sending a request using DeleteDeliveryStreamRequest.
//    req := client.DeleteDeliveryStreamRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/firehose-2015-08-04/DeleteDeliveryStream
func (c *Client) DeleteDeliveryStreamRequest(input *types.DeleteDeliveryStreamInput) DeleteDeliveryStreamRequest {
	op := &aws.Operation{
		Name:       opDeleteDeliveryStream,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &types.DeleteDeliveryStreamInput{}
	}

	req := c.newRequest(op, input, &types.DeleteDeliveryStreamOutput{})
	return DeleteDeliveryStreamRequest{Request: req, Input: input, Copy: c.DeleteDeliveryStreamRequest}
}

// DeleteDeliveryStreamRequest is the request type for the
// DeleteDeliveryStream API operation.
type DeleteDeliveryStreamRequest struct {
	*aws.Request
	Input *types.DeleteDeliveryStreamInput
	Copy  func(*types.DeleteDeliveryStreamInput) DeleteDeliveryStreamRequest
}

// Send marshals and sends the DeleteDeliveryStream API request.
func (r DeleteDeliveryStreamRequest) Send(ctx context.Context) (*DeleteDeliveryStreamResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &DeleteDeliveryStreamResponse{
		DeleteDeliveryStreamOutput: r.Request.Data.(*types.DeleteDeliveryStreamOutput),
		response:                   &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// DeleteDeliveryStreamResponse is the response type for the
// DeleteDeliveryStream API operation.
type DeleteDeliveryStreamResponse struct {
	*types.DeleteDeliveryStreamOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// DeleteDeliveryStream request.
func (r *DeleteDeliveryStreamResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
