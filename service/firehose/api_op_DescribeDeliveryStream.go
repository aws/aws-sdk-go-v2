// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package firehose

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/firehose/types"
)

const opDescribeDeliveryStream = "DescribeDeliveryStream"

// DescribeDeliveryStreamRequest returns a request value for making API operation for
// Amazon Kinesis Firehose.
//
// Describes the specified delivery stream and its status. For example, after
// your delivery stream is created, call DescribeDeliveryStream to see whether
// the delivery stream is ACTIVE and therefore ready for data to be sent to
// it.
//
// If the status of a delivery stream is CREATING_FAILED, this status doesn't
// change, and you can't invoke CreateDeliveryStream again on it. However, you
// can invoke the DeleteDeliveryStream operation to delete it. If the status
// is DELETING_FAILED, you can force deletion by invoking DeleteDeliveryStream
// again but with DeleteDeliveryStreamInput$AllowForceDelete set to true.
//
//    // Example sending a request using DescribeDeliveryStreamRequest.
//    req := client.DescribeDeliveryStreamRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/firehose-2015-08-04/DescribeDeliveryStream
func (c *Client) DescribeDeliveryStreamRequest(input *types.DescribeDeliveryStreamInput) DescribeDeliveryStreamRequest {
	op := &aws.Operation{
		Name:       opDescribeDeliveryStream,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &types.DescribeDeliveryStreamInput{}
	}

	req := c.newRequest(op, input, &types.DescribeDeliveryStreamOutput{})
	return DescribeDeliveryStreamRequest{Request: req, Input: input, Copy: c.DescribeDeliveryStreamRequest}
}

// DescribeDeliveryStreamRequest is the request type for the
// DescribeDeliveryStream API operation.
type DescribeDeliveryStreamRequest struct {
	*aws.Request
	Input *types.DescribeDeliveryStreamInput
	Copy  func(*types.DescribeDeliveryStreamInput) DescribeDeliveryStreamRequest
}

// Send marshals and sends the DescribeDeliveryStream API request.
func (r DescribeDeliveryStreamRequest) Send(ctx context.Context) (*DescribeDeliveryStreamResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &DescribeDeliveryStreamResponse{
		DescribeDeliveryStreamOutput: r.Request.Data.(*types.DescribeDeliveryStreamOutput),
		response:                     &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// DescribeDeliveryStreamResponse is the response type for the
// DescribeDeliveryStream API operation.
type DescribeDeliveryStreamResponse struct {
	*types.DescribeDeliveryStreamOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// DescribeDeliveryStream request.
func (r *DescribeDeliveryStreamResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
