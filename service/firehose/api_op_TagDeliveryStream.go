// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package firehose

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/firehose/types"
)

const opTagDeliveryStream = "TagDeliveryStream"

// TagDeliveryStreamRequest returns a request value for making API operation for
// Amazon Kinesis Firehose.
//
// Adds or updates tags for the specified delivery stream. A tag is a key-value
// pair that you can define and assign to AWS resources. If you specify a tag
// that already exists, the tag value is replaced with the value that you specify
// in the request. Tags are metadata. For example, you can add friendly names
// and descriptions or other types of information that can help you distinguish
// the delivery stream. For more information about tags, see Using Cost Allocation
// Tags (https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/cost-alloc-tags.html)
// in the AWS Billing and Cost Management User Guide.
//
// Each delivery stream can have up to 50 tags.
//
// This operation has a limit of five transactions per second per account.
//
//    // Example sending a request using TagDeliveryStreamRequest.
//    req := client.TagDeliveryStreamRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/firehose-2015-08-04/TagDeliveryStream
func (c *Client) TagDeliveryStreamRequest(input *types.TagDeliveryStreamInput) TagDeliveryStreamRequest {
	op := &aws.Operation{
		Name:       opTagDeliveryStream,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &types.TagDeliveryStreamInput{}
	}

	req := c.newRequest(op, input, &types.TagDeliveryStreamOutput{})
	return TagDeliveryStreamRequest{Request: req, Input: input, Copy: c.TagDeliveryStreamRequest}
}

// TagDeliveryStreamRequest is the request type for the
// TagDeliveryStream API operation.
type TagDeliveryStreamRequest struct {
	*aws.Request
	Input *types.TagDeliveryStreamInput
	Copy  func(*types.TagDeliveryStreamInput) TagDeliveryStreamRequest
}

// Send marshals and sends the TagDeliveryStream API request.
func (r TagDeliveryStreamRequest) Send(ctx context.Context) (*TagDeliveryStreamResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &TagDeliveryStreamResponse{
		TagDeliveryStreamOutput: r.Request.Data.(*types.TagDeliveryStreamOutput),
		response:                &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// TagDeliveryStreamResponse is the response type for the
// TagDeliveryStream API operation.
type TagDeliveryStreamResponse struct {
	*types.TagDeliveryStreamOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// TagDeliveryStream request.
func (r *TagDeliveryStreamResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
