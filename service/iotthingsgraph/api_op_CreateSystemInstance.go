// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package iotthingsgraph

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/iotthingsgraph/types"
)

const opCreateSystemInstance = "CreateSystemInstance"

// CreateSystemInstanceRequest returns a request value for making API operation for
// AWS IoT Things Graph.
//
// Creates a system instance.
//
// This action validates the system instance, prepares the deployment-related
// resources. For Greengrass deployments, it updates the Greengrass group that
// is specified by the greengrassGroupName parameter. It also adds a file to
// the S3 bucket specified by the s3BucketName parameter. You need to call DeploySystemInstance
// after running this action.
//
// For Greengrass deployments, since this action modifies and adds resources
// to a Greengrass group and an S3 bucket on the caller's behalf, the calling
// identity must have write permissions to both the specified Greengrass group
// and S3 bucket. Otherwise, the call will fail with an authorization error.
//
// For cloud deployments, this action requires a flowActionsRoleArn value. This
// is an IAM role that has permissions to access AWS services, such as AWS Lambda
// and AWS IoT, that the flow uses when it executes.
//
// If the definition document doesn't specify a version of the user's namespace,
// the latest version will be used by default.
//
//    // Example sending a request using CreateSystemInstanceRequest.
//    req := client.CreateSystemInstanceRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/iotthingsgraph-2018-09-06/CreateSystemInstance
func (c *Client) CreateSystemInstanceRequest(input *types.CreateSystemInstanceInput) CreateSystemInstanceRequest {
	op := &aws.Operation{
		Name:       opCreateSystemInstance,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &types.CreateSystemInstanceInput{}
	}

	req := c.newRequest(op, input, &types.CreateSystemInstanceOutput{})
	return CreateSystemInstanceRequest{Request: req, Input: input, Copy: c.CreateSystemInstanceRequest}
}

// CreateSystemInstanceRequest is the request type for the
// CreateSystemInstance API operation.
type CreateSystemInstanceRequest struct {
	*aws.Request
	Input *types.CreateSystemInstanceInput
	Copy  func(*types.CreateSystemInstanceInput) CreateSystemInstanceRequest
}

// Send marshals and sends the CreateSystemInstance API request.
func (r CreateSystemInstanceRequest) Send(ctx context.Context) (*CreateSystemInstanceResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &CreateSystemInstanceResponse{
		CreateSystemInstanceOutput: r.Request.Data.(*types.CreateSystemInstanceOutput),
		response:                   &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// CreateSystemInstanceResponse is the response type for the
// CreateSystemInstance API operation.
type CreateSystemInstanceResponse struct {
	*types.CreateSystemInstanceOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// CreateSystemInstance request.
func (r *CreateSystemInstanceResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
