// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package types

import (
	"time"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/internal/awsutil"
	"github.com/aws/aws-sdk-go-v2/service/iotthingsgraph/enums"
)

type GetUploadStatusInput struct {
	_ struct{} `type:"structure"`

	// The ID of the upload. This value is returned by the UploadEntityDefinitions
	// action.
	//
	// UploadId is a required field
	UploadId *string `locationName:"uploadId" min:"1" type:"string" required:"true"`
}

// String returns the string representation
func (s GetUploadStatusInput) String() string {
	return awsutil.Prettify(s)
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *GetUploadStatusInput) Validate() error {
	invalidParams := aws.ErrInvalidParams{Context: "GetUploadStatusInput"}

	if s.UploadId == nil {
		invalidParams.Add(aws.NewErrParamRequired("UploadId"))
	}
	if s.UploadId != nil && len(*s.UploadId) < 1 {
		invalidParams.Add(aws.NewErrParamMinLen("UploadId", 1))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

type GetUploadStatusOutput struct {
	_ struct{} `type:"structure"`

	// The date at which the upload was created.
	//
	// CreatedDate is a required field
	CreatedDate *time.Time `locationName:"createdDate" type:"timestamp" required:"true"`

	// The reason for an upload failure.
	FailureReason []string `locationName:"failureReason" type:"list"`

	// The ARN of the upload.
	NamespaceArn *string `locationName:"namespaceArn" type:"string"`

	// The name of the upload's namespace.
	NamespaceName *string `locationName:"namespaceName" type:"string"`

	// The version of the user's namespace. Defaults to the latest version of the
	// user's namespace.
	NamespaceVersion *int64 `locationName:"namespaceVersion" type:"long"`

	// The ID of the upload.
	//
	// UploadId is a required field
	UploadId *string `locationName:"uploadId" min:"1" type:"string" required:"true"`

	// The status of the upload. The initial status is IN_PROGRESS. The response
	// show all validation failures if the upload fails.
	//
	// UploadStatus is a required field
	UploadStatus enums.UploadStatus `locationName:"uploadStatus" type:"string" required:"true" enum:"true"`
}

// String returns the string representation
func (s GetUploadStatusOutput) String() string {
	return awsutil.Prettify(s)
}
