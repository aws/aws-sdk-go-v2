// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package iotthingsgraph

type DefinitionLanguage string

// Enum values for DefinitionLanguage
const (
	DefinitionLanguageGraphql DefinitionLanguage = "GRAPHQL"
)

func (enum DefinitionLanguage) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum DefinitionLanguage) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type DeploymentTarget string

// Enum values for DeploymentTarget
const (
	DeploymentTargetGreengrass DeploymentTarget = "GREENGRASS"
	DeploymentTargetCloud      DeploymentTarget = "CLOUD"
)

func (enum DeploymentTarget) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum DeploymentTarget) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type EntityFilterName string

// Enum values for EntityFilterName
const (
	EntityFilterNameName               EntityFilterName = "NAME"
	EntityFilterNameNamespace          EntityFilterName = "NAMESPACE"
	EntityFilterNameSemanticTypePath   EntityFilterName = "SEMANTIC_TYPE_PATH"
	EntityFilterNameReferencedEntityId EntityFilterName = "REFERENCED_ENTITY_ID"
)

func (enum EntityFilterName) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum EntityFilterName) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type EntityType string

// Enum values for EntityType
const (
	EntityTypeDevice      EntityType = "DEVICE"
	EntityTypeService     EntityType = "SERVICE"
	EntityTypeDeviceModel EntityType = "DEVICE_MODEL"
	EntityTypeCapability  EntityType = "CAPABILITY"
	EntityTypeState       EntityType = "STATE"
	EntityTypeAction      EntityType = "ACTION"
	EntityTypeEvent       EntityType = "EVENT"
	EntityTypeProperty    EntityType = "PROPERTY"
	EntityTypeMapping     EntityType = "MAPPING"
	EntityTypeEnum        EntityType = "ENUM"
)

func (enum EntityType) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum EntityType) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type FlowExecutionEventType string

// Enum values for FlowExecutionEventType
const (
	FlowExecutionEventTypeExecutionStarted           FlowExecutionEventType = "EXECUTION_STARTED"
	FlowExecutionEventTypeExecutionFailed            FlowExecutionEventType = "EXECUTION_FAILED"
	FlowExecutionEventTypeExecutionAborted           FlowExecutionEventType = "EXECUTION_ABORTED"
	FlowExecutionEventTypeExecutionSucceeded         FlowExecutionEventType = "EXECUTION_SUCCEEDED"
	FlowExecutionEventTypeStepStarted                FlowExecutionEventType = "STEP_STARTED"
	FlowExecutionEventTypeStepFailed                 FlowExecutionEventType = "STEP_FAILED"
	FlowExecutionEventTypeStepSucceeded              FlowExecutionEventType = "STEP_SUCCEEDED"
	FlowExecutionEventTypeActivityScheduled          FlowExecutionEventType = "ACTIVITY_SCHEDULED"
	FlowExecutionEventTypeActivityStarted            FlowExecutionEventType = "ACTIVITY_STARTED"
	FlowExecutionEventTypeActivityFailed             FlowExecutionEventType = "ACTIVITY_FAILED"
	FlowExecutionEventTypeActivitySucceeded          FlowExecutionEventType = "ACTIVITY_SUCCEEDED"
	FlowExecutionEventTypeStartFlowExecutionTask     FlowExecutionEventType = "START_FLOW_EXECUTION_TASK"
	FlowExecutionEventTypeScheduleNextReadyStepsTask FlowExecutionEventType = "SCHEDULE_NEXT_READY_STEPS_TASK"
	FlowExecutionEventTypeThingActionTask            FlowExecutionEventType = "THING_ACTION_TASK"
	FlowExecutionEventTypeThingActionTaskFailed      FlowExecutionEventType = "THING_ACTION_TASK_FAILED"
	FlowExecutionEventTypeThingActionTaskSucceeded   FlowExecutionEventType = "THING_ACTION_TASK_SUCCEEDED"
	FlowExecutionEventTypeAcknowledgeTaskMessage     FlowExecutionEventType = "ACKNOWLEDGE_TASK_MESSAGE"
)

func (enum FlowExecutionEventType) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum FlowExecutionEventType) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type FlowExecutionStatus string

// Enum values for FlowExecutionStatus
const (
	FlowExecutionStatusRunning   FlowExecutionStatus = "RUNNING"
	FlowExecutionStatusAborted   FlowExecutionStatus = "ABORTED"
	FlowExecutionStatusSucceeded FlowExecutionStatus = "SUCCEEDED"
	FlowExecutionStatusFailed    FlowExecutionStatus = "FAILED"
)

func (enum FlowExecutionStatus) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum FlowExecutionStatus) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type FlowTemplateFilterName string

// Enum values for FlowTemplateFilterName
const (
	FlowTemplateFilterNameDeviceModelId FlowTemplateFilterName = "DEVICE_MODEL_ID"
)

func (enum FlowTemplateFilterName) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum FlowTemplateFilterName) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type NamespaceDeletionStatus string

// Enum values for NamespaceDeletionStatus
const (
	NamespaceDeletionStatusInProgress NamespaceDeletionStatus = "IN_PROGRESS"
	NamespaceDeletionStatusSucceeded  NamespaceDeletionStatus = "SUCCEEDED"
	NamespaceDeletionStatusFailed     NamespaceDeletionStatus = "FAILED"
)

func (enum NamespaceDeletionStatus) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum NamespaceDeletionStatus) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type NamespaceDeletionStatusErrorCodes string

// Enum values for NamespaceDeletionStatusErrorCodes
const (
	NamespaceDeletionStatusErrorCodesValidationFailed NamespaceDeletionStatusErrorCodes = "VALIDATION_FAILED"
)

func (enum NamespaceDeletionStatusErrorCodes) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum NamespaceDeletionStatusErrorCodes) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type SystemInstanceDeploymentStatus string

// Enum values for SystemInstanceDeploymentStatus
const (
	SystemInstanceDeploymentStatusNotDeployed        SystemInstanceDeploymentStatus = "NOT_DEPLOYED"
	SystemInstanceDeploymentStatusBootstrap          SystemInstanceDeploymentStatus = "BOOTSTRAP"
	SystemInstanceDeploymentStatusDeployInProgress   SystemInstanceDeploymentStatus = "DEPLOY_IN_PROGRESS"
	SystemInstanceDeploymentStatusDeployedInTarget   SystemInstanceDeploymentStatus = "DEPLOYED_IN_TARGET"
	SystemInstanceDeploymentStatusUndeployInProgress SystemInstanceDeploymentStatus = "UNDEPLOY_IN_PROGRESS"
	SystemInstanceDeploymentStatusFailed             SystemInstanceDeploymentStatus = "FAILED"
	SystemInstanceDeploymentStatusPendingDelete      SystemInstanceDeploymentStatus = "PENDING_DELETE"
	SystemInstanceDeploymentStatusDeletedInTarget    SystemInstanceDeploymentStatus = "DELETED_IN_TARGET"
)

func (enum SystemInstanceDeploymentStatus) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum SystemInstanceDeploymentStatus) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type SystemInstanceFilterName string

// Enum values for SystemInstanceFilterName
const (
	SystemInstanceFilterNameSystemTemplateId    SystemInstanceFilterName = "SYSTEM_TEMPLATE_ID"
	SystemInstanceFilterNameStatus              SystemInstanceFilterName = "STATUS"
	SystemInstanceFilterNameGreengrassGroupName SystemInstanceFilterName = "GREENGRASS_GROUP_NAME"
)

func (enum SystemInstanceFilterName) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum SystemInstanceFilterName) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type SystemTemplateFilterName string

// Enum values for SystemTemplateFilterName
const (
	SystemTemplateFilterNameFlowTemplateId SystemTemplateFilterName = "FLOW_TEMPLATE_ID"
)

func (enum SystemTemplateFilterName) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum SystemTemplateFilterName) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type UploadStatus string

// Enum values for UploadStatus
const (
	UploadStatusInProgress UploadStatus = "IN_PROGRESS"
	UploadStatusSucceeded  UploadStatus = "SUCCEEDED"
	UploadStatusFailed     UploadStatus = "FAILED"
)

func (enum UploadStatus) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum UploadStatus) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}
