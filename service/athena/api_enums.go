// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package athena

type ColumnNullable string

// Enum values for ColumnNullable
const (
	ColumnNullableNotNull  ColumnNullable = "NOT_NULL"
	ColumnNullableNullable ColumnNullable = "NULLABLE"
	ColumnNullableUnknown  ColumnNullable = "UNKNOWN"
)

func (enum ColumnNullable) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum ColumnNullable) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type EncryptionOption string

// Enum values for EncryptionOption
const (
	EncryptionOptionSseS3  EncryptionOption = "SSE_S3"
	EncryptionOptionSseKms EncryptionOption = "SSE_KMS"
	EncryptionOptionCseKms EncryptionOption = "CSE_KMS"
)

func (enum EncryptionOption) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum EncryptionOption) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type QueryExecutionState string

// Enum values for QueryExecutionState
const (
	QueryExecutionStateQueued    QueryExecutionState = "QUEUED"
	QueryExecutionStateRunning   QueryExecutionState = "RUNNING"
	QueryExecutionStateSucceeded QueryExecutionState = "SUCCEEDED"
	QueryExecutionStateFailed    QueryExecutionState = "FAILED"
	QueryExecutionStateCancelled QueryExecutionState = "CANCELLED"
)

func (enum QueryExecutionState) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum QueryExecutionState) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type StatementType string

// Enum values for StatementType
const (
	StatementTypeDdl     StatementType = "DDL"
	StatementTypeDml     StatementType = "DML"
	StatementTypeUtility StatementType = "UTILITY"
)

func (enum StatementType) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum StatementType) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

// The reason for the query throttling, for example, when it exceeds the concurrent
// query limit.
type ThrottleReason string

// Enum values for ThrottleReason
const (
	ThrottleReasonConcurrentQueryLimitExceeded ThrottleReason = "CONCURRENT_QUERY_LIMIT_EXCEEDED"
)

func (enum ThrottleReason) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum ThrottleReason) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type WorkGroupState string

// Enum values for WorkGroupState
const (
	WorkGroupStateEnabled  WorkGroupState = "ENABLED"
	WorkGroupStateDisabled WorkGroupState = "DISABLED"
)

func (enum WorkGroupState) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum WorkGroupState) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}
