// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package alexaforbusiness

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/alexaforbusiness/types"
)

const opCreateConferenceProvider = "CreateConferenceProvider"

// CreateConferenceProviderRequest returns a request value for making API operation for
// Alexa For Business.
//
// Adds a new conference provider under the user's AWS account.
//
//    // Example sending a request using CreateConferenceProviderRequest.
//    req := client.CreateConferenceProviderRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/alexaforbusiness-2017-11-09/CreateConferenceProvider
func (c *Client) CreateConferenceProviderRequest(input *types.CreateConferenceProviderInput) CreateConferenceProviderRequest {
	op := &aws.Operation{
		Name:       opCreateConferenceProvider,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &types.CreateConferenceProviderInput{}
	}

	req := c.newRequest(op, input, &types.CreateConferenceProviderOutput{})
	return CreateConferenceProviderRequest{Request: req, Input: input, Copy: c.CreateConferenceProviderRequest}
}

// CreateConferenceProviderRequest is the request type for the
// CreateConferenceProvider API operation.
type CreateConferenceProviderRequest struct {
	*aws.Request
	Input *types.CreateConferenceProviderInput
	Copy  func(*types.CreateConferenceProviderInput) CreateConferenceProviderRequest
}

// Send marshals and sends the CreateConferenceProvider API request.
func (r CreateConferenceProviderRequest) Send(ctx context.Context) (*CreateConferenceProviderResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &CreateConferenceProviderResponse{
		CreateConferenceProviderOutput: r.Request.Data.(*types.CreateConferenceProviderOutput),
		response:                       &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// CreateConferenceProviderResponse is the response type for the
// CreateConferenceProvider API operation.
type CreateConferenceProviderResponse struct {
	*types.CreateConferenceProviderOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// CreateConferenceProvider request.
func (r *CreateConferenceProviderResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
