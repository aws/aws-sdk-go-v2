// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package types

import (
	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/internal/awsutil"
)

type ListSkillsStoreSkillsByCategoryInput struct {
	_ struct{} `type:"structure"`

	// The category ID for which the skills are being retrieved from the skill store.
	//
	// CategoryId is a required field
	CategoryId *int64 `min:"1" type:"long" required:"true"`

	// The maximum number of skills returned per paginated calls.
	MaxResults *int64 `min:"1" type:"integer"`

	// The tokens used for pagination.
	NextToken *string `min:"1" type:"string"`
}

// String returns the string representation
func (s ListSkillsStoreSkillsByCategoryInput) String() string {
	return awsutil.Prettify(s)
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *ListSkillsStoreSkillsByCategoryInput) Validate() error {
	invalidParams := aws.ErrInvalidParams{Context: "ListSkillsStoreSkillsByCategoryInput"}

	if s.CategoryId == nil {
		invalidParams.Add(aws.NewErrParamRequired("CategoryId"))
	}
	if s.CategoryId != nil && *s.CategoryId < 1 {
		invalidParams.Add(aws.NewErrParamMinValue("CategoryId", 1))
	}
	if s.MaxResults != nil && *s.MaxResults < 1 {
		invalidParams.Add(aws.NewErrParamMinValue("MaxResults", 1))
	}
	if s.NextToken != nil && len(*s.NextToken) < 1 {
		invalidParams.Add(aws.NewErrParamMinLen("NextToken", 1))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

type ListSkillsStoreSkillsByCategoryOutput struct {
	_ struct{} `type:"structure"`

	// The tokens used for pagination.
	NextToken *string `min:"1" type:"string"`

	// The skill store skills.
	SkillsStoreSkills []SkillsStoreSkill `type:"list"`
}

// String returns the string representation
func (s ListSkillsStoreSkillsByCategoryOutput) String() string {
	return awsutil.Prettify(s)
}
