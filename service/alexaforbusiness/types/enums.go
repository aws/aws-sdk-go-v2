// Code generated by smithy-go-codegen DO NOT EDIT.

package types

type BusinessReportFailureCode string

// Enum values for BusinessReportFailureCode
const (
	BusinessReportFailureCodeAccessDenied    BusinessReportFailureCode = "ACCESS_DENIED"
	BusinessReportFailureCodeNoSuchBucket    BusinessReportFailureCode = "NO_SUCH_BUCKET"
	BusinessReportFailureCodeInternalFailure BusinessReportFailureCode = "INTERNAL_FAILURE"
)

// Values returns all known values for BusinessReportFailureCode. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
// The ordering of this slice is not guaranteed to be stable across updates.
func (BusinessReportFailureCode) Values() []BusinessReportFailureCode {
	return []BusinessReportFailureCode{
		"ACCESS_DENIED",
		"NO_SUCH_BUCKET",
		"INTERNAL_FAILURE",
	}
}

type BusinessReportFormat string

// Enum values for BusinessReportFormat
const (
	BusinessReportFormatCsv    BusinessReportFormat = "CSV"
	BusinessReportFormatCsvZip BusinessReportFormat = "CSV_ZIP"
)

// Values returns all known values for BusinessReportFormat. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (BusinessReportFormat) Values() []BusinessReportFormat {
	return []BusinessReportFormat{
		"CSV",
		"CSV_ZIP",
	}
}

type BusinessReportInterval string

// Enum values for BusinessReportInterval
const (
	BusinessReportIntervalOneDay     BusinessReportInterval = "ONE_DAY"
	BusinessReportIntervalOneWeek    BusinessReportInterval = "ONE_WEEK"
	BusinessReportIntervalThirtyDays BusinessReportInterval = "THIRTY_DAYS"
)

// Values returns all known values for BusinessReportInterval. Note that this can
// be expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (BusinessReportInterval) Values() []BusinessReportInterval {
	return []BusinessReportInterval{
		"ONE_DAY",
		"ONE_WEEK",
		"THIRTY_DAYS",
	}
}

type BusinessReportStatus string

// Enum values for BusinessReportStatus
const (
	BusinessReportStatusRunning   BusinessReportStatus = "RUNNING"
	BusinessReportStatusSucceeded BusinessReportStatus = "SUCCEEDED"
	BusinessReportStatusFailed    BusinessReportStatus = "FAILED"
)

// Values returns all known values for BusinessReportStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (BusinessReportStatus) Values() []BusinessReportStatus {
	return []BusinessReportStatus{
		"RUNNING",
		"SUCCEEDED",
		"FAILED",
	}
}

type CommsProtocol string

// Enum values for CommsProtocol
const (
	CommsProtocolSip  CommsProtocol = "SIP"
	CommsProtocolSips CommsProtocol = "SIPS"
	CommsProtocolH323 CommsProtocol = "H323"
)

// Values returns all known values for CommsProtocol. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (CommsProtocol) Values() []CommsProtocol {
	return []CommsProtocol{
		"SIP",
		"SIPS",
		"H323",
	}
}

type ConferenceProviderType string

// Enum values for ConferenceProviderType
const (
	ConferenceProviderTypeChime            ConferenceProviderType = "CHIME"
	ConferenceProviderTypeBluejeans        ConferenceProviderType = "BLUEJEANS"
	ConferenceProviderTypeFuze             ConferenceProviderType = "FUZE"
	ConferenceProviderTypeGoogleHangouts   ConferenceProviderType = "GOOGLE_HANGOUTS"
	ConferenceProviderTypePolycom          ConferenceProviderType = "POLYCOM"
	ConferenceProviderTypeRingcentral      ConferenceProviderType = "RINGCENTRAL"
	ConferenceProviderTypeSkypeForBusiness ConferenceProviderType = "SKYPE_FOR_BUSINESS"
	ConferenceProviderTypeWebex            ConferenceProviderType = "WEBEX"
	ConferenceProviderTypeZoom             ConferenceProviderType = "ZOOM"
	ConferenceProviderTypeCustom           ConferenceProviderType = "CUSTOM"
)

// Values returns all known values for ConferenceProviderType. Note that this can
// be expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (ConferenceProviderType) Values() []ConferenceProviderType {
	return []ConferenceProviderType{
		"CHIME",
		"BLUEJEANS",
		"FUZE",
		"GOOGLE_HANGOUTS",
		"POLYCOM",
		"RINGCENTRAL",
		"SKYPE_FOR_BUSINESS",
		"WEBEX",
		"ZOOM",
		"CUSTOM",
	}
}

type ConnectionStatus string

// Enum values for ConnectionStatus
const (
	ConnectionStatusOnline  ConnectionStatus = "ONLINE"
	ConnectionStatusOffline ConnectionStatus = "OFFLINE"
)

// Values returns all known values for ConnectionStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (ConnectionStatus) Values() []ConnectionStatus {
	return []ConnectionStatus{
		"ONLINE",
		"OFFLINE",
	}
}

type DeviceEventType string

// Enum values for DeviceEventType
const (
	DeviceEventTypeConnectionStatus DeviceEventType = "CONNECTION_STATUS"
	DeviceEventTypeDeviceStatus     DeviceEventType = "DEVICE_STATUS"
)

// Values returns all known values for DeviceEventType. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (DeviceEventType) Values() []DeviceEventType {
	return []DeviceEventType{
		"CONNECTION_STATUS",
		"DEVICE_STATUS",
	}
}

type DeviceStatus string

// Enum values for DeviceStatus
const (
	DeviceStatusReady        DeviceStatus = "READY"
	DeviceStatusPending      DeviceStatus = "PENDING"
	DeviceStatusWasOffline   DeviceStatus = "WAS_OFFLINE"
	DeviceStatusDeregistered DeviceStatus = "DEREGISTERED"
	DeviceStatusFailed       DeviceStatus = "FAILED"
)

// Values returns all known values for DeviceStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (DeviceStatus) Values() []DeviceStatus {
	return []DeviceStatus{
		"READY",
		"PENDING",
		"WAS_OFFLINE",
		"DEREGISTERED",
		"FAILED",
	}
}

type DeviceStatusDetailCode string

// Enum values for DeviceStatusDetailCode
const (
	DeviceStatusDetailCodeDeviceSoftwareUpdateNeeded       DeviceStatusDetailCode = "DEVICE_SOFTWARE_UPDATE_NEEDED"
	DeviceStatusDetailCodeDeviceWasOffline                 DeviceStatusDetailCode = "DEVICE_WAS_OFFLINE"
	DeviceStatusDetailCodeCredentialsAccessFailure         DeviceStatusDetailCode = "CREDENTIALS_ACCESS_FAILURE"
	DeviceStatusDetailCodeTlsVersionMismatch               DeviceStatusDetailCode = "TLS_VERSION_MISMATCH"
	DeviceStatusDetailCodeAssociationRejection             DeviceStatusDetailCode = "ASSOCIATION_REJECTION"
	DeviceStatusDetailCodeAuthenticationFailure            DeviceStatusDetailCode = "AUTHENTICATION_FAILURE"
	DeviceStatusDetailCodeDhcpFailure                      DeviceStatusDetailCode = "DHCP_FAILURE"
	DeviceStatusDetailCodeInternetUnavailable              DeviceStatusDetailCode = "INTERNET_UNAVAILABLE"
	DeviceStatusDetailCodeDnsFailure                       DeviceStatusDetailCode = "DNS_FAILURE"
	DeviceStatusDetailCodeUnknownFailure                   DeviceStatusDetailCode = "UNKNOWN_FAILURE"
	DeviceStatusDetailCodeCertificateIssuingLimitExceeded  DeviceStatusDetailCode = "CERTIFICATE_ISSUING_LIMIT_EXCEEDED"
	DeviceStatusDetailCodeInvalidCertificateAuthority      DeviceStatusDetailCode = "INVALID_CERTIFICATE_AUTHORITY"
	DeviceStatusDetailCodeNetworkProfileNotFound           DeviceStatusDetailCode = "NETWORK_PROFILE_NOT_FOUND"
	DeviceStatusDetailCodeInvalidPasswordState             DeviceStatusDetailCode = "INVALID_PASSWORD_STATE"
	DeviceStatusDetailCodePasswordNotFound                 DeviceStatusDetailCode = "PASSWORD_NOT_FOUND"
	DeviceStatusDetailCodePasswordManagerAccessDenied      DeviceStatusDetailCode = "PASSWORD_MANAGER_ACCESS_DENIED"
	DeviceStatusDetailCodeCertificateAuthorityAccessDenied DeviceStatusDetailCode = "CERTIFICATE_AUTHORITY_ACCESS_DENIED"
)

// Values returns all known values for DeviceStatusDetailCode. Note that this can
// be expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (DeviceStatusDetailCode) Values() []DeviceStatusDetailCode {
	return []DeviceStatusDetailCode{
		"DEVICE_SOFTWARE_UPDATE_NEEDED",
		"DEVICE_WAS_OFFLINE",
		"CREDENTIALS_ACCESS_FAILURE",
		"TLS_VERSION_MISMATCH",
		"ASSOCIATION_REJECTION",
		"AUTHENTICATION_FAILURE",
		"DHCP_FAILURE",
		"INTERNET_UNAVAILABLE",
		"DNS_FAILURE",
		"UNKNOWN_FAILURE",
		"CERTIFICATE_ISSUING_LIMIT_EXCEEDED",
		"INVALID_CERTIFICATE_AUTHORITY",
		"NETWORK_PROFILE_NOT_FOUND",
		"INVALID_PASSWORD_STATE",
		"PASSWORD_NOT_FOUND",
		"PASSWORD_MANAGER_ACCESS_DENIED",
		"CERTIFICATE_AUTHORITY_ACCESS_DENIED",
	}
}

type DeviceUsageType string

// Enum values for DeviceUsageType
const (
	DeviceUsageTypeVoice DeviceUsageType = "VOICE"
)

// Values returns all known values for DeviceUsageType. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (DeviceUsageType) Values() []DeviceUsageType {
	return []DeviceUsageType{
		"VOICE",
	}
}

type DistanceUnit string

// Enum values for DistanceUnit
const (
	DistanceUnitMetric   DistanceUnit = "METRIC"
	DistanceUnitImperial DistanceUnit = "IMPERIAL"
)

// Values returns all known values for DistanceUnit. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (DistanceUnit) Values() []DistanceUnit {
	return []DistanceUnit{
		"METRIC",
		"IMPERIAL",
	}
}

type EnablementType string

// Enum values for EnablementType
const (
	EnablementTypeEnabled EnablementType = "ENABLED"
	EnablementTypePending EnablementType = "PENDING"
)

// Values returns all known values for EnablementType. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (EnablementType) Values() []EnablementType {
	return []EnablementType{
		"ENABLED",
		"PENDING",
	}
}

type EnablementTypeFilter string

// Enum values for EnablementTypeFilter
const (
	EnablementTypeFilterEnabled EnablementTypeFilter = "ENABLED"
	EnablementTypeFilterPending EnablementTypeFilter = "PENDING"
)

// Values returns all known values for EnablementTypeFilter. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (EnablementTypeFilter) Values() []EnablementTypeFilter {
	return []EnablementTypeFilter{
		"ENABLED",
		"PENDING",
	}
}

type EndOfMeetingReminderType string

// Enum values for EndOfMeetingReminderType
const (
	EndOfMeetingReminderTypeAnnouncementTimeCheck        EndOfMeetingReminderType = "ANNOUNCEMENT_TIME_CHECK"
	EndOfMeetingReminderTypeAnnouncementVariableTimeLeft EndOfMeetingReminderType = "ANNOUNCEMENT_VARIABLE_TIME_LEFT"
	EndOfMeetingReminderTypeChime                        EndOfMeetingReminderType = "CHIME"
	EndOfMeetingReminderTypeKnock                        EndOfMeetingReminderType = "KNOCK"
)

// Values returns all known values for EndOfMeetingReminderType. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
// The ordering of this slice is not guaranteed to be stable across updates.
func (EndOfMeetingReminderType) Values() []EndOfMeetingReminderType {
	return []EndOfMeetingReminderType{
		"ANNOUNCEMENT_TIME_CHECK",
		"ANNOUNCEMENT_VARIABLE_TIME_LEFT",
		"CHIME",
		"KNOCK",
	}
}

type EnrollmentStatus string

// Enum values for EnrollmentStatus
const (
	EnrollmentStatusInitialized    EnrollmentStatus = "INITIALIZED"
	EnrollmentStatusPending        EnrollmentStatus = "PENDING"
	EnrollmentStatusRegistered     EnrollmentStatus = "REGISTERED"
	EnrollmentStatusDisassociating EnrollmentStatus = "DISASSOCIATING"
	EnrollmentStatusDeregistering  EnrollmentStatus = "DEREGISTERING"
)

// Values returns all known values for EnrollmentStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (EnrollmentStatus) Values() []EnrollmentStatus {
	return []EnrollmentStatus{
		"INITIALIZED",
		"PENDING",
		"REGISTERED",
		"DISASSOCIATING",
		"DEREGISTERING",
	}
}

type Feature string

// Enum values for Feature
const (
	FeatureBluetooth      Feature = "BLUETOOTH"
	FeatureVolume         Feature = "VOLUME"
	FeatureNotifications  Feature = "NOTIFICATIONS"
	FeatureLists          Feature = "LISTS"
	FeatureSkills         Feature = "SKILLS"
	FeatureNetworkProfile Feature = "NETWORK_PROFILE"
	FeatureSettings       Feature = "SETTINGS"
	FeatureAll            Feature = "ALL"
)

// Values returns all known values for Feature. Note that this can be expanded in
// the future, and so it is only as up to date as the client. The ordering of this
// slice is not guaranteed to be stable across updates.
func (Feature) Values() []Feature {
	return []Feature{
		"BLUETOOTH",
		"VOLUME",
		"NOTIFICATIONS",
		"LISTS",
		"SKILLS",
		"NETWORK_PROFILE",
		"SETTINGS",
		"ALL",
	}
}

type Locale string

// Enum values for Locale
const (
	LocaleEnUs Locale = "en-US"
)

// Values returns all known values for Locale. Note that this can be expanded in
// the future, and so it is only as up to date as the client. The ordering of this
// slice is not guaranteed to be stable across updates.
func (Locale) Values() []Locale {
	return []Locale{
		"en-US",
	}
}

type NetworkEapMethod string

// Enum values for NetworkEapMethod
const (
	NetworkEapMethodEapTls NetworkEapMethod = "EAP_TLS"
)

// Values returns all known values for NetworkEapMethod. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (NetworkEapMethod) Values() []NetworkEapMethod {
	return []NetworkEapMethod{
		"EAP_TLS",
	}
}

type NetworkSecurityType string

// Enum values for NetworkSecurityType
const (
	NetworkSecurityTypeOpen           NetworkSecurityType = "OPEN"
	NetworkSecurityTypeWep            NetworkSecurityType = "WEP"
	NetworkSecurityTypeWpaPsk         NetworkSecurityType = "WPA_PSK"
	NetworkSecurityTypeWpa2Psk        NetworkSecurityType = "WPA2_PSK"
	NetworkSecurityTypeWpa2Enterprise NetworkSecurityType = "WPA2_ENTERPRISE"
)

// Values returns all known values for NetworkSecurityType. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (NetworkSecurityType) Values() []NetworkSecurityType {
	return []NetworkSecurityType{
		"OPEN",
		"WEP",
		"WPA_PSK",
		"WPA2_PSK",
		"WPA2_ENTERPRISE",
	}
}

type PhoneNumberType string

// Enum values for PhoneNumberType
const (
	PhoneNumberTypeMobile PhoneNumberType = "MOBILE"
	PhoneNumberTypeWork   PhoneNumberType = "WORK"
	PhoneNumberTypeHome   PhoneNumberType = "HOME"
)

// Values returns all known values for PhoneNumberType. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (PhoneNumberType) Values() []PhoneNumberType {
	return []PhoneNumberType{
		"MOBILE",
		"WORK",
		"HOME",
	}
}

type RequirePin string

// Enum values for RequirePin
const (
	RequirePinYes      RequirePin = "YES"
	RequirePinNo       RequirePin = "NO"
	RequirePinOptional RequirePin = "OPTIONAL"
)

// Values returns all known values for RequirePin. Note that this can be expanded
// in the future, and so it is only as up to date as the client. The ordering of
// this slice is not guaranteed to be stable across updates.
func (RequirePin) Values() []RequirePin {
	return []RequirePin{
		"YES",
		"NO",
		"OPTIONAL",
	}
}

type SipType string

// Enum values for SipType
const (
	SipTypeWork SipType = "WORK"
)

// Values returns all known values for SipType. Note that this can be expanded in
// the future, and so it is only as up to date as the client. The ordering of this
// slice is not guaranteed to be stable across updates.
func (SipType) Values() []SipType {
	return []SipType{
		"WORK",
	}
}

type SkillType string

// Enum values for SkillType
const (
	SkillTypePublic  SkillType = "PUBLIC"
	SkillTypePrivate SkillType = "PRIVATE"
)

// Values returns all known values for SkillType. Note that this can be expanded
// in the future, and so it is only as up to date as the client. The ordering of
// this slice is not guaranteed to be stable across updates.
func (SkillType) Values() []SkillType {
	return []SkillType{
		"PUBLIC",
		"PRIVATE",
	}
}

type SkillTypeFilter string

// Enum values for SkillTypeFilter
const (
	SkillTypeFilterPublic  SkillTypeFilter = "PUBLIC"
	SkillTypeFilterPrivate SkillTypeFilter = "PRIVATE"
	SkillTypeFilterAll     SkillTypeFilter = "ALL"
)

// Values returns all known values for SkillTypeFilter. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (SkillTypeFilter) Values() []SkillTypeFilter {
	return []SkillTypeFilter{
		"PUBLIC",
		"PRIVATE",
		"ALL",
	}
}

type SortValue string

// Enum values for SortValue
const (
	SortValueAsc  SortValue = "ASC"
	SortValueDesc SortValue = "DESC"
)

// Values returns all known values for SortValue. Note that this can be expanded
// in the future, and so it is only as up to date as the client. The ordering of
// this slice is not guaranteed to be stable across updates.
func (SortValue) Values() []SortValue {
	return []SortValue{
		"ASC",
		"DESC",
	}
}

type TemperatureUnit string

// Enum values for TemperatureUnit
const (
	TemperatureUnitFahrenheit TemperatureUnit = "FAHRENHEIT"
	TemperatureUnitCelsius    TemperatureUnit = "CELSIUS"
)

// Values returns all known values for TemperatureUnit. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (TemperatureUnit) Values() []TemperatureUnit {
	return []TemperatureUnit{
		"FAHRENHEIT",
		"CELSIUS",
	}
}

type WakeWord string

// Enum values for WakeWord
const (
	WakeWordAlexa    WakeWord = "ALEXA"
	WakeWordAmazon   WakeWord = "AMAZON"
	WakeWordEcho     WakeWord = "ECHO"
	WakeWordComputer WakeWord = "COMPUTER"
)

// Values returns all known values for WakeWord. Note that this can be expanded in
// the future, and so it is only as up to date as the client. The ordering of this
// slice is not guaranteed to be stable across updates.
func (WakeWord) Values() []WakeWord {
	return []WakeWord{
		"ALEXA",
		"AMAZON",
		"ECHO",
		"COMPUTER",
	}
}
