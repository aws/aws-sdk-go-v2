// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package codecommit

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/codecommit/types"
)

const opGetCommit = "GetCommit"

// GetCommitRequest returns a request value for making API operation for
// AWS CodeCommit.
//
// Returns information about a commit, including commit message and committer
// information.
//
//    // Example sending a request using GetCommitRequest.
//    req := client.GetCommitRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/GetCommit
func (c *Client) GetCommitRequest(input *types.GetCommitInput) GetCommitRequest {
	op := &aws.Operation{
		Name:       opGetCommit,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &types.GetCommitInput{}
	}

	req := c.newRequest(op, input, &types.GetCommitOutput{})
	return GetCommitRequest{Request: req, Input: input, Copy: c.GetCommitRequest}
}

// GetCommitRequest is the request type for the
// GetCommit API operation.
type GetCommitRequest struct {
	*aws.Request
	Input *types.GetCommitInput
	Copy  func(*types.GetCommitInput) GetCommitRequest
}

// Send marshals and sends the GetCommit API request.
func (r GetCommitRequest) Send(ctx context.Context) (*GetCommitResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &GetCommitResponse{
		GetCommitOutput: r.Request.Data.(*types.GetCommitOutput),
		response:        &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// GetCommitResponse is the response type for the
// GetCommit API operation.
type GetCommitResponse struct {
	*types.GetCommitOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// GetCommit request.
func (r *GetCommitResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
