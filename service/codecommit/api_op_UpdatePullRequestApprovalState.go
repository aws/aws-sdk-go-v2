// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package codecommit

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/private/protocol"
	"github.com/aws/aws-sdk-go-v2/private/protocol/jsonrpc"
	"github.com/aws/aws-sdk-go-v2/service/codecommit/types"
)

const opUpdatePullRequestApprovalState = "UpdatePullRequestApprovalState"

// UpdatePullRequestApprovalStateRequest returns a request value for making API operation for
// AWS CodeCommit.
//
// Updates the state of a user's approval on a pull request. The user is derived
// from the signed-in account when the request is made.
//
//    // Example sending a request using UpdatePullRequestApprovalStateRequest.
//    req := client.UpdatePullRequestApprovalStateRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/UpdatePullRequestApprovalState
func (c *Client) UpdatePullRequestApprovalStateRequest(input *types.UpdatePullRequestApprovalStateInput) UpdatePullRequestApprovalStateRequest {
	op := &aws.Operation{
		Name:       opUpdatePullRequestApprovalState,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &types.UpdatePullRequestApprovalStateInput{}
	}

	req := c.newRequest(op, input, &types.UpdatePullRequestApprovalStateOutput{})
	req.Handlers.Unmarshal.Remove(jsonrpc.UnmarshalHandler)
	req.Handlers.Unmarshal.PushBackNamed(protocol.UnmarshalDiscardBodyHandler)
	return UpdatePullRequestApprovalStateRequest{Request: req, Input: input, Copy: c.UpdatePullRequestApprovalStateRequest}
}

// UpdatePullRequestApprovalStateRequest is the request type for the
// UpdatePullRequestApprovalState API operation.
type UpdatePullRequestApprovalStateRequest struct {
	*aws.Request
	Input *types.UpdatePullRequestApprovalStateInput
	Copy  func(*types.UpdatePullRequestApprovalStateInput) UpdatePullRequestApprovalStateRequest
}

// Send marshals and sends the UpdatePullRequestApprovalState API request.
func (r UpdatePullRequestApprovalStateRequest) Send(ctx context.Context) (*UpdatePullRequestApprovalStateResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &UpdatePullRequestApprovalStateResponse{
		UpdatePullRequestApprovalStateOutput: r.Request.Data.(*types.UpdatePullRequestApprovalStateOutput),
		response:                             &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// UpdatePullRequestApprovalStateResponse is the response type for the
// UpdatePullRequestApprovalState API operation.
type UpdatePullRequestApprovalStateResponse struct {
	*types.UpdatePullRequestApprovalStateOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// UpdatePullRequestApprovalState request.
func (r *UpdatePullRequestApprovalStateResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
