// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package codecommit

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/codecommit/types"
)

const opMergePullRequestByThreeWay = "MergePullRequestByThreeWay"

// MergePullRequestByThreeWayRequest returns a request value for making API operation for
// AWS CodeCommit.
//
// Attempts to merge the source commit of a pull request into the specified
// destination branch for that pull request at the specified commit using the
// three-way merge strategy. If the merge is successful, it closes the pull
// request.
//
//    // Example sending a request using MergePullRequestByThreeWayRequest.
//    req := client.MergePullRequestByThreeWayRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/MergePullRequestByThreeWay
func (c *Client) MergePullRequestByThreeWayRequest(input *types.MergePullRequestByThreeWayInput) MergePullRequestByThreeWayRequest {
	op := &aws.Operation{
		Name:       opMergePullRequestByThreeWay,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &types.MergePullRequestByThreeWayInput{}
	}

	req := c.newRequest(op, input, &types.MergePullRequestByThreeWayOutput{})
	return MergePullRequestByThreeWayRequest{Request: req, Input: input, Copy: c.MergePullRequestByThreeWayRequest}
}

// MergePullRequestByThreeWayRequest is the request type for the
// MergePullRequestByThreeWay API operation.
type MergePullRequestByThreeWayRequest struct {
	*aws.Request
	Input *types.MergePullRequestByThreeWayInput
	Copy  func(*types.MergePullRequestByThreeWayInput) MergePullRequestByThreeWayRequest
}

// Send marshals and sends the MergePullRequestByThreeWay API request.
func (r MergePullRequestByThreeWayRequest) Send(ctx context.Context) (*MergePullRequestByThreeWayResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &MergePullRequestByThreeWayResponse{
		MergePullRequestByThreeWayOutput: r.Request.Data.(*types.MergePullRequestByThreeWayOutput),
		response:                         &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// MergePullRequestByThreeWayResponse is the response type for the
// MergePullRequestByThreeWay API operation.
type MergePullRequestByThreeWayResponse struct {
	*types.MergePullRequestByThreeWayOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// MergePullRequestByThreeWay request.
func (r *MergePullRequestByThreeWayResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
