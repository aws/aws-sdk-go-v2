// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package codecommit

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/codecommit/types"
)

const opGetComment = "GetComment"

// GetCommentRequest returns a request value for making API operation for
// AWS CodeCommit.
//
// Returns the content of a comment made on a change, file, or commit in a repository.
//
//    // Example sending a request using GetCommentRequest.
//    req := client.GetCommentRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/GetComment
func (c *Client) GetCommentRequest(input *types.GetCommentInput) GetCommentRequest {
	op := &aws.Operation{
		Name:       opGetComment,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &types.GetCommentInput{}
	}

	req := c.newRequest(op, input, &types.GetCommentOutput{})
	return GetCommentRequest{Request: req, Input: input, Copy: c.GetCommentRequest}
}

// GetCommentRequest is the request type for the
// GetComment API operation.
type GetCommentRequest struct {
	*aws.Request
	Input *types.GetCommentInput
	Copy  func(*types.GetCommentInput) GetCommentRequest
}

// Send marshals and sends the GetComment API request.
func (r GetCommentRequest) Send(ctx context.Context) (*GetCommentResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &GetCommentResponse{
		GetCommentOutput: r.Request.Data.(*types.GetCommentOutput),
		response:         &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// GetCommentResponse is the response type for the
// GetComment API operation.
type GetCommentResponse struct {
	*types.GetCommentOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// GetComment request.
func (r *GetCommentResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
