// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package codecommit

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/codecommit/types"
)

const opGetBranch = "GetBranch"

// GetBranchRequest returns a request value for making API operation for
// AWS CodeCommit.
//
// Returns information about a repository branch, including its name and the
// last commit ID.
//
//    // Example sending a request using GetBranchRequest.
//    req := client.GetBranchRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/GetBranch
func (c *Client) GetBranchRequest(input *types.GetBranchInput) GetBranchRequest {
	op := &aws.Operation{
		Name:       opGetBranch,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &types.GetBranchInput{}
	}

	req := c.newRequest(op, input, &types.GetBranchOutput{})
	return GetBranchRequest{Request: req, Input: input, Copy: c.GetBranchRequest}
}

// GetBranchRequest is the request type for the
// GetBranch API operation.
type GetBranchRequest struct {
	*aws.Request
	Input *types.GetBranchInput
	Copy  func(*types.GetBranchInput) GetBranchRequest
}

// Send marshals and sends the GetBranch API request.
func (r GetBranchRequest) Send(ctx context.Context) (*GetBranchResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &GetBranchResponse{
		GetBranchOutput: r.Request.Data.(*types.GetBranchOutput),
		response:        &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// GetBranchResponse is the response type for the
// GetBranch API operation.
type GetBranchResponse struct {
	*types.GetBranchOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// GetBranch request.
func (r *GetBranchResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
