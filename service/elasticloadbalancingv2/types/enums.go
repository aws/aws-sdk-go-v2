// Code generated by smithy-go-codegen DO NOT EDIT.

package types

type ActionTypeEnum string

// Enum values for ActionTypeEnum
const (
	ActionTypeEnumForward              ActionTypeEnum = "forward"
	ActionTypeEnumAuthenticate_oidc    ActionTypeEnum = "authenticate-oidc"
	ActionTypeEnumAuthenticate_cognito ActionTypeEnum = "authenticate-cognito"
	ActionTypeEnumRedirect             ActionTypeEnum = "redirect"
	ActionTypeEnumFixed_response       ActionTypeEnum = "fixed-response"
)

type AuthenticateCognitoActionConditionalBehaviorEnum string

// Enum values for AuthenticateCognitoActionConditionalBehaviorEnum
const (
	AuthenticateCognitoActionConditionalBehaviorEnumDeny         AuthenticateCognitoActionConditionalBehaviorEnum = "deny"
	AuthenticateCognitoActionConditionalBehaviorEnumAllow        AuthenticateCognitoActionConditionalBehaviorEnum = "allow"
	AuthenticateCognitoActionConditionalBehaviorEnumAuthenticate AuthenticateCognitoActionConditionalBehaviorEnum = "authenticate"
)

type AuthenticateOidcActionConditionalBehaviorEnum string

// Enum values for AuthenticateOidcActionConditionalBehaviorEnum
const (
	AuthenticateOidcActionConditionalBehaviorEnumDeny         AuthenticateOidcActionConditionalBehaviorEnum = "deny"
	AuthenticateOidcActionConditionalBehaviorEnumAllow        AuthenticateOidcActionConditionalBehaviorEnum = "allow"
	AuthenticateOidcActionConditionalBehaviorEnumAuthenticate AuthenticateOidcActionConditionalBehaviorEnum = "authenticate"
)

type IpAddressType string

// Enum values for IpAddressType
const (
	IpAddressTypeIpv4      IpAddressType = "ipv4"
	IpAddressTypeDualstack IpAddressType = "dualstack"
)

type LoadBalancerSchemeEnum string

// Enum values for LoadBalancerSchemeEnum
const (
	LoadBalancerSchemeEnumInternet_facing LoadBalancerSchemeEnum = "internet-facing"
	LoadBalancerSchemeEnumInternal        LoadBalancerSchemeEnum = "internal"
)

type LoadBalancerStateEnum string

// Enum values for LoadBalancerStateEnum
const (
	LoadBalancerStateEnumActive          LoadBalancerStateEnum = "active"
	LoadBalancerStateEnumProvisioning    LoadBalancerStateEnum = "provisioning"
	LoadBalancerStateEnumActive_impaired LoadBalancerStateEnum = "active_impaired"
	LoadBalancerStateEnumFailed          LoadBalancerStateEnum = "failed"
)

type LoadBalancerTypeEnum string

// Enum values for LoadBalancerTypeEnum
const (
	LoadBalancerTypeEnumApplication LoadBalancerTypeEnum = "application"
	LoadBalancerTypeEnumNetwork     LoadBalancerTypeEnum = "network"
)

type ProtocolEnum string

// Enum values for ProtocolEnum
const (
	ProtocolEnumHttp    ProtocolEnum = "HTTP"
	ProtocolEnumHttps   ProtocolEnum = "HTTPS"
	ProtocolEnumTcp     ProtocolEnum = "TCP"
	ProtocolEnumTls     ProtocolEnum = "TLS"
	ProtocolEnumUdp     ProtocolEnum = "UDP"
	ProtocolEnumTcp_udp ProtocolEnum = "TCP_UDP"
)

type RedirectActionStatusCodeEnum string

// Enum values for RedirectActionStatusCodeEnum
const (
	RedirectActionStatusCodeEnumHttp_301 RedirectActionStatusCodeEnum = "HTTP_301"
	RedirectActionStatusCodeEnumHttp_302 RedirectActionStatusCodeEnum = "HTTP_302"
)

type TargetHealthReasonEnum string

// Enum values for TargetHealthReasonEnum
const (
	TargetHealthReasonEnumRegistration_in_progress   TargetHealthReasonEnum = "Elb.RegistrationInProgress"
	TargetHealthReasonEnumInitial_health_checking    TargetHealthReasonEnum = "Elb.InitialHealthChecking"
	TargetHealthReasonEnumResponse_code_mismatch     TargetHealthReasonEnum = "Target.ResponseCodeMismatch"
	TargetHealthReasonEnumTimeout                    TargetHealthReasonEnum = "Target.Timeout"
	TargetHealthReasonEnumFailed_health_checks       TargetHealthReasonEnum = "Target.FailedHealthChecks"
	TargetHealthReasonEnumNot_registered             TargetHealthReasonEnum = "Target.NotRegistered"
	TargetHealthReasonEnumNot_in_use                 TargetHealthReasonEnum = "Target.NotInUse"
	TargetHealthReasonEnumDeregistration_in_progress TargetHealthReasonEnum = "Target.DeregistrationInProgress"
	TargetHealthReasonEnumInvalid_state              TargetHealthReasonEnum = "Target.InvalidState"
	TargetHealthReasonEnumIp_unusable                TargetHealthReasonEnum = "Target.IpUnusable"
	TargetHealthReasonEnumHealth_check_disabled      TargetHealthReasonEnum = "Target.HealthCheckDisabled"
	TargetHealthReasonEnumInternal_error             TargetHealthReasonEnum = "Elb.InternalError"
)

type TargetHealthStateEnum string

// Enum values for TargetHealthStateEnum
const (
	TargetHealthStateEnumInitial     TargetHealthStateEnum = "initial"
	TargetHealthStateEnumHealthy     TargetHealthStateEnum = "healthy"
	TargetHealthStateEnumUnhealthy   TargetHealthStateEnum = "unhealthy"
	TargetHealthStateEnumUnused      TargetHealthStateEnum = "unused"
	TargetHealthStateEnumDraining    TargetHealthStateEnum = "draining"
	TargetHealthStateEnumUnavailable TargetHealthStateEnum = "unavailable"
)

type TargetTypeEnum string

// Enum values for TargetTypeEnum
const (
	TargetTypeEnumInstance TargetTypeEnum = "instance"
	TargetTypeEnumIp       TargetTypeEnum = "ip"
	TargetTypeEnumLambda   TargetTypeEnum = "lambda"
)
