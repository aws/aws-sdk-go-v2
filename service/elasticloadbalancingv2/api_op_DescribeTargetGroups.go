// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package elasticloadbalancingv2

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/elasticloadbalancingv2/types"
)

const opDescribeTargetGroups = "DescribeTargetGroups"

// DescribeTargetGroupsRequest returns a request value for making API operation for
// Elastic Load Balancing.
//
// Describes the specified target groups or all of your target groups. By default,
// all target groups are described. Alternatively, you can specify one of the
// following to filter the results: the ARN of the load balancer, the names
// of one or more target groups, or the ARNs of one or more target groups.
//
// To describe the targets for a target group, use DescribeTargetHealth. To
// describe the attributes of a target group, use DescribeTargetGroupAttributes.
//
//    // Example sending a request using DescribeTargetGroupsRequest.
//    req := client.DescribeTargetGroupsRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/elasticloadbalancingv2-2015-12-01/DescribeTargetGroups
func (c *Client) DescribeTargetGroupsRequest(input *types.DescribeTargetGroupsInput) DescribeTargetGroupsRequest {
	op := &aws.Operation{
		Name:       opDescribeTargetGroups,
		HTTPMethod: "POST",
		HTTPPath:   "/",
		Paginator: &aws.Paginator{
			InputTokens:     []string{"Marker"},
			OutputTokens:    []string{"NextMarker"},
			LimitToken:      "",
			TruncationToken: "",
		},
	}

	if input == nil {
		input = &types.DescribeTargetGroupsInput{}
	}

	req := c.newRequest(op, input, &types.DescribeTargetGroupsOutput{})
	return DescribeTargetGroupsRequest{Request: req, Input: input, Copy: c.DescribeTargetGroupsRequest}
}

// DescribeTargetGroupsRequest is the request type for the
// DescribeTargetGroups API operation.
type DescribeTargetGroupsRequest struct {
	*aws.Request
	Input *types.DescribeTargetGroupsInput
	Copy  func(*types.DescribeTargetGroupsInput) DescribeTargetGroupsRequest
}

// Send marshals and sends the DescribeTargetGroups API request.
func (r DescribeTargetGroupsRequest) Send(ctx context.Context) (*DescribeTargetGroupsResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &DescribeTargetGroupsResponse{
		DescribeTargetGroupsOutput: r.Request.Data.(*types.DescribeTargetGroupsOutput),
		response:                   &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// NewDescribeTargetGroupsRequestPaginator returns a paginator for DescribeTargetGroups.
// Use Next method to get the next page, and CurrentPage to get the current
// response page from the paginator. Next will return false, if there are
// no more pages, or an error was encountered.
//
// Note: This operation can generate multiple requests to a service.
//
//   // Example iterating over pages.
//   req := client.DescribeTargetGroupsRequest(input)
//   p := elasticloadbalancingv2.NewDescribeTargetGroupsRequestPaginator(req)
//
//   for p.Next(context.TODO()) {
//       page := p.CurrentPage()
//   }
//
//   if err := p.Err(); err != nil {
//       return err
//   }
//
func NewDescribeTargetGroupsPaginator(req DescribeTargetGroupsRequest) DescribeTargetGroupsPaginator {
	return DescribeTargetGroupsPaginator{
		Pager: aws.Pager{
			NewRequest: func(ctx context.Context) (*aws.Request, error) {
				var inCpy *types.DescribeTargetGroupsInput
				if req.Input != nil {
					tmp := *req.Input
					inCpy = &tmp
				}

				newReq := req.Copy(inCpy)
				newReq.SetContext(ctx)
				return newReq.Request, nil
			},
		},
	}
}

// DescribeTargetGroupsPaginator is used to paginate the request. This can be done by
// calling Next and CurrentPage.
type DescribeTargetGroupsPaginator struct {
	aws.Pager
}

func (p *DescribeTargetGroupsPaginator) CurrentPage() *types.DescribeTargetGroupsOutput {
	return p.Pager.CurrentPage().(*types.DescribeTargetGroupsOutput)
}

// DescribeTargetGroupsResponse is the response type for the
// DescribeTargetGroups API operation.
type DescribeTargetGroupsResponse struct {
	*types.DescribeTargetGroupsOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// DescribeTargetGroups request.
func (r *DescribeTargetGroupsResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
