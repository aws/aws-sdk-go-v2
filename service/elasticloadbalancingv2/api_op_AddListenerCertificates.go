// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package elasticloadbalancingv2

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/elasticloadbalancingv2/types"
)

const opAddListenerCertificates = "AddListenerCertificates"

// AddListenerCertificatesRequest returns a request value for making API operation for
// Elastic Load Balancing.
//
// Adds the specified SSL server certificate to the certificate list for the
// specified HTTPS or TLS listener.
//
// If the certificate in already in the certificate list, the call is successful
// but the certificate is not added again.
//
// To get the certificate list for a listener, use DescribeListenerCertificates.
// To remove certificates from the certificate list for a listener, use RemoveListenerCertificates.
// To replace the default certificate for a listener, use ModifyListener.
//
// For more information, see SSL Certificates (https://docs.aws.amazon.com/elasticloadbalancing/latest/application/create-https-listener.html#https-listener-certificates)
// in the Application Load Balancers Guide.
//
//    // Example sending a request using AddListenerCertificatesRequest.
//    req := client.AddListenerCertificatesRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/elasticloadbalancingv2-2015-12-01/AddListenerCertificates
func (c *Client) AddListenerCertificatesRequest(input *types.AddListenerCertificatesInput) AddListenerCertificatesRequest {
	op := &aws.Operation{
		Name:       opAddListenerCertificates,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &types.AddListenerCertificatesInput{}
	}

	req := c.newRequest(op, input, &types.AddListenerCertificatesOutput{})
	return AddListenerCertificatesRequest{Request: req, Input: input, Copy: c.AddListenerCertificatesRequest}
}

// AddListenerCertificatesRequest is the request type for the
// AddListenerCertificates API operation.
type AddListenerCertificatesRequest struct {
	*aws.Request
	Input *types.AddListenerCertificatesInput
	Copy  func(*types.AddListenerCertificatesInput) AddListenerCertificatesRequest
}

// Send marshals and sends the AddListenerCertificates API request.
func (r AddListenerCertificatesRequest) Send(ctx context.Context) (*AddListenerCertificatesResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &AddListenerCertificatesResponse{
		AddListenerCertificatesOutput: r.Request.Data.(*types.AddListenerCertificatesOutput),
		response:                      &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// AddListenerCertificatesResponse is the response type for the
// AddListenerCertificates API operation.
type AddListenerCertificatesResponse struct {
	*types.AddListenerCertificatesOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// AddListenerCertificates request.
func (r *AddListenerCertificatesResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
