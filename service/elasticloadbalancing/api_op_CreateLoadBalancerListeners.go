// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package elasticloadbalancing

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/elasticloadbalancing/types"
)

const opCreateLoadBalancerListeners = "CreateLoadBalancerListeners"

// CreateLoadBalancerListenersRequest returns a request value for making API operation for
// Elastic Load Balancing.
//
// Creates one or more listeners for the specified load balancer. If a listener
// with the specified port does not already exist, it is created; otherwise,
// the properties of the new listener must match the properties of the existing
// listener.
//
// For more information, see Listeners for Your Classic Load Balancer (http://docs.aws.amazon.com/elasticloadbalancing/latest/classic/elb-listener-config.html)
// in the Classic Load Balancers Guide.
//
//    // Example sending a request using CreateLoadBalancerListenersRequest.
//    req := client.CreateLoadBalancerListenersRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/elasticloadbalancing-2012-06-01/CreateLoadBalancerListeners
func (c *Client) CreateLoadBalancerListenersRequest(input *types.CreateLoadBalancerListenersInput) CreateLoadBalancerListenersRequest {
	op := &aws.Operation{
		Name:       opCreateLoadBalancerListeners,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &types.CreateLoadBalancerListenersInput{}
	}

	req := c.newRequest(op, input, &types.CreateLoadBalancerListenersOutput{})
	return CreateLoadBalancerListenersRequest{Request: req, Input: input, Copy: c.CreateLoadBalancerListenersRequest}
}

// CreateLoadBalancerListenersRequest is the request type for the
// CreateLoadBalancerListeners API operation.
type CreateLoadBalancerListenersRequest struct {
	*aws.Request
	Input *types.CreateLoadBalancerListenersInput
	Copy  func(*types.CreateLoadBalancerListenersInput) CreateLoadBalancerListenersRequest
}

// Send marshals and sends the CreateLoadBalancerListeners API request.
func (r CreateLoadBalancerListenersRequest) Send(ctx context.Context) (*CreateLoadBalancerListenersResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &CreateLoadBalancerListenersResponse{
		CreateLoadBalancerListenersOutput: r.Request.Data.(*types.CreateLoadBalancerListenersOutput),
		response:                          &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// CreateLoadBalancerListenersResponse is the response type for the
// CreateLoadBalancerListeners API operation.
type CreateLoadBalancerListenersResponse struct {
	*types.CreateLoadBalancerListenersOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// CreateLoadBalancerListeners request.
func (r *CreateLoadBalancerListenersResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
