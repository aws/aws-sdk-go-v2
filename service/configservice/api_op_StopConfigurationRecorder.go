// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package configservice

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/private/protocol"
	"github.com/aws/aws-sdk-go-v2/private/protocol/jsonrpc"
	"github.com/aws/aws-sdk-go-v2/service/configservice/types"
)

const opStopConfigurationRecorder = "StopConfigurationRecorder"

// StopConfigurationRecorderRequest returns a request value for making API operation for
// AWS Config.
//
// Stops recording configurations of the AWS resources you have selected to
// record in your AWS account.
//
//    // Example sending a request using StopConfigurationRecorderRequest.
//    req := client.StopConfigurationRecorderRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/config-2014-11-12/StopConfigurationRecorder
func (c *Client) StopConfigurationRecorderRequest(input *types.StopConfigurationRecorderInput) StopConfigurationRecorderRequest {
	op := &aws.Operation{
		Name:       opStopConfigurationRecorder,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &types.StopConfigurationRecorderInput{}
	}

	req := c.newRequest(op, input, &types.StopConfigurationRecorderOutput{})
	req.Handlers.Unmarshal.Remove(jsonrpc.UnmarshalHandler)
	req.Handlers.Unmarshal.PushBackNamed(protocol.UnmarshalDiscardBodyHandler)
	return StopConfigurationRecorderRequest{Request: req, Input: input, Copy: c.StopConfigurationRecorderRequest}
}

// StopConfigurationRecorderRequest is the request type for the
// StopConfigurationRecorder API operation.
type StopConfigurationRecorderRequest struct {
	*aws.Request
	Input *types.StopConfigurationRecorderInput
	Copy  func(*types.StopConfigurationRecorderInput) StopConfigurationRecorderRequest
}

// Send marshals and sends the StopConfigurationRecorder API request.
func (r StopConfigurationRecorderRequest) Send(ctx context.Context) (*StopConfigurationRecorderResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &StopConfigurationRecorderResponse{
		StopConfigurationRecorderOutput: r.Request.Data.(*types.StopConfigurationRecorderOutput),
		response:                        &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// StopConfigurationRecorderResponse is the response type for the
// StopConfigurationRecorder API operation.
type StopConfigurationRecorderResponse struct {
	*types.StopConfigurationRecorderOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// StopConfigurationRecorder request.
func (r *StopConfigurationRecorderResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
