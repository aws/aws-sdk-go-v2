// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package configservice

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/configservice/types"
)

const opGetAggregateDiscoveredResourceCounts = "GetAggregateDiscoveredResourceCounts"

// GetAggregateDiscoveredResourceCountsRequest returns a request value for making API operation for
// AWS Config.
//
// Returns the resource counts across accounts and regions that are present
// in your AWS Config aggregator. You can request the resource counts by providing
// filters and GroupByKey.
//
// For example, if the input contains accountID 12345678910 and region us-east-1
// in filters, the API returns the count of resources in account ID 12345678910
// and region us-east-1. If the input contains ACCOUNT_ID as a GroupByKey, the
// API returns resource counts for all source accounts that are present in your
// aggregator.
//
//    // Example sending a request using GetAggregateDiscoveredResourceCountsRequest.
//    req := client.GetAggregateDiscoveredResourceCountsRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/config-2014-11-12/GetAggregateDiscoveredResourceCounts
func (c *Client) GetAggregateDiscoveredResourceCountsRequest(input *types.GetAggregateDiscoveredResourceCountsInput) GetAggregateDiscoveredResourceCountsRequest {
	op := &aws.Operation{
		Name:       opGetAggregateDiscoveredResourceCounts,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &types.GetAggregateDiscoveredResourceCountsInput{}
	}

	req := c.newRequest(op, input, &types.GetAggregateDiscoveredResourceCountsOutput{})
	return GetAggregateDiscoveredResourceCountsRequest{Request: req, Input: input, Copy: c.GetAggregateDiscoveredResourceCountsRequest}
}

// GetAggregateDiscoveredResourceCountsRequest is the request type for the
// GetAggregateDiscoveredResourceCounts API operation.
type GetAggregateDiscoveredResourceCountsRequest struct {
	*aws.Request
	Input *types.GetAggregateDiscoveredResourceCountsInput
	Copy  func(*types.GetAggregateDiscoveredResourceCountsInput) GetAggregateDiscoveredResourceCountsRequest
}

// Send marshals and sends the GetAggregateDiscoveredResourceCounts API request.
func (r GetAggregateDiscoveredResourceCountsRequest) Send(ctx context.Context) (*GetAggregateDiscoveredResourceCountsResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &GetAggregateDiscoveredResourceCountsResponse{
		GetAggregateDiscoveredResourceCountsOutput: r.Request.Data.(*types.GetAggregateDiscoveredResourceCountsOutput),
		response: &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// GetAggregateDiscoveredResourceCountsResponse is the response type for the
// GetAggregateDiscoveredResourceCounts API operation.
type GetAggregateDiscoveredResourceCountsResponse struct {
	*types.GetAggregateDiscoveredResourceCountsOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// GetAggregateDiscoveredResourceCounts request.
func (r *GetAggregateDiscoveredResourceCountsResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
