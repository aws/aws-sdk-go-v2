// Code generated by smithy-go-codegen DO NOT EDIT.

package types

type AggregatedSourceStatusType string

// Enum values for AggregatedSourceStatusType
const (
	AggregatedSourceStatusTypeFailed    AggregatedSourceStatusType = "FAILED"
	AggregatedSourceStatusTypeSucceeded AggregatedSourceStatusType = "SUCCEEDED"
	AggregatedSourceStatusTypeOutdated  AggregatedSourceStatusType = "OUTDATED"
)

type AggregatedSourceType string

// Enum values for AggregatedSourceType
const (
	AggregatedSourceTypeAccount      AggregatedSourceType = "ACCOUNT"
	AggregatedSourceTypeOrganization AggregatedSourceType = "ORGANIZATION"
)

type ChronologicalOrder string

// Enum values for ChronologicalOrder
const (
	ChronologicalOrderReverse ChronologicalOrder = "Reverse"
	ChronologicalOrderForward ChronologicalOrder = "Forward"
)

type ComplianceType string

// Enum values for ComplianceType
const (
	ComplianceTypeCompliant         ComplianceType = "COMPLIANT"
	ComplianceTypeNon_compliant     ComplianceType = "NON_COMPLIANT"
	ComplianceTypeNot_applicable    ComplianceType = "NOT_APPLICABLE"
	ComplianceTypeInsufficient_data ComplianceType = "INSUFFICIENT_DATA"
)

type ConfigRuleComplianceSummaryGroupKey string

// Enum values for ConfigRuleComplianceSummaryGroupKey
const (
	ConfigRuleComplianceSummaryGroupKeyAccount_id ConfigRuleComplianceSummaryGroupKey = "ACCOUNT_ID"
	ConfigRuleComplianceSummaryGroupKeyAws_region ConfigRuleComplianceSummaryGroupKey = "AWS_REGION"
)

type ConfigRuleState string

// Enum values for ConfigRuleState
const (
	ConfigRuleStateActive           ConfigRuleState = "ACTIVE"
	ConfigRuleStateDeleting         ConfigRuleState = "DELETING"
	ConfigRuleStateDeleting_results ConfigRuleState = "DELETING_RESULTS"
	ConfigRuleStateEvaluating       ConfigRuleState = "EVALUATING"
)

type ConfigurationItemStatus string

// Enum values for ConfigurationItemStatus
const (
	ConfigurationItemStatusOk                         ConfigurationItemStatus = "OK"
	ConfigurationItemStatusResourcediscovered         ConfigurationItemStatus = "ResourceDiscovered"
	ConfigurationItemStatusResourcenotrecorded        ConfigurationItemStatus = "ResourceNotRecorded"
	ConfigurationItemStatusResourcedeleted            ConfigurationItemStatus = "ResourceDeleted"
	ConfigurationItemStatusResourcedeletednotrecorded ConfigurationItemStatus = "ResourceDeletedNotRecorded"
)

type ConformancePackComplianceType string

// Enum values for ConformancePackComplianceType
const (
	ConformancePackComplianceTypeCompliant     ConformancePackComplianceType = "COMPLIANT"
	ConformancePackComplianceTypeNon_compliant ConformancePackComplianceType = "NON_COMPLIANT"
)

type ConformancePackState string

// Enum values for ConformancePackState
const (
	ConformancePackStateCreate_in_progress ConformancePackState = "CREATE_IN_PROGRESS"
	ConformancePackStateCreate_complete    ConformancePackState = "CREATE_COMPLETE"
	ConformancePackStateCreate_failed      ConformancePackState = "CREATE_FAILED"
	ConformancePackStateDelete_in_progress ConformancePackState = "DELETE_IN_PROGRESS"
	ConformancePackStateDelete_failed      ConformancePackState = "DELETE_FAILED"
)

type DeliveryStatus string

// Enum values for DeliveryStatus
const (
	DeliveryStatusSuccess        DeliveryStatus = "Success"
	DeliveryStatusFailure        DeliveryStatus = "Failure"
	DeliveryStatusNot_applicable DeliveryStatus = "Not_Applicable"
)

type EventSource string

// Enum values for EventSource
const (
	EventSourceAws_config EventSource = "aws.config"
)

type MaximumExecutionFrequency string

// Enum values for MaximumExecutionFrequency
const (
	MaximumExecutionFrequencyOne_hour         MaximumExecutionFrequency = "One_Hour"
	MaximumExecutionFrequencyThree_hours      MaximumExecutionFrequency = "Three_Hours"
	MaximumExecutionFrequencySix_hours        MaximumExecutionFrequency = "Six_Hours"
	MaximumExecutionFrequencyTwelve_hours     MaximumExecutionFrequency = "Twelve_Hours"
	MaximumExecutionFrequencyTwentyfour_hours MaximumExecutionFrequency = "TwentyFour_Hours"
)

type MemberAccountRuleStatus string

// Enum values for MemberAccountRuleStatus
const (
	MemberAccountRuleStatusCreate_successful  MemberAccountRuleStatus = "CREATE_SUCCESSFUL"
	MemberAccountRuleStatusCreate_in_progress MemberAccountRuleStatus = "CREATE_IN_PROGRESS"
	MemberAccountRuleStatusCreate_failed      MemberAccountRuleStatus = "CREATE_FAILED"
	MemberAccountRuleStatusDelete_successful  MemberAccountRuleStatus = "DELETE_SUCCESSFUL"
	MemberAccountRuleStatusDelete_failed      MemberAccountRuleStatus = "DELETE_FAILED"
	MemberAccountRuleStatusDelete_in_progress MemberAccountRuleStatus = "DELETE_IN_PROGRESS"
	MemberAccountRuleStatusUpdate_successful  MemberAccountRuleStatus = "UPDATE_SUCCESSFUL"
	MemberAccountRuleStatusUpdate_in_progress MemberAccountRuleStatus = "UPDATE_IN_PROGRESS"
	MemberAccountRuleStatusUpdate_failed      MemberAccountRuleStatus = "UPDATE_FAILED"
)

type MessageType string

// Enum values for MessageType
const (
	MessageTypeConfigurationitemchangenotification          MessageType = "ConfigurationItemChangeNotification"
	MessageTypeConfigurationsnapshotdeliverycompleted       MessageType = "ConfigurationSnapshotDeliveryCompleted"
	MessageTypeSchedulednotification                        MessageType = "ScheduledNotification"
	MessageTypeOversizedconfigurationitemchangenotification MessageType = "OversizedConfigurationItemChangeNotification"
)

type OrganizationConfigRuleTriggerType string

// Enum values for OrganizationConfigRuleTriggerType
const (
	OrganizationConfigRuleTriggerTypeConfiguration_item_change_notification          OrganizationConfigRuleTriggerType = "ConfigurationItemChangeNotification"
	OrganizationConfigRuleTriggerTypeOversized_configuration_item_change_notifcation OrganizationConfigRuleTriggerType = "OversizedConfigurationItemChangeNotification"
	OrganizationConfigRuleTriggerTypeScheduled_notification                          OrganizationConfigRuleTriggerType = "ScheduledNotification"
)

type OrganizationResourceDetailedStatus string

// Enum values for OrganizationResourceDetailedStatus
const (
	OrganizationResourceDetailedStatusCreate_successful  OrganizationResourceDetailedStatus = "CREATE_SUCCESSFUL"
	OrganizationResourceDetailedStatusCreate_in_progress OrganizationResourceDetailedStatus = "CREATE_IN_PROGRESS"
	OrganizationResourceDetailedStatusCreate_failed      OrganizationResourceDetailedStatus = "CREATE_FAILED"
	OrganizationResourceDetailedStatusDelete_successful  OrganizationResourceDetailedStatus = "DELETE_SUCCESSFUL"
	OrganizationResourceDetailedStatusDelete_failed      OrganizationResourceDetailedStatus = "DELETE_FAILED"
	OrganizationResourceDetailedStatusDelete_in_progress OrganizationResourceDetailedStatus = "DELETE_IN_PROGRESS"
	OrganizationResourceDetailedStatusUpdate_successful  OrganizationResourceDetailedStatus = "UPDATE_SUCCESSFUL"
	OrganizationResourceDetailedStatusUpdate_in_progress OrganizationResourceDetailedStatus = "UPDATE_IN_PROGRESS"
	OrganizationResourceDetailedStatusUpdate_failed      OrganizationResourceDetailedStatus = "UPDATE_FAILED"
)

type OrganizationResourceStatus string

// Enum values for OrganizationResourceStatus
const (
	OrganizationResourceStatusCreate_successful  OrganizationResourceStatus = "CREATE_SUCCESSFUL"
	OrganizationResourceStatusCreate_in_progress OrganizationResourceStatus = "CREATE_IN_PROGRESS"
	OrganizationResourceStatusCreate_failed      OrganizationResourceStatus = "CREATE_FAILED"
	OrganizationResourceStatusDelete_successful  OrganizationResourceStatus = "DELETE_SUCCESSFUL"
	OrganizationResourceStatusDelete_failed      OrganizationResourceStatus = "DELETE_FAILED"
	OrganizationResourceStatusDelete_in_progress OrganizationResourceStatus = "DELETE_IN_PROGRESS"
	OrganizationResourceStatusUpdate_successful  OrganizationResourceStatus = "UPDATE_SUCCESSFUL"
	OrganizationResourceStatusUpdate_in_progress OrganizationResourceStatus = "UPDATE_IN_PROGRESS"
	OrganizationResourceStatusUpdate_failed      OrganizationResourceStatus = "UPDATE_FAILED"
)

type OrganizationRuleStatus string

// Enum values for OrganizationRuleStatus
const (
	OrganizationRuleStatusCreate_successful  OrganizationRuleStatus = "CREATE_SUCCESSFUL"
	OrganizationRuleStatusCreate_in_progress OrganizationRuleStatus = "CREATE_IN_PROGRESS"
	OrganizationRuleStatusCreate_failed      OrganizationRuleStatus = "CREATE_FAILED"
	OrganizationRuleStatusDelete_successful  OrganizationRuleStatus = "DELETE_SUCCESSFUL"
	OrganizationRuleStatusDelete_failed      OrganizationRuleStatus = "DELETE_FAILED"
	OrganizationRuleStatusDelete_in_progress OrganizationRuleStatus = "DELETE_IN_PROGRESS"
	OrganizationRuleStatusUpdate_successful  OrganizationRuleStatus = "UPDATE_SUCCESSFUL"
	OrganizationRuleStatusUpdate_in_progress OrganizationRuleStatus = "UPDATE_IN_PROGRESS"
	OrganizationRuleStatusUpdate_failed      OrganizationRuleStatus = "UPDATE_FAILED"
)

type Owner string

// Enum values for Owner
const (
	OwnerCustom_lambda Owner = "CUSTOM_LAMBDA"
	OwnerAws           Owner = "AWS"
)

type RecorderStatus string

// Enum values for RecorderStatus
const (
	RecorderStatusPending RecorderStatus = "Pending"
	RecorderStatusSuccess RecorderStatus = "Success"
	RecorderStatusFailure RecorderStatus = "Failure"
)

type RemediationExecutionState string

// Enum values for RemediationExecutionState
const (
	RemediationExecutionStateQueued      RemediationExecutionState = "QUEUED"
	RemediationExecutionStateIn_progress RemediationExecutionState = "IN_PROGRESS"
	RemediationExecutionStateSucceeded   RemediationExecutionState = "SUCCEEDED"
	RemediationExecutionStateFailed      RemediationExecutionState = "FAILED"
)

type RemediationExecutionStepState string

// Enum values for RemediationExecutionStepState
const (
	RemediationExecutionStepStateSucceeded RemediationExecutionStepState = "SUCCEEDED"
	RemediationExecutionStepStatePending   RemediationExecutionStepState = "PENDING"
	RemediationExecutionStepStateFailed    RemediationExecutionStepState = "FAILED"
)

type RemediationTargetType string

// Enum values for RemediationTargetType
const (
	RemediationTargetTypeSsm_document RemediationTargetType = "SSM_DOCUMENT"
)

type ResourceCountGroupKey string

// Enum values for ResourceCountGroupKey
const (
	ResourceCountGroupKeyResource_type ResourceCountGroupKey = "RESOURCE_TYPE"
	ResourceCountGroupKeyAccount_id    ResourceCountGroupKey = "ACCOUNT_ID"
	ResourceCountGroupKeyAws_region    ResourceCountGroupKey = "AWS_REGION"
)

type ResourceType string

// Enum values for ResourceType
const (
	ResourceTypeCustomergateway                  ResourceType = "AWS::EC2::CustomerGateway"
	ResourceTypeEip                              ResourceType = "AWS::EC2::EIP"
	ResourceTypeHost                             ResourceType = "AWS::EC2::Host"
	ResourceTypeInstance                         ResourceType = "AWS::EC2::Instance"
	ResourceTypeInternetgateway                  ResourceType = "AWS::EC2::InternetGateway"
	ResourceTypeNetworkacl                       ResourceType = "AWS::EC2::NetworkAcl"
	ResourceTypeNetworkinterface                 ResourceType = "AWS::EC2::NetworkInterface"
	ResourceTypeRoutetable                       ResourceType = "AWS::EC2::RouteTable"
	ResourceTypeSecuritygroup                    ResourceType = "AWS::EC2::SecurityGroup"
	ResourceTypeSubnet                           ResourceType = "AWS::EC2::Subnet"
	ResourceTypeTrail                            ResourceType = "AWS::CloudTrail::Trail"
	ResourceTypeVolume                           ResourceType = "AWS::EC2::Volume"
	ResourceTypeVpc                              ResourceType = "AWS::EC2::VPC"
	ResourceTypeVpnconnection                    ResourceType = "AWS::EC2::VPNConnection"
	ResourceTypeVpngateway                       ResourceType = "AWS::EC2::VPNGateway"
	ResourceTypeRegisteredhainstance             ResourceType = "AWS::EC2::RegisteredHAInstance"
	ResourceTypeNatgateway                       ResourceType = "AWS::EC2::NatGateway"
	ResourceTypeEgressonlyinternetgateway        ResourceType = "AWS::EC2::EgressOnlyInternetGateway"
	ResourceTypeVpcendpoint                      ResourceType = "AWS::EC2::VPCEndpoint"
	ResourceTypeVpcendpointservice               ResourceType = "AWS::EC2::VPCEndpointService"
	ResourceTypeFlowlog                          ResourceType = "AWS::EC2::FlowLog"
	ResourceTypeVpcpeeringconnection             ResourceType = "AWS::EC2::VPCPeeringConnection"
	ResourceTypeDomain                           ResourceType = "AWS::Elasticsearch::Domain"
	ResourceTypeGroup                            ResourceType = "AWS::IAM::Group"
	ResourceTypePolicy                           ResourceType = "AWS::IAM::Policy"
	ResourceTypeRole                             ResourceType = "AWS::IAM::Role"
	ResourceTypeUser                             ResourceType = "AWS::IAM::User"
	ResourceTypeLoadbalancerv2                   ResourceType = "AWS::ElasticLoadBalancingV2::LoadBalancer"
	ResourceTypeCertificate                      ResourceType = "AWS::ACM::Certificate"
	ResourceTypeDbinstance                       ResourceType = "AWS::RDS::DBInstance"
	ResourceTypeDbsubnetgroup                    ResourceType = "AWS::RDS::DBSubnetGroup"
	ResourceTypeDbsecuritygroup                  ResourceType = "AWS::RDS::DBSecurityGroup"
	ResourceTypeDbsnapshot                       ResourceType = "AWS::RDS::DBSnapshot"
	ResourceTypeDbcluster                        ResourceType = "AWS::RDS::DBCluster"
	ResourceTypeDbclustersnapshot                ResourceType = "AWS::RDS::DBClusterSnapshot"
	ResourceTypeEventsubscription                ResourceType = "AWS::RDS::EventSubscription"
	ResourceTypeBucket                           ResourceType = "AWS::S3::Bucket"
	ResourceTypeAccountpublicaccessblock         ResourceType = "AWS::S3::AccountPublicAccessBlock"
	ResourceTypeCluster                          ResourceType = "AWS::Redshift::Cluster"
	ResourceTypeClustersnapshot                  ResourceType = "AWS::Redshift::ClusterSnapshot"
	ResourceTypeClusterparametergroup            ResourceType = "AWS::Redshift::ClusterParameterGroup"
	ResourceTypeClustersecuritygroup             ResourceType = "AWS::Redshift::ClusterSecurityGroup"
	ResourceTypeClustersubnetgroup               ResourceType = "AWS::Redshift::ClusterSubnetGroup"
	ResourceTypeRedshifteventsubscription        ResourceType = "AWS::Redshift::EventSubscription"
	ResourceTypeManagedinstanceinventory         ResourceType = "AWS::SSM::ManagedInstanceInventory"
	ResourceTypeAlarm                            ResourceType = "AWS::CloudWatch::Alarm"
	ResourceTypeStack                            ResourceType = "AWS::CloudFormation::Stack"
	ResourceTypeLoadbalancer                     ResourceType = "AWS::ElasticLoadBalancing::LoadBalancer"
	ResourceTypeAutoscalinggroup                 ResourceType = "AWS::AutoScaling::AutoScalingGroup"
	ResourceTypeLaunchconfiguration              ResourceType = "AWS::AutoScaling::LaunchConfiguration"
	ResourceTypeScalingpolicy                    ResourceType = "AWS::AutoScaling::ScalingPolicy"
	ResourceTypeScheduledaction                  ResourceType = "AWS::AutoScaling::ScheduledAction"
	ResourceTypeTable                            ResourceType = "AWS::DynamoDB::Table"
	ResourceTypeProject                          ResourceType = "AWS::CodeBuild::Project"
	ResourceTypeRatebasedrule                    ResourceType = "AWS::WAF::RateBasedRule"
	ResourceTypeRule                             ResourceType = "AWS::WAF::Rule"
	ResourceTypeRulegroup                        ResourceType = "AWS::WAF::RuleGroup"
	ResourceTypeWebacl                           ResourceType = "AWS::WAF::WebACL"
	ResourceTypeRegionalratebasedrule            ResourceType = "AWS::WAFRegional::RateBasedRule"
	ResourceTypeRegionalrule                     ResourceType = "AWS::WAFRegional::Rule"
	ResourceTypeRegionalrulegroup                ResourceType = "AWS::WAFRegional::RuleGroup"
	ResourceTypeRegionalwebacl                   ResourceType = "AWS::WAFRegional::WebACL"
	ResourceTypeDistribution                     ResourceType = "AWS::CloudFront::Distribution"
	ResourceTypeStreamingdistribution            ResourceType = "AWS::CloudFront::StreamingDistribution"
	ResourceTypeFunction                         ResourceType = "AWS::Lambda::Function"
	ResourceTypeApplication                      ResourceType = "AWS::ElasticBeanstalk::Application"
	ResourceTypeApplicationversion               ResourceType = "AWS::ElasticBeanstalk::ApplicationVersion"
	ResourceTypeEnvironment                      ResourceType = "AWS::ElasticBeanstalk::Environment"
	ResourceTypeWebaclv2                         ResourceType = "AWS::WAFv2::WebACL"
	ResourceTypeRulegroupv2                      ResourceType = "AWS::WAFv2::RuleGroup"
	ResourceTypeIpsetv2                          ResourceType = "AWS::WAFv2::IPSet"
	ResourceTypeRegexpatternsetv2                ResourceType = "AWS::WAFv2::RegexPatternSet"
	ResourceTypeManagedrulesetv2                 ResourceType = "AWS::WAFv2::ManagedRuleSet"
	ResourceTypeEncryptionconfig                 ResourceType = "AWS::XRay::EncryptionConfig"
	ResourceTypeAssociationcompliance            ResourceType = "AWS::SSM::AssociationCompliance"
	ResourceTypePatchcompliance                  ResourceType = "AWS::SSM::PatchCompliance"
	ResourceTypeProtection                       ResourceType = "AWS::Shield::Protection"
	ResourceTypeRegionalprotection               ResourceType = "AWS::ShieldRegional::Protection"
	ResourceTypeResourcecompliance               ResourceType = "AWS::Config::ResourceCompliance"
	ResourceTypeStage                            ResourceType = "AWS::ApiGateway::Stage"
	ResourceTypeRestapi                          ResourceType = "AWS::ApiGateway::RestApi"
	ResourceTypeStagev2                          ResourceType = "AWS::ApiGatewayV2::Stage"
	ResourceTypeApi                              ResourceType = "AWS::ApiGatewayV2::Api"
	ResourceTypePipeline                         ResourceType = "AWS::CodePipeline::Pipeline"
	ResourceTypeCloudformationprovisionedproduct ResourceType = "AWS::ServiceCatalog::CloudFormationProvisionedProduct"
	ResourceTypeCloudformationproduct            ResourceType = "AWS::ServiceCatalog::CloudFormationProduct"
	ResourceTypePortfolio                        ResourceType = "AWS::ServiceCatalog::Portfolio"
	ResourceTypeQueue                            ResourceType = "AWS::SQS::Queue"
	ResourceTypeKey                              ResourceType = "AWS::KMS::Key"
	ResourceTypeQldbledger                       ResourceType = "AWS::QLDB::Ledger"
	ResourceTypeSecret                           ResourceType = "AWS::SecretsManager::Secret"
	ResourceTypeTopic                            ResourceType = "AWS::SNS::Topic"
	ResourceTypeFiledata                         ResourceType = "AWS::SSM::FileData"
)

type ResourceValueType string

// Enum values for ResourceValueType
const (
	ResourceValueTypeResource_id ResourceValueType = "RESOURCE_ID"
)
