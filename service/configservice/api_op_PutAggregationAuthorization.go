// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package configservice

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/configservice/types"
)

const opPutAggregationAuthorization = "PutAggregationAuthorization"

// PutAggregationAuthorizationRequest returns a request value for making API operation for
// AWS Config.
//
// Authorizes the aggregator account and region to collect data from the source
// account and region.
//
//    // Example sending a request using PutAggregationAuthorizationRequest.
//    req := client.PutAggregationAuthorizationRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/config-2014-11-12/PutAggregationAuthorization
func (c *Client) PutAggregationAuthorizationRequest(input *types.PutAggregationAuthorizationInput) PutAggregationAuthorizationRequest {
	op := &aws.Operation{
		Name:       opPutAggregationAuthorization,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &types.PutAggregationAuthorizationInput{}
	}

	req := c.newRequest(op, input, &types.PutAggregationAuthorizationOutput{})
	return PutAggregationAuthorizationRequest{Request: req, Input: input, Copy: c.PutAggregationAuthorizationRequest}
}

// PutAggregationAuthorizationRequest is the request type for the
// PutAggregationAuthorization API operation.
type PutAggregationAuthorizationRequest struct {
	*aws.Request
	Input *types.PutAggregationAuthorizationInput
	Copy  func(*types.PutAggregationAuthorizationInput) PutAggregationAuthorizationRequest
}

// Send marshals and sends the PutAggregationAuthorization API request.
func (r PutAggregationAuthorizationRequest) Send(ctx context.Context) (*PutAggregationAuthorizationResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &PutAggregationAuthorizationResponse{
		PutAggregationAuthorizationOutput: r.Request.Data.(*types.PutAggregationAuthorizationOutput),
		response:                          &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// PutAggregationAuthorizationResponse is the response type for the
// PutAggregationAuthorization API operation.
type PutAggregationAuthorizationResponse struct {
	*types.PutAggregationAuthorizationOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// PutAggregationAuthorization request.
func (r *PutAggregationAuthorizationResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
