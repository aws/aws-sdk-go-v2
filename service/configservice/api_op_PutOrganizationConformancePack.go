// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package configservice

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/configservice/types"
)

const opPutOrganizationConformancePack = "PutOrganizationConformancePack"

// PutOrganizationConformancePackRequest returns a request value for making API operation for
// AWS Config.
//
// Deploys conformance packs across member accounts in an AWS Organization.
//
// This API enables organization service access through the EnableAWSServiceAccess
// action and creates a service linked role AWSServiceRoleForConfigMultiAccountSetup
// in the master account of your organization. The service linked role is created
// only when the role does not exist in the master account. AWS Config verifies
// the existence of role with GetRole action.
//
// The SPN is config-multiaccountsetup.amazonaws.com.
//
// You must specify either the TemplateS3Uri or the TemplateBody parameter,
// but not both. If you provide both AWS Config uses the TemplateS3Uri parameter
// and ignores the TemplateBody parameter.
//
//    // Example sending a request using PutOrganizationConformancePackRequest.
//    req := client.PutOrganizationConformancePackRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/config-2014-11-12/PutOrganizationConformancePack
func (c *Client) PutOrganizationConformancePackRequest(input *types.PutOrganizationConformancePackInput) PutOrganizationConformancePackRequest {
	op := &aws.Operation{
		Name:       opPutOrganizationConformancePack,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &types.PutOrganizationConformancePackInput{}
	}

	req := c.newRequest(op, input, &types.PutOrganizationConformancePackOutput{})
	return PutOrganizationConformancePackRequest{Request: req, Input: input, Copy: c.PutOrganizationConformancePackRequest}
}

// PutOrganizationConformancePackRequest is the request type for the
// PutOrganizationConformancePack API operation.
type PutOrganizationConformancePackRequest struct {
	*aws.Request
	Input *types.PutOrganizationConformancePackInput
	Copy  func(*types.PutOrganizationConformancePackInput) PutOrganizationConformancePackRequest
}

// Send marshals and sends the PutOrganizationConformancePack API request.
func (r PutOrganizationConformancePackRequest) Send(ctx context.Context) (*PutOrganizationConformancePackResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &PutOrganizationConformancePackResponse{
		PutOrganizationConformancePackOutput: r.Request.Data.(*types.PutOrganizationConformancePackOutput),
		response:                             &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// PutOrganizationConformancePackResponse is the response type for the
// PutOrganizationConformancePack API operation.
type PutOrganizationConformancePackResponse struct {
	*types.PutOrganizationConformancePackOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// PutOrganizationConformancePack request.
func (r *PutOrganizationConformancePackResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
