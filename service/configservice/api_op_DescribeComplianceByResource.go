// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package configservice

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/configservice/types"
)

const opDescribeComplianceByResource = "DescribeComplianceByResource"

// DescribeComplianceByResourceRequest returns a request value for making API operation for
// AWS Config.
//
// Indicates whether the specified AWS resources are compliant. If a resource
// is noncompliant, this action returns the number of AWS Config rules that
// the resource does not comply with.
//
// A resource is compliant if it complies with all the AWS Config rules that
// evaluate it. It is noncompliant if it does not comply with one or more of
// these rules.
//
// If AWS Config has no current evaluation results for the resource, it returns
// INSUFFICIENT_DATA. This result might indicate one of the following conditions
// about the rules that evaluate the resource:
//
//    * AWS Config has never invoked an evaluation for the rule. To check whether
//    it has, use the DescribeConfigRuleEvaluationStatus action to get the LastSuccessfulInvocationTime
//    and LastFailedInvocationTime.
//
//    * The rule's AWS Lambda function is failing to send evaluation results
//    to AWS Config. Verify that the role that you assigned to your configuration
//    recorder includes the config:PutEvaluations permission. If the rule is
//    a custom rule, verify that the AWS Lambda execution role includes the
//    config:PutEvaluations permission.
//
//    * The rule's AWS Lambda function has returned NOT_APPLICABLE for all evaluation
//    results. This can occur if the resources were deleted or removed from
//    the rule's scope.
//
//    // Example sending a request using DescribeComplianceByResourceRequest.
//    req := client.DescribeComplianceByResourceRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/config-2014-11-12/DescribeComplianceByResource
func (c *Client) DescribeComplianceByResourceRequest(input *types.DescribeComplianceByResourceInput) DescribeComplianceByResourceRequest {
	op := &aws.Operation{
		Name:       opDescribeComplianceByResource,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &types.DescribeComplianceByResourceInput{}
	}

	req := c.newRequest(op, input, &types.DescribeComplianceByResourceOutput{})
	return DescribeComplianceByResourceRequest{Request: req, Input: input, Copy: c.DescribeComplianceByResourceRequest}
}

// DescribeComplianceByResourceRequest is the request type for the
// DescribeComplianceByResource API operation.
type DescribeComplianceByResourceRequest struct {
	*aws.Request
	Input *types.DescribeComplianceByResourceInput
	Copy  func(*types.DescribeComplianceByResourceInput) DescribeComplianceByResourceRequest
}

// Send marshals and sends the DescribeComplianceByResource API request.
func (r DescribeComplianceByResourceRequest) Send(ctx context.Context) (*DescribeComplianceByResourceResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &DescribeComplianceByResourceResponse{
		DescribeComplianceByResourceOutput: r.Request.Data.(*types.DescribeComplianceByResourceOutput),
		response:                           &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// DescribeComplianceByResourceResponse is the response type for the
// DescribeComplianceByResource API operation.
type DescribeComplianceByResourceResponse struct {
	*types.DescribeComplianceByResourceOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// DescribeComplianceByResource request.
func (r *DescribeComplianceByResourceResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
