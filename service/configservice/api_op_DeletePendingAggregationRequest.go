// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package configservice

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/private/protocol"
	"github.com/aws/aws-sdk-go-v2/private/protocol/jsonrpc"
	"github.com/aws/aws-sdk-go-v2/service/configservice/types"
)

const opDeletePendingAggregationRequest = "DeletePendingAggregationRequest"

// DeletePendingAggregationRequestRequest returns a request value for making API operation for
// AWS Config.
//
// Deletes pending authorization requests for a specified aggregator account
// in a specified region.
//
//    // Example sending a request using DeletePendingAggregationRequestRequest.
//    req := client.DeletePendingAggregationRequestRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/config-2014-11-12/DeletePendingAggregationRequest
func (c *Client) DeletePendingAggregationRequestRequest(input *types.DeletePendingAggregationRequestInput) DeletePendingAggregationRequestRequest {
	op := &aws.Operation{
		Name:       opDeletePendingAggregationRequest,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &types.DeletePendingAggregationRequestInput{}
	}

	req := c.newRequest(op, input, &types.DeletePendingAggregationRequestOutput{})
	req.Handlers.Unmarshal.Remove(jsonrpc.UnmarshalHandler)
	req.Handlers.Unmarshal.PushBackNamed(protocol.UnmarshalDiscardBodyHandler)
	return DeletePendingAggregationRequestRequest{Request: req, Input: input, Copy: c.DeletePendingAggregationRequestRequest}
}

// DeletePendingAggregationRequestRequest is the request type for the
// DeletePendingAggregationRequest API operation.
type DeletePendingAggregationRequestRequest struct {
	*aws.Request
	Input *types.DeletePendingAggregationRequestInput
	Copy  func(*types.DeletePendingAggregationRequestInput) DeletePendingAggregationRequestRequest
}

// Send marshals and sends the DeletePendingAggregationRequest API request.
func (r DeletePendingAggregationRequestRequest) Send(ctx context.Context) (*DeletePendingAggregationRequestResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &DeletePendingAggregationRequestResponse{
		DeletePendingAggregationRequestOutput: r.Request.Data.(*types.DeletePendingAggregationRequestOutput),
		response:                              &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// DeletePendingAggregationRequestResponse is the response type for the
// DeletePendingAggregationRequest API operation.
type DeletePendingAggregationRequestResponse struct {
	*types.DeletePendingAggregationRequestOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// DeletePendingAggregationRequest request.
func (r *DeletePendingAggregationRequestResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
