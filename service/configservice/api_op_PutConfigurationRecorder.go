// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package configservice

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/private/protocol"
	"github.com/aws/aws-sdk-go-v2/private/protocol/jsonrpc"
	"github.com/aws/aws-sdk-go-v2/service/configservice/types"
)

const opPutConfigurationRecorder = "PutConfigurationRecorder"

// PutConfigurationRecorderRequest returns a request value for making API operation for
// AWS Config.
//
// Creates a new configuration recorder to record the selected resource configurations.
//
// You can use this action to change the role roleARN or the recordingGroup
// of an existing recorder. To change the role, call the action on the existing
// configuration recorder and specify a role.
//
// Currently, you can specify only one configuration recorder per region in
// your account.
//
// If ConfigurationRecorder does not have the recordingGroup parameter specified,
// the default is to record all supported resource types.
//
//    // Example sending a request using PutConfigurationRecorderRequest.
//    req := client.PutConfigurationRecorderRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/config-2014-11-12/PutConfigurationRecorder
func (c *Client) PutConfigurationRecorderRequest(input *types.PutConfigurationRecorderInput) PutConfigurationRecorderRequest {
	op := &aws.Operation{
		Name:       opPutConfigurationRecorder,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &types.PutConfigurationRecorderInput{}
	}

	req := c.newRequest(op, input, &types.PutConfigurationRecorderOutput{})
	req.Handlers.Unmarshal.Remove(jsonrpc.UnmarshalHandler)
	req.Handlers.Unmarshal.PushBackNamed(protocol.UnmarshalDiscardBodyHandler)
	return PutConfigurationRecorderRequest{Request: req, Input: input, Copy: c.PutConfigurationRecorderRequest}
}

// PutConfigurationRecorderRequest is the request type for the
// PutConfigurationRecorder API operation.
type PutConfigurationRecorderRequest struct {
	*aws.Request
	Input *types.PutConfigurationRecorderInput
	Copy  func(*types.PutConfigurationRecorderInput) PutConfigurationRecorderRequest
}

// Send marshals and sends the PutConfigurationRecorder API request.
func (r PutConfigurationRecorderRequest) Send(ctx context.Context) (*PutConfigurationRecorderResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &PutConfigurationRecorderResponse{
		PutConfigurationRecorderOutput: r.Request.Data.(*types.PutConfigurationRecorderOutput),
		response:                       &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// PutConfigurationRecorderResponse is the response type for the
// PutConfigurationRecorder API operation.
type PutConfigurationRecorderResponse struct {
	*types.PutConfigurationRecorderOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// PutConfigurationRecorder request.
func (r *PutConfigurationRecorderResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
