// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package configservice

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/configservice/types"
)

const opStartRemediationExecution = "StartRemediationExecution"

// StartRemediationExecutionRequest returns a request value for making API operation for
// AWS Config.
//
// Runs an on-demand remediation for the specified AWS Config rules against
// the last known remediation configuration. It runs an execution against the
// current state of your resources. Remediation execution is asynchronous.
//
// You can specify up to 100 resource keys per request. An existing StartRemediationExecution
// call for the specified resource keys must complete before you can call the
// API again.
//
//    // Example sending a request using StartRemediationExecutionRequest.
//    req := client.StartRemediationExecutionRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/config-2014-11-12/StartRemediationExecution
func (c *Client) StartRemediationExecutionRequest(input *types.StartRemediationExecutionInput) StartRemediationExecutionRequest {
	op := &aws.Operation{
		Name:       opStartRemediationExecution,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &types.StartRemediationExecutionInput{}
	}

	req := c.newRequest(op, input, &types.StartRemediationExecutionOutput{})
	return StartRemediationExecutionRequest{Request: req, Input: input, Copy: c.StartRemediationExecutionRequest}
}

// StartRemediationExecutionRequest is the request type for the
// StartRemediationExecution API operation.
type StartRemediationExecutionRequest struct {
	*aws.Request
	Input *types.StartRemediationExecutionInput
	Copy  func(*types.StartRemediationExecutionInput) StartRemediationExecutionRequest
}

// Send marshals and sends the StartRemediationExecution API request.
func (r StartRemediationExecutionRequest) Send(ctx context.Context) (*StartRemediationExecutionResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &StartRemediationExecutionResponse{
		StartRemediationExecutionOutput: r.Request.Data.(*types.StartRemediationExecutionOutput),
		response:                        &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// StartRemediationExecutionResponse is the response type for the
// StartRemediationExecution API operation.
type StartRemediationExecutionResponse struct {
	*types.StartRemediationExecutionOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// StartRemediationExecution request.
func (r *StartRemediationExecutionResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
