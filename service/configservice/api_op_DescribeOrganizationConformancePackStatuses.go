// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package configservice

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/configservice/types"
)

const opDescribeOrganizationConformancePackStatuses = "DescribeOrganizationConformancePackStatuses"

// DescribeOrganizationConformancePackStatusesRequest returns a request value for making API operation for
// AWS Config.
//
// Provides organization conformance pack deployment status for an organization.
//
// The status is not considered successful until organization conformance pack
// is successfully deployed in all the member accounts with an exception of
// excluded accounts.
//
// When you specify the limit and the next token, you receive a paginated response.
// Limit and next token are not applicable if you specify organization conformance
// pack names. They are only applicable, when you request all the organization
// conformance packs.
//
// Only a master account can call this API.
//
//    // Example sending a request using DescribeOrganizationConformancePackStatusesRequest.
//    req := client.DescribeOrganizationConformancePackStatusesRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/config-2014-11-12/DescribeOrganizationConformancePackStatuses
func (c *Client) DescribeOrganizationConformancePackStatusesRequest(input *types.DescribeOrganizationConformancePackStatusesInput) DescribeOrganizationConformancePackStatusesRequest {
	op := &aws.Operation{
		Name:       opDescribeOrganizationConformancePackStatuses,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &types.DescribeOrganizationConformancePackStatusesInput{}
	}

	req := c.newRequest(op, input, &types.DescribeOrganizationConformancePackStatusesOutput{})
	return DescribeOrganizationConformancePackStatusesRequest{Request: req, Input: input, Copy: c.DescribeOrganizationConformancePackStatusesRequest}
}

// DescribeOrganizationConformancePackStatusesRequest is the request type for the
// DescribeOrganizationConformancePackStatuses API operation.
type DescribeOrganizationConformancePackStatusesRequest struct {
	*aws.Request
	Input *types.DescribeOrganizationConformancePackStatusesInput
	Copy  func(*types.DescribeOrganizationConformancePackStatusesInput) DescribeOrganizationConformancePackStatusesRequest
}

// Send marshals and sends the DescribeOrganizationConformancePackStatuses API request.
func (r DescribeOrganizationConformancePackStatusesRequest) Send(ctx context.Context) (*DescribeOrganizationConformancePackStatusesResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &DescribeOrganizationConformancePackStatusesResponse{
		DescribeOrganizationConformancePackStatusesOutput: r.Request.Data.(*types.DescribeOrganizationConformancePackStatusesOutput),
		response: &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// DescribeOrganizationConformancePackStatusesResponse is the response type for the
// DescribeOrganizationConformancePackStatuses API operation.
type DescribeOrganizationConformancePackStatusesResponse struct {
	*types.DescribeOrganizationConformancePackStatusesOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// DescribeOrganizationConformancePackStatuses request.
func (r *DescribeOrganizationConformancePackStatusesResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
