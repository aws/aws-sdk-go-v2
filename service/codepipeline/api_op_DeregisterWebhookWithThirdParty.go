// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package codepipeline

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/codepipeline/types"
)

const opDeregisterWebhookWithThirdParty = "DeregisterWebhookWithThirdParty"

// DeregisterWebhookWithThirdPartyRequest returns a request value for making API operation for
// AWS CodePipeline.
//
// Removes the connection between the webhook that was created by CodePipeline
// and the external tool with events to be detected. Currently supported only
// for webhooks that target an action type of GitHub.
//
//    // Example sending a request using DeregisterWebhookWithThirdPartyRequest.
//    req := client.DeregisterWebhookWithThirdPartyRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/codepipeline-2015-07-09/DeregisterWebhookWithThirdParty
func (c *Client) DeregisterWebhookWithThirdPartyRequest(input *types.DeregisterWebhookWithThirdPartyInput) DeregisterWebhookWithThirdPartyRequest {
	op := &aws.Operation{
		Name:       opDeregisterWebhookWithThirdParty,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &types.DeregisterWebhookWithThirdPartyInput{}
	}

	req := c.newRequest(op, input, &types.DeregisterWebhookWithThirdPartyOutput{})
	return DeregisterWebhookWithThirdPartyRequest{Request: req, Input: input, Copy: c.DeregisterWebhookWithThirdPartyRequest}
}

// DeregisterWebhookWithThirdPartyRequest is the request type for the
// DeregisterWebhookWithThirdParty API operation.
type DeregisterWebhookWithThirdPartyRequest struct {
	*aws.Request
	Input *types.DeregisterWebhookWithThirdPartyInput
	Copy  func(*types.DeregisterWebhookWithThirdPartyInput) DeregisterWebhookWithThirdPartyRequest
}

// Send marshals and sends the DeregisterWebhookWithThirdParty API request.
func (r DeregisterWebhookWithThirdPartyRequest) Send(ctx context.Context) (*DeregisterWebhookWithThirdPartyResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &DeregisterWebhookWithThirdPartyResponse{
		DeregisterWebhookWithThirdPartyOutput: r.Request.Data.(*types.DeregisterWebhookWithThirdPartyOutput),
		response:                              &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// DeregisterWebhookWithThirdPartyResponse is the response type for the
// DeregisterWebhookWithThirdParty API operation.
type DeregisterWebhookWithThirdPartyResponse struct {
	*types.DeregisterWebhookWithThirdPartyOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// DeregisterWebhookWithThirdParty request.
func (r *DeregisterWebhookWithThirdPartyResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
