// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package codepipeline

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/codepipeline/types"
)

const opPutWebhook = "PutWebhook"

// PutWebhookRequest returns a request value for making API operation for
// AWS CodePipeline.
//
// Defines a webhook and returns a unique webhook URL generated by CodePipeline.
// This URL can be supplied to third party source hosting providers to call
// every time there's a code change. When CodePipeline receives a POST request
// on this URL, the pipeline defined in the webhook is started as long as the
// POST request satisfied the authentication and filtering requirements supplied
// when defining the webhook. RegisterWebhookWithThirdParty and DeregisterWebhookWithThirdParty
// APIs can be used to automatically configure supported third parties to call
// the generated webhook URL.
//
//    // Example sending a request using PutWebhookRequest.
//    req := client.PutWebhookRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/codepipeline-2015-07-09/PutWebhook
func (c *Client) PutWebhookRequest(input *types.PutWebhookInput) PutWebhookRequest {
	op := &aws.Operation{
		Name:       opPutWebhook,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &types.PutWebhookInput{}
	}

	req := c.newRequest(op, input, &types.PutWebhookOutput{})
	return PutWebhookRequest{Request: req, Input: input, Copy: c.PutWebhookRequest}
}

// PutWebhookRequest is the request type for the
// PutWebhook API operation.
type PutWebhookRequest struct {
	*aws.Request
	Input *types.PutWebhookInput
	Copy  func(*types.PutWebhookInput) PutWebhookRequest
}

// Send marshals and sends the PutWebhook API request.
func (r PutWebhookRequest) Send(ctx context.Context) (*PutWebhookResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &PutWebhookResponse{
		PutWebhookOutput: r.Request.Data.(*types.PutWebhookOutput),
		response:         &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// PutWebhookResponse is the response type for the
// PutWebhook API operation.
type PutWebhookResponse struct {
	*types.PutWebhookOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// PutWebhook request.
func (r *PutWebhookResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
