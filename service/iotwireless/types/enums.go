// Code generated by smithy-go-codegen DO NOT EDIT.

package types

type BatteryLevel string

// Enum values for BatteryLevel
const (
	BatteryLevelNormal   BatteryLevel = "normal"
	BatteryLevelLow      BatteryLevel = "low"
	BatteryLevelCritical BatteryLevel = "critical"
)

// Values returns all known values for BatteryLevel. Note that this can be expanded
// in the future, and so it is only as up to date as the client. The ordering of
// this slice is not guaranteed to be stable across updates.
func (BatteryLevel) Values() []BatteryLevel {
	return []BatteryLevel{
		"normal",
		"low",
		"critical",
	}
}

type ConnectionStatus string

// Enum values for ConnectionStatus
const (
	ConnectionStatusConnected    ConnectionStatus = "Connected"
	ConnectionStatusDisconnected ConnectionStatus = "Disconnected"
)

// Values returns all known values for ConnectionStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (ConnectionStatus) Values() []ConnectionStatus {
	return []ConnectionStatus{
		"Connected",
		"Disconnected",
	}
}

type DeviceState string

// Enum values for DeviceState
const (
	DeviceStateProvisioned           DeviceState = "Provisioned"
	DeviceStateRegisterednotseen     DeviceState = "RegisteredNotSeen"
	DeviceStateRegisteredreachable   DeviceState = "RegisteredReachable"
	DeviceStateRegisteredunreachable DeviceState = "RegisteredUnreachable"
)

// Values returns all known values for DeviceState. Note that this can be expanded
// in the future, and so it is only as up to date as the client. The ordering of
// this slice is not guaranteed to be stable across updates.
func (DeviceState) Values() []DeviceState {
	return []DeviceState{
		"Provisioned",
		"RegisteredNotSeen",
		"RegisteredReachable",
		"RegisteredUnreachable",
	}
}

type Event string

// Enum values for Event
const (
	EventDiscovered  Event = "discovered"
	EventLost        Event = "lost"
	EventAck         Event = "ack"
	EventNack        Event = "nack"
	EventPassthrough Event = "passthrough"
)

// Values returns all known values for Event. Note that this can be expanded in the
// future, and so it is only as up to date as the client. The ordering of this
// slice is not guaranteed to be stable across updates.
func (Event) Values() []Event {
	return []Event{
		"discovered",
		"lost",
		"ack",
		"nack",
		"passthrough",
	}
}

type ExpressionType string

// Enum values for ExpressionType
const (
	ExpressionTypeRuleName  ExpressionType = "RuleName"
	ExpressionTypeMqttTopic ExpressionType = "MqttTopic"
)

// Values returns all known values for ExpressionType. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (ExpressionType) Values() []ExpressionType {
	return []ExpressionType{
		"RuleName",
		"MqttTopic",
	}
}

type MessageType string

// Enum values for MessageType
const (
	MessageTypeCustomCommandIdNotify MessageType = "CUSTOM_COMMAND_ID_NOTIFY"
	MessageTypeCustomCommandIdGet    MessageType = "CUSTOM_COMMAND_ID_GET"
	MessageTypeCustomCommandIdSet    MessageType = "CUSTOM_COMMAND_ID_SET"
	MessageTypeCustomCommandIdResp   MessageType = "CUSTOM_COMMAND_ID_RESP"
)

// Values returns all known values for MessageType. Note that this can be expanded
// in the future, and so it is only as up to date as the client. The ordering of
// this slice is not guaranteed to be stable across updates.
func (MessageType) Values() []MessageType {
	return []MessageType{
		"CUSTOM_COMMAND_ID_NOTIFY",
		"CUSTOM_COMMAND_ID_GET",
		"CUSTOM_COMMAND_ID_SET",
		"CUSTOM_COMMAND_ID_RESP",
	}
}

type PartnerType string

// Enum values for PartnerType
const (
	PartnerTypeSidewalk PartnerType = "Sidewalk"
)

// Values returns all known values for PartnerType. Note that this can be expanded
// in the future, and so it is only as up to date as the client. The ordering of
// this slice is not guaranteed to be stable across updates.
func (PartnerType) Values() []PartnerType {
	return []PartnerType{
		"Sidewalk",
	}
}

type SigningAlg string

// Enum values for SigningAlg
const (
	SigningAlgEd25519 SigningAlg = "Ed25519"
	SigningAlgP256r1  SigningAlg = "P256r1"
)

// Values returns all known values for SigningAlg. Note that this can be expanded
// in the future, and so it is only as up to date as the client. The ordering of
// this slice is not guaranteed to be stable across updates.
func (SigningAlg) Values() []SigningAlg {
	return []SigningAlg{
		"Ed25519",
		"P256r1",
	}
}

type WirelessDeviceIdType string

// Enum values for WirelessDeviceIdType
const (
	WirelessDeviceIdTypeWirelessDeviceId WirelessDeviceIdType = "WirelessDeviceId"
	WirelessDeviceIdTypeDevEui           WirelessDeviceIdType = "DevEui"
	WirelessDeviceIdTypeThingName        WirelessDeviceIdType = "ThingName"
)

// Values returns all known values for WirelessDeviceIdType. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (WirelessDeviceIdType) Values() []WirelessDeviceIdType {
	return []WirelessDeviceIdType{
		"WirelessDeviceId",
		"DevEui",
		"ThingName",
	}
}

type WirelessDeviceType string

// Enum values for WirelessDeviceType
const (
	WirelessDeviceTypeSidewalk WirelessDeviceType = "Sidewalk"
	WirelessDeviceTypeLoRaWAN  WirelessDeviceType = "LoRaWAN"
)

// Values returns all known values for WirelessDeviceType. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (WirelessDeviceType) Values() []WirelessDeviceType {
	return []WirelessDeviceType{
		"Sidewalk",
		"LoRaWAN",
	}
}

type WirelessGatewayIdType string

// Enum values for WirelessGatewayIdType
const (
	WirelessGatewayIdTypeGatewayEui        WirelessGatewayIdType = "GatewayEui"
	WirelessGatewayIdTypeWirelessGatewayId WirelessGatewayIdType = "WirelessGatewayId"
	WirelessGatewayIdTypeThingName         WirelessGatewayIdType = "ThingName"
)

// Values returns all known values for WirelessGatewayIdType. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (WirelessGatewayIdType) Values() []WirelessGatewayIdType {
	return []WirelessGatewayIdType{
		"GatewayEui",
		"WirelessGatewayId",
		"ThingName",
	}
}

type WirelessGatewayServiceType string

// Enum values for WirelessGatewayServiceType
const (
	WirelessGatewayServiceTypeCups WirelessGatewayServiceType = "CUPS"
	WirelessGatewayServiceTypeLns  WirelessGatewayServiceType = "LNS"
)

// Values returns all known values for WirelessGatewayServiceType. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
// The ordering of this slice is not guaranteed to be stable across updates.
func (WirelessGatewayServiceType) Values() []WirelessGatewayServiceType {
	return []WirelessGatewayServiceType{
		"CUPS",
		"LNS",
	}
}

type WirelessGatewayTaskDefinitionType string

// Enum values for WirelessGatewayTaskDefinitionType
const (
	WirelessGatewayTaskDefinitionTypeUpdate WirelessGatewayTaskDefinitionType = "UPDATE"
)

// Values returns all known values for WirelessGatewayTaskDefinitionType. Note that
// this can be expanded in the future, and so it is only as up to date as the
// client. The ordering of this slice is not guaranteed to be stable across
// updates.
func (WirelessGatewayTaskDefinitionType) Values() []WirelessGatewayTaskDefinitionType {
	return []WirelessGatewayTaskDefinitionType{
		"UPDATE",
	}
}

type WirelessGatewayTaskStatus string

// Enum values for WirelessGatewayTaskStatus
const (
	WirelessGatewayTaskStatusPending     WirelessGatewayTaskStatus = "PENDING"
	WirelessGatewayTaskStatusInProgress  WirelessGatewayTaskStatus = "IN_PROGRESS"
	WirelessGatewayTaskStatusFirstRetry  WirelessGatewayTaskStatus = "FIRST_RETRY"
	WirelessGatewayTaskStatusSecondRetry WirelessGatewayTaskStatus = "SECOND_RETRY"
	WirelessGatewayTaskStatusCompleted   WirelessGatewayTaskStatus = "COMPLETED"
	WirelessGatewayTaskStatusFailed      WirelessGatewayTaskStatus = "FAILED"
)

// Values returns all known values for WirelessGatewayTaskStatus. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
// The ordering of this slice is not guaranteed to be stable across updates.
func (WirelessGatewayTaskStatus) Values() []WirelessGatewayTaskStatus {
	return []WirelessGatewayTaskStatus{
		"PENDING",
		"IN_PROGRESS",
		"FIRST_RETRY",
		"SECOND_RETRY",
		"COMPLETED",
		"FAILED",
	}
}
