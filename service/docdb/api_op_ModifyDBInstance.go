// Code generated by smithy-go-codegen DO NOT EDIT.

package docdb

import (
	"context"
	awsmiddleware "github.com/aws/aws-sdk-go-v2/aws/middleware"
	"github.com/aws/aws-sdk-go-v2/aws/retry"
	"github.com/aws/aws-sdk-go-v2/aws/signer/v4"
	"github.com/aws/aws-sdk-go-v2/service/docdb/types"
	smithy "github.com/awslabs/smithy-go"
	"github.com/awslabs/smithy-go/middleware"
	smithyhttp "github.com/awslabs/smithy-go/transport/http"
)

// Modifies settings for an instance. You can change one or more database
// configuration parameters by specifying these parameters and the new values in
// the request.
func (c *Client) ModifyDBInstance(ctx context.Context, params *ModifyDBInstanceInput, optFns ...func(*Options)) (*ModifyDBInstanceOutput, error) {
	stack := middleware.NewStack("ModifyDBInstance", smithyhttp.NewStackRequest)
	options := c.options.Copy()
	for _, fn := range optFns {
		fn(&options)
	}
	addawsAwsquery_serdeOpModifyDBInstanceMiddlewares(stack)
	awsmiddleware.AddRequestInvocationIDMiddleware(stack)
	smithyhttp.AddContentLengthMiddleware(stack)
	AddResolveEndpointMiddleware(stack, options)
	v4.AddComputePayloadSHA256Middleware(stack)
	retry.AddRetryMiddlewares(stack, options)
	addHTTPSignerV4Middleware(stack, options)
	awsmiddleware.AddAttemptClockSkewMiddleware(stack)
	addClientUserAgent(stack)
	smithyhttp.AddErrorCloseResponseBodyMiddleware(stack)
	smithyhttp.AddCloseResponseBodyMiddleware(stack)
	addOpModifyDBInstanceValidationMiddleware(stack)
	stack.Initialize.Add(newServiceMetadataMiddleware_opModifyDBInstance(options.Region), middleware.Before)

	for _, fn := range options.APIOptions {
		if err := fn(stack); err != nil {
			return nil, err
		}
	}
	handler := middleware.DecorateHandler(smithyhttp.NewClientHandler(options.HTTPClient), stack)
	result, metadata, err := handler.Handle(ctx, params)
	if err != nil {
		return nil, &smithy.OperationError{
			ServiceID:     ServiceID,
			OperationName: "ModifyDBInstance",
			Err:           err,
		}
	}
	out := result.(*ModifyDBInstanceOutput)
	out.ResultMetadata = metadata
	return out, nil
}

// Represents the input to ModifyDBInstance ().
type ModifyDBInstanceInput struct {
	// The weekly time range (in UTC) during which system maintenance can occur, which
	// might result in an outage. Changing this parameter doesn't result in an outage
	// except in the following situation, and the change is asynchronously applied as
	// soon as possible. If there are pending actions that cause a reboot, and the
	// maintenance window is changed to include the current time, changing this
	// parameter causes a reboot of the instance. If you are moving this window to the
	// current time, there must be at least 30 minutes between the current time and end
	// of the window to ensure that pending changes are applied. Default: Uses existing
	// setting. Format: ddd:hh24:mi-ddd:hh24:mi Valid days: Mon, Tue, Wed, Thu, Fri,
	// Sat, Sun Constraints: Must be at least 30 minutes.
	PreferredMaintenanceWindow *string
	// A value that specifies the order in which an Amazon DocumentDB replica is
	// promoted to the primary instance after a failure of the existing primary
	// instance. Default: 1 Valid values: 0-15
	PromotionTier *int32
	// The new compute and memory capacity of the instance; for example, db.r5.large.
	// Not all instance classes are available in all AWS Regions. If you modify the
	// instance class, an outage occurs during the change. The change is applied during
	// the next maintenance window, unless ApplyImmediately is specified as true for
	// this request. Default: Uses existing setting.
	DBInstanceClass *string
	// The new instance identifier for the instance when renaming an instance. When you
	// change the instance identifier, an instance reboot occurs immediately if you set
	// Apply Immediately to true. It occurs during the next maintenance window if you
	// set Apply Immediately to false. This value is stored as a lowercase string.
	// Constraints:
	//
	//     * Must contain from 1 to 63 letters, numbers, or hyphens.
	//
	//
	// * The first character must be a letter.
	//
	//     * Cannot end with a hyphen or
	// contain two consecutive hyphens.
	//
	// Example: mydbinstance
	NewDBInstanceIdentifier *string
	// The instance identifier. This value is stored as a lowercase string.
	// Constraints:
	//
	//     * Must match the identifier of an existing DBInstance.
	DBInstanceIdentifier *string
	// Indicates that minor version upgrades are applied automatically to the instance
	// during the maintenance window. Changing this parameter doesn't result in an
	// outage except in the following case, and the change is asynchronously applied as
	// soon as possible. An outage results if this parameter is set to true during the
	// maintenance window, and a newer minor version is available, and Amazon
	// DocumentDB has enabled automatic patching for that engine version.
	AutoMinorVersionUpgrade *bool
	// Specifies whether the modifications in this request and any pending
	// modifications are asynchronously applied as soon as possible, regardless of the
	// PreferredMaintenanceWindow setting for the instance. If this parameter is set to
	// false, changes to the instance are applied during the next maintenance window.
	// Some parameter changes can cause an outage and are applied on the next reboot.
	// Default: false
	ApplyImmediately *bool
	// Indicates the certificate that needs to be associated with the instance.
	CACertificateIdentifier *string
}

type ModifyDBInstanceOutput struct {
	// Detailed information about an instance.
	DBInstance *types.DBInstance

	// Metadata pertaining to the operation's result.
	ResultMetadata middleware.Metadata
}

func addawsAwsquery_serdeOpModifyDBInstanceMiddlewares(stack *middleware.Stack) {
	stack.Serialize.Add(&awsAwsquery_serializeOpModifyDBInstance{}, middleware.After)
	stack.Deserialize.Add(&awsAwsquery_deserializeOpModifyDBInstance{}, middleware.After)
}

func newServiceMetadataMiddleware_opModifyDBInstance(region string) awsmiddleware.RegisterServiceMetadata {
	return awsmiddleware.RegisterServiceMetadata{
		Region:        region,
		ServiceID:     ServiceID,
		SigningName:   "rds",
		OperationName: "ModifyDBInstance",
	}
}
