// Code generated by smithy-go-codegen DO NOT EDIT.

package types

import (
	smithydocument "github.com/aws/smithy-go/document"
	"time"
)

// A summary of the domain that a common control or an objective belongs to.
type AssociatedDomainSummary struct {

	// The Amazon Resource Name (ARN) of the related domain.
	Arn *string

	// The name of the related domain.
	Name *string

	noSmithyDocumentSerde
}

// A summary of the objective that a common control supports.
type AssociatedObjectiveSummary struct {

	// The Amazon Resource Name (ARN) of the related objective.
	Arn *string

	// The name of the related objective.
	Name *string

	noSmithyDocumentSerde
}

// An optional filter that narrows the results to a specific objective.
type CommonControlFilter struct {

	// The objective that's used as filter criteria.
	//
	// You can use this parameter to specify one objective ARN at a time. Passing
	// multiple ARNs in the CommonControlFilter isn’t currently supported.
	Objectives []ObjectiveResourceFilter

	noSmithyDocumentSerde
}

// A summary of metadata for a common control.
type CommonControlSummary struct {

	// The Amazon Resource Name (ARN) that identifies the common control.
	//
	// This member is required.
	Arn *string

	// The time when the common control was created.
	//
	// This member is required.
	CreateTime *time.Time

	// The description of the common control.
	//
	// This member is required.
	Description *string

	// The domain that the common control belongs to.
	//
	// This member is required.
	Domain *AssociatedDomainSummary

	// The time when the common control was most recently updated.
	//
	// This member is required.
	LastUpdateTime *time.Time

	// The name of the common control.
	//
	// This member is required.
	Name *string

	// The objective that the common control belongs to.
	//
	// This member is required.
	Objective *AssociatedObjectiveSummary

	noSmithyDocumentSerde
}

// Four types of control parameters are supported.
//
//   - AllowedRegions: List of Amazon Web Services Regions exempted from the
//     control. Each string is expected to be an Amazon Web Services Region code. This
//     parameter is mandatory for the OU Region deny control, CT.MULTISERVICE.PV.1.
//
// Example: ["us-east-1","us-west-2"]
//
//   - ExemptedActions: List of Amazon Web Services IAM actions exempted from the
//     control. Each string is expected to be an IAM action.
//
// Example: ["logs:DescribeLogGroups","logs:StartQuery","logs:GetQueryResults"]
//
//   - ExemptedPrincipalArns: List of Amazon Web Services IAM principal ARNs
//     exempted from the control. Each string is expected to be an IAM principal that
//     follows the pattern ^arn:(aws|aws-us-gov):(iam|sts)::.+:.+$
//
// Example:
//
//	["arn:aws:iam::*:role/ReadOnly","arn:aws:sts::*:assumed-role/ReadOnly/*"]
//
//	- ExemptedResourceArns: List of resource ARNs exempted from the control. Each
//	string is expected to be a resource ARN.
//
// Example: ["arn:aws:s3:::my-bucket-name"]
type ControlParameter struct {

	// The parameter name. This name is the parameter key when you call [EnableControl]EnableControl
	// or [UpdateEnabledControl]UpdateEnabledControl .
	//
	// [EnableControl]: https://docs.aws.amazon.com/controltower/latest/APIReference/API_EnableControl.html
	// [UpdateEnabledControl]: https://docs.aws.amazon.com/controltower/latest/APIReference/API_UpdateEnabledControl.html
	//
	// This member is required.
	Name *string

	noSmithyDocumentSerde
}

// Overview of information about a control.
type ControlSummary struct {

	// The Amazon Resource Name (ARN) of the control.
	//
	// This member is required.
	Arn *string

	// A description of the control, as it may appear in the console. Describes the
	// functionality of the control.
	//
	// This member is required.
	Description *string

	// The display name of the control.
	//
	// This member is required.
	Name *string

	noSmithyDocumentSerde
}

// The domain resource that's being used as a filter.
type DomainResourceFilter struct {

	// The Amazon Resource Name (ARN) of the domain.
	Arn *string

	noSmithyDocumentSerde
}

// A summary of metadata for a domain.
type DomainSummary struct {

	// The Amazon Resource Name (ARN) that identifies the domain.
	//
	// This member is required.
	Arn *string

	// The time when the domain was created.
	//
	// This member is required.
	CreateTime *time.Time

	// The description of the domain.
	//
	// This member is required.
	Description *string

	// The time when the domain was most recently updated.
	//
	// This member is required.
	LastUpdateTime *time.Time

	// The name of the domain.
	//
	// This member is required.
	Name *string

	noSmithyDocumentSerde
}

// An object that describes the implementation type for a control.
//
// Our ImplementationDetails Type format has three required segments:
//
//   - SERVICE-PROVIDER::SERVICE-NAME::RESOURCE-NAME
//
// For example, AWS::Config::ConfigRule or AWS::SecurityHub::SecurityControl
// resources have the format with three required segments.
//
// Our ImplementationDetails Type format has an optional fourth segment, which is
// present for applicable implementation types. The format is as follows:
//
//   - SERVICE-PROVIDER::SERVICE-NAME::RESOURCE-NAME::RESOURCE-TYPE-DESCRIPTION
//
// For example, AWS::Organizations::Policy::SERVICE_CONTROL_POLICY or
// AWS::CloudFormation::Type::HOOK have the format with four segments.
//
// Although the format is similar, the values for the Type field do not match any
// Amazon Web Services CloudFormation values.
type ImplementationDetails struct {

	// A string that describes a control's implementation type.
	//
	// This member is required.
	Type *string

	noSmithyDocumentSerde
}

// An optional filter that narrows the list of objectives to a specific domain.
type ObjectiveFilter struct {

	// The domain that's used as filter criteria.
	//
	// You can use this parameter to specify one domain ARN at a time. Passing
	// multiple ARNs in the ObjectiveFilter isn’t currently supported.
	Domains []DomainResourceFilter

	noSmithyDocumentSerde
}

// The objective resource that's being used as a filter.
type ObjectiveResourceFilter struct {

	// The Amazon Resource Name (ARN) of the objective.
	Arn *string

	noSmithyDocumentSerde
}

// A summary of metadata for an objective.
type ObjectiveSummary struct {

	// The Amazon Resource Name (ARN) that identifies the objective.
	//
	// This member is required.
	Arn *string

	// The time when the objective was created.
	//
	// This member is required.
	CreateTime *time.Time

	// The description of the objective.
	//
	// This member is required.
	Description *string

	// The domain that the objective belongs to.
	//
	// This member is required.
	Domain *AssociatedDomainSummary

	// The time when the objective was most recently updated.
	//
	// This member is required.
	LastUpdateTime *time.Time

	// The name of the objective.
	//
	// This member is required.
	Name *string

	noSmithyDocumentSerde
}

// Returns information about the control, including the scope of the control, if
// enabled, and the Regions in which the control currently is available for
// deployment. For more information about scope, see [Global services].
//
// If you are applying controls through an Amazon Web Services Control Tower
// landing zone environment, remember that the values returned in the
// RegionConfiguration API operation are not related to the governed Regions in
// your landing zone. For example, if you are governing Regions A , B ,and C while
// the control is available in Regions A , B , C , and D , you'd see a response
// with DeployableRegions of A , B , C , and D for a control with REGIONAL scope,
// even though you may not intend to deploy the control in Region D , because you
// do not govern it through your landing zone.
//
// [Global services]: https://docs.aws.amazon.com/whitepapers/latest/aws-fault-isolation-boundaries/global-services.html
type RegionConfiguration struct {

	// The coverage of the control, if deployed. Scope is an enumerated type, with
	// value Regional , or Global . A control with Global scope is effective in all
	// Amazon Web Services Regions, regardless of the Region from which it is enabled,
	// or to which it is deployed. A control implemented by an SCP is usually Global in
	// scope. A control with Regional scope has operations that are restricted
	// specifically to the Region from which it is enabled and to which it is deployed.
	// Controls implemented by Config rules and CloudFormation hooks usually are
	// Regional in scope. Security Hub controls usually are Regional in scope.
	//
	// This member is required.
	Scope ControlScope

	// Regions in which the control is available to be deployed.
	DeployableRegions []string

	noSmithyDocumentSerde
}

type noSmithyDocumentSerde = smithydocument.NoSerde
