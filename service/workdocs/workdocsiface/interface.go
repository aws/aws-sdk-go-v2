// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

// Package workdocsiface provides an interface to enable mocking the Amazon WorkDocs service client
// for testing your code.
//
// It is important to note that this interface will have breaking changes
// when the service model is updated and adds new API operations, paginators,
// and waiters.
package workdocsiface

import (
	"github.com/aws/aws-sdk-go-v2/service/workdocs"
	"github.com/aws/aws-sdk-go-v2/service/workdocs/types"
)

// ClientAPI provides an interface to enable mocking the
// workdocs.Client methods. This make unit testing your code that
// calls out to the SDK's service client's calls easier.
//
// The best way to use this interface is so the SDK's service client's calls
// can be stubbed out for unit testing your code with the SDK without needing
// to inject custom request handlers into the SDK's request pipeline.
//
//    // myFunc uses an SDK service client to make a request to
//    // Amazon WorkDocs.
//    func myFunc(svc workdocsiface.ClientAPI) bool {
//        // Make svc.AbortDocumentVersionUpload request
//    }
//
//    func main() {
//        cfg, err := external.LoadDefaultAWSConfig()
//        if err != nil {
//            panic("failed to load config, " + err.Error())
//        }
//
//        svc := workdocs.New(cfg)
//
//        myFunc(svc)
//    }
//
// In your _test.go file:
//
//    // Define a mock struct to be used in your unit tests of myFunc.
//    type mockClientClient struct {
//        workdocsiface.ClientPI
//    }
//    func (m *mockClientClient) AbortDocumentVersionUpload(input *types.AbortDocumentVersionUploadInput) (*types.AbortDocumentVersionUploadOutput, error) {
//        // mock response/functionality
//    }
//
//    func TestMyFunc(t *testing.T) {
//        // Setup Test
//        mockSvc := &mockClientClient{}
//
//        myfunc(mockSvc)
//
//        // Verify myFunc's functionality
//    }
//
// It is important to note that this interface will have breaking changes
// when the service model is updated and adds new API operations, paginators,
// and waiters. Its suggested to use the pattern above for testing, or using
// tooling to generate mocks to satisfy the interfaces.
type ClientAPI interface {
	AbortDocumentVersionUploadRequest(*types.AbortDocumentVersionUploadInput) workdocs.AbortDocumentVersionUploadRequest

	ActivateUserRequest(*types.ActivateUserInput) workdocs.ActivateUserRequest

	AddResourcePermissionsRequest(*types.AddResourcePermissionsInput) workdocs.AddResourcePermissionsRequest

	CreateCommentRequest(*types.CreateCommentInput) workdocs.CreateCommentRequest

	CreateCustomMetadataRequest(*types.CreateCustomMetadataInput) workdocs.CreateCustomMetadataRequest

	CreateFolderRequest(*types.CreateFolderInput) workdocs.CreateFolderRequest

	CreateLabelsRequest(*types.CreateLabelsInput) workdocs.CreateLabelsRequest

	CreateNotificationSubscriptionRequest(*types.CreateNotificationSubscriptionInput) workdocs.CreateNotificationSubscriptionRequest

	CreateUserRequest(*types.CreateUserInput) workdocs.CreateUserRequest

	DeactivateUserRequest(*types.DeactivateUserInput) workdocs.DeactivateUserRequest

	DeleteCommentRequest(*types.DeleteCommentInput) workdocs.DeleteCommentRequest

	DeleteCustomMetadataRequest(*types.DeleteCustomMetadataInput) workdocs.DeleteCustomMetadataRequest

	DeleteDocumentRequest(*types.DeleteDocumentInput) workdocs.DeleteDocumentRequest

	DeleteFolderRequest(*types.DeleteFolderInput) workdocs.DeleteFolderRequest

	DeleteFolderContentsRequest(*types.DeleteFolderContentsInput) workdocs.DeleteFolderContentsRequest

	DeleteLabelsRequest(*types.DeleteLabelsInput) workdocs.DeleteLabelsRequest

	DeleteNotificationSubscriptionRequest(*types.DeleteNotificationSubscriptionInput) workdocs.DeleteNotificationSubscriptionRequest

	DeleteUserRequest(*types.DeleteUserInput) workdocs.DeleteUserRequest

	DescribeActivitiesRequest(*types.DescribeActivitiesInput) workdocs.DescribeActivitiesRequest

	DescribeCommentsRequest(*types.DescribeCommentsInput) workdocs.DescribeCommentsRequest

	DescribeDocumentVersionsRequest(*types.DescribeDocumentVersionsInput) workdocs.DescribeDocumentVersionsRequest

	DescribeFolderContentsRequest(*types.DescribeFolderContentsInput) workdocs.DescribeFolderContentsRequest

	DescribeGroupsRequest(*types.DescribeGroupsInput) workdocs.DescribeGroupsRequest

	DescribeNotificationSubscriptionsRequest(*types.DescribeNotificationSubscriptionsInput) workdocs.DescribeNotificationSubscriptionsRequest

	DescribeResourcePermissionsRequest(*types.DescribeResourcePermissionsInput) workdocs.DescribeResourcePermissionsRequest

	DescribeRootFoldersRequest(*types.DescribeRootFoldersInput) workdocs.DescribeRootFoldersRequest

	DescribeUsersRequest(*types.DescribeUsersInput) workdocs.DescribeUsersRequest

	GetCurrentUserRequest(*types.GetCurrentUserInput) workdocs.GetCurrentUserRequest

	GetDocumentRequest(*types.GetDocumentInput) workdocs.GetDocumentRequest

	GetDocumentPathRequest(*types.GetDocumentPathInput) workdocs.GetDocumentPathRequest

	GetDocumentVersionRequest(*types.GetDocumentVersionInput) workdocs.GetDocumentVersionRequest

	GetFolderRequest(*types.GetFolderInput) workdocs.GetFolderRequest

	GetFolderPathRequest(*types.GetFolderPathInput) workdocs.GetFolderPathRequest

	GetResourcesRequest(*types.GetResourcesInput) workdocs.GetResourcesRequest

	InitiateDocumentVersionUploadRequest(*types.InitiateDocumentVersionUploadInput) workdocs.InitiateDocumentVersionUploadRequest

	RemoveAllResourcePermissionsRequest(*types.RemoveAllResourcePermissionsInput) workdocs.RemoveAllResourcePermissionsRequest

	RemoveResourcePermissionRequest(*types.RemoveResourcePermissionInput) workdocs.RemoveResourcePermissionRequest

	UpdateDocumentRequest(*types.UpdateDocumentInput) workdocs.UpdateDocumentRequest

	UpdateDocumentVersionRequest(*types.UpdateDocumentVersionInput) workdocs.UpdateDocumentVersionRequest

	UpdateFolderRequest(*types.UpdateFolderInput) workdocs.UpdateFolderRequest

	UpdateUserRequest(*types.UpdateUserInput) workdocs.UpdateUserRequest
}

var _ ClientAPI = (*workdocs.Client)(nil)
