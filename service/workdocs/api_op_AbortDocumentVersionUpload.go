// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package workdocs

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/private/protocol"
	"github.com/aws/aws-sdk-go-v2/private/protocol/restjson"
	"github.com/aws/aws-sdk-go-v2/service/workdocs/types"
)

const opAbortDocumentVersionUpload = "AbortDocumentVersionUpload"

// AbortDocumentVersionUploadRequest returns a request value for making API operation for
// Amazon WorkDocs.
//
// Aborts the upload of the specified document version that was previously initiated
// by InitiateDocumentVersionUpload. The client should make this call only when
// it no longer intends to upload the document version, or fails to do so.
//
//    // Example sending a request using AbortDocumentVersionUploadRequest.
//    req := client.AbortDocumentVersionUploadRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/workdocs-2016-05-01/AbortDocumentVersionUpload
func (c *Client) AbortDocumentVersionUploadRequest(input *types.AbortDocumentVersionUploadInput) AbortDocumentVersionUploadRequest {
	op := &aws.Operation{
		Name:       opAbortDocumentVersionUpload,
		HTTPMethod: "DELETE",
		HTTPPath:   "/api/v1/documents/{DocumentId}/versions/{VersionId}",
	}

	if input == nil {
		input = &types.AbortDocumentVersionUploadInput{}
	}

	req := c.newRequest(op, input, &types.AbortDocumentVersionUploadOutput{})
	req.Handlers.Unmarshal.Remove(restjson.UnmarshalHandler)
	req.Handlers.Unmarshal.PushBackNamed(protocol.UnmarshalDiscardBodyHandler)
	return AbortDocumentVersionUploadRequest{Request: req, Input: input, Copy: c.AbortDocumentVersionUploadRequest}
}

// AbortDocumentVersionUploadRequest is the request type for the
// AbortDocumentVersionUpload API operation.
type AbortDocumentVersionUploadRequest struct {
	*aws.Request
	Input *types.AbortDocumentVersionUploadInput
	Copy  func(*types.AbortDocumentVersionUploadInput) AbortDocumentVersionUploadRequest
}

// Send marshals and sends the AbortDocumentVersionUpload API request.
func (r AbortDocumentVersionUploadRequest) Send(ctx context.Context) (*AbortDocumentVersionUploadResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &AbortDocumentVersionUploadResponse{
		AbortDocumentVersionUploadOutput: r.Request.Data.(*types.AbortDocumentVersionUploadOutput),
		response:                         &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// AbortDocumentVersionUploadResponse is the response type for the
// AbortDocumentVersionUpload API operation.
type AbortDocumentVersionUploadResponse struct {
	*types.AbortDocumentVersionUploadOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// AbortDocumentVersionUpload request.
func (r *AbortDocumentVersionUploadResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
