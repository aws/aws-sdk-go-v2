// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package workdocs

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/workdocs/types"
)

const opCreateNotificationSubscription = "CreateNotificationSubscription"

// CreateNotificationSubscriptionRequest returns a request value for making API operation for
// Amazon WorkDocs.
//
// Configure Amazon WorkDocs to use Amazon SNS notifications. The endpoint receives
// a confirmation message, and must confirm the subscription.
//
// For more information, see Subscribe to Notifications (https://docs.aws.amazon.com/workdocs/latest/developerguide/subscribe-notifications.html)
// in the Amazon WorkDocs Developer Guide.
//
//    // Example sending a request using CreateNotificationSubscriptionRequest.
//    req := client.CreateNotificationSubscriptionRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/workdocs-2016-05-01/CreateNotificationSubscription
func (c *Client) CreateNotificationSubscriptionRequest(input *types.CreateNotificationSubscriptionInput) CreateNotificationSubscriptionRequest {
	op := &aws.Operation{
		Name:       opCreateNotificationSubscription,
		HTTPMethod: "POST",
		HTTPPath:   "/api/v1/organizations/{OrganizationId}/subscriptions",
	}

	if input == nil {
		input = &types.CreateNotificationSubscriptionInput{}
	}

	req := c.newRequest(op, input, &types.CreateNotificationSubscriptionOutput{})
	return CreateNotificationSubscriptionRequest{Request: req, Input: input, Copy: c.CreateNotificationSubscriptionRequest}
}

// CreateNotificationSubscriptionRequest is the request type for the
// CreateNotificationSubscription API operation.
type CreateNotificationSubscriptionRequest struct {
	*aws.Request
	Input *types.CreateNotificationSubscriptionInput
	Copy  func(*types.CreateNotificationSubscriptionInput) CreateNotificationSubscriptionRequest
}

// Send marshals and sends the CreateNotificationSubscription API request.
func (r CreateNotificationSubscriptionRequest) Send(ctx context.Context) (*CreateNotificationSubscriptionResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &CreateNotificationSubscriptionResponse{
		CreateNotificationSubscriptionOutput: r.Request.Data.(*types.CreateNotificationSubscriptionOutput),
		response:                             &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// CreateNotificationSubscriptionResponse is the response type for the
// CreateNotificationSubscription API operation.
type CreateNotificationSubscriptionResponse struct {
	*types.CreateNotificationSubscriptionOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// CreateNotificationSubscription request.
func (r *CreateNotificationSubscriptionResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
