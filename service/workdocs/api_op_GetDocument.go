// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package workdocs

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/workdocs/types"
)

const opGetDocument = "GetDocument"

// GetDocumentRequest returns a request value for making API operation for
// Amazon WorkDocs.
//
// Retrieves details of a document.
//
//    // Example sending a request using GetDocumentRequest.
//    req := client.GetDocumentRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/workdocs-2016-05-01/GetDocument
func (c *Client) GetDocumentRequest(input *types.GetDocumentInput) GetDocumentRequest {
	op := &aws.Operation{
		Name:       opGetDocument,
		HTTPMethod: "GET",
		HTTPPath:   "/api/v1/documents/{DocumentId}",
	}

	if input == nil {
		input = &types.GetDocumentInput{}
	}

	req := c.newRequest(op, input, &types.GetDocumentOutput{})
	return GetDocumentRequest{Request: req, Input: input, Copy: c.GetDocumentRequest}
}

// GetDocumentRequest is the request type for the
// GetDocument API operation.
type GetDocumentRequest struct {
	*aws.Request
	Input *types.GetDocumentInput
	Copy  func(*types.GetDocumentInput) GetDocumentRequest
}

// Send marshals and sends the GetDocument API request.
func (r GetDocumentRequest) Send(ctx context.Context) (*GetDocumentResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &GetDocumentResponse{
		GetDocumentOutput: r.Request.Data.(*types.GetDocumentOutput),
		response:          &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// GetDocumentResponse is the response type for the
// GetDocument API operation.
type GetDocumentResponse struct {
	*types.GetDocumentOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// GetDocument request.
func (r *GetDocumentResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
