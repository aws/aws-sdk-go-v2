// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package workdocs

type ActivityType string

// Enum values for ActivityType
const (
	ActivityTypeDocumentCheckedIn                      ActivityType = "DOCUMENT_CHECKED_IN"
	ActivityTypeDocumentCheckedOut                     ActivityType = "DOCUMENT_CHECKED_OUT"
	ActivityTypeDocumentRenamed                        ActivityType = "DOCUMENT_RENAMED"
	ActivityTypeDocumentVersionUploaded                ActivityType = "DOCUMENT_VERSION_UPLOADED"
	ActivityTypeDocumentVersionDeleted                 ActivityType = "DOCUMENT_VERSION_DELETED"
	ActivityTypeDocumentVersionViewed                  ActivityType = "DOCUMENT_VERSION_VIEWED"
	ActivityTypeDocumentVersionDownloaded              ActivityType = "DOCUMENT_VERSION_DOWNLOADED"
	ActivityTypeDocumentRecycled                       ActivityType = "DOCUMENT_RECYCLED"
	ActivityTypeDocumentRestored                       ActivityType = "DOCUMENT_RESTORED"
	ActivityTypeDocumentReverted                       ActivityType = "DOCUMENT_REVERTED"
	ActivityTypeDocumentShared                         ActivityType = "DOCUMENT_SHARED"
	ActivityTypeDocumentUnshared                       ActivityType = "DOCUMENT_UNSHARED"
	ActivityTypeDocumentSharePermissionChanged         ActivityType = "DOCUMENT_SHARE_PERMISSION_CHANGED"
	ActivityTypeDocumentShareableLinkCreated           ActivityType = "DOCUMENT_SHAREABLE_LINK_CREATED"
	ActivityTypeDocumentShareableLinkRemoved           ActivityType = "DOCUMENT_SHAREABLE_LINK_REMOVED"
	ActivityTypeDocumentShareableLinkPermissionChanged ActivityType = "DOCUMENT_SHAREABLE_LINK_PERMISSION_CHANGED"
	ActivityTypeDocumentMoved                          ActivityType = "DOCUMENT_MOVED"
	ActivityTypeDocumentCommentAdded                   ActivityType = "DOCUMENT_COMMENT_ADDED"
	ActivityTypeDocumentCommentDeleted                 ActivityType = "DOCUMENT_COMMENT_DELETED"
	ActivityTypeDocumentAnnotationAdded                ActivityType = "DOCUMENT_ANNOTATION_ADDED"
	ActivityTypeDocumentAnnotationDeleted              ActivityType = "DOCUMENT_ANNOTATION_DELETED"
	ActivityTypeFolderCreated                          ActivityType = "FOLDER_CREATED"
	ActivityTypeFolderDeleted                          ActivityType = "FOLDER_DELETED"
	ActivityTypeFolderRenamed                          ActivityType = "FOLDER_RENAMED"
	ActivityTypeFolderRecycled                         ActivityType = "FOLDER_RECYCLED"
	ActivityTypeFolderRestored                         ActivityType = "FOLDER_RESTORED"
	ActivityTypeFolderShared                           ActivityType = "FOLDER_SHARED"
	ActivityTypeFolderUnshared                         ActivityType = "FOLDER_UNSHARED"
	ActivityTypeFolderSharePermissionChanged           ActivityType = "FOLDER_SHARE_PERMISSION_CHANGED"
	ActivityTypeFolderShareableLinkCreated             ActivityType = "FOLDER_SHAREABLE_LINK_CREATED"
	ActivityTypeFolderShareableLinkRemoved             ActivityType = "FOLDER_SHAREABLE_LINK_REMOVED"
	ActivityTypeFolderShareableLinkPermissionChanged   ActivityType = "FOLDER_SHAREABLE_LINK_PERMISSION_CHANGED"
	ActivityTypeFolderMoved                            ActivityType = "FOLDER_MOVED"
)

func (enum ActivityType) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum ActivityType) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type BooleanEnumType string

// Enum values for BooleanEnumType
const (
	BooleanEnumTypeTrue  BooleanEnumType = "TRUE"
	BooleanEnumTypeFalse BooleanEnumType = "FALSE"
)

func (enum BooleanEnumType) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum BooleanEnumType) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type CommentStatusType string

// Enum values for CommentStatusType
const (
	CommentStatusTypeDraft     CommentStatusType = "DRAFT"
	CommentStatusTypePublished CommentStatusType = "PUBLISHED"
	CommentStatusTypeDeleted   CommentStatusType = "DELETED"
)

func (enum CommentStatusType) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum CommentStatusType) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type CommentVisibilityType string

// Enum values for CommentVisibilityType
const (
	CommentVisibilityTypePublic  CommentVisibilityType = "PUBLIC"
	CommentVisibilityTypePrivate CommentVisibilityType = "PRIVATE"
)

func (enum CommentVisibilityType) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum CommentVisibilityType) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type DocumentSourceType string

// Enum values for DocumentSourceType
const (
	DocumentSourceTypeOriginal     DocumentSourceType = "ORIGINAL"
	DocumentSourceTypeWithComments DocumentSourceType = "WITH_COMMENTS"
)

func (enum DocumentSourceType) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum DocumentSourceType) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type DocumentStatusType string

// Enum values for DocumentStatusType
const (
	DocumentStatusTypeInitialized DocumentStatusType = "INITIALIZED"
	DocumentStatusTypeActive      DocumentStatusType = "ACTIVE"
)

func (enum DocumentStatusType) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum DocumentStatusType) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type DocumentThumbnailType string

// Enum values for DocumentThumbnailType
const (
	DocumentThumbnailTypeSmall   DocumentThumbnailType = "SMALL"
	DocumentThumbnailTypeSmallHq DocumentThumbnailType = "SMALL_HQ"
	DocumentThumbnailTypeLarge   DocumentThumbnailType = "LARGE"
)

func (enum DocumentThumbnailType) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum DocumentThumbnailType) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type DocumentVersionStatus string

// Enum values for DocumentVersionStatus
const (
	DocumentVersionStatusActive DocumentVersionStatus = "ACTIVE"
)

func (enum DocumentVersionStatus) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum DocumentVersionStatus) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type FolderContentType string

// Enum values for FolderContentType
const (
	FolderContentTypeAll      FolderContentType = "ALL"
	FolderContentTypeDocument FolderContentType = "DOCUMENT"
	FolderContentTypeFolder   FolderContentType = "FOLDER"
)

func (enum FolderContentType) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum FolderContentType) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type LocaleType string

// Enum values for LocaleType
const (
	LocaleTypeEn      LocaleType = "en"
	LocaleTypeFr      LocaleType = "fr"
	LocaleTypeKo      LocaleType = "ko"
	LocaleTypeDe      LocaleType = "de"
	LocaleTypeEs      LocaleType = "es"
	LocaleTypeJa      LocaleType = "ja"
	LocaleTypeRu      LocaleType = "ru"
	LocaleTypeZhCn    LocaleType = "zh_CN"
	LocaleTypeZhTw    LocaleType = "zh_TW"
	LocaleTypePtBr    LocaleType = "pt_BR"
	LocaleTypeDefault LocaleType = "default"
)

func (enum LocaleType) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum LocaleType) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type OrderType string

// Enum values for OrderType
const (
	OrderTypeAscending  OrderType = "ASCENDING"
	OrderTypeDescending OrderType = "DESCENDING"
)

func (enum OrderType) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum OrderType) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type PrincipalType string

// Enum values for PrincipalType
const (
	PrincipalTypeUser         PrincipalType = "USER"
	PrincipalTypeGroup        PrincipalType = "GROUP"
	PrincipalTypeInvite       PrincipalType = "INVITE"
	PrincipalTypeAnonymous    PrincipalType = "ANONYMOUS"
	PrincipalTypeOrganization PrincipalType = "ORGANIZATION"
)

func (enum PrincipalType) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum PrincipalType) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type ResourceCollectionType string

// Enum values for ResourceCollectionType
const (
	ResourceCollectionTypeSharedWithMe ResourceCollectionType = "SHARED_WITH_ME"
)

func (enum ResourceCollectionType) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum ResourceCollectionType) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type ResourceSortType string

// Enum values for ResourceSortType
const (
	ResourceSortTypeDate ResourceSortType = "DATE"
	ResourceSortTypeName ResourceSortType = "NAME"
)

func (enum ResourceSortType) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum ResourceSortType) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type ResourceStateType string

// Enum values for ResourceStateType
const (
	ResourceStateTypeActive    ResourceStateType = "ACTIVE"
	ResourceStateTypeRestoring ResourceStateType = "RESTORING"
	ResourceStateTypeRecycling ResourceStateType = "RECYCLING"
	ResourceStateTypeRecycled  ResourceStateType = "RECYCLED"
)

func (enum ResourceStateType) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum ResourceStateType) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type ResourceType string

// Enum values for ResourceType
const (
	ResourceTypeFolder   ResourceType = "FOLDER"
	ResourceTypeDocument ResourceType = "DOCUMENT"
)

func (enum ResourceType) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum ResourceType) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type RolePermissionType string

// Enum values for RolePermissionType
const (
	RolePermissionTypeDirect    RolePermissionType = "DIRECT"
	RolePermissionTypeInherited RolePermissionType = "INHERITED"
)

func (enum RolePermissionType) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum RolePermissionType) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type RoleType string

// Enum values for RoleType
const (
	RoleTypeViewer      RoleType = "VIEWER"
	RoleTypeContributor RoleType = "CONTRIBUTOR"
	RoleTypeOwner       RoleType = "OWNER"
	RoleTypeCoowner     RoleType = "COOWNER"
)

func (enum RoleType) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum RoleType) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type ShareStatusType string

// Enum values for ShareStatusType
const (
	ShareStatusTypeSuccess ShareStatusType = "SUCCESS"
	ShareStatusTypeFailure ShareStatusType = "FAILURE"
)

func (enum ShareStatusType) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum ShareStatusType) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type StorageType string

// Enum values for StorageType
const (
	StorageTypeUnlimited StorageType = "UNLIMITED"
	StorageTypeQuota     StorageType = "QUOTA"
)

func (enum StorageType) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum StorageType) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type SubscriptionProtocolType string

// Enum values for SubscriptionProtocolType
const (
	SubscriptionProtocolTypeHttps SubscriptionProtocolType = "HTTPS"
)

func (enum SubscriptionProtocolType) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum SubscriptionProtocolType) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type SubscriptionType string

// Enum values for SubscriptionType
const (
	SubscriptionTypeAll SubscriptionType = "ALL"
)

func (enum SubscriptionType) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum SubscriptionType) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type UserFilterType string

// Enum values for UserFilterType
const (
	UserFilterTypeAll           UserFilterType = "ALL"
	UserFilterTypeActivePending UserFilterType = "ACTIVE_PENDING"
)

func (enum UserFilterType) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum UserFilterType) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type UserSortType string

// Enum values for UserSortType
const (
	UserSortTypeUserName     UserSortType = "USER_NAME"
	UserSortTypeFullName     UserSortType = "FULL_NAME"
	UserSortTypeStorageLimit UserSortType = "STORAGE_LIMIT"
	UserSortTypeUserStatus   UserSortType = "USER_STATUS"
	UserSortTypeStorageUsed  UserSortType = "STORAGE_USED"
)

func (enum UserSortType) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum UserSortType) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type UserStatusType string

// Enum values for UserStatusType
const (
	UserStatusTypeActive   UserStatusType = "ACTIVE"
	UserStatusTypeInactive UserStatusType = "INACTIVE"
	UserStatusTypePending  UserStatusType = "PENDING"
)

func (enum UserStatusType) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum UserStatusType) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type UserType string

// Enum values for UserType
const (
	UserTypeUser           UserType = "USER"
	UserTypeAdmin          UserType = "ADMIN"
	UserTypePoweruser      UserType = "POWERUSER"
	UserTypeMinimaluser    UserType = "MINIMALUSER"
	UserTypeWorkspacesuser UserType = "WORKSPACESUSER"
)

func (enum UserType) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum UserType) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}
