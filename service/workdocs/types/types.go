// Code generated by smithy-go-codegen DO NOT EDIT.

package types

import (
	"time"
)

// Describes the activity information.
type Activity struct {
	// Indicates whether an activity is indirect or direct. An indirect activity
	// results from a direct activity performed on a parent resource. For example,
	// sharing a parent folder (the direct activity) shares all of the subfolders and
	// documents within the parent folder (the indirect activity).
	IsIndirectActivity *bool
	// The list of users or groups impacted by this action. This is an optional field
	// and is filled for the following sharing activities: DOCUMENT_SHARED,
	// DOCUMENT_SHARED, DOCUMENT_UNSHARED, FOLDER_SHARED, FOLDER_UNSHARED.
	Participants *Participants
	// The ID of the organization.
	OrganizationId *string
	// The user who performed the action.
	Initiator *UserMetadata
	// Metadata of the commenting activity. This is an optional field and is filled for
	// commenting activities.
	CommentMetadata *CommentMetadata
	// The activity type.
	Type ActivityType
	// The original parent of the resource. This is an optional field and is filled for
	// move activities.
	OriginalParent *ResourceMetadata
	// The timestamp when the action was performed.
	TimeStamp *time.Time
	// The metadata of the resource involved in the user action.
	ResourceMetadata *ResourceMetadata
}

// Describes a comment.
type Comment struct {
	// The ID of the comment.
	CommentId *string
	// The ID of the parent comment.
	ParentId *string
	// If the comment is a reply to another user's comment, this field contains the
	// user ID of the user being replied to.
	RecipientId *string
	// The time that the comment was created.
	CreatedTimestamp *time.Time
	// The details of the user who made the comment.
	Contributor *User
	// The visibility of the comment. Options are either PRIVATE, where the comment is
	// visible only to the comment author and document owner and co-owners, or PUBLIC,
	// where the comment is visible to document owners, co-owners, and contributors.
	Visibility CommentVisibilityType
	// The status of the comment.
	Status CommentStatusType
	// The ID of the root comment in the thread.
	ThreadId *string
	// The text of the comment.
	Text *string
}

// Describes the metadata of a comment.
type CommentMetadata struct {
	// The timestamp that the comment was created.
	CreatedTimestamp *time.Time
	// The ID of the comment.
	CommentId *string
	// The status of the comment.
	CommentStatus CommentStatusType
	// The user who made the comment.
	Contributor *User
	// The ID of the user being replied to.
	RecipientId *string
}

// Describes the document.
type DocumentMetadata struct {
	// The ID of the document.
	Id *string
	// The time when the document was created.
	CreatedTimestamp *time.Time
	// The time when the document was updated.
	ModifiedTimestamp *time.Time
	// The ID of the creator.
	CreatorId *string
	// The resource state.
	ResourceState ResourceStateType
	// The ID of the parent folder.
	ParentFolderId *string
	// List of labels on the document.
	Labels []*string
	// The latest version of the document.
	LatestVersionMetadata *DocumentVersionMetadata
}

// Describes a version of a document.
type DocumentVersionMetadata struct {
	// The source of the document.
	Source map[string]*string
	// The timestamp when the content of the document was originally created.
	ContentCreatedTimestamp *time.Time
	// The ID of the version.
	Id *string
	// The timestamp when the document was first uploaded.
	CreatedTimestamp *time.Time
	// The size of the document, in bytes.
	Size *int64
	// The signature of the document.
	Signature *string
	// The name of the version.
	Name *string
	// The thumbnail of the document.
	Thumbnail map[string]*string
	// The timestamp when the content of the document was modified.
	ContentModifiedTimestamp *time.Time
	// The status of the document.
	Status DocumentStatusType
	// The timestamp when the document was last uploaded.
	ModifiedTimestamp *time.Time
	// The ID of the creator.
	CreatorId *string
	// The content type of the document.
	ContentType *string
}

// Describes a folder.
type FolderMetadata struct {
	// The time when the folder was updated.
	ModifiedTimestamp *time.Time
	// List of labels on the folder.
	Labels []*string
	// The unique identifier created from the subfolders and documents of the folder.
	Signature *string
	// The ID of the creator.
	CreatorId *string
	// The ID of the parent folder.
	ParentFolderId *string
	// The name of the folder.
	Name *string
	// The ID of the folder.
	Id *string
	// The size of the latest version of the folder metadata.
	LatestVersionSize *int64
	// The size of the folder metadata.
	Size *int64
	// The resource state of the folder.
	ResourceState ResourceStateType
	// The time when the folder was created.
	CreatedTimestamp *time.Time
}

// Describes the metadata of a user group.
type GroupMetadata struct {
	// The name of the group.
	Name *string
	// The ID of the user group.
	Id *string
}

// Set of options which defines notification preferences of given action.
type NotificationOptions struct {
	// Text value to be included in the email body.
	EmailMessage *string
	// Boolean value to indicate an email notification should be sent to the
	// receipients.
	SendEmail *bool
}

// Describes the users or user groups.
type Participants struct {
	// The list of users.
	Users []*UserMetadata
	// The list of user groups.
	Groups []*GroupMetadata
}

// Describes the permissions.
type PermissionInfo struct {
	// The role of the user.
	Role RoleType
	// The type of permissions.
	Type RolePermissionType
}

// Describes a resource.
type Principal struct {
	// The permission information for the resource.
	Roles []*PermissionInfo
	// The ID of the resource.
	Id *string
	// The type of resource.
	Type PrincipalType
}

// Describes the metadata of a resource.
type ResourceMetadata struct {
	// The version ID of the resource. This is an optional field and is filled for
	// action on document version.
	VersionId *string
	// The type of resource.
	Type ResourceType
	// The owner of the resource.
	Owner *UserMetadata
	// The original name of the resource before a rename operation.
	OriginalName *string
	// The name of the resource.
	Name *string
	// The ID of the resource.
	Id *string
	// The parent ID of the resource before a rename operation.
	ParentId *string
}

// Describes the path information of a resource.
type ResourcePath struct {
	// The components of the resource path.
	Components []*ResourcePathComponent
}

// Describes the resource path.
type ResourcePathComponent struct {
	// The ID of the resource path.
	Id *string
	// The name of the resource path.
	Name *string
}

// Describes the recipient type and ID, if available.
type SharePrincipal struct {
	// The ID of the recipient.
	Id *string
	// The role of the recipient.
	Role RoleType
	// The type of the recipient.
	Type PrincipalType
}

// Describes the share results of a resource.
type ShareResult struct {
	// The ID of the invited user.
	InviteePrincipalId *string
	// The status message.
	StatusMessage *string
	// The role.
	Role RoleType
	// The status.
	Status ShareStatusType
	// The ID of the resource that was shared.
	ShareId *string
	// The ID of the principal.
	PrincipalId *string
}

// Describes the storage for a user.
type StorageRuleType struct {
	// The amount of storage allocated, in bytes.
	StorageAllocatedInBytes *int64
	// The type of storage.
	StorageType StorageType
}

// Describes a subscription.
type Subscription struct {
	// The ID of the subscription.
	SubscriptionId *string
	// The protocol of the subscription.
	Protocol SubscriptionProtocolType
	// The endpoint of the subscription.
	EndPoint *string
}

// Describes the upload.
type UploadMetadata struct {
	// The signed headers.
	SignedHeaders map[string]*string
	// The URL of the upload.
	UploadUrl *string
}

// Describes a user.
type User struct {
	// The status of the user.
	Status UserStatusType
	// The given name of the user.
	GivenName *string
	// The ID of the organization.
	OrganizationId *string
	// The email address of the user.
	EmailAddress *string
	// The ID of the root folder.
	RootFolderId *string
	// The ID of the recycle bin folder.
	RecycleBinFolderId *string
	// The time when the user was created.
	CreatedTimestamp *time.Time
	// The locale of the user.
	Locale LocaleType
	// The ID of the user.
	Id *string
	// The storage for the user.
	Storage *UserStorageMetadata
	// The type of user.
	Type UserType
	// The surname of the user.
	Surname *string
	// The login name of the user.
	Username *string
	// The time zone ID of the user.
	TimeZoneId *string
	// The time when the user was modified.
	ModifiedTimestamp *time.Time
}

// Describes the metadata of the user.
type UserMetadata struct {
	// The surname of the user.
	Surname *string
	// The email address of the user.
	EmailAddress *string
	// The name of the user.
	Username *string
	// The ID of the user.
	Id *string
	// The given name of the user before a rename operation.
	GivenName *string
}

// Describes the storage for a user.
type UserStorageMetadata struct {
	// The amount of storage used, in bytes.
	StorageUtilizedInBytes *int64
	// The storage for a user.
	StorageRule *StorageRuleType
}
