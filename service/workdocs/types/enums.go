// Code generated by smithy-go-codegen DO NOT EDIT.

package types

type ActivityType string

// Enum values for ActivityType
const (
	ActivityTypeDocument_checked_in                        ActivityType = "DOCUMENT_CHECKED_IN"
	ActivityTypeDocument_checked_out                       ActivityType = "DOCUMENT_CHECKED_OUT"
	ActivityTypeDocument_renamed                           ActivityType = "DOCUMENT_RENAMED"
	ActivityTypeDocument_version_uploaded                  ActivityType = "DOCUMENT_VERSION_UPLOADED"
	ActivityTypeDocument_version_deleted                   ActivityType = "DOCUMENT_VERSION_DELETED"
	ActivityTypeDocument_version_viewed                    ActivityType = "DOCUMENT_VERSION_VIEWED"
	ActivityTypeDocument_version_downloaded                ActivityType = "DOCUMENT_VERSION_DOWNLOADED"
	ActivityTypeDocument_recycled                          ActivityType = "DOCUMENT_RECYCLED"
	ActivityTypeDocument_restored                          ActivityType = "DOCUMENT_RESTORED"
	ActivityTypeDocument_reverted                          ActivityType = "DOCUMENT_REVERTED"
	ActivityTypeDocument_shared                            ActivityType = "DOCUMENT_SHARED"
	ActivityTypeDocument_unshared                          ActivityType = "DOCUMENT_UNSHARED"
	ActivityTypeDocument_share_permission_changed          ActivityType = "DOCUMENT_SHARE_PERMISSION_CHANGED"
	ActivityTypeDocument_shareable_link_created            ActivityType = "DOCUMENT_SHAREABLE_LINK_CREATED"
	ActivityTypeDocument_shareable_link_removed            ActivityType = "DOCUMENT_SHAREABLE_LINK_REMOVED"
	ActivityTypeDocument_shareable_link_permission_changed ActivityType = "DOCUMENT_SHAREABLE_LINK_PERMISSION_CHANGED"
	ActivityTypeDocument_moved                             ActivityType = "DOCUMENT_MOVED"
	ActivityTypeDocument_comment_added                     ActivityType = "DOCUMENT_COMMENT_ADDED"
	ActivityTypeDocument_comment_deleted                   ActivityType = "DOCUMENT_COMMENT_DELETED"
	ActivityTypeDocument_annotation_added                  ActivityType = "DOCUMENT_ANNOTATION_ADDED"
	ActivityTypeDocument_annotation_deleted                ActivityType = "DOCUMENT_ANNOTATION_DELETED"
	ActivityTypeFolder_created                             ActivityType = "FOLDER_CREATED"
	ActivityTypeFolder_deleted                             ActivityType = "FOLDER_DELETED"
	ActivityTypeFolder_renamed                             ActivityType = "FOLDER_RENAMED"
	ActivityTypeFolder_recycled                            ActivityType = "FOLDER_RECYCLED"
	ActivityTypeFolder_restored                            ActivityType = "FOLDER_RESTORED"
	ActivityTypeFolder_shared                              ActivityType = "FOLDER_SHARED"
	ActivityTypeFolder_unshared                            ActivityType = "FOLDER_UNSHARED"
	ActivityTypeFolder_share_permission_changed            ActivityType = "FOLDER_SHARE_PERMISSION_CHANGED"
	ActivityTypeFolder_shareable_link_created              ActivityType = "FOLDER_SHAREABLE_LINK_CREATED"
	ActivityTypeFolder_shareable_link_removed              ActivityType = "FOLDER_SHAREABLE_LINK_REMOVED"
	ActivityTypeFolder_shareable_link_permission_changed   ActivityType = "FOLDER_SHAREABLE_LINK_PERMISSION_CHANGED"
	ActivityTypeFolder_moved                               ActivityType = "FOLDER_MOVED"
)

// Values returns all known values for ActivityType. Note that this can be expanded
// in the future, and so it is only as up to date as the client. The ordering of
// this slice is not guaranteed to be stable across updates.
func (ActivityType) Values() []ActivityType {
	return []ActivityType{
		"DOCUMENT_CHECKED_IN",
		"DOCUMENT_CHECKED_OUT",
		"DOCUMENT_RENAMED",
		"DOCUMENT_VERSION_UPLOADED",
		"DOCUMENT_VERSION_DELETED",
		"DOCUMENT_VERSION_VIEWED",
		"DOCUMENT_VERSION_DOWNLOADED",
		"DOCUMENT_RECYCLED",
		"DOCUMENT_RESTORED",
		"DOCUMENT_REVERTED",
		"DOCUMENT_SHARED",
		"DOCUMENT_UNSHARED",
		"DOCUMENT_SHARE_PERMISSION_CHANGED",
		"DOCUMENT_SHAREABLE_LINK_CREATED",
		"DOCUMENT_SHAREABLE_LINK_REMOVED",
		"DOCUMENT_SHAREABLE_LINK_PERMISSION_CHANGED",
		"DOCUMENT_MOVED",
		"DOCUMENT_COMMENT_ADDED",
		"DOCUMENT_COMMENT_DELETED",
		"DOCUMENT_ANNOTATION_ADDED",
		"DOCUMENT_ANNOTATION_DELETED",
		"FOLDER_CREATED",
		"FOLDER_DELETED",
		"FOLDER_RENAMED",
		"FOLDER_RECYCLED",
		"FOLDER_RESTORED",
		"FOLDER_SHARED",
		"FOLDER_UNSHARED",
		"FOLDER_SHARE_PERMISSION_CHANGED",
		"FOLDER_SHAREABLE_LINK_CREATED",
		"FOLDER_SHAREABLE_LINK_REMOVED",
		"FOLDER_SHAREABLE_LINK_PERMISSION_CHANGED",
		"FOLDER_MOVED",
	}
}

type BooleanEnumType string

// Enum values for BooleanEnumType
const (
	BooleanEnumTypeTrue  BooleanEnumType = "TRUE"
	BooleanEnumTypeFalse BooleanEnumType = "FALSE"
)

// Values returns all known values for BooleanEnumType. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (BooleanEnumType) Values() []BooleanEnumType {
	return []BooleanEnumType{
		"TRUE",
		"FALSE",
	}
}

type CommentStatusType string

// Enum values for CommentStatusType
const (
	CommentStatusTypeDraft     CommentStatusType = "DRAFT"
	CommentStatusTypePublished CommentStatusType = "PUBLISHED"
	CommentStatusTypeDeleted   CommentStatusType = "DELETED"
)

// Values returns all known values for CommentStatusType. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (CommentStatusType) Values() []CommentStatusType {
	return []CommentStatusType{
		"DRAFT",
		"PUBLISHED",
		"DELETED",
	}
}

type CommentVisibilityType string

// Enum values for CommentVisibilityType
const (
	CommentVisibilityTypePublic  CommentVisibilityType = "PUBLIC"
	CommentVisibilityTypePrivate CommentVisibilityType = "PRIVATE"
)

// Values returns all known values for CommentVisibilityType. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (CommentVisibilityType) Values() []CommentVisibilityType {
	return []CommentVisibilityType{
		"PUBLIC",
		"PRIVATE",
	}
}

type DocumentSourceType string

// Enum values for DocumentSourceType
const (
	DocumentSourceTypeOriginal      DocumentSourceType = "ORIGINAL"
	DocumentSourceTypeWith_comments DocumentSourceType = "WITH_COMMENTS"
)

// Values returns all known values for DocumentSourceType. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (DocumentSourceType) Values() []DocumentSourceType {
	return []DocumentSourceType{
		"ORIGINAL",
		"WITH_COMMENTS",
	}
}

type DocumentStatusType string

// Enum values for DocumentStatusType
const (
	DocumentStatusTypeInitialized DocumentStatusType = "INITIALIZED"
	DocumentStatusTypeActive      DocumentStatusType = "ACTIVE"
)

// Values returns all known values for DocumentStatusType. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (DocumentStatusType) Values() []DocumentStatusType {
	return []DocumentStatusType{
		"INITIALIZED",
		"ACTIVE",
	}
}

type DocumentThumbnailType string

// Enum values for DocumentThumbnailType
const (
	DocumentThumbnailTypeSmall    DocumentThumbnailType = "SMALL"
	DocumentThumbnailTypeSmall_hq DocumentThumbnailType = "SMALL_HQ"
	DocumentThumbnailTypeLarge    DocumentThumbnailType = "LARGE"
)

// Values returns all known values for DocumentThumbnailType. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (DocumentThumbnailType) Values() []DocumentThumbnailType {
	return []DocumentThumbnailType{
		"SMALL",
		"SMALL_HQ",
		"LARGE",
	}
}

type DocumentVersionStatus string

// Enum values for DocumentVersionStatus
const (
	DocumentVersionStatusActive DocumentVersionStatus = "ACTIVE"
)

// Values returns all known values for DocumentVersionStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (DocumentVersionStatus) Values() []DocumentVersionStatus {
	return []DocumentVersionStatus{
		"ACTIVE",
	}
}

type FolderContentType string

// Enum values for FolderContentType
const (
	FolderContentTypeAll      FolderContentType = "ALL"
	FolderContentTypeDocument FolderContentType = "DOCUMENT"
	FolderContentTypeFolder   FolderContentType = "FOLDER"
)

// Values returns all known values for FolderContentType. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (FolderContentType) Values() []FolderContentType {
	return []FolderContentType{
		"ALL",
		"DOCUMENT",
		"FOLDER",
	}
}

type LocaleType string

// Enum values for LocaleType
const (
	LocaleTypeEn      LocaleType = "en"
	LocaleTypeFr      LocaleType = "fr"
	LocaleTypeKo      LocaleType = "ko"
	LocaleTypeDe      LocaleType = "de"
	LocaleTypeEs      LocaleType = "es"
	LocaleTypeJa      LocaleType = "ja"
	LocaleTypeRu      LocaleType = "ru"
	LocaleTypeZh_cn   LocaleType = "zh_CN"
	LocaleTypeZh_tw   LocaleType = "zh_TW"
	LocaleTypePt_br   LocaleType = "pt_BR"
	LocaleTypeDefault LocaleType = "default"
)

// Values returns all known values for LocaleType. Note that this can be expanded
// in the future, and so it is only as up to date as the client. The ordering of
// this slice is not guaranteed to be stable across updates.
func (LocaleType) Values() []LocaleType {
	return []LocaleType{
		"en",
		"fr",
		"ko",
		"de",
		"es",
		"ja",
		"ru",
		"zh_CN",
		"zh_TW",
		"pt_BR",
		"default",
	}
}

type OrderType string

// Enum values for OrderType
const (
	OrderTypeAscending  OrderType = "ASCENDING"
	OrderTypeDescending OrderType = "DESCENDING"
)

// Values returns all known values for OrderType. Note that this can be expanded in
// the future, and so it is only as up to date as the client. The ordering of this
// slice is not guaranteed to be stable across updates.
func (OrderType) Values() []OrderType {
	return []OrderType{
		"ASCENDING",
		"DESCENDING",
	}
}

type PrincipalType string

// Enum values for PrincipalType
const (
	PrincipalTypeUser         PrincipalType = "USER"
	PrincipalTypeGroup        PrincipalType = "GROUP"
	PrincipalTypeInvite       PrincipalType = "INVITE"
	PrincipalTypeAnonymous    PrincipalType = "ANONYMOUS"
	PrincipalTypeOrganization PrincipalType = "ORGANIZATION"
)

// Values returns all known values for PrincipalType. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (PrincipalType) Values() []PrincipalType {
	return []PrincipalType{
		"USER",
		"GROUP",
		"INVITE",
		"ANONYMOUS",
		"ORGANIZATION",
	}
}

type ResourceCollectionType string

// Enum values for ResourceCollectionType
const (
	ResourceCollectionTypeShared_with_me ResourceCollectionType = "SHARED_WITH_ME"
)

// Values returns all known values for ResourceCollectionType. Note that this can
// be expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (ResourceCollectionType) Values() []ResourceCollectionType {
	return []ResourceCollectionType{
		"SHARED_WITH_ME",
	}
}

type ResourceSortType string

// Enum values for ResourceSortType
const (
	ResourceSortTypeDate ResourceSortType = "DATE"
	ResourceSortTypeName ResourceSortType = "NAME"
)

// Values returns all known values for ResourceSortType. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (ResourceSortType) Values() []ResourceSortType {
	return []ResourceSortType{
		"DATE",
		"NAME",
	}
}

type ResourceStateType string

// Enum values for ResourceStateType
const (
	ResourceStateTypeActive    ResourceStateType = "ACTIVE"
	ResourceStateTypeRestoring ResourceStateType = "RESTORING"
	ResourceStateTypeRecycling ResourceStateType = "RECYCLING"
	ResourceStateTypeRecycled  ResourceStateType = "RECYCLED"
)

// Values returns all known values for ResourceStateType. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (ResourceStateType) Values() []ResourceStateType {
	return []ResourceStateType{
		"ACTIVE",
		"RESTORING",
		"RECYCLING",
		"RECYCLED",
	}
}

type ResourceType string

// Enum values for ResourceType
const (
	ResourceTypeFolder   ResourceType = "FOLDER"
	ResourceTypeDocument ResourceType = "DOCUMENT"
)

// Values returns all known values for ResourceType. Note that this can be expanded
// in the future, and so it is only as up to date as the client. The ordering of
// this slice is not guaranteed to be stable across updates.
func (ResourceType) Values() []ResourceType {
	return []ResourceType{
		"FOLDER",
		"DOCUMENT",
	}
}

type RolePermissionType string

// Enum values for RolePermissionType
const (
	RolePermissionTypeDirect    RolePermissionType = "DIRECT"
	RolePermissionTypeInherited RolePermissionType = "INHERITED"
)

// Values returns all known values for RolePermissionType. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (RolePermissionType) Values() []RolePermissionType {
	return []RolePermissionType{
		"DIRECT",
		"INHERITED",
	}
}

type RoleType string

// Enum values for RoleType
const (
	RoleTypeViewer      RoleType = "VIEWER"
	RoleTypeContributor RoleType = "CONTRIBUTOR"
	RoleTypeOwner       RoleType = "OWNER"
	RoleTypeCoowner     RoleType = "COOWNER"
)

// Values returns all known values for RoleType. Note that this can be expanded in
// the future, and so it is only as up to date as the client. The ordering of this
// slice is not guaranteed to be stable across updates.
func (RoleType) Values() []RoleType {
	return []RoleType{
		"VIEWER",
		"CONTRIBUTOR",
		"OWNER",
		"COOWNER",
	}
}

type ShareStatusType string

// Enum values for ShareStatusType
const (
	ShareStatusTypeSuccess ShareStatusType = "SUCCESS"
	ShareStatusTypeFailure ShareStatusType = "FAILURE"
)

// Values returns all known values for ShareStatusType. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (ShareStatusType) Values() []ShareStatusType {
	return []ShareStatusType{
		"SUCCESS",
		"FAILURE",
	}
}

type StorageType string

// Enum values for StorageType
const (
	StorageTypeUnlimited StorageType = "UNLIMITED"
	StorageTypeQuota     StorageType = "QUOTA"
)

// Values returns all known values for StorageType. Note that this can be expanded
// in the future, and so it is only as up to date as the client. The ordering of
// this slice is not guaranteed to be stable across updates.
func (StorageType) Values() []StorageType {
	return []StorageType{
		"UNLIMITED",
		"QUOTA",
	}
}

type SubscriptionProtocolType string

// Enum values for SubscriptionProtocolType
const (
	SubscriptionProtocolTypeHttps SubscriptionProtocolType = "HTTPS"
)

// Values returns all known values for SubscriptionProtocolType. Note that this can
// be expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (SubscriptionProtocolType) Values() []SubscriptionProtocolType {
	return []SubscriptionProtocolType{
		"HTTPS",
	}
}

type SubscriptionType string

// Enum values for SubscriptionType
const (
	SubscriptionTypeAll SubscriptionType = "ALL"
)

// Values returns all known values for SubscriptionType. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (SubscriptionType) Values() []SubscriptionType {
	return []SubscriptionType{
		"ALL",
	}
}

type UserFilterType string

// Enum values for UserFilterType
const (
	UserFilterTypeAll            UserFilterType = "ALL"
	UserFilterTypeActive_pending UserFilterType = "ACTIVE_PENDING"
)

// Values returns all known values for UserFilterType. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (UserFilterType) Values() []UserFilterType {
	return []UserFilterType{
		"ALL",
		"ACTIVE_PENDING",
	}
}

type UserSortType string

// Enum values for UserSortType
const (
	UserSortTypeUser_name     UserSortType = "USER_NAME"
	UserSortTypeFull_name     UserSortType = "FULL_NAME"
	UserSortTypeStorage_limit UserSortType = "STORAGE_LIMIT"
	UserSortTypeUser_status   UserSortType = "USER_STATUS"
	UserSortTypeStorage_used  UserSortType = "STORAGE_USED"
)

// Values returns all known values for UserSortType. Note that this can be expanded
// in the future, and so it is only as up to date as the client. The ordering of
// this slice is not guaranteed to be stable across updates.
func (UserSortType) Values() []UserSortType {
	return []UserSortType{
		"USER_NAME",
		"FULL_NAME",
		"STORAGE_LIMIT",
		"USER_STATUS",
		"STORAGE_USED",
	}
}

type UserStatusType string

// Enum values for UserStatusType
const (
	UserStatusTypeActive   UserStatusType = "ACTIVE"
	UserStatusTypeInactive UserStatusType = "INACTIVE"
	UserStatusTypePending  UserStatusType = "PENDING"
)

// Values returns all known values for UserStatusType. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (UserStatusType) Values() []UserStatusType {
	return []UserStatusType{
		"ACTIVE",
		"INACTIVE",
		"PENDING",
	}
}

type UserType string

// Enum values for UserType
const (
	UserTypeUser           UserType = "USER"
	UserTypeAdmin          UserType = "ADMIN"
	UserTypePoweruser      UserType = "POWERUSER"
	UserTypeMinimaluser    UserType = "MINIMALUSER"
	UserTypeWorkspacesuser UserType = "WORKSPACESUSER"
)

// Values returns all known values for UserType. Note that this can be expanded in
// the future, and so it is only as up to date as the client. The ordering of this
// slice is not guaranteed to be stable across updates.
func (UserType) Values() []UserType {
	return []UserType{
		"USER",
		"ADMIN",
		"POWERUSER",
		"MINIMALUSER",
		"WORKSPACESUSER",
	}
}
