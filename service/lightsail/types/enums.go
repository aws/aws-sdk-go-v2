// Code generated by smithy-go-codegen DO NOT EDIT.

package types

type AccessDirection string

// Enum values for AccessDirection
const (
	AccessDirectionInbound  AccessDirection = "inbound"
	AccessDirectionOutbound AccessDirection = "outbound"
)

type AddOnType string

// Enum values for AddOnType
const (
	AddOnTypeAutosnapshot AddOnType = "AutoSnapshot"
)

type AlarmState string

// Enum values for AlarmState
const (
	AlarmStateOk                AlarmState = "OK"
	AlarmStateAlarm             AlarmState = "ALARM"
	AlarmStateInsufficient_data AlarmState = "INSUFFICIENT_DATA"
)

type AutoSnapshotStatus string

// Enum values for AutoSnapshotStatus
const (
	AutoSnapshotStatusSuccess     AutoSnapshotStatus = "Success"
	AutoSnapshotStatusFailed      AutoSnapshotStatus = "Failed"
	AutoSnapshotStatusIn_progress AutoSnapshotStatus = "InProgress"
	AutoSnapshotStatusNot_found   AutoSnapshotStatus = "NotFound"
)

type BehaviorEnum string

// Enum values for BehaviorEnum
const (
	BehaviorEnumDontcachesetting BehaviorEnum = "dont-cache"
	BehaviorEnumCachesetting     BehaviorEnum = "cache"
)

type BlueprintType string

// Enum values for BlueprintType
const (
	BlueprintTypeOs  BlueprintType = "os"
	BlueprintTypeApp BlueprintType = "app"
)

type CertificateStatus string

// Enum values for CertificateStatus
const (
	CertificateStatusPendingvalidation  CertificateStatus = "PENDING_VALIDATION"
	CertificateStatusIssued             CertificateStatus = "ISSUED"
	CertificateStatusInactive           CertificateStatus = "INACTIVE"
	CertificateStatusExpired            CertificateStatus = "EXPIRED"
	CertificateStatusValidationtimedout CertificateStatus = "VALIDATION_TIMED_OUT"
	CertificateStatusRevoked            CertificateStatus = "REVOKED"
	CertificateStatusFailed             CertificateStatus = "FAILED"
)

type CloudFormationStackRecordSourceType string

// Enum values for CloudFormationStackRecordSourceType
const (
	CloudFormationStackRecordSourceTypeExportsnapshotrecord CloudFormationStackRecordSourceType = "ExportSnapshotRecord"
)

type ComparisonOperator string

// Enum values for ComparisonOperator
const (
	ComparisonOperatorGreaterthanorequaltothreshold ComparisonOperator = "GreaterThanOrEqualToThreshold"
	ComparisonOperatorGreaterthanthreshold          ComparisonOperator = "GreaterThanThreshold"
	ComparisonOperatorLessthanthreshold             ComparisonOperator = "LessThanThreshold"
	ComparisonOperatorLessthanorequaltothreshold    ComparisonOperator = "LessThanOrEqualToThreshold"
)

type ContactMethodStatus string

// Enum values for ContactMethodStatus
const (
	ContactMethodStatusPendingverification ContactMethodStatus = "PendingVerification"
	ContactMethodStatusValid               ContactMethodStatus = "Valid"
	ContactMethodStatusInvalid             ContactMethodStatus = "Invalid"
)

type ContactMethodVerificationProtocol string

// Enum values for ContactMethodVerificationProtocol
const (
	ContactMethodVerificationProtocolEmail ContactMethodVerificationProtocol = "Email"
)

type ContactProtocol string

// Enum values for ContactProtocol
const (
	ContactProtocolEmail ContactProtocol = "Email"
	ContactProtocolSms   ContactProtocol = "SMS"
)

type DiskSnapshotState string

// Enum values for DiskSnapshotState
const (
	DiskSnapshotStatePending   DiskSnapshotState = "pending"
	DiskSnapshotStateCompleted DiskSnapshotState = "completed"
	DiskSnapshotStateError     DiskSnapshotState = "error"
	DiskSnapshotStateUnknown   DiskSnapshotState = "unknown"
)

type DiskState string

// Enum values for DiskState
const (
	DiskStatePending   DiskState = "pending"
	DiskStateError     DiskState = "error"
	DiskStateAvailable DiskState = "available"
	DiskStateInuse     DiskState = "in-use"
	DiskStateUnknown   DiskState = "unknown"
)

type DistributionMetricName string

// Enum values for DistributionMetricName
const (
	DistributionMetricNameRequests         DistributionMetricName = "Requests"
	DistributionMetricNameBytesdownloaded  DistributionMetricName = "BytesDownloaded"
	DistributionMetricNameBytesuploaded    DistributionMetricName = "BytesUploaded"
	DistributionMetricNameTotalerrorrate   DistributionMetricName = "TotalErrorRate"
	DistributionMetricNameHttp4xxerrorrate DistributionMetricName = "Http4xxErrorRate"
	DistributionMetricNameHttp5xxerrorrate DistributionMetricName = "Http5xxErrorRate"
)

type ExportSnapshotRecordSourceType string

// Enum values for ExportSnapshotRecordSourceType
const (
	ExportSnapshotRecordSourceTypeInstancesnapshot ExportSnapshotRecordSourceType = "InstanceSnapshot"
	ExportSnapshotRecordSourceTypeDisksnapshot     ExportSnapshotRecordSourceType = "DiskSnapshot"
)

type ForwardValues string

// Enum values for ForwardValues
const (
	ForwardValuesNone      ForwardValues = "none"
	ForwardValuesAllowlist ForwardValues = "allow-list"
	ForwardValuesAll       ForwardValues = "all"
)

type HeaderEnum string

// Enum values for HeaderEnum
const (
	HeaderEnumAccept                    HeaderEnum = "Accept"
	HeaderEnumAcceptcharset             HeaderEnum = "Accept-Charset"
	HeaderEnumAcceptdatetime            HeaderEnum = "Accept-Datetime"
	HeaderEnumAcceptencoding            HeaderEnum = "Accept-Encoding"
	HeaderEnumAcceptlanguage            HeaderEnum = "Accept-Language"
	HeaderEnumAuthorization             HeaderEnum = "Authorization"
	HeaderEnumCloudfrontforwardedproto  HeaderEnum = "CloudFront-Forwarded-Proto"
	HeaderEnumCloudfrontisdesktopviewer HeaderEnum = "CloudFront-Is-Desktop-Viewer"
	HeaderEnumCloudfrontismobileviewer  HeaderEnum = "CloudFront-Is-Mobile-Viewer"
	HeaderEnumCloudfrontissmarttvviewer HeaderEnum = "CloudFront-Is-SmartTV-Viewer"
	HeaderEnumCloudfrontistabletviewer  HeaderEnum = "CloudFront-Is-Tablet-Viewer"
	HeaderEnumCloudfrontviewercountry   HeaderEnum = "CloudFront-Viewer-Country"
	HeaderEnumHost                      HeaderEnum = "Host"
	HeaderEnumOrigin                    HeaderEnum = "Origin"
	HeaderEnumReferer                   HeaderEnum = "Referer"
)

type InstanceAccessProtocol string

// Enum values for InstanceAccessProtocol
const (
	InstanceAccessProtocolSsh InstanceAccessProtocol = "ssh"
	InstanceAccessProtocolRdp InstanceAccessProtocol = "rdp"
)

type InstanceHealthReason string

// Enum values for InstanceHealthReason
const (
	InstanceHealthReasonLbregistrationinprogress         InstanceHealthReason = "Lb.RegistrationInProgress"
	InstanceHealthReasonLbinitialhealthchecking          InstanceHealthReason = "Lb.InitialHealthChecking"
	InstanceHealthReasonLbinternalerror                  InstanceHealthReason = "Lb.InternalError"
	InstanceHealthReasonInstanceresponsecodemismatch     InstanceHealthReason = "Instance.ResponseCodeMismatch"
	InstanceHealthReasonInstancetimeout                  InstanceHealthReason = "Instance.Timeout"
	InstanceHealthReasonInstancefailedhealthchecks       InstanceHealthReason = "Instance.FailedHealthChecks"
	InstanceHealthReasonInstancenotregistered            InstanceHealthReason = "Instance.NotRegistered"
	InstanceHealthReasonInstancenotinuse                 InstanceHealthReason = "Instance.NotInUse"
	InstanceHealthReasonInstancederegistrationinprogress InstanceHealthReason = "Instance.DeregistrationInProgress"
	InstanceHealthReasonInstanceinvalidstate             InstanceHealthReason = "Instance.InvalidState"
	InstanceHealthReasonInstanceipunusable               InstanceHealthReason = "Instance.IpUnusable"
)

type InstanceHealthState string

// Enum values for InstanceHealthState
const (
	InstanceHealthStateInitial     InstanceHealthState = "initial"
	InstanceHealthStateHealthy     InstanceHealthState = "healthy"
	InstanceHealthStateUnhealthy   InstanceHealthState = "unhealthy"
	InstanceHealthStateUnused      InstanceHealthState = "unused"
	InstanceHealthStateDraining    InstanceHealthState = "draining"
	InstanceHealthStateUnavailable InstanceHealthState = "unavailable"
)

type InstanceMetricName string

// Enum values for InstanceMetricName
const (
	InstanceMetricNameCpuutilization             InstanceMetricName = "CPUUtilization"
	InstanceMetricNameNetworkin                  InstanceMetricName = "NetworkIn"
	InstanceMetricNameNetworkout                 InstanceMetricName = "NetworkOut"
	InstanceMetricNameStatuscheckfailed          InstanceMetricName = "StatusCheckFailed"
	InstanceMetricNameStatuscheckfailed_instance InstanceMetricName = "StatusCheckFailed_Instance"
	InstanceMetricNameStatuscheckfailed_system   InstanceMetricName = "StatusCheckFailed_System"
	InstanceMetricNameBurstcapacitytime          InstanceMetricName = "BurstCapacityTime"
	InstanceMetricNameBurstcapacitypercentage    InstanceMetricName = "BurstCapacityPercentage"
)

type InstancePlatform string

// Enum values for InstancePlatform
const (
	InstancePlatformLinuxunix InstancePlatform = "LINUX_UNIX"
	InstancePlatformWindows   InstancePlatform = "WINDOWS"
)

type InstanceSnapshotState string

// Enum values for InstanceSnapshotState
const (
	InstanceSnapshotStatePending   InstanceSnapshotState = "pending"
	InstanceSnapshotStateError     InstanceSnapshotState = "error"
	InstanceSnapshotStateAvailable InstanceSnapshotState = "available"
)

type LoadBalancerAttributeName string

// Enum values for LoadBalancerAttributeName
const (
	LoadBalancerAttributeNameHealthcheckpath                            LoadBalancerAttributeName = "HealthCheckPath"
	LoadBalancerAttributeNameSessionstickinessenabled                   LoadBalancerAttributeName = "SessionStickinessEnabled"
	LoadBalancerAttributeNameSessionstickiness_lb_cookiedurationseconds LoadBalancerAttributeName = "SessionStickiness_LB_CookieDurationSeconds"
)

type LoadBalancerMetricName string

// Enum values for LoadBalancerMetricName
const (
	LoadBalancerMetricNameClienttlsnegotiationerrorcount LoadBalancerMetricName = "ClientTLSNegotiationErrorCount"
	LoadBalancerMetricNameHealthyhostcount               LoadBalancerMetricName = "HealthyHostCount"
	LoadBalancerMetricNameUnhealthyhostcount             LoadBalancerMetricName = "UnhealthyHostCount"
	LoadBalancerMetricNameHttpcode_lb_4xx_count          LoadBalancerMetricName = "HTTPCode_LB_4XX_Count"
	LoadBalancerMetricNameHttpcode_lb_5xx_count          LoadBalancerMetricName = "HTTPCode_LB_5XX_Count"
	LoadBalancerMetricNameHttpcode_instance_2xx_count    LoadBalancerMetricName = "HTTPCode_Instance_2XX_Count"
	LoadBalancerMetricNameHttpcode_instance_3xx_count    LoadBalancerMetricName = "HTTPCode_Instance_3XX_Count"
	LoadBalancerMetricNameHttpcode_instance_4xx_count    LoadBalancerMetricName = "HTTPCode_Instance_4XX_Count"
	LoadBalancerMetricNameHttpcode_instance_5xx_count    LoadBalancerMetricName = "HTTPCode_Instance_5XX_Count"
	LoadBalancerMetricNameInstanceresponsetime           LoadBalancerMetricName = "InstanceResponseTime"
	LoadBalancerMetricNameRejectedconnectioncount        LoadBalancerMetricName = "RejectedConnectionCount"
	LoadBalancerMetricNameRequestcount                   LoadBalancerMetricName = "RequestCount"
)

type LoadBalancerProtocol string

// Enum values for LoadBalancerProtocol
const (
	LoadBalancerProtocolHttp_https LoadBalancerProtocol = "HTTP_HTTPS"
	LoadBalancerProtocolHttp       LoadBalancerProtocol = "HTTP"
)

type LoadBalancerState string

// Enum values for LoadBalancerState
const (
	LoadBalancerStateActive         LoadBalancerState = "active"
	LoadBalancerStateProvisioning   LoadBalancerState = "provisioning"
	LoadBalancerStateActiveimpaired LoadBalancerState = "active_impaired"
	LoadBalancerStateFailed         LoadBalancerState = "failed"
	LoadBalancerStateUnknown        LoadBalancerState = "unknown"
)

type LoadBalancerTlsCertificateDomainStatus string

// Enum values for LoadBalancerTlsCertificateDomainStatus
const (
	LoadBalancerTlsCertificateDomainStatusPendingvalidation LoadBalancerTlsCertificateDomainStatus = "PENDING_VALIDATION"
	LoadBalancerTlsCertificateDomainStatusFailed            LoadBalancerTlsCertificateDomainStatus = "FAILED"
	LoadBalancerTlsCertificateDomainStatusSuccess           LoadBalancerTlsCertificateDomainStatus = "SUCCESS"
)

type LoadBalancerTlsCertificateFailureReason string

// Enum values for LoadBalancerTlsCertificateFailureReason
const (
	LoadBalancerTlsCertificateFailureReasonNoavailablecontacts            LoadBalancerTlsCertificateFailureReason = "NO_AVAILABLE_CONTACTS"
	LoadBalancerTlsCertificateFailureReasonAdditionalverificationrequired LoadBalancerTlsCertificateFailureReason = "ADDITIONAL_VERIFICATION_REQUIRED"
	LoadBalancerTlsCertificateFailureReasonDomainnotallowed               LoadBalancerTlsCertificateFailureReason = "DOMAIN_NOT_ALLOWED"
	LoadBalancerTlsCertificateFailureReasonInvalidpublicdomain            LoadBalancerTlsCertificateFailureReason = "INVALID_PUBLIC_DOMAIN"
	LoadBalancerTlsCertificateFailureReasonOther                          LoadBalancerTlsCertificateFailureReason = "OTHER"
)

type LoadBalancerTlsCertificateRenewalStatus string

// Enum values for LoadBalancerTlsCertificateRenewalStatus
const (
	LoadBalancerTlsCertificateRenewalStatusPendingautorenewal LoadBalancerTlsCertificateRenewalStatus = "PENDING_AUTO_RENEWAL"
	LoadBalancerTlsCertificateRenewalStatusPendingvalidation  LoadBalancerTlsCertificateRenewalStatus = "PENDING_VALIDATION"
	LoadBalancerTlsCertificateRenewalStatusSuccess            LoadBalancerTlsCertificateRenewalStatus = "SUCCESS"
	LoadBalancerTlsCertificateRenewalStatusFailed             LoadBalancerTlsCertificateRenewalStatus = "FAILED"
)

type LoadBalancerTlsCertificateRevocationReason string

// Enum values for LoadBalancerTlsCertificateRevocationReason
const (
	LoadBalancerTlsCertificateRevocationReasonUnspecified          LoadBalancerTlsCertificateRevocationReason = "UNSPECIFIED"
	LoadBalancerTlsCertificateRevocationReasonKeycompromise        LoadBalancerTlsCertificateRevocationReason = "KEY_COMPROMISE"
	LoadBalancerTlsCertificateRevocationReasonCacompromise         LoadBalancerTlsCertificateRevocationReason = "CA_COMPROMISE"
	LoadBalancerTlsCertificateRevocationReasonAffiliationchanged   LoadBalancerTlsCertificateRevocationReason = "AFFILIATION_CHANGED"
	LoadBalancerTlsCertificateRevocationReasonSuperceded           LoadBalancerTlsCertificateRevocationReason = "SUPERCEDED"
	LoadBalancerTlsCertificateRevocationReasonCessationofoperation LoadBalancerTlsCertificateRevocationReason = "CESSATION_OF_OPERATION"
	LoadBalancerTlsCertificateRevocationReasonCertificatehold      LoadBalancerTlsCertificateRevocationReason = "CERTIFICATE_HOLD"
	LoadBalancerTlsCertificateRevocationReasonRemovefromcrl        LoadBalancerTlsCertificateRevocationReason = "REMOVE_FROM_CRL"
	LoadBalancerTlsCertificateRevocationReasonPrivilegewithdrawn   LoadBalancerTlsCertificateRevocationReason = "PRIVILEGE_WITHDRAWN"
	LoadBalancerTlsCertificateRevocationReasonAacompromise         LoadBalancerTlsCertificateRevocationReason = "A_A_COMPROMISE"
)

type LoadBalancerTlsCertificateStatus string

// Enum values for LoadBalancerTlsCertificateStatus
const (
	LoadBalancerTlsCertificateStatusPendingvalidation  LoadBalancerTlsCertificateStatus = "PENDING_VALIDATION"
	LoadBalancerTlsCertificateStatusIssued             LoadBalancerTlsCertificateStatus = "ISSUED"
	LoadBalancerTlsCertificateStatusInactive           LoadBalancerTlsCertificateStatus = "INACTIVE"
	LoadBalancerTlsCertificateStatusExpired            LoadBalancerTlsCertificateStatus = "EXPIRED"
	LoadBalancerTlsCertificateStatusValidationtimedout LoadBalancerTlsCertificateStatus = "VALIDATION_TIMED_OUT"
	LoadBalancerTlsCertificateStatusRevoked            LoadBalancerTlsCertificateStatus = "REVOKED"
	LoadBalancerTlsCertificateStatusFailed             LoadBalancerTlsCertificateStatus = "FAILED"
	LoadBalancerTlsCertificateStatusUnknown            LoadBalancerTlsCertificateStatus = "UNKNOWN"
)

type MetricName string

// Enum values for MetricName
const (
	MetricNameCpuutilization                 MetricName = "CPUUtilization"
	MetricNameNetworkin                      MetricName = "NetworkIn"
	MetricNameNetworkout                     MetricName = "NetworkOut"
	MetricNameStatuscheckfailed              MetricName = "StatusCheckFailed"
	MetricNameStatuscheckfailed_instance     MetricName = "StatusCheckFailed_Instance"
	MetricNameStatuscheckfailed_system       MetricName = "StatusCheckFailed_System"
	MetricNameClienttlsnegotiationerrorcount MetricName = "ClientTLSNegotiationErrorCount"
	MetricNameHealthyhostcount               MetricName = "HealthyHostCount"
	MetricNameUnhealthyhostcount             MetricName = "UnhealthyHostCount"
	MetricNameHttpcode_lb_4xx_count          MetricName = "HTTPCode_LB_4XX_Count"
	MetricNameHttpcode_lb_5xx_count          MetricName = "HTTPCode_LB_5XX_Count"
	MetricNameHttpcode_instance_2xx_count    MetricName = "HTTPCode_Instance_2XX_Count"
	MetricNameHttpcode_instance_3xx_count    MetricName = "HTTPCode_Instance_3XX_Count"
	MetricNameHttpcode_instance_4xx_count    MetricName = "HTTPCode_Instance_4XX_Count"
	MetricNameHttpcode_instance_5xx_count    MetricName = "HTTPCode_Instance_5XX_Count"
	MetricNameInstanceresponsetime           MetricName = "InstanceResponseTime"
	MetricNameRejectedconnectioncount        MetricName = "RejectedConnectionCount"
	MetricNameRequestcount                   MetricName = "RequestCount"
	MetricNameDatabaseconnections            MetricName = "DatabaseConnections"
	MetricNameDiskqueuedepth                 MetricName = "DiskQueueDepth"
	MetricNameFreestoragespace               MetricName = "FreeStorageSpace"
	MetricNameNetworkreceivethroughput       MetricName = "NetworkReceiveThroughput"
	MetricNameNetworktransmitthroughput      MetricName = "NetworkTransmitThroughput"
	MetricNameBurstcapacitytime              MetricName = "BurstCapacityTime"
	MetricNameBurstcapacitypercentage        MetricName = "BurstCapacityPercentage"
)

type MetricStatistic string

// Enum values for MetricStatistic
const (
	MetricStatisticMinimum     MetricStatistic = "Minimum"
	MetricStatisticMaximum     MetricStatistic = "Maximum"
	MetricStatisticSum         MetricStatistic = "Sum"
	MetricStatisticAverage     MetricStatistic = "Average"
	MetricStatisticSamplecount MetricStatistic = "SampleCount"
)

type MetricUnit string

// Enum values for MetricUnit
const (
	MetricUnitSeconds         MetricUnit = "Seconds"
	MetricUnitMicroseconds    MetricUnit = "Microseconds"
	MetricUnitMilliseconds    MetricUnit = "Milliseconds"
	MetricUnitBytes           MetricUnit = "Bytes"
	MetricUnitKilobytes       MetricUnit = "Kilobytes"
	MetricUnitMegabytes       MetricUnit = "Megabytes"
	MetricUnitGigabytes       MetricUnit = "Gigabytes"
	MetricUnitTerabytes       MetricUnit = "Terabytes"
	MetricUnitBits            MetricUnit = "Bits"
	MetricUnitKilobits        MetricUnit = "Kilobits"
	MetricUnitMegabits        MetricUnit = "Megabits"
	MetricUnitGigabits        MetricUnit = "Gigabits"
	MetricUnitTerabits        MetricUnit = "Terabits"
	MetricUnitPercent         MetricUnit = "Percent"
	MetricUnitCount           MetricUnit = "Count"
	MetricUnitBytessecond     MetricUnit = "Bytes/Second"
	MetricUnitKilobytessecond MetricUnit = "Kilobytes/Second"
	MetricUnitMegabytessecond MetricUnit = "Megabytes/Second"
	MetricUnitGigabytessecond MetricUnit = "Gigabytes/Second"
	MetricUnitTerabytessecond MetricUnit = "Terabytes/Second"
	MetricUnitBitssecond      MetricUnit = "Bits/Second"
	MetricUnitKilobitssecond  MetricUnit = "Kilobits/Second"
	MetricUnitMegabitssecond  MetricUnit = "Megabits/Second"
	MetricUnitGigabitssecond  MetricUnit = "Gigabits/Second"
	MetricUnitTerabitssecond  MetricUnit = "Terabits/Second"
	MetricUnitCountsecond     MetricUnit = "Count/Second"
	MetricUnitNone            MetricUnit = "None"
)

type NetworkProtocol string

// Enum values for NetworkProtocol
const (
	NetworkProtocolTcp  NetworkProtocol = "tcp"
	NetworkProtocolAll  NetworkProtocol = "all"
	NetworkProtocolUdp  NetworkProtocol = "udp"
	NetworkProtocolIcmp NetworkProtocol = "icmp"
)

type OperationStatus string

// Enum values for OperationStatus
const (
	OperationStatusNotstarted OperationStatus = "NotStarted"
	OperationStatusStarted    OperationStatus = "Started"
	OperationStatusFailed     OperationStatus = "Failed"
	OperationStatusCompleted  OperationStatus = "Completed"
	OperationStatusSucceeded  OperationStatus = "Succeeded"
)

type OperationType string

// Enum values for OperationType
const (
	OperationTypeDeleteknownhostkeys                  OperationType = "DeleteKnownHostKeys"
	OperationTypeDeleteinstance                       OperationType = "DeleteInstance"
	OperationTypeCreateinstance                       OperationType = "CreateInstance"
	OperationTypeStopinstance                         OperationType = "StopInstance"
	OperationTypeStartinstance                        OperationType = "StartInstance"
	OperationTypeRebootinstance                       OperationType = "RebootInstance"
	OperationTypeOpeninstancepublicports              OperationType = "OpenInstancePublicPorts"
	OperationTypePutinstancepublicports               OperationType = "PutInstancePublicPorts"
	OperationTypeCloseinstancepublicports             OperationType = "CloseInstancePublicPorts"
	OperationTypeAllocatestaticip                     OperationType = "AllocateStaticIp"
	OperationTypeReleasestaticip                      OperationType = "ReleaseStaticIp"
	OperationTypeAttachstaticip                       OperationType = "AttachStaticIp"
	OperationTypeDetachstaticip                       OperationType = "DetachStaticIp"
	OperationTypeUpdatedomainentry                    OperationType = "UpdateDomainEntry"
	OperationTypeDeletedomainentry                    OperationType = "DeleteDomainEntry"
	OperationTypeCreatedomain                         OperationType = "CreateDomain"
	OperationTypeDeletedomain                         OperationType = "DeleteDomain"
	OperationTypeCreateinstancesnapshot               OperationType = "CreateInstanceSnapshot"
	OperationTypeDeleteinstancesnapshot               OperationType = "DeleteInstanceSnapshot"
	OperationTypeCreateinstancesfromsnapshot          OperationType = "CreateInstancesFromSnapshot"
	OperationTypeCreateloadbalancer                   OperationType = "CreateLoadBalancer"
	OperationTypeDeleteloadbalancer                   OperationType = "DeleteLoadBalancer"
	OperationTypeAttachinstancestoloadbalancer        OperationType = "AttachInstancesToLoadBalancer"
	OperationTypeDetachinstancesfromloadbalancer      OperationType = "DetachInstancesFromLoadBalancer"
	OperationTypeUpdateloadbalancerattribute          OperationType = "UpdateLoadBalancerAttribute"
	OperationTypeCreateloadbalancertlscertificate     OperationType = "CreateLoadBalancerTlsCertificate"
	OperationTypeDeleteloadbalancertlscertificate     OperationType = "DeleteLoadBalancerTlsCertificate"
	OperationTypeAttachloadbalancertlscertificate     OperationType = "AttachLoadBalancerTlsCertificate"
	OperationTypeCreatedisk                           OperationType = "CreateDisk"
	OperationTypeDeletedisk                           OperationType = "DeleteDisk"
	OperationTypeAttachdisk                           OperationType = "AttachDisk"
	OperationTypeDetachdisk                           OperationType = "DetachDisk"
	OperationTypeCreatedisksnapshot                   OperationType = "CreateDiskSnapshot"
	OperationTypeDeletedisksnapshot                   OperationType = "DeleteDiskSnapshot"
	OperationTypeCreatediskfromsnapshot               OperationType = "CreateDiskFromSnapshot"
	OperationTypeCreaterelationaldatabase             OperationType = "CreateRelationalDatabase"
	OperationTypeUpdaterelationaldatabase             OperationType = "UpdateRelationalDatabase"
	OperationTypeDeleterelationaldatabase             OperationType = "DeleteRelationalDatabase"
	OperationTypeCreaterelationaldatabasefromsnapshot OperationType = "CreateRelationalDatabaseFromSnapshot"
	OperationTypeCreaterelationaldatabasesnapshot     OperationType = "CreateRelationalDatabaseSnapshot"
	OperationTypeDeleterelationaldatabasesnapshot     OperationType = "DeleteRelationalDatabaseSnapshot"
	OperationTypeUpdaterelationaldatabaseparameters   OperationType = "UpdateRelationalDatabaseParameters"
	OperationTypeStartrelationaldatabase              OperationType = "StartRelationalDatabase"
	OperationTypeRebootrelationaldatabase             OperationType = "RebootRelationalDatabase"
	OperationTypeStoprelationaldatabase               OperationType = "StopRelationalDatabase"
	OperationTypeEnableaddon                          OperationType = "EnableAddOn"
	OperationTypeDisableaddon                         OperationType = "DisableAddOn"
	OperationTypePutalarm                             OperationType = "PutAlarm"
	OperationTypeGetalarms                            OperationType = "GetAlarms"
	OperationTypeDeletealarm                          OperationType = "DeleteAlarm"
	OperationTypeTestalarm                            OperationType = "TestAlarm"
	OperationTypeCreatecontactmethod                  OperationType = "CreateContactMethod"
	OperationTypeGetcontactmethods                    OperationType = "GetContactMethods"
	OperationTypeSendcontactmethodverification        OperationType = "SendContactMethodVerification"
	OperationTypeDeletecontactmethod                  OperationType = "DeleteContactMethod"
	OperationTypeCreatedistribution                   OperationType = "CreateDistribution"
	OperationTypeUpdatedistribution                   OperationType = "UpdateDistribution"
	OperationTypeDeletedistribution                   OperationType = "DeleteDistribution"
	OperationTypeResetdistributioncache               OperationType = "ResetDistributionCache"
	OperationTypeAttachcertificatetodistribution      OperationType = "AttachCertificateToDistribution"
	OperationTypeDetachcertificatefromdistribution    OperationType = "DetachCertificateFromDistribution"
	OperationTypeUpdatedistributionbundle             OperationType = "UpdateDistributionBundle"
	OperationTypeCreatecertificate                    OperationType = "CreateCertificate"
	OperationTypeDeletecertificate                    OperationType = "DeleteCertificate"
)

type OriginProtocolPolicyEnum string

// Enum values for OriginProtocolPolicyEnum
const (
	OriginProtocolPolicyEnumHttponly  OriginProtocolPolicyEnum = "http-only"
	OriginProtocolPolicyEnumHttpsonly OriginProtocolPolicyEnum = "https-only"
)

type PortAccessType string

// Enum values for PortAccessType
const (
	PortAccessTypePublic  PortAccessType = "Public"
	PortAccessTypePrivate PortAccessType = "Private"
)

type PortInfoSourceType string

// Enum values for PortInfoSourceType
const (
	PortInfoSourceTypeDefault  PortInfoSourceType = "DEFAULT"
	PortInfoSourceTypeInstance PortInfoSourceType = "INSTANCE"
	PortInfoSourceTypeNone     PortInfoSourceType = "NONE"
	PortInfoSourceTypeClosed   PortInfoSourceType = "CLOSED"
)

type PortState string

// Enum values for PortState
const (
	PortStateOpen   PortState = "open"
	PortStateClosed PortState = "closed"
)

type RecordState string

// Enum values for RecordState
const (
	RecordStateStarted   RecordState = "Started"
	RecordStateSucceeded RecordState = "Succeeded"
	RecordStateFailed    RecordState = "Failed"
)

type RegionName string

// Enum values for RegionName
const (
	RegionNameUs_east_1      RegionName = "us-east-1"
	RegionNameUs_east_2      RegionName = "us-east-2"
	RegionNameUs_west_1      RegionName = "us-west-1"
	RegionNameUs_west_2      RegionName = "us-west-2"
	RegionNameEu_west_1      RegionName = "eu-west-1"
	RegionNameEu_west_2      RegionName = "eu-west-2"
	RegionNameEu_west_3      RegionName = "eu-west-3"
	RegionNameEu_central_1   RegionName = "eu-central-1"
	RegionNameCa_central_1   RegionName = "ca-central-1"
	RegionNameAp_south_1     RegionName = "ap-south-1"
	RegionNameAp_southeast_1 RegionName = "ap-southeast-1"
	RegionNameAp_southeast_2 RegionName = "ap-southeast-2"
	RegionNameAp_northeast_1 RegionName = "ap-northeast-1"
	RegionNameAp_northeast_2 RegionName = "ap-northeast-2"
)

type RelationalDatabaseEngine string

// Enum values for RelationalDatabaseEngine
const (
	RelationalDatabaseEngineMysql RelationalDatabaseEngine = "mysql"
)

type RelationalDatabaseMetricName string

// Enum values for RelationalDatabaseMetricName
const (
	RelationalDatabaseMetricNameCpuutilization            RelationalDatabaseMetricName = "CPUUtilization"
	RelationalDatabaseMetricNameDatabaseconnections       RelationalDatabaseMetricName = "DatabaseConnections"
	RelationalDatabaseMetricNameDiskqueuedepth            RelationalDatabaseMetricName = "DiskQueueDepth"
	RelationalDatabaseMetricNameFreestoragespace          RelationalDatabaseMetricName = "FreeStorageSpace"
	RelationalDatabaseMetricNameNetworkreceivethroughput  RelationalDatabaseMetricName = "NetworkReceiveThroughput"
	RelationalDatabaseMetricNameNetworktransmitthroughput RelationalDatabaseMetricName = "NetworkTransmitThroughput"
)

type RelationalDatabasePasswordVersion string

// Enum values for RelationalDatabasePasswordVersion
const (
	RelationalDatabasePasswordVersionCurrent  RelationalDatabasePasswordVersion = "CURRENT"
	RelationalDatabasePasswordVersionPrevious RelationalDatabasePasswordVersion = "PREVIOUS"
	RelationalDatabasePasswordVersionPending  RelationalDatabasePasswordVersion = "PENDING"
)

type RenewalStatus string

// Enum values for RenewalStatus
const (
	RenewalStatusPendingautorenewal RenewalStatus = "PendingAutoRenewal"
	RenewalStatusPendingvalidation  RenewalStatus = "PendingValidation"
	RenewalStatusSuccess            RenewalStatus = "Success"
	RenewalStatusFailed             RenewalStatus = "Failed"
)

type ResourceType string

// Enum values for ResourceType
const (
	ResourceTypeInstance                   ResourceType = "Instance"
	ResourceTypeStaticip                   ResourceType = "StaticIp"
	ResourceTypeKeypair                    ResourceType = "KeyPair"
	ResourceTypeInstancesnapshot           ResourceType = "InstanceSnapshot"
	ResourceTypeDomain                     ResourceType = "Domain"
	ResourceTypePeeredvpc                  ResourceType = "PeeredVpc"
	ResourceTypeLoadbalancer               ResourceType = "LoadBalancer"
	ResourceTypeLoadbalancertlscertificate ResourceType = "LoadBalancerTlsCertificate"
	ResourceTypeDisk                       ResourceType = "Disk"
	ResourceTypeDisksnapshot               ResourceType = "DiskSnapshot"
	ResourceTypeRelationaldatabase         ResourceType = "RelationalDatabase"
	ResourceTypeRelationaldatabasesnapshot ResourceType = "RelationalDatabaseSnapshot"
	ResourceTypeExportsnapshotrecord       ResourceType = "ExportSnapshotRecord"
	ResourceTypeCloudformationstackrecord  ResourceType = "CloudFormationStackRecord"
	ResourceTypeAlarm                      ResourceType = "Alarm"
	ResourceTypeContactmethod              ResourceType = "ContactMethod"
	ResourceTypeDistribution               ResourceType = "Distribution"
	ResourceTypeCertificate                ResourceType = "Certificate"
)

type TreatMissingData string

// Enum values for TreatMissingData
const (
	TreatMissingDataBreaching    TreatMissingData = "breaching"
	TreatMissingDataNotbreaching TreatMissingData = "notBreaching"
	TreatMissingDataIgnore       TreatMissingData = "ignore"
	TreatMissingDataMissing      TreatMissingData = "missing"
)
