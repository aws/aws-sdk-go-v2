// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package lightsail

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/lightsail/types"
)

const opUpdateRelationalDatabase = "UpdateRelationalDatabase"

// UpdateRelationalDatabaseRequest returns a request value for making API operation for
// Amazon Lightsail.
//
// Allows the update of one or more attributes of a database in Amazon Lightsail.
//
// Updates are applied immediately, or in cases where the updates could result
// in an outage, are applied during the database's predefined maintenance window.
//
// The update relational database operation supports tag-based access control
// via resource tags applied to the resource identified by relationalDatabaseName.
// For more information, see the Lightsail Dev Guide (https://lightsail.aws.amazon.com/ls/docs/en/articles/amazon-lightsail-controlling-access-using-tags).
//
//    // Example sending a request using UpdateRelationalDatabaseRequest.
//    req := client.UpdateRelationalDatabaseRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/lightsail-2016-11-28/UpdateRelationalDatabase
func (c *Client) UpdateRelationalDatabaseRequest(input *types.UpdateRelationalDatabaseInput) UpdateRelationalDatabaseRequest {
	op := &aws.Operation{
		Name:       opUpdateRelationalDatabase,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &types.UpdateRelationalDatabaseInput{}
	}

	req := c.newRequest(op, input, &types.UpdateRelationalDatabaseOutput{})
	return UpdateRelationalDatabaseRequest{Request: req, Input: input, Copy: c.UpdateRelationalDatabaseRequest}
}

// UpdateRelationalDatabaseRequest is the request type for the
// UpdateRelationalDatabase API operation.
type UpdateRelationalDatabaseRequest struct {
	*aws.Request
	Input *types.UpdateRelationalDatabaseInput
	Copy  func(*types.UpdateRelationalDatabaseInput) UpdateRelationalDatabaseRequest
}

// Send marshals and sends the UpdateRelationalDatabase API request.
func (r UpdateRelationalDatabaseRequest) Send(ctx context.Context) (*UpdateRelationalDatabaseResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &UpdateRelationalDatabaseResponse{
		UpdateRelationalDatabaseOutput: r.Request.Data.(*types.UpdateRelationalDatabaseOutput),
		response:                       &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// UpdateRelationalDatabaseResponse is the response type for the
// UpdateRelationalDatabase API operation.
type UpdateRelationalDatabaseResponse struct {
	*types.UpdateRelationalDatabaseOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// UpdateRelationalDatabase request.
func (r *UpdateRelationalDatabaseResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
