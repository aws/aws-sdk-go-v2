// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package lightsail

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/lightsail/types"
)

const opDeleteRelationalDatabaseSnapshot = "DeleteRelationalDatabaseSnapshot"

// DeleteRelationalDatabaseSnapshotRequest returns a request value for making API operation for
// Amazon Lightsail.
//
// Deletes a database snapshot in Amazon Lightsail.
//
// The delete relational database snapshot operation supports tag-based access
// control via resource tags applied to the resource identified by relationalDatabaseName.
// For more information, see the Lightsail Dev Guide (https://lightsail.aws.amazon.com/ls/docs/en/articles/amazon-lightsail-controlling-access-using-tags).
//
//    // Example sending a request using DeleteRelationalDatabaseSnapshotRequest.
//    req := client.DeleteRelationalDatabaseSnapshotRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/lightsail-2016-11-28/DeleteRelationalDatabaseSnapshot
func (c *Client) DeleteRelationalDatabaseSnapshotRequest(input *types.DeleteRelationalDatabaseSnapshotInput) DeleteRelationalDatabaseSnapshotRequest {
	op := &aws.Operation{
		Name:       opDeleteRelationalDatabaseSnapshot,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &types.DeleteRelationalDatabaseSnapshotInput{}
	}

	req := c.newRequest(op, input, &types.DeleteRelationalDatabaseSnapshotOutput{})
	return DeleteRelationalDatabaseSnapshotRequest{Request: req, Input: input, Copy: c.DeleteRelationalDatabaseSnapshotRequest}
}

// DeleteRelationalDatabaseSnapshotRequest is the request type for the
// DeleteRelationalDatabaseSnapshot API operation.
type DeleteRelationalDatabaseSnapshotRequest struct {
	*aws.Request
	Input *types.DeleteRelationalDatabaseSnapshotInput
	Copy  func(*types.DeleteRelationalDatabaseSnapshotInput) DeleteRelationalDatabaseSnapshotRequest
}

// Send marshals and sends the DeleteRelationalDatabaseSnapshot API request.
func (r DeleteRelationalDatabaseSnapshotRequest) Send(ctx context.Context) (*DeleteRelationalDatabaseSnapshotResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &DeleteRelationalDatabaseSnapshotResponse{
		DeleteRelationalDatabaseSnapshotOutput: r.Request.Data.(*types.DeleteRelationalDatabaseSnapshotOutput),
		response:                               &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// DeleteRelationalDatabaseSnapshotResponse is the response type for the
// DeleteRelationalDatabaseSnapshot API operation.
type DeleteRelationalDatabaseSnapshotResponse struct {
	*types.DeleteRelationalDatabaseSnapshotOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// DeleteRelationalDatabaseSnapshot request.
func (r *DeleteRelationalDatabaseSnapshotResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
