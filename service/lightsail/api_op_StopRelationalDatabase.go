// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package lightsail

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/lightsail/types"
)

const opStopRelationalDatabase = "StopRelationalDatabase"

// StopRelationalDatabaseRequest returns a request value for making API operation for
// Amazon Lightsail.
//
// Stops a specific database that is currently running in Amazon Lightsail.
//
// The stop relational database operation supports tag-based access control
// via resource tags applied to the resource identified by relationalDatabaseName.
// For more information, see the Lightsail Dev Guide (https://lightsail.aws.amazon.com/ls/docs/en/articles/amazon-lightsail-controlling-access-using-tags).
//
//    // Example sending a request using StopRelationalDatabaseRequest.
//    req := client.StopRelationalDatabaseRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/lightsail-2016-11-28/StopRelationalDatabase
func (c *Client) StopRelationalDatabaseRequest(input *types.StopRelationalDatabaseInput) StopRelationalDatabaseRequest {
	op := &aws.Operation{
		Name:       opStopRelationalDatabase,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &types.StopRelationalDatabaseInput{}
	}

	req := c.newRequest(op, input, &types.StopRelationalDatabaseOutput{})
	return StopRelationalDatabaseRequest{Request: req, Input: input, Copy: c.StopRelationalDatabaseRequest}
}

// StopRelationalDatabaseRequest is the request type for the
// StopRelationalDatabase API operation.
type StopRelationalDatabaseRequest struct {
	*aws.Request
	Input *types.StopRelationalDatabaseInput
	Copy  func(*types.StopRelationalDatabaseInput) StopRelationalDatabaseRequest
}

// Send marshals and sends the StopRelationalDatabase API request.
func (r StopRelationalDatabaseRequest) Send(ctx context.Context) (*StopRelationalDatabaseResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &StopRelationalDatabaseResponse{
		StopRelationalDatabaseOutput: r.Request.Data.(*types.StopRelationalDatabaseOutput),
		response:                     &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// StopRelationalDatabaseResponse is the response type for the
// StopRelationalDatabase API operation.
type StopRelationalDatabaseResponse struct {
	*types.StopRelationalDatabaseOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// StopRelationalDatabase request.
func (r *StopRelationalDatabaseResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
