// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package lightsail

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/lightsail/types"
)

const opGetRelationalDatabaseMasterUserPassword = "GetRelationalDatabaseMasterUserPassword"

// GetRelationalDatabaseMasterUserPasswordRequest returns a request value for making API operation for
// Amazon Lightsail.
//
// Returns the current, previous, or pending versions of the master user password
// for a Lightsail database.
//
// The GetRelationalDatabaseMasterUserPassword operation supports tag-based
// access control via resource tags applied to the resource identified by relationalDatabaseName.
//
//    // Example sending a request using GetRelationalDatabaseMasterUserPasswordRequest.
//    req := client.GetRelationalDatabaseMasterUserPasswordRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/lightsail-2016-11-28/GetRelationalDatabaseMasterUserPassword
func (c *Client) GetRelationalDatabaseMasterUserPasswordRequest(input *types.GetRelationalDatabaseMasterUserPasswordInput) GetRelationalDatabaseMasterUserPasswordRequest {
	op := &aws.Operation{
		Name:       opGetRelationalDatabaseMasterUserPassword,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &types.GetRelationalDatabaseMasterUserPasswordInput{}
	}

	req := c.newRequest(op, input, &types.GetRelationalDatabaseMasterUserPasswordOutput{})
	return GetRelationalDatabaseMasterUserPasswordRequest{Request: req, Input: input, Copy: c.GetRelationalDatabaseMasterUserPasswordRequest}
}

// GetRelationalDatabaseMasterUserPasswordRequest is the request type for the
// GetRelationalDatabaseMasterUserPassword API operation.
type GetRelationalDatabaseMasterUserPasswordRequest struct {
	*aws.Request
	Input *types.GetRelationalDatabaseMasterUserPasswordInput
	Copy  func(*types.GetRelationalDatabaseMasterUserPasswordInput) GetRelationalDatabaseMasterUserPasswordRequest
}

// Send marshals and sends the GetRelationalDatabaseMasterUserPassword API request.
func (r GetRelationalDatabaseMasterUserPasswordRequest) Send(ctx context.Context) (*GetRelationalDatabaseMasterUserPasswordResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &GetRelationalDatabaseMasterUserPasswordResponse{
		GetRelationalDatabaseMasterUserPasswordOutput: r.Request.Data.(*types.GetRelationalDatabaseMasterUserPasswordOutput),
		response: &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// GetRelationalDatabaseMasterUserPasswordResponse is the response type for the
// GetRelationalDatabaseMasterUserPassword API operation.
type GetRelationalDatabaseMasterUserPasswordResponse struct {
	*types.GetRelationalDatabaseMasterUserPasswordOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// GetRelationalDatabaseMasterUserPassword request.
func (r *GetRelationalDatabaseMasterUserPasswordResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
