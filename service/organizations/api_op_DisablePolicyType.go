// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package organizations

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/organizations/types"
)

const opDisablePolicyType = "DisablePolicyType"

// DisablePolicyTypeRequest returns a request value for making API operation for
// AWS Organizations.
//
// Disables an organizational control policy type in a root. A policy of a certain
// type can be attached to entities in a root only if that type is enabled in
// the root. After you perform this operation, you no longer can attach policies
// of the specified type to that root or to any organizational unit (OU) or
// account in that root. You can undo this by using the EnablePolicyType operation.
//
// This is an asynchronous request that AWS performs in the background. If you
// disable a policy for a root, it still appears enabled for the organization
// if all features (https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_org_support-all-features.html)
// are enabled for the organization. AWS recommends that you first use ListRoots
// to see the status of policy types for a specified root, and then use this
// operation.
//
// This operation can be called only from the organization's master account.
//
// To view the status of available policy types in the organization, use DescribeOrganization.
//
//    // Example sending a request using DisablePolicyTypeRequest.
//    req := client.DisablePolicyTypeRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/organizations-2016-11-28/DisablePolicyType
func (c *Client) DisablePolicyTypeRequest(input *types.DisablePolicyTypeInput) DisablePolicyTypeRequest {
	op := &aws.Operation{
		Name:       opDisablePolicyType,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &types.DisablePolicyTypeInput{}
	}

	req := c.newRequest(op, input, &types.DisablePolicyTypeOutput{})
	return DisablePolicyTypeRequest{Request: req, Input: input, Copy: c.DisablePolicyTypeRequest}
}

// DisablePolicyTypeRequest is the request type for the
// DisablePolicyType API operation.
type DisablePolicyTypeRequest struct {
	*aws.Request
	Input *types.DisablePolicyTypeInput
	Copy  func(*types.DisablePolicyTypeInput) DisablePolicyTypeRequest
}

// Send marshals and sends the DisablePolicyType API request.
func (r DisablePolicyTypeRequest) Send(ctx context.Context) (*DisablePolicyTypeResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &DisablePolicyTypeResponse{
		DisablePolicyTypeOutput: r.Request.Data.(*types.DisablePolicyTypeOutput),
		response:                &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// DisablePolicyTypeResponse is the response type for the
// DisablePolicyType API operation.
type DisablePolicyTypeResponse struct {
	*types.DisablePolicyTypeOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// DisablePolicyType request.
func (r *DisablePolicyTypeResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
