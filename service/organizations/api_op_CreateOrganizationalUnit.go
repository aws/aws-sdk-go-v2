// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package organizations

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/organizations/types"
)

const opCreateOrganizationalUnit = "CreateOrganizationalUnit"

// CreateOrganizationalUnitRequest returns a request value for making API operation for
// AWS Organizations.
//
// Creates an organizational unit (OU) within a root or parent OU. An OU is
// a container for accounts that enables you to organize your accounts to apply
// policies according to your business requirements. The number of levels deep
// that you can nest OUs is dependent upon the policy types enabled for that
// root. For service control policies, the limit is five.
//
// For more information about OUs, see Managing Organizational Units (https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_ous.html)
// in the AWS Organizations User Guide.
//
// This operation can be called only from the organization's master account.
//
//    // Example sending a request using CreateOrganizationalUnitRequest.
//    req := client.CreateOrganizationalUnitRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/organizations-2016-11-28/CreateOrganizationalUnit
func (c *Client) CreateOrganizationalUnitRequest(input *types.CreateOrganizationalUnitInput) CreateOrganizationalUnitRequest {
	op := &aws.Operation{
		Name:       opCreateOrganizationalUnit,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &types.CreateOrganizationalUnitInput{}
	}

	req := c.newRequest(op, input, &types.CreateOrganizationalUnitOutput{})
	return CreateOrganizationalUnitRequest{Request: req, Input: input, Copy: c.CreateOrganizationalUnitRequest}
}

// CreateOrganizationalUnitRequest is the request type for the
// CreateOrganizationalUnit API operation.
type CreateOrganizationalUnitRequest struct {
	*aws.Request
	Input *types.CreateOrganizationalUnitInput
	Copy  func(*types.CreateOrganizationalUnitInput) CreateOrganizationalUnitRequest
}

// Send marshals and sends the CreateOrganizationalUnit API request.
func (r CreateOrganizationalUnitRequest) Send(ctx context.Context) (*CreateOrganizationalUnitResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &CreateOrganizationalUnitResponse{
		CreateOrganizationalUnitOutput: r.Request.Data.(*types.CreateOrganizationalUnitOutput),
		response:                       &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// CreateOrganizationalUnitResponse is the response type for the
// CreateOrganizationalUnit API operation.
type CreateOrganizationalUnitResponse struct {
	*types.CreateOrganizationalUnitOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// CreateOrganizationalUnit request.
func (r *CreateOrganizationalUnitResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
