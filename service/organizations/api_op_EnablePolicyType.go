// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package organizations

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/organizations/types"
)

const opEnablePolicyType = "EnablePolicyType"

// EnablePolicyTypeRequest returns a request value for making API operation for
// AWS Organizations.
//
// Enables a policy type in a root. After you enable a policy type in a root,
// you can attach policies of that type to the root, any organizational unit
// (OU), or account in that root. You can undo this by using the DisablePolicyType
// operation.
//
// This is an asynchronous request that AWS performs in the background. AWS
// recommends that you first use ListRoots to see the status of policy types
// for a specified root, and then use this operation.
//
// This operation can be called only from the organization's master account.
//
// You can enable a policy type in a root only if that policy type is available
// in the organization. To view the status of available policy types in the
// organization, use DescribeOrganization.
//
//    // Example sending a request using EnablePolicyTypeRequest.
//    req := client.EnablePolicyTypeRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/organizations-2016-11-28/EnablePolicyType
func (c *Client) EnablePolicyTypeRequest(input *types.EnablePolicyTypeInput) EnablePolicyTypeRequest {
	op := &aws.Operation{
		Name:       opEnablePolicyType,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &types.EnablePolicyTypeInput{}
	}

	req := c.newRequest(op, input, &types.EnablePolicyTypeOutput{})
	return EnablePolicyTypeRequest{Request: req, Input: input, Copy: c.EnablePolicyTypeRequest}
}

// EnablePolicyTypeRequest is the request type for the
// EnablePolicyType API operation.
type EnablePolicyTypeRequest struct {
	*aws.Request
	Input *types.EnablePolicyTypeInput
	Copy  func(*types.EnablePolicyTypeInput) EnablePolicyTypeRequest
}

// Send marshals and sends the EnablePolicyType API request.
func (r EnablePolicyTypeRequest) Send(ctx context.Context) (*EnablePolicyTypeResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &EnablePolicyTypeResponse{
		EnablePolicyTypeOutput: r.Request.Data.(*types.EnablePolicyTypeOutput),
		response:               &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// EnablePolicyTypeResponse is the response type for the
// EnablePolicyType API operation.
type EnablePolicyTypeResponse struct {
	*types.EnablePolicyTypeOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// EnablePolicyType request.
func (r *EnablePolicyTypeResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
