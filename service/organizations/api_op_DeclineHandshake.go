// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package organizations

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/organizations/types"
)

const opDeclineHandshake = "DeclineHandshake"

// DeclineHandshakeRequest returns a request value for making API operation for
// AWS Organizations.
//
// Declines a handshake request. This sets the handshake state to DECLINED and
// effectively deactivates the request.
//
// This operation can be called only from the account that received the handshake.
// The originator of the handshake can use CancelHandshake instead. The originator
// can't reactivate a declined request, but can reinitiate the process with
// a new handshake request.
//
// After you decline a handshake, it continues to appear in the results of relevant
// APIs for only 30 days. After that, it's deleted.
//
//    // Example sending a request using DeclineHandshakeRequest.
//    req := client.DeclineHandshakeRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/organizations-2016-11-28/DeclineHandshake
func (c *Client) DeclineHandshakeRequest(input *types.DeclineHandshakeInput) DeclineHandshakeRequest {
	op := &aws.Operation{
		Name:       opDeclineHandshake,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &types.DeclineHandshakeInput{}
	}

	req := c.newRequest(op, input, &types.DeclineHandshakeOutput{})
	return DeclineHandshakeRequest{Request: req, Input: input, Copy: c.DeclineHandshakeRequest}
}

// DeclineHandshakeRequest is the request type for the
// DeclineHandshake API operation.
type DeclineHandshakeRequest struct {
	*aws.Request
	Input *types.DeclineHandshakeInput
	Copy  func(*types.DeclineHandshakeInput) DeclineHandshakeRequest
}

// Send marshals and sends the DeclineHandshake API request.
func (r DeclineHandshakeRequest) Send(ctx context.Context) (*DeclineHandshakeResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &DeclineHandshakeResponse{
		DeclineHandshakeOutput: r.Request.Data.(*types.DeclineHandshakeOutput),
		response:               &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// DeclineHandshakeResponse is the response type for the
// DeclineHandshake API operation.
type DeclineHandshakeResponse struct {
	*types.DeclineHandshakeOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// DeclineHandshake request.
func (r *DeclineHandshakeResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
