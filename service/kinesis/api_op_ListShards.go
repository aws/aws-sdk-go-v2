// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package kinesis

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/kinesis/types"
)

const opListShards = "ListShards"

// ListShardsRequest returns a request value for making API operation for
// Amazon Kinesis.
//
// Lists the shards in a stream and provides information about each shard. This
// operation has a limit of 100 transactions per second per data stream.
//
// This API is a new operation that is used by the Amazon Kinesis Client Library
// (KCL). If you have a fine-grained IAM policy that only allows specific operations,
// you must update your policy to allow calls to this API. For more information,
// see Controlling Access to Amazon Kinesis Data Streams Resources Using IAM
// (https://docs.aws.amazon.com/streams/latest/dev/controlling-access.html).
//
//    // Example sending a request using ListShardsRequest.
//    req := client.ListShardsRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/kinesis-2013-12-02/ListShards
func (c *Client) ListShardsRequest(input *types.ListShardsInput) ListShardsRequest {
	op := &aws.Operation{
		Name:       opListShards,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &types.ListShardsInput{}
	}

	req := c.newRequest(op, input, &types.ListShardsOutput{})
	return ListShardsRequest{Request: req, Input: input, Copy: c.ListShardsRequest}
}

// ListShardsRequest is the request type for the
// ListShards API operation.
type ListShardsRequest struct {
	*aws.Request
	Input *types.ListShardsInput
	Copy  func(*types.ListShardsInput) ListShardsRequest
}

// Send marshals and sends the ListShards API request.
func (r ListShardsRequest) Send(ctx context.Context) (*ListShardsResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &ListShardsResponse{
		ListShardsOutput: r.Request.Data.(*types.ListShardsOutput),
		response:         &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// ListShardsResponse is the response type for the
// ListShards API operation.
type ListShardsResponse struct {
	*types.ListShardsOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// ListShards request.
func (r *ListShardsResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
