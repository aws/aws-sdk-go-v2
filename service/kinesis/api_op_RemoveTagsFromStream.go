// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package kinesis

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/private/protocol"
	"github.com/aws/aws-sdk-go-v2/private/protocol/jsonrpc"
	"github.com/aws/aws-sdk-go-v2/service/kinesis/types"
)

const opRemoveTagsFromStream = "RemoveTagsFromStream"

// RemoveTagsFromStreamRequest returns a request value for making API operation for
// Amazon Kinesis.
//
// Removes tags from the specified Kinesis data stream. Removed tags are deleted
// and cannot be recovered after this operation successfully completes.
//
// If you specify a tag that does not exist, it is ignored.
//
// RemoveTagsFromStream has a limit of five transactions per second per account.
//
//    // Example sending a request using RemoveTagsFromStreamRequest.
//    req := client.RemoveTagsFromStreamRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/kinesis-2013-12-02/RemoveTagsFromStream
func (c *Client) RemoveTagsFromStreamRequest(input *types.RemoveTagsFromStreamInput) RemoveTagsFromStreamRequest {
	op := &aws.Operation{
		Name:       opRemoveTagsFromStream,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &types.RemoveTagsFromStreamInput{}
	}

	req := c.newRequest(op, input, &types.RemoveTagsFromStreamOutput{})
	req.Handlers.Unmarshal.Remove(jsonrpc.UnmarshalHandler)
	req.Handlers.Unmarshal.PushBackNamed(protocol.UnmarshalDiscardBodyHandler)
	return RemoveTagsFromStreamRequest{Request: req, Input: input, Copy: c.RemoveTagsFromStreamRequest}
}

// RemoveTagsFromStreamRequest is the request type for the
// RemoveTagsFromStream API operation.
type RemoveTagsFromStreamRequest struct {
	*aws.Request
	Input *types.RemoveTagsFromStreamInput
	Copy  func(*types.RemoveTagsFromStreamInput) RemoveTagsFromStreamRequest
}

// Send marshals and sends the RemoveTagsFromStream API request.
func (r RemoveTagsFromStreamRequest) Send(ctx context.Context) (*RemoveTagsFromStreamResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &RemoveTagsFromStreamResponse{
		RemoveTagsFromStreamOutput: r.Request.Data.(*types.RemoveTagsFromStreamOutput),
		response:                   &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// RemoveTagsFromStreamResponse is the response type for the
// RemoveTagsFromStream API operation.
type RemoveTagsFromStreamResponse struct {
	*types.RemoveTagsFromStreamOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// RemoveTagsFromStream request.
func (r *RemoveTagsFromStreamResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
