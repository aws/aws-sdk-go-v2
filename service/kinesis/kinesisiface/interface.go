// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

// Package kinesisiface provides an interface to enable mocking the Amazon Kinesis service client
// for testing your code.
//
// It is important to note that this interface will have breaking changes
// when the service model is updated and adds new API operations, paginators,
// and waiters.
package kinesisiface

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/kinesis"
	"github.com/aws/aws-sdk-go-v2/service/kinesis/types"
)

// ClientAPI provides an interface to enable mocking the
// kinesis.Client methods. This make unit testing your code that
// calls out to the SDK's service client's calls easier.
//
// The best way to use this interface is so the SDK's service client's calls
// can be stubbed out for unit testing your code with the SDK without needing
// to inject custom request handlers into the SDK's request pipeline.
//
//    // myFunc uses an SDK service client to make a request to
//    // Kinesis.
//    func myFunc(svc kinesisiface.ClientAPI) bool {
//        // Make svc.AddTagsToStream request
//    }
//
//    func main() {
//        cfg, err := external.LoadDefaultAWSConfig()
//        if err != nil {
//            panic("failed to load config, " + err.Error())
//        }
//
//        svc := kinesis.New(cfg)
//
//        myFunc(svc)
//    }
//
// In your _test.go file:
//
//    // Define a mock struct to be used in your unit tests of myFunc.
//    type mockClientClient struct {
//        kinesisiface.ClientPI
//    }
//    func (m *mockClientClient) AddTagsToStream(input *types.AddTagsToStreamInput) (*types.AddTagsToStreamOutput, error) {
//        // mock response/functionality
//    }
//
//    func TestMyFunc(t *testing.T) {
//        // Setup Test
//        mockSvc := &mockClientClient{}
//
//        myfunc(mockSvc)
//
//        // Verify myFunc's functionality
//    }
//
// It is important to note that this interface will have breaking changes
// when the service model is updated and adds new API operations, paginators,
// and waiters. Its suggested to use the pattern above for testing, or using
// tooling to generate mocks to satisfy the interfaces.
type ClientAPI interface {
	AddTagsToStreamRequest(*types.AddTagsToStreamInput) kinesis.AddTagsToStreamRequest

	CreateStreamRequest(*types.CreateStreamInput) kinesis.CreateStreamRequest

	DecreaseStreamRetentionPeriodRequest(*types.DecreaseStreamRetentionPeriodInput) kinesis.DecreaseStreamRetentionPeriodRequest

	DeleteStreamRequest(*types.DeleteStreamInput) kinesis.DeleteStreamRequest

	DeregisterStreamConsumerRequest(*types.DeregisterStreamConsumerInput) kinesis.DeregisterStreamConsumerRequest

	DescribeLimitsRequest(*types.DescribeLimitsInput) kinesis.DescribeLimitsRequest

	DescribeStreamRequest(*types.DescribeStreamInput) kinesis.DescribeStreamRequest

	DescribeStreamConsumerRequest(*types.DescribeStreamConsumerInput) kinesis.DescribeStreamConsumerRequest

	DescribeStreamSummaryRequest(*types.DescribeStreamSummaryInput) kinesis.DescribeStreamSummaryRequest

	DisableEnhancedMonitoringRequest(*types.DisableEnhancedMonitoringInput) kinesis.DisableEnhancedMonitoringRequest

	EnableEnhancedMonitoringRequest(*types.EnableEnhancedMonitoringInput) kinesis.EnableEnhancedMonitoringRequest

	GetRecordsRequest(*types.GetRecordsInput) kinesis.GetRecordsRequest

	GetShardIteratorRequest(*types.GetShardIteratorInput) kinesis.GetShardIteratorRequest

	IncreaseStreamRetentionPeriodRequest(*types.IncreaseStreamRetentionPeriodInput) kinesis.IncreaseStreamRetentionPeriodRequest

	ListShardsRequest(*types.ListShardsInput) kinesis.ListShardsRequest

	ListStreamConsumersRequest(*types.ListStreamConsumersInput) kinesis.ListStreamConsumersRequest

	ListStreamsRequest(*types.ListStreamsInput) kinesis.ListStreamsRequest

	ListTagsForStreamRequest(*types.ListTagsForStreamInput) kinesis.ListTagsForStreamRequest

	MergeShardsRequest(*types.MergeShardsInput) kinesis.MergeShardsRequest

	PutRecordRequest(*types.PutRecordInput) kinesis.PutRecordRequest

	PutRecordsRequest(*types.PutRecordsInput) kinesis.PutRecordsRequest

	RegisterStreamConsumerRequest(*types.RegisterStreamConsumerInput) kinesis.RegisterStreamConsumerRequest

	RemoveTagsFromStreamRequest(*types.RemoveTagsFromStreamInput) kinesis.RemoveTagsFromStreamRequest

	SplitShardRequest(*types.SplitShardInput) kinesis.SplitShardRequest

	StartStreamEncryptionRequest(*types.StartStreamEncryptionInput) kinesis.StartStreamEncryptionRequest

	StopStreamEncryptionRequest(*types.StopStreamEncryptionInput) kinesis.StopStreamEncryptionRequest

	UpdateShardCountRequest(*types.UpdateShardCountInput) kinesis.UpdateShardCountRequest

	WaitUntilStreamExists(context.Context, *types.DescribeStreamInput, ...aws.WaiterOption) error

	WaitUntilStreamNotExists(context.Context, *types.DescribeStreamInput, ...aws.WaiterOption) error
}

var _ ClientAPI = (*kinesis.Client)(nil)
