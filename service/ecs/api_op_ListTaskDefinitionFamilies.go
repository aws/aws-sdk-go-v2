// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package ecs

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/ecs/types"
)

const opListTaskDefinitionFamilies = "ListTaskDefinitionFamilies"

// ListTaskDefinitionFamiliesRequest returns a request value for making API operation for
// Amazon EC2 Container Service.
//
// Returns a list of task definition families that are registered to your account
// (which may include task definition families that no longer have any ACTIVE
// task definition revisions).
//
// You can filter out task definition families that do not contain any ACTIVE
// task definition revisions by setting the status parameter to ACTIVE. You
// can also filter the results with the familyPrefix parameter.
//
//    // Example sending a request using ListTaskDefinitionFamiliesRequest.
//    req := client.ListTaskDefinitionFamiliesRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/ListTaskDefinitionFamilies
func (c *Client) ListTaskDefinitionFamiliesRequest(input *types.ListTaskDefinitionFamiliesInput) ListTaskDefinitionFamiliesRequest {
	op := &aws.Operation{
		Name:       opListTaskDefinitionFamilies,
		HTTPMethod: "POST",
		HTTPPath:   "/",
		Paginator: &aws.Paginator{
			InputTokens:     []string{"nextToken"},
			OutputTokens:    []string{"nextToken"},
			LimitToken:      "maxResults",
			TruncationToken: "",
		},
	}

	if input == nil {
		input = &types.ListTaskDefinitionFamiliesInput{}
	}

	req := c.newRequest(op, input, &types.ListTaskDefinitionFamiliesOutput{})
	return ListTaskDefinitionFamiliesRequest{Request: req, Input: input, Copy: c.ListTaskDefinitionFamiliesRequest}
}

// ListTaskDefinitionFamiliesRequest is the request type for the
// ListTaskDefinitionFamilies API operation.
type ListTaskDefinitionFamiliesRequest struct {
	*aws.Request
	Input *types.ListTaskDefinitionFamiliesInput
	Copy  func(*types.ListTaskDefinitionFamiliesInput) ListTaskDefinitionFamiliesRequest
}

// Send marshals and sends the ListTaskDefinitionFamilies API request.
func (r ListTaskDefinitionFamiliesRequest) Send(ctx context.Context) (*ListTaskDefinitionFamiliesResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &ListTaskDefinitionFamiliesResponse{
		ListTaskDefinitionFamiliesOutput: r.Request.Data.(*types.ListTaskDefinitionFamiliesOutput),
		response:                         &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// NewListTaskDefinitionFamiliesRequestPaginator returns a paginator for ListTaskDefinitionFamilies.
// Use Next method to get the next page, and CurrentPage to get the current
// response page from the paginator. Next will return false, if there are
// no more pages, or an error was encountered.
//
// Note: This operation can generate multiple requests to a service.
//
//   // Example iterating over pages.
//   req := client.ListTaskDefinitionFamiliesRequest(input)
//   p := ecs.NewListTaskDefinitionFamiliesRequestPaginator(req)
//
//   for p.Next(context.TODO()) {
//       page := p.CurrentPage()
//   }
//
//   if err := p.Err(); err != nil {
//       return err
//   }
//
func NewListTaskDefinitionFamiliesPaginator(req ListTaskDefinitionFamiliesRequest) ListTaskDefinitionFamiliesPaginator {
	return ListTaskDefinitionFamiliesPaginator{
		Pager: aws.Pager{
			NewRequest: func(ctx context.Context) (*aws.Request, error) {
				var inCpy *types.ListTaskDefinitionFamiliesInput
				if req.Input != nil {
					tmp := *req.Input
					inCpy = &tmp
				}

				newReq := req.Copy(inCpy)
				newReq.SetContext(ctx)
				return newReq.Request, nil
			},
		},
	}
}

// ListTaskDefinitionFamiliesPaginator is used to paginate the request. This can be done by
// calling Next and CurrentPage.
type ListTaskDefinitionFamiliesPaginator struct {
	aws.Pager
}

func (p *ListTaskDefinitionFamiliesPaginator) CurrentPage() *types.ListTaskDefinitionFamiliesOutput {
	return p.Pager.CurrentPage().(*types.ListTaskDefinitionFamiliesOutput)
}

// ListTaskDefinitionFamiliesResponse is the response type for the
// ListTaskDefinitionFamilies API operation.
type ListTaskDefinitionFamiliesResponse struct {
	*types.ListTaskDefinitionFamiliesOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// ListTaskDefinitionFamilies request.
func (r *ListTaskDefinitionFamiliesResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
