// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package ioteventsdata

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/ioteventsdata/types"
)

const opBatchPutMessage = "BatchPutMessage"

// BatchPutMessageRequest returns a request value for making API operation for
// AWS IoT Events Data.
//
// Sends a set of messages to the AWS IoT Events system. Each message payload
// is transformed into the input you specify ("inputName") and ingested into
// any detectors that monitor that input. If multiple messages are sent, the
// order in which the messages are processed isn't guaranteed. To guarantee
// ordering, you must send messages one at a time and wait for a successful
// response.
//
//    // Example sending a request using BatchPutMessageRequest.
//    req := client.BatchPutMessageRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/iotevents-data-2018-10-23/BatchPutMessage
func (c *Client) BatchPutMessageRequest(input *types.BatchPutMessageInput) BatchPutMessageRequest {
	op := &aws.Operation{
		Name:       opBatchPutMessage,
		HTTPMethod: "POST",
		HTTPPath:   "/inputs/messages",
	}

	if input == nil {
		input = &types.BatchPutMessageInput{}
	}

	req := c.newRequest(op, input, &types.BatchPutMessageOutput{})
	return BatchPutMessageRequest{Request: req, Input: input, Copy: c.BatchPutMessageRequest}
}

// BatchPutMessageRequest is the request type for the
// BatchPutMessage API operation.
type BatchPutMessageRequest struct {
	*aws.Request
	Input *types.BatchPutMessageInput
	Copy  func(*types.BatchPutMessageInput) BatchPutMessageRequest
}

// Send marshals and sends the BatchPutMessage API request.
func (r BatchPutMessageRequest) Send(ctx context.Context) (*BatchPutMessageResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &BatchPutMessageResponse{
		BatchPutMessageOutput: r.Request.Data.(*types.BatchPutMessageOutput),
		response:              &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// BatchPutMessageResponse is the response type for the
// BatchPutMessage API operation.
type BatchPutMessageResponse struct {
	*types.BatchPutMessageOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// BatchPutMessage request.
func (r *BatchPutMessageResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
