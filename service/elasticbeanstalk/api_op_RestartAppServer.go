// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package elasticbeanstalk

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/private/protocol"
	"github.com/aws/aws-sdk-go-v2/private/protocol/query"
	"github.com/aws/aws-sdk-go-v2/service/elasticbeanstalk/types"
)

const opRestartAppServer = "RestartAppServer"

// RestartAppServerRequest returns a request value for making API operation for
// AWS Elastic Beanstalk.
//
// Causes the environment to restart the application container server running
// on each Amazon EC2 instance.
//
//    // Example sending a request using RestartAppServerRequest.
//    req := client.RestartAppServerRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/elasticbeanstalk-2010-12-01/RestartAppServer
func (c *Client) RestartAppServerRequest(input *types.RestartAppServerInput) RestartAppServerRequest {
	op := &aws.Operation{
		Name:       opRestartAppServer,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &types.RestartAppServerInput{}
	}

	req := c.newRequest(op, input, &types.RestartAppServerOutput{})
	req.Handlers.Unmarshal.Remove(query.UnmarshalHandler)
	req.Handlers.Unmarshal.PushBackNamed(protocol.UnmarshalDiscardBodyHandler)
	return RestartAppServerRequest{Request: req, Input: input, Copy: c.RestartAppServerRequest}
}

// RestartAppServerRequest is the request type for the
// RestartAppServer API operation.
type RestartAppServerRequest struct {
	*aws.Request
	Input *types.RestartAppServerInput
	Copy  func(*types.RestartAppServerInput) RestartAppServerRequest
}

// Send marshals and sends the RestartAppServer API request.
func (r RestartAppServerRequest) Send(ctx context.Context) (*RestartAppServerResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &RestartAppServerResponse{
		RestartAppServerOutput: r.Request.Data.(*types.RestartAppServerOutput),
		response:               &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// RestartAppServerResponse is the response type for the
// RestartAppServer API operation.
type RestartAppServerResponse struct {
	*types.RestartAppServerOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// RestartAppServer request.
func (r *RestartAppServerResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
