// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package elasticbeanstalk

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/elasticbeanstalk/types"
)

const opUpdateApplicationVersion = "UpdateApplicationVersion"

// UpdateApplicationVersionRequest returns a request value for making API operation for
// AWS Elastic Beanstalk.
//
// Updates the specified application version to have the specified properties.
//
// If a property (for example, description) is not provided, the value remains
// unchanged. To clear properties, specify an empty string.
//
//    // Example sending a request using UpdateApplicationVersionRequest.
//    req := client.UpdateApplicationVersionRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/elasticbeanstalk-2010-12-01/UpdateApplicationVersion
func (c *Client) UpdateApplicationVersionRequest(input *types.UpdateApplicationVersionInput) UpdateApplicationVersionRequest {
	op := &aws.Operation{
		Name:       opUpdateApplicationVersion,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &types.UpdateApplicationVersionInput{}
	}

	req := c.newRequest(op, input, &types.UpdateApplicationVersionOutput{})
	return UpdateApplicationVersionRequest{Request: req, Input: input, Copy: c.UpdateApplicationVersionRequest}
}

// UpdateApplicationVersionRequest is the request type for the
// UpdateApplicationVersion API operation.
type UpdateApplicationVersionRequest struct {
	*aws.Request
	Input *types.UpdateApplicationVersionInput
	Copy  func(*types.UpdateApplicationVersionInput) UpdateApplicationVersionRequest
}

// Send marshals and sends the UpdateApplicationVersion API request.
func (r UpdateApplicationVersionRequest) Send(ctx context.Context) (*UpdateApplicationVersionResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &UpdateApplicationVersionResponse{
		UpdateApplicationVersionOutput: r.Request.Data.(*types.UpdateApplicationVersionOutput),
		response:                       &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// UpdateApplicationVersionResponse is the response type for the
// UpdateApplicationVersion API operation.
type UpdateApplicationVersionResponse struct {
	*types.UpdateApplicationVersionOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// UpdateApplicationVersion request.
func (r *UpdateApplicationVersionResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
