// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package elasticbeanstalk

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/elasticbeanstalk/types"
)

const opUpdateConfigurationTemplate = "UpdateConfigurationTemplate"

// UpdateConfigurationTemplateRequest returns a request value for making API operation for
// AWS Elastic Beanstalk.
//
// Updates the specified configuration template to have the specified properties
// or configuration option values.
//
// If a property (for example, ApplicationName) is not provided, its value remains
// unchanged. To clear such properties, specify an empty string.
//
// Related Topics
//
//    * DescribeConfigurationOptions
//
//    // Example sending a request using UpdateConfigurationTemplateRequest.
//    req := client.UpdateConfigurationTemplateRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/elasticbeanstalk-2010-12-01/UpdateConfigurationTemplate
func (c *Client) UpdateConfigurationTemplateRequest(input *types.UpdateConfigurationTemplateInput) UpdateConfigurationTemplateRequest {
	op := &aws.Operation{
		Name:       opUpdateConfigurationTemplate,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &types.UpdateConfigurationTemplateInput{}
	}

	req := c.newRequest(op, input, &types.UpdateConfigurationTemplateOutput{})
	return UpdateConfigurationTemplateRequest{Request: req, Input: input, Copy: c.UpdateConfigurationTemplateRequest}
}

// UpdateConfigurationTemplateRequest is the request type for the
// UpdateConfigurationTemplate API operation.
type UpdateConfigurationTemplateRequest struct {
	*aws.Request
	Input *types.UpdateConfigurationTemplateInput
	Copy  func(*types.UpdateConfigurationTemplateInput) UpdateConfigurationTemplateRequest
}

// Send marshals and sends the UpdateConfigurationTemplate API request.
func (r UpdateConfigurationTemplateRequest) Send(ctx context.Context) (*UpdateConfigurationTemplateResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &UpdateConfigurationTemplateResponse{
		UpdateConfigurationTemplateOutput: r.Request.Data.(*types.UpdateConfigurationTemplateOutput),
		response:                          &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// UpdateConfigurationTemplateResponse is the response type for the
// UpdateConfigurationTemplate API operation.
type UpdateConfigurationTemplateResponse struct {
	*types.UpdateConfigurationTemplateOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// UpdateConfigurationTemplate request.
func (r *UpdateConfigurationTemplateResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
