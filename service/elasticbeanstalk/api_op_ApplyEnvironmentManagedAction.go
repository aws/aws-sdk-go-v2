// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package elasticbeanstalk

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/elasticbeanstalk/types"
)

const opApplyEnvironmentManagedAction = "ApplyEnvironmentManagedAction"

// ApplyEnvironmentManagedActionRequest returns a request value for making API operation for
// AWS Elastic Beanstalk.
//
// Applies a scheduled managed action immediately. A managed action can be applied
// only if its status is Scheduled. Get the status and action ID of a managed
// action with DescribeEnvironmentManagedActions.
//
//    // Example sending a request using ApplyEnvironmentManagedActionRequest.
//    req := client.ApplyEnvironmentManagedActionRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/elasticbeanstalk-2010-12-01/ApplyEnvironmentManagedAction
func (c *Client) ApplyEnvironmentManagedActionRequest(input *types.ApplyEnvironmentManagedActionInput) ApplyEnvironmentManagedActionRequest {
	op := &aws.Operation{
		Name:       opApplyEnvironmentManagedAction,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &types.ApplyEnvironmentManagedActionInput{}
	}

	req := c.newRequest(op, input, &types.ApplyEnvironmentManagedActionOutput{})
	return ApplyEnvironmentManagedActionRequest{Request: req, Input: input, Copy: c.ApplyEnvironmentManagedActionRequest}
}

// ApplyEnvironmentManagedActionRequest is the request type for the
// ApplyEnvironmentManagedAction API operation.
type ApplyEnvironmentManagedActionRequest struct {
	*aws.Request
	Input *types.ApplyEnvironmentManagedActionInput
	Copy  func(*types.ApplyEnvironmentManagedActionInput) ApplyEnvironmentManagedActionRequest
}

// Send marshals and sends the ApplyEnvironmentManagedAction API request.
func (r ApplyEnvironmentManagedActionRequest) Send(ctx context.Context) (*ApplyEnvironmentManagedActionResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &ApplyEnvironmentManagedActionResponse{
		ApplyEnvironmentManagedActionOutput: r.Request.Data.(*types.ApplyEnvironmentManagedActionOutput),
		response:                            &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// ApplyEnvironmentManagedActionResponse is the response type for the
// ApplyEnvironmentManagedAction API operation.
type ApplyEnvironmentManagedActionResponse struct {
	*types.ApplyEnvironmentManagedActionOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// ApplyEnvironmentManagedAction request.
func (r *ApplyEnvironmentManagedActionResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
