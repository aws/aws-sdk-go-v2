// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package elasticbeanstalk

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/private/protocol"
	"github.com/aws/aws-sdk-go-v2/private/protocol/query"
	"github.com/aws/aws-sdk-go-v2/service/elasticbeanstalk/types"
)

const opDeleteEnvironmentConfiguration = "DeleteEnvironmentConfiguration"

// DeleteEnvironmentConfigurationRequest returns a request value for making API operation for
// AWS Elastic Beanstalk.
//
// Deletes the draft configuration associated with the running environment.
//
// Updating a running environment with any configuration changes creates a draft
// configuration set. You can get the draft configuration using DescribeConfigurationSettings
// while the update is in progress or if the update fails. The DeploymentStatus
// for the draft configuration indicates whether the deployment is in process
// or has failed. The draft configuration remains in existence until it is deleted
// with this action.
//
//    // Example sending a request using DeleteEnvironmentConfigurationRequest.
//    req := client.DeleteEnvironmentConfigurationRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/elasticbeanstalk-2010-12-01/DeleteEnvironmentConfiguration
func (c *Client) DeleteEnvironmentConfigurationRequest(input *types.DeleteEnvironmentConfigurationInput) DeleteEnvironmentConfigurationRequest {
	op := &aws.Operation{
		Name:       opDeleteEnvironmentConfiguration,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &types.DeleteEnvironmentConfigurationInput{}
	}

	req := c.newRequest(op, input, &types.DeleteEnvironmentConfigurationOutput{})
	req.Handlers.Unmarshal.Remove(query.UnmarshalHandler)
	req.Handlers.Unmarshal.PushBackNamed(protocol.UnmarshalDiscardBodyHandler)
	return DeleteEnvironmentConfigurationRequest{Request: req, Input: input, Copy: c.DeleteEnvironmentConfigurationRequest}
}

// DeleteEnvironmentConfigurationRequest is the request type for the
// DeleteEnvironmentConfiguration API operation.
type DeleteEnvironmentConfigurationRequest struct {
	*aws.Request
	Input *types.DeleteEnvironmentConfigurationInput
	Copy  func(*types.DeleteEnvironmentConfigurationInput) DeleteEnvironmentConfigurationRequest
}

// Send marshals and sends the DeleteEnvironmentConfiguration API request.
func (r DeleteEnvironmentConfigurationRequest) Send(ctx context.Context) (*DeleteEnvironmentConfigurationResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &DeleteEnvironmentConfigurationResponse{
		DeleteEnvironmentConfigurationOutput: r.Request.Data.(*types.DeleteEnvironmentConfigurationOutput),
		response:                             &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// DeleteEnvironmentConfigurationResponse is the response type for the
// DeleteEnvironmentConfiguration API operation.
type DeleteEnvironmentConfigurationResponse struct {
	*types.DeleteEnvironmentConfigurationOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// DeleteEnvironmentConfiguration request.
func (r *DeleteEnvironmentConfigurationResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
