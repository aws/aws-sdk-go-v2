// Code generated by smithy-go-codegen DO NOT EDIT.

package elasticbeanstalk

import (
	"context"
	awsmiddleware "github.com/aws/aws-sdk-go-v2/aws/middleware"
	"github.com/aws/aws-sdk-go-v2/aws/signer/v4"
	"github.com/aws/aws-sdk-go-v2/service/elasticbeanstalk/types"
	"github.com/awslabs/smithy-go/middleware"
	smithyhttp "github.com/awslabs/smithy-go/transport/http"
)

// Returns a list of the available solution stack names, with the public version
// first and then in reverse chronological order.
func (c *Client) ListAvailableSolutionStacks(ctx context.Context, params *ListAvailableSolutionStacksInput, optFns ...func(*Options)) (*ListAvailableSolutionStacksOutput, error) {
	if params == nil {
		params = &ListAvailableSolutionStacksInput{}
	}

	result, metadata, err := c.invokeOperation(ctx, "ListAvailableSolutionStacks", params, optFns, addOperationListAvailableSolutionStacksMiddlewares)
	if err != nil {
		return nil, err
	}

	out := result.(*ListAvailableSolutionStacksOutput)
	out.ResultMetadata = metadata
	return out, nil
}

type ListAvailableSolutionStacksInput struct {
}

// A list of available AWS Elastic Beanstalk solution stacks.
type ListAvailableSolutionStacksOutput struct {

	// A list of available solution stacks and their SolutionStackDescription ().
	SolutionStackDetails []*types.SolutionStackDescription

	// A list of available solution stacks.
	SolutionStacks []*string

	// Metadata pertaining to the operation's result.
	ResultMetadata middleware.Metadata
}

func addOperationListAvailableSolutionStacksMiddlewares(stack *middleware.Stack, options Options) (err error) {
	err = stack.Serialize.Add(&awsAwsquery_serializeOpListAvailableSolutionStacks{}, middleware.After)
	if err != nil {
		return err
	}
	err = stack.Deserialize.Add(&awsAwsquery_deserializeOpListAvailableSolutionStacks{}, middleware.After)
	if err != nil {
		return err
	}
	awsmiddleware.AddRequestInvocationIDMiddleware(stack)
	smithyhttp.AddContentLengthMiddleware(stack)
	addResolveEndpointMiddleware(stack, options)
	v4.AddComputePayloadSHA256Middleware(stack)
	addRetryMiddlewares(stack, options)
	addHTTPSignerV4Middleware(stack, options)
	awsmiddleware.AddAttemptClockSkewMiddleware(stack)
	addClientUserAgent(stack)
	smithyhttp.AddErrorCloseResponseBodyMiddleware(stack)
	smithyhttp.AddCloseResponseBodyMiddleware(stack)
	stack.Initialize.Add(newServiceMetadataMiddleware_opListAvailableSolutionStacks(options.Region), middleware.Before)
	addRequestIDRetrieverMiddleware(stack)
	addResponseErrorMiddleware(stack)
	return nil
}

func newServiceMetadataMiddleware_opListAvailableSolutionStacks(region string) awsmiddleware.RegisterServiceMetadata {
	return awsmiddleware.RegisterServiceMetadata{
		Region:        region,
		ServiceID:     ServiceID,
		SigningName:   "elasticbeanstalk",
		OperationName: "ListAvailableSolutionStacks",
	}
}
