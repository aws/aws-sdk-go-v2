// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package elasticbeanstalk

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/private/protocol"
	"github.com/aws/aws-sdk-go-v2/private/protocol/query"
	"github.com/aws/aws-sdk-go-v2/service/elasticbeanstalk/types"
)

const opAbortEnvironmentUpdate = "AbortEnvironmentUpdate"

// AbortEnvironmentUpdateRequest returns a request value for making API operation for
// AWS Elastic Beanstalk.
//
// Cancels in-progress environment configuration update or application version
// deployment.
//
//    // Example sending a request using AbortEnvironmentUpdateRequest.
//    req := client.AbortEnvironmentUpdateRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/elasticbeanstalk-2010-12-01/AbortEnvironmentUpdate
func (c *Client) AbortEnvironmentUpdateRequest(input *types.AbortEnvironmentUpdateInput) AbortEnvironmentUpdateRequest {
	op := &aws.Operation{
		Name:       opAbortEnvironmentUpdate,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &types.AbortEnvironmentUpdateInput{}
	}

	req := c.newRequest(op, input, &types.AbortEnvironmentUpdateOutput{})
	req.Handlers.Unmarshal.Remove(query.UnmarshalHandler)
	req.Handlers.Unmarshal.PushBackNamed(protocol.UnmarshalDiscardBodyHandler)
	return AbortEnvironmentUpdateRequest{Request: req, Input: input, Copy: c.AbortEnvironmentUpdateRequest}
}

// AbortEnvironmentUpdateRequest is the request type for the
// AbortEnvironmentUpdate API operation.
type AbortEnvironmentUpdateRequest struct {
	*aws.Request
	Input *types.AbortEnvironmentUpdateInput
	Copy  func(*types.AbortEnvironmentUpdateInput) AbortEnvironmentUpdateRequest
}

// Send marshals and sends the AbortEnvironmentUpdate API request.
func (r AbortEnvironmentUpdateRequest) Send(ctx context.Context) (*AbortEnvironmentUpdateResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &AbortEnvironmentUpdateResponse{
		AbortEnvironmentUpdateOutput: r.Request.Data.(*types.AbortEnvironmentUpdateOutput),
		response:                     &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// AbortEnvironmentUpdateResponse is the response type for the
// AbortEnvironmentUpdate API operation.
type AbortEnvironmentUpdateResponse struct {
	*types.AbortEnvironmentUpdateOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// AbortEnvironmentUpdate request.
func (r *AbortEnvironmentUpdateResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
