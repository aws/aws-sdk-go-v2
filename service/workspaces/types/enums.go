// Code generated by smithy-go-codegen DO NOT EDIT.

package types

type AccessPropertyValue string

// Enum values for AccessPropertyValue
const (
	AccessPropertyValueAllow AccessPropertyValue = "ALLOW"
	AccessPropertyValueDeny  AccessPropertyValue = "DENY"
)

// Values returns all known values for AccessPropertyValue. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (AccessPropertyValue) Values() []AccessPropertyValue {
	return []AccessPropertyValue{
		"ALLOW",
		"DENY",
	}
}

type Application string

// Enum values for Application
const (
	ApplicationMicrosoftOffice2016 Application = "Microsoft_Office_2016"
	ApplicationMicrosoftOffice2019 Application = "Microsoft_Office_2019"
)

// Values returns all known values for Application. Note that this can be expanded
// in the future, and so it is only as up to date as the client. The ordering of
// this slice is not guaranteed to be stable across updates.
func (Application) Values() []Application {
	return []Application{
		"Microsoft_Office_2016",
		"Microsoft_Office_2019",
	}
}

type AssociationStatus string

// Enum values for AssociationStatus
const (
	AssociationStatusNotAssociated               AssociationStatus = "NOT_ASSOCIATED"
	AssociationStatusAssociatedWithOwnerAccount  AssociationStatus = "ASSOCIATED_WITH_OWNER_ACCOUNT"
	AssociationStatusAssociatedWithSharedAccount AssociationStatus = "ASSOCIATED_WITH_SHARED_ACCOUNT"
	AssociationStatusPendingAssociation          AssociationStatus = "PENDING_ASSOCIATION"
	AssociationStatusPendingDisassociation       AssociationStatus = "PENDING_DISASSOCIATION"
)

// Values returns all known values for AssociationStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (AssociationStatus) Values() []AssociationStatus {
	return []AssociationStatus{
		"NOT_ASSOCIATED",
		"ASSOCIATED_WITH_OWNER_ACCOUNT",
		"ASSOCIATED_WITH_SHARED_ACCOUNT",
		"PENDING_ASSOCIATION",
		"PENDING_DISASSOCIATION",
	}
}

type BundleType string

// Enum values for BundleType
const (
	BundleTypeRegular BundleType = "REGULAR"
	BundleTypeStandby BundleType = "STANDBY"
)

// Values returns all known values for BundleType. Note that this can be expanded
// in the future, and so it is only as up to date as the client. The ordering of
// this slice is not guaranteed to be stable across updates.
func (BundleType) Values() []BundleType {
	return []BundleType{
		"REGULAR",
		"STANDBY",
	}
}

type CertificateBasedAuthStatusEnum string

// Enum values for CertificateBasedAuthStatusEnum
const (
	CertificateBasedAuthStatusEnumDisabled CertificateBasedAuthStatusEnum = "DISABLED"
	CertificateBasedAuthStatusEnumEnabled  CertificateBasedAuthStatusEnum = "ENABLED"
)

// Values returns all known values for CertificateBasedAuthStatusEnum. Note that
// this can be expanded in the future, and so it is only as up to date as the
// client. The ordering of this slice is not guaranteed to be stable across
// updates.
func (CertificateBasedAuthStatusEnum) Values() []CertificateBasedAuthStatusEnum {
	return []CertificateBasedAuthStatusEnum{
		"DISABLED",
		"ENABLED",
	}
}

type ClientDeviceType string

// Enum values for ClientDeviceType
const (
	ClientDeviceTypeDeviceTypeWindows ClientDeviceType = "DeviceTypeWindows"
	ClientDeviceTypeDeviceTypeOsx     ClientDeviceType = "DeviceTypeOsx"
	ClientDeviceTypeDeviceTypeAndroid ClientDeviceType = "DeviceTypeAndroid"
	ClientDeviceTypeDeviceTypeIos     ClientDeviceType = "DeviceTypeIos"
	ClientDeviceTypeDeviceTypeLinux   ClientDeviceType = "DeviceTypeLinux"
	ClientDeviceTypeDeviceTypeWeb     ClientDeviceType = "DeviceTypeWeb"
)

// Values returns all known values for ClientDeviceType. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (ClientDeviceType) Values() []ClientDeviceType {
	return []ClientDeviceType{
		"DeviceTypeWindows",
		"DeviceTypeOsx",
		"DeviceTypeAndroid",
		"DeviceTypeIos",
		"DeviceTypeLinux",
		"DeviceTypeWeb",
	}
}

type Compute string

// Enum values for Compute
const (
	ComputeValue           Compute = "VALUE"
	ComputeStandard        Compute = "STANDARD"
	ComputePerformance     Compute = "PERFORMANCE"
	ComputePower           Compute = "POWER"
	ComputeGraphics        Compute = "GRAPHICS"
	ComputePowerpro        Compute = "POWERPRO"
	ComputeGraphicspro     Compute = "GRAPHICSPRO"
	ComputeGraphicsG4dn    Compute = "GRAPHICS_G4DN"
	ComputeGraphicsproG4dn Compute = "GRAPHICSPRO_G4DN"
)

// Values returns all known values for Compute. Note that this can be expanded in
// the future, and so it is only as up to date as the client. The ordering of this
// slice is not guaranteed to be stable across updates.
func (Compute) Values() []Compute {
	return []Compute{
		"VALUE",
		"STANDARD",
		"PERFORMANCE",
		"POWER",
		"GRAPHICS",
		"POWERPRO",
		"GRAPHICSPRO",
		"GRAPHICS_G4DN",
		"GRAPHICSPRO_G4DN",
	}
}

type ConnectionAliasState string

// Enum values for ConnectionAliasState
const (
	ConnectionAliasStateCreating ConnectionAliasState = "CREATING"
	ConnectionAliasStateCreated  ConnectionAliasState = "CREATED"
	ConnectionAliasStateDeleting ConnectionAliasState = "DELETING"
)

// Values returns all known values for ConnectionAliasState. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (ConnectionAliasState) Values() []ConnectionAliasState {
	return []ConnectionAliasState{
		"CREATING",
		"CREATED",
		"DELETING",
	}
}

type ConnectionState string

// Enum values for ConnectionState
const (
	ConnectionStateConnected    ConnectionState = "CONNECTED"
	ConnectionStateDisconnected ConnectionState = "DISCONNECTED"
	ConnectionStateUnknown      ConnectionState = "UNKNOWN"
)

// Values returns all known values for ConnectionState. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (ConnectionState) Values() []ConnectionState {
	return []ConnectionState{
		"CONNECTED",
		"DISCONNECTED",
		"UNKNOWN",
	}
}

type DedicatedTenancyModificationStateEnum string

// Enum values for DedicatedTenancyModificationStateEnum
const (
	DedicatedTenancyModificationStateEnumPending   DedicatedTenancyModificationStateEnum = "PENDING"
	DedicatedTenancyModificationStateEnumCompleted DedicatedTenancyModificationStateEnum = "COMPLETED"
	DedicatedTenancyModificationStateEnumFailed    DedicatedTenancyModificationStateEnum = "FAILED"
)

// Values returns all known values for DedicatedTenancyModificationStateEnum. Note
// that this can be expanded in the future, and so it is only as up to date as the
// client. The ordering of this slice is not guaranteed to be stable across
// updates.
func (DedicatedTenancyModificationStateEnum) Values() []DedicatedTenancyModificationStateEnum {
	return []DedicatedTenancyModificationStateEnum{
		"PENDING",
		"COMPLETED",
		"FAILED",
	}
}

type DedicatedTenancySupportEnum string

// Enum values for DedicatedTenancySupportEnum
const (
	DedicatedTenancySupportEnumEnabled DedicatedTenancySupportEnum = "ENABLED"
)

// Values returns all known values for DedicatedTenancySupportEnum. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
// The ordering of this slice is not guaranteed to be stable across updates.
func (DedicatedTenancySupportEnum) Values() []DedicatedTenancySupportEnum {
	return []DedicatedTenancySupportEnum{
		"ENABLED",
	}
}

type DedicatedTenancySupportResultEnum string

// Enum values for DedicatedTenancySupportResultEnum
const (
	DedicatedTenancySupportResultEnumEnabled  DedicatedTenancySupportResultEnum = "ENABLED"
	DedicatedTenancySupportResultEnumDisabled DedicatedTenancySupportResultEnum = "DISABLED"
)

// Values returns all known values for DedicatedTenancySupportResultEnum. Note
// that this can be expanded in the future, and so it is only as up to date as the
// client. The ordering of this slice is not guaranteed to be stable across
// updates.
func (DedicatedTenancySupportResultEnum) Values() []DedicatedTenancySupportResultEnum {
	return []DedicatedTenancySupportResultEnum{
		"ENABLED",
		"DISABLED",
	}
}

type DeletableCertificateBasedAuthProperty string

// Enum values for DeletableCertificateBasedAuthProperty
const (
	DeletableCertificateBasedAuthPropertyCertificateBasedAuthPropertiesCertificateAuthorityArn DeletableCertificateBasedAuthProperty = "CERTIFICATE_BASED_AUTH_PROPERTIES_CERTIFICATE_AUTHORITY_ARN"
)

// Values returns all known values for DeletableCertificateBasedAuthProperty. Note
// that this can be expanded in the future, and so it is only as up to date as the
// client. The ordering of this slice is not guaranteed to be stable across
// updates.
func (DeletableCertificateBasedAuthProperty) Values() []DeletableCertificateBasedAuthProperty {
	return []DeletableCertificateBasedAuthProperty{
		"CERTIFICATE_BASED_AUTH_PROPERTIES_CERTIFICATE_AUTHORITY_ARN",
	}
}

type DeletableSamlProperty string

// Enum values for DeletableSamlProperty
const (
	DeletableSamlPropertySamlPropertiesUserAccessUrl           DeletableSamlProperty = "SAML_PROPERTIES_USER_ACCESS_URL"
	DeletableSamlPropertySamlPropertiesRelayStateParameterName DeletableSamlProperty = "SAML_PROPERTIES_RELAY_STATE_PARAMETER_NAME"
)

// Values returns all known values for DeletableSamlProperty. Note that this can
// be expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (DeletableSamlProperty) Values() []DeletableSamlProperty {
	return []DeletableSamlProperty{
		"SAML_PROPERTIES_USER_ACCESS_URL",
		"SAML_PROPERTIES_RELAY_STATE_PARAMETER_NAME",
	}
}

type ImageType string

// Enum values for ImageType
const (
	ImageTypeOwned  ImageType = "OWNED"
	ImageTypeShared ImageType = "SHARED"
)

// Values returns all known values for ImageType. Note that this can be expanded
// in the future, and so it is only as up to date as the client. The ordering of
// this slice is not guaranteed to be stable across updates.
func (ImageType) Values() []ImageType {
	return []ImageType{
		"OWNED",
		"SHARED",
	}
}

type LogUploadEnum string

// Enum values for LogUploadEnum
const (
	LogUploadEnumEnabled  LogUploadEnum = "ENABLED"
	LogUploadEnumDisabled LogUploadEnum = "DISABLED"
)

// Values returns all known values for LogUploadEnum. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (LogUploadEnum) Values() []LogUploadEnum {
	return []LogUploadEnum{
		"ENABLED",
		"DISABLED",
	}
}

type ModificationResourceEnum string

// Enum values for ModificationResourceEnum
const (
	ModificationResourceEnumRootVolume  ModificationResourceEnum = "ROOT_VOLUME"
	ModificationResourceEnumUserVolume  ModificationResourceEnum = "USER_VOLUME"
	ModificationResourceEnumComputeType ModificationResourceEnum = "COMPUTE_TYPE"
)

// Values returns all known values for ModificationResourceEnum. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
// The ordering of this slice is not guaranteed to be stable across updates.
func (ModificationResourceEnum) Values() []ModificationResourceEnum {
	return []ModificationResourceEnum{
		"ROOT_VOLUME",
		"USER_VOLUME",
		"COMPUTE_TYPE",
	}
}

type ModificationStateEnum string

// Enum values for ModificationStateEnum
const (
	ModificationStateEnumUpdateInitiated  ModificationStateEnum = "UPDATE_INITIATED"
	ModificationStateEnumUpdateInProgress ModificationStateEnum = "UPDATE_IN_PROGRESS"
)

// Values returns all known values for ModificationStateEnum. Note that this can
// be expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (ModificationStateEnum) Values() []ModificationStateEnum {
	return []ModificationStateEnum{
		"UPDATE_INITIATED",
		"UPDATE_IN_PROGRESS",
	}
}

type OperatingSystemType string

// Enum values for OperatingSystemType
const (
	OperatingSystemTypeWindows OperatingSystemType = "WINDOWS"
	OperatingSystemTypeLinux   OperatingSystemType = "LINUX"
)

// Values returns all known values for OperatingSystemType. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (OperatingSystemType) Values() []OperatingSystemType {
	return []OperatingSystemType{
		"WINDOWS",
		"LINUX",
	}
}

type Protocol string

// Enum values for Protocol
const (
	ProtocolPcoip Protocol = "PCOIP"
	ProtocolWsp   Protocol = "WSP"
)

// Values returns all known values for Protocol. Note that this can be expanded in
// the future, and so it is only as up to date as the client. The ordering of this
// slice is not guaranteed to be stable across updates.
func (Protocol) Values() []Protocol {
	return []Protocol{
		"PCOIP",
		"WSP",
	}
}

type ReconnectEnum string

// Enum values for ReconnectEnum
const (
	ReconnectEnumEnabled  ReconnectEnum = "ENABLED"
	ReconnectEnumDisabled ReconnectEnum = "DISABLED"
)

// Values returns all known values for ReconnectEnum. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (ReconnectEnum) Values() []ReconnectEnum {
	return []ReconnectEnum{
		"ENABLED",
		"DISABLED",
	}
}

type RunningMode string

// Enum values for RunningMode
const (
	RunningModeAutoStop RunningMode = "AUTO_STOP"
	RunningModeAlwaysOn RunningMode = "ALWAYS_ON"
	RunningModeManual   RunningMode = "MANUAL"
)

// Values returns all known values for RunningMode. Note that this can be expanded
// in the future, and so it is only as up to date as the client. The ordering of
// this slice is not guaranteed to be stable across updates.
func (RunningMode) Values() []RunningMode {
	return []RunningMode{
		"AUTO_STOP",
		"ALWAYS_ON",
		"MANUAL",
	}
}

type SamlStatusEnum string

// Enum values for SamlStatusEnum
const (
	SamlStatusEnumDisabled                          SamlStatusEnum = "DISABLED"
	SamlStatusEnumEnabled                           SamlStatusEnum = "ENABLED"
	SamlStatusEnumEnabledWithDirectoryLoginFallback SamlStatusEnum = "ENABLED_WITH_DIRECTORY_LOGIN_FALLBACK"
)

// Values returns all known values for SamlStatusEnum. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (SamlStatusEnum) Values() []SamlStatusEnum {
	return []SamlStatusEnum{
		"DISABLED",
		"ENABLED",
		"ENABLED_WITH_DIRECTORY_LOGIN_FALLBACK",
	}
}

type StandbyWorkspaceRelationshipType string

// Enum values for StandbyWorkspaceRelationshipType
const (
	StandbyWorkspaceRelationshipTypePrimary StandbyWorkspaceRelationshipType = "PRIMARY"
	StandbyWorkspaceRelationshipTypeStandby StandbyWorkspaceRelationshipType = "STANDBY"
)

// Values returns all known values for StandbyWorkspaceRelationshipType. Note that
// this can be expanded in the future, and so it is only as up to date as the
// client. The ordering of this slice is not guaranteed to be stable across
// updates.
func (StandbyWorkspaceRelationshipType) Values() []StandbyWorkspaceRelationshipType {
	return []StandbyWorkspaceRelationshipType{
		"PRIMARY",
		"STANDBY",
	}
}

type TargetWorkspaceState string

// Enum values for TargetWorkspaceState
const (
	TargetWorkspaceStateAvailable        TargetWorkspaceState = "AVAILABLE"
	TargetWorkspaceStateAdminMaintenance TargetWorkspaceState = "ADMIN_MAINTENANCE"
)

// Values returns all known values for TargetWorkspaceState. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (TargetWorkspaceState) Values() []TargetWorkspaceState {
	return []TargetWorkspaceState{
		"AVAILABLE",
		"ADMIN_MAINTENANCE",
	}
}

type Tenancy string

// Enum values for Tenancy
const (
	TenancyDedicated Tenancy = "DEDICATED"
	TenancyShared    Tenancy = "SHARED"
)

// Values returns all known values for Tenancy. Note that this can be expanded in
// the future, and so it is only as up to date as the client. The ordering of this
// slice is not guaranteed to be stable across updates.
func (Tenancy) Values() []Tenancy {
	return []Tenancy{
		"DEDICATED",
		"SHARED",
	}
}

type WorkspaceBundleState string

// Enum values for WorkspaceBundleState
const (
	WorkspaceBundleStateAvailable WorkspaceBundleState = "AVAILABLE"
	WorkspaceBundleStatePending   WorkspaceBundleState = "PENDING"
	WorkspaceBundleStateError     WorkspaceBundleState = "ERROR"
)

// Values returns all known values for WorkspaceBundleState. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (WorkspaceBundleState) Values() []WorkspaceBundleState {
	return []WorkspaceBundleState{
		"AVAILABLE",
		"PENDING",
		"ERROR",
	}
}

type WorkspaceDirectoryState string

// Enum values for WorkspaceDirectoryState
const (
	WorkspaceDirectoryStateRegistering   WorkspaceDirectoryState = "REGISTERING"
	WorkspaceDirectoryStateRegistered    WorkspaceDirectoryState = "REGISTERED"
	WorkspaceDirectoryStateDeregistering WorkspaceDirectoryState = "DEREGISTERING"
	WorkspaceDirectoryStateDeregistered  WorkspaceDirectoryState = "DEREGISTERED"
	WorkspaceDirectoryStateError         WorkspaceDirectoryState = "ERROR"
)

// Values returns all known values for WorkspaceDirectoryState. Note that this can
// be expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (WorkspaceDirectoryState) Values() []WorkspaceDirectoryState {
	return []WorkspaceDirectoryState{
		"REGISTERING",
		"REGISTERED",
		"DEREGISTERING",
		"DEREGISTERED",
		"ERROR",
	}
}

type WorkspaceDirectoryType string

// Enum values for WorkspaceDirectoryType
const (
	WorkspaceDirectoryTypeSimpleAd    WorkspaceDirectoryType = "SIMPLE_AD"
	WorkspaceDirectoryTypeAdConnector WorkspaceDirectoryType = "AD_CONNECTOR"
)

// Values returns all known values for WorkspaceDirectoryType. Note that this can
// be expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (WorkspaceDirectoryType) Values() []WorkspaceDirectoryType {
	return []WorkspaceDirectoryType{
		"SIMPLE_AD",
		"AD_CONNECTOR",
	}
}

type WorkspaceImageIngestionProcess string

// Enum values for WorkspaceImageIngestionProcess
const (
	WorkspaceImageIngestionProcessByolRegular          WorkspaceImageIngestionProcess = "BYOL_REGULAR"
	WorkspaceImageIngestionProcessByolGraphics         WorkspaceImageIngestionProcess = "BYOL_GRAPHICS"
	WorkspaceImageIngestionProcessByolGraphicspro      WorkspaceImageIngestionProcess = "BYOL_GRAPHICSPRO"
	WorkspaceImageIngestionProcessByolGraphicsG4dn     WorkspaceImageIngestionProcess = "BYOL_GRAPHICS_G4DN"
	WorkspaceImageIngestionProcessByolRegularWsp       WorkspaceImageIngestionProcess = "BYOL_REGULAR_WSP"
	WorkspaceImageIngestionProcessByolRegularByop      WorkspaceImageIngestionProcess = "BYOL_REGULAR_BYOP"
	WorkspaceImageIngestionProcessByolGraphicsG4dnByop WorkspaceImageIngestionProcess = "BYOL_GRAPHICS_G4DN_BYOP"
)

// Values returns all known values for WorkspaceImageIngestionProcess. Note that
// this can be expanded in the future, and so it is only as up to date as the
// client. The ordering of this slice is not guaranteed to be stable across
// updates.
func (WorkspaceImageIngestionProcess) Values() []WorkspaceImageIngestionProcess {
	return []WorkspaceImageIngestionProcess{
		"BYOL_REGULAR",
		"BYOL_GRAPHICS",
		"BYOL_GRAPHICSPRO",
		"BYOL_GRAPHICS_G4DN",
		"BYOL_REGULAR_WSP",
		"BYOL_REGULAR_BYOP",
		"BYOL_GRAPHICS_G4DN_BYOP",
	}
}

type WorkspaceImageRequiredTenancy string

// Enum values for WorkspaceImageRequiredTenancy
const (
	WorkspaceImageRequiredTenancyDefault   WorkspaceImageRequiredTenancy = "DEFAULT"
	WorkspaceImageRequiredTenancyDedicated WorkspaceImageRequiredTenancy = "DEDICATED"
)

// Values returns all known values for WorkspaceImageRequiredTenancy. Note that
// this can be expanded in the future, and so it is only as up to date as the
// client. The ordering of this slice is not guaranteed to be stable across
// updates.
func (WorkspaceImageRequiredTenancy) Values() []WorkspaceImageRequiredTenancy {
	return []WorkspaceImageRequiredTenancy{
		"DEFAULT",
		"DEDICATED",
	}
}

type WorkspaceImageState string

// Enum values for WorkspaceImageState
const (
	WorkspaceImageStateAvailable WorkspaceImageState = "AVAILABLE"
	WorkspaceImageStatePending   WorkspaceImageState = "PENDING"
	WorkspaceImageStateError     WorkspaceImageState = "ERROR"
)

// Values returns all known values for WorkspaceImageState. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (WorkspaceImageState) Values() []WorkspaceImageState {
	return []WorkspaceImageState{
		"AVAILABLE",
		"PENDING",
		"ERROR",
	}
}

type WorkspaceState string

// Enum values for WorkspaceState
const (
	WorkspaceStatePending          WorkspaceState = "PENDING"
	WorkspaceStateAvailable        WorkspaceState = "AVAILABLE"
	WorkspaceStateImpaired         WorkspaceState = "IMPAIRED"
	WorkspaceStateUnhealthy        WorkspaceState = "UNHEALTHY"
	WorkspaceStateRebooting        WorkspaceState = "REBOOTING"
	WorkspaceStateStarting         WorkspaceState = "STARTING"
	WorkspaceStateRebuilding       WorkspaceState = "REBUILDING"
	WorkspaceStateRestoring        WorkspaceState = "RESTORING"
	WorkspaceStateMaintenance      WorkspaceState = "MAINTENANCE"
	WorkspaceStateAdminMaintenance WorkspaceState = "ADMIN_MAINTENANCE"
	WorkspaceStateTerminating      WorkspaceState = "TERMINATING"
	WorkspaceStateTerminated       WorkspaceState = "TERMINATED"
	WorkspaceStateSuspended        WorkspaceState = "SUSPENDED"
	WorkspaceStateUpdating         WorkspaceState = "UPDATING"
	WorkspaceStateStopping         WorkspaceState = "STOPPING"
	WorkspaceStateStopped          WorkspaceState = "STOPPED"
	WorkspaceStateError            WorkspaceState = "ERROR"
)

// Values returns all known values for WorkspaceState. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (WorkspaceState) Values() []WorkspaceState {
	return []WorkspaceState{
		"PENDING",
		"AVAILABLE",
		"IMPAIRED",
		"UNHEALTHY",
		"REBOOTING",
		"STARTING",
		"REBUILDING",
		"RESTORING",
		"MAINTENANCE",
		"ADMIN_MAINTENANCE",
		"TERMINATING",
		"TERMINATED",
		"SUSPENDED",
		"UPDATING",
		"STOPPING",
		"STOPPED",
		"ERROR",
	}
}
