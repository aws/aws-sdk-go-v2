// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package types

import (
	"fmt"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/internal/awsutil"
	"github.com/aws/aws-sdk-go-v2/service/workspaces/enums"
)

type ImportWorkspaceImageInput struct {
	_ struct{} `type:"structure"`

	// The identifier of the EC2 image.
	//
	// Ec2ImageId is a required field
	Ec2ImageId *string `type:"string" required:"true"`

	// The description of the WorkSpace image.
	//
	// ImageDescription is a required field
	ImageDescription *string `min:"1" type:"string" required:"true"`

	// The name of the WorkSpace image.
	//
	// ImageName is a required field
	ImageName *string `min:"1" type:"string" required:"true"`

	// The ingestion process to be used when importing the image.
	//
	// IngestionProcess is a required field
	IngestionProcess enums.WorkspaceImageIngestionProcess `type:"string" required:"true" enum:"true"`

	// The tags. Each WorkSpaces resource can have a maximum of 50 tags.
	Tags []Tag `type:"list"`
}

// String returns the string representation
func (s ImportWorkspaceImageInput) String() string {
	return awsutil.Prettify(s)
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *ImportWorkspaceImageInput) Validate() error {
	invalidParams := aws.ErrInvalidParams{Context: "ImportWorkspaceImageInput"}

	if s.Ec2ImageId == nil {
		invalidParams.Add(aws.NewErrParamRequired("Ec2ImageId"))
	}

	if s.ImageDescription == nil {
		invalidParams.Add(aws.NewErrParamRequired("ImageDescription"))
	}
	if s.ImageDescription != nil && len(*s.ImageDescription) < 1 {
		invalidParams.Add(aws.NewErrParamMinLen("ImageDescription", 1))
	}

	if s.ImageName == nil {
		invalidParams.Add(aws.NewErrParamRequired("ImageName"))
	}
	if s.ImageName != nil && len(*s.ImageName) < 1 {
		invalidParams.Add(aws.NewErrParamMinLen("ImageName", 1))
	}
	if len(s.IngestionProcess) == 0 {
		invalidParams.Add(aws.NewErrParamRequired("IngestionProcess"))
	}
	if s.Tags != nil {
		for i, v := range s.Tags {
			if err := v.Validate(); err != nil {
				invalidParams.AddNested(fmt.Sprintf("%s[%v]", "Tags", i), err.(aws.ErrInvalidParams))
			}
		}
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

type ImportWorkspaceImageOutput struct {
	_ struct{} `type:"structure"`

	// The identifier of the WorkSpace image.
	ImageId *string `type:"string"`
}

// String returns the string representation
func (s ImportWorkspaceImageOutput) String() string {
	return awsutil.Prettify(s)
}
