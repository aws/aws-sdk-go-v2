// Code generated by smithy-go-codegen DO NOT EDIT.

package types

import (
	"fmt"
	smithy "github.com/awslabs/smithy-go"
	"github.com/awslabs/smithy-go/ptr"
)

// The user is not authorized to access a resource.
type AccessDeniedException struct {
	Message *string
}

func (e *AccessDeniedException) Error() string {
	return fmt.Sprintf("%s: %s", e.ErrorCode(), e.ErrorMessage())
}
func (e *AccessDeniedException) ErrorMessage() string {
	if e.Message == nil {
		return ""
	}
	return *e.Message
}
func (e *AccessDeniedException) ErrorCode() string             { return "AccessDeniedException" }
func (e *AccessDeniedException) ErrorFault() smithy.ErrorFault { return smithy.FaultClient }
func (e *AccessDeniedException) GetMessage() string {
	return ptr.ToString(e.Message)
}
func (e *AccessDeniedException) HasMessage() bool {
	return e.Message != nil
}

// One or more parameter values are not valid.
type InvalidParameterValuesException struct {
	Message *string
}

func (e *InvalidParameterValuesException) Error() string {
	return fmt.Sprintf("%s: %s", e.ErrorCode(), e.ErrorMessage())
}
func (e *InvalidParameterValuesException) ErrorMessage() string {
	if e.Message == nil {
		return ""
	}
	return *e.Message
}
func (e *InvalidParameterValuesException) ErrorCode() string {
	return "InvalidParameterValuesException"
}
func (e *InvalidParameterValuesException) ErrorFault() smithy.ErrorFault { return smithy.FaultClient }
func (e *InvalidParameterValuesException) GetMessage() string {
	return ptr.ToString(e.Message)
}
func (e *InvalidParameterValuesException) HasMessage() bool {
	return e.Message != nil
}

// The state of the resource is not valid for this operation.
type InvalidResourceStateException struct {
	Message *string
}

func (e *InvalidResourceStateException) Error() string {
	return fmt.Sprintf("%s: %s", e.ErrorCode(), e.ErrorMessage())
}
func (e *InvalidResourceStateException) ErrorMessage() string {
	if e.Message == nil {
		return ""
	}
	return *e.Message
}
func (e *InvalidResourceStateException) ErrorCode() string             { return "InvalidResourceStateException" }
func (e *InvalidResourceStateException) ErrorFault() smithy.ErrorFault { return smithy.FaultClient }
func (e *InvalidResourceStateException) GetMessage() string {
	return ptr.ToString(e.Message)
}
func (e *InvalidResourceStateException) HasMessage() bool {
	return e.Message != nil
}

// The properties of this WorkSpace are currently being modified. Try again in a
// moment.
type OperationInProgressException struct {
	Message *string
}

func (e *OperationInProgressException) Error() string {
	return fmt.Sprintf("%s: %s", e.ErrorCode(), e.ErrorMessage())
}
func (e *OperationInProgressException) ErrorMessage() string {
	if e.Message == nil {
		return ""
	}
	return *e.Message
}
func (e *OperationInProgressException) ErrorCode() string             { return "OperationInProgressException" }
func (e *OperationInProgressException) ErrorFault() smithy.ErrorFault { return smithy.FaultClient }
func (e *OperationInProgressException) GetMessage() string {
	return ptr.ToString(e.Message)
}
func (e *OperationInProgressException) HasMessage() bool {
	return e.Message != nil
}

// This operation is not supported.
type OperationNotSupportedException struct {
	Message *string
}

func (e *OperationNotSupportedException) Error() string {
	return fmt.Sprintf("%s: %s", e.ErrorCode(), e.ErrorMessage())
}
func (e *OperationNotSupportedException) ErrorMessage() string {
	if e.Message == nil {
		return ""
	}
	return *e.Message
}
func (e *OperationNotSupportedException) ErrorCode() string             { return "OperationNotSupportedException" }
func (e *OperationNotSupportedException) ErrorFault() smithy.ErrorFault { return smithy.FaultClient }
func (e *OperationNotSupportedException) GetMessage() string {
	return ptr.ToString(e.Message)
}
func (e *OperationNotSupportedException) HasMessage() bool {
	return e.Message != nil
}

// The specified resource already exists.
type ResourceAlreadyExistsException struct {
	Message *string
}

func (e *ResourceAlreadyExistsException) Error() string {
	return fmt.Sprintf("%s: %s", e.ErrorCode(), e.ErrorMessage())
}
func (e *ResourceAlreadyExistsException) ErrorMessage() string {
	if e.Message == nil {
		return ""
	}
	return *e.Message
}
func (e *ResourceAlreadyExistsException) ErrorCode() string             { return "ResourceAlreadyExistsException" }
func (e *ResourceAlreadyExistsException) ErrorFault() smithy.ErrorFault { return smithy.FaultClient }
func (e *ResourceAlreadyExistsException) GetMessage() string {
	return ptr.ToString(e.Message)
}
func (e *ResourceAlreadyExistsException) HasMessage() bool {
	return e.Message != nil
}

// The resource is associated with a directory.
type ResourceAssociatedException struct {
	Message *string
}

func (e *ResourceAssociatedException) Error() string {
	return fmt.Sprintf("%s: %s", e.ErrorCode(), e.ErrorMessage())
}
func (e *ResourceAssociatedException) ErrorMessage() string {
	if e.Message == nil {
		return ""
	}
	return *e.Message
}
func (e *ResourceAssociatedException) ErrorCode() string             { return "ResourceAssociatedException" }
func (e *ResourceAssociatedException) ErrorFault() smithy.ErrorFault { return smithy.FaultClient }
func (e *ResourceAssociatedException) GetMessage() string {
	return ptr.ToString(e.Message)
}
func (e *ResourceAssociatedException) HasMessage() bool {
	return e.Message != nil
}

// The resource could not be created.
type ResourceCreationFailedException struct {
	Message *string
}

func (e *ResourceCreationFailedException) Error() string {
	return fmt.Sprintf("%s: %s", e.ErrorCode(), e.ErrorMessage())
}
func (e *ResourceCreationFailedException) ErrorMessage() string {
	if e.Message == nil {
		return ""
	}
	return *e.Message
}
func (e *ResourceCreationFailedException) ErrorCode() string {
	return "ResourceCreationFailedException"
}
func (e *ResourceCreationFailedException) ErrorFault() smithy.ErrorFault { return smithy.FaultClient }
func (e *ResourceCreationFailedException) GetMessage() string {
	return ptr.ToString(e.Message)
}
func (e *ResourceCreationFailedException) HasMessage() bool {
	return e.Message != nil
}

// Your resource limits have been exceeded.
type ResourceLimitExceededException struct {
	Message *string
}

func (e *ResourceLimitExceededException) Error() string {
	return fmt.Sprintf("%s: %s", e.ErrorCode(), e.ErrorMessage())
}
func (e *ResourceLimitExceededException) ErrorMessage() string {
	if e.Message == nil {
		return ""
	}
	return *e.Message
}
func (e *ResourceLimitExceededException) ErrorCode() string             { return "ResourceLimitExceededException" }
func (e *ResourceLimitExceededException) ErrorFault() smithy.ErrorFault { return smithy.FaultClient }
func (e *ResourceLimitExceededException) GetMessage() string {
	return ptr.ToString(e.Message)
}
func (e *ResourceLimitExceededException) HasMessage() bool {
	return e.Message != nil
}

// The resource could not be found.
type ResourceNotFoundException struct {
	Message *string

	ResourceId *string
}

func (e *ResourceNotFoundException) Error() string {
	return fmt.Sprintf("%s: %s", e.ErrorCode(), e.ErrorMessage())
}
func (e *ResourceNotFoundException) ErrorMessage() string {
	if e.Message == nil {
		return ""
	}
	return *e.Message
}
func (e *ResourceNotFoundException) ErrorCode() string             { return "ResourceNotFoundException" }
func (e *ResourceNotFoundException) ErrorFault() smithy.ErrorFault { return smithy.FaultClient }
func (e *ResourceNotFoundException) GetMessage() string {
	return ptr.ToString(e.Message)
}
func (e *ResourceNotFoundException) HasMessage() bool {
	return e.Message != nil
}
func (e *ResourceNotFoundException) GetResourceId() string {
	return ptr.ToString(e.ResourceId)
}
func (e *ResourceNotFoundException) HasResourceId() bool {
	return e.ResourceId != nil
}

// The specified resource is not available.
type ResourceUnavailableException struct {
	Message *string

	ResourceId *string
}

func (e *ResourceUnavailableException) Error() string {
	return fmt.Sprintf("%s: %s", e.ErrorCode(), e.ErrorMessage())
}
func (e *ResourceUnavailableException) ErrorMessage() string {
	if e.Message == nil {
		return ""
	}
	return *e.Message
}
func (e *ResourceUnavailableException) ErrorCode() string             { return "ResourceUnavailableException" }
func (e *ResourceUnavailableException) ErrorFault() smithy.ErrorFault { return smithy.FaultClient }
func (e *ResourceUnavailableException) GetMessage() string {
	return ptr.ToString(e.Message)
}
func (e *ResourceUnavailableException) HasMessage() bool {
	return e.Message != nil
}
func (e *ResourceUnavailableException) GetResourceId() string {
	return ptr.ToString(e.ResourceId)
}
func (e *ResourceUnavailableException) HasResourceId() bool {
	return e.ResourceId != nil
}

// The configuration of this network is not supported for this operation, or your
// network configuration conflicts with the Amazon WorkSpaces management network IP
// range. For more information, see  Configure a VPC for Amazon WorkSpaces
// (https://docs.aws.amazon.com/workspaces/latest/adminguide/amazon-workspaces-vpc.html).
type UnsupportedNetworkConfigurationException struct {
	Message *string
}

func (e *UnsupportedNetworkConfigurationException) Error() string {
	return fmt.Sprintf("%s: %s", e.ErrorCode(), e.ErrorMessage())
}
func (e *UnsupportedNetworkConfigurationException) ErrorMessage() string {
	if e.Message == nil {
		return ""
	}
	return *e.Message
}
func (e *UnsupportedNetworkConfigurationException) ErrorCode() string {
	return "UnsupportedNetworkConfigurationException"
}
func (e *UnsupportedNetworkConfigurationException) ErrorFault() smithy.ErrorFault {
	return smithy.FaultClient
}
func (e *UnsupportedNetworkConfigurationException) GetMessage() string {
	return ptr.ToString(e.Message)
}
func (e *UnsupportedNetworkConfigurationException) HasMessage() bool {
	return e.Message != nil
}

// The configuration of this WorkSpace is not supported for this operation. For
// more information, see Required Configuration and Service Components for
// WorkSpaces
// (https://docs.aws.amazon.com/workspaces/latest/adminguide/required-service-components.html).
type UnsupportedWorkspaceConfigurationException struct {
	Message *string
}

func (e *UnsupportedWorkspaceConfigurationException) Error() string {
	return fmt.Sprintf("%s: %s", e.ErrorCode(), e.ErrorMessage())
}
func (e *UnsupportedWorkspaceConfigurationException) ErrorMessage() string {
	if e.Message == nil {
		return ""
	}
	return *e.Message
}
func (e *UnsupportedWorkspaceConfigurationException) ErrorCode() string {
	return "UnsupportedWorkspaceConfigurationException"
}
func (e *UnsupportedWorkspaceConfigurationException) ErrorFault() smithy.ErrorFault {
	return smithy.FaultClient
}
func (e *UnsupportedWorkspaceConfigurationException) GetMessage() string {
	return ptr.ToString(e.Message)
}
func (e *UnsupportedWorkspaceConfigurationException) HasMessage() bool {
	return e.Message != nil
}

// The workspaces_DefaultRole role could not be found. If this is the first time
// you are registering a directory, you will need to create the
// workspaces_DefaultRole role before you can register a directory. For more
// information, see Creating the workspaces_DefaultRole Role
// (https://docs.aws.amazon.com/workspaces/latest/adminguide/workspaces-access-control.html#create-default-role).
type WorkspacesDefaultRoleNotFoundException struct {
	Message *string
}

func (e *WorkspacesDefaultRoleNotFoundException) Error() string {
	return fmt.Sprintf("%s: %s", e.ErrorCode(), e.ErrorMessage())
}
func (e *WorkspacesDefaultRoleNotFoundException) ErrorMessage() string {
	if e.Message == nil {
		return ""
	}
	return *e.Message
}
func (e *WorkspacesDefaultRoleNotFoundException) ErrorCode() string {
	return "WorkspacesDefaultRoleNotFoundException"
}
func (e *WorkspacesDefaultRoleNotFoundException) ErrorFault() smithy.ErrorFault {
	return smithy.FaultClient
}
func (e *WorkspacesDefaultRoleNotFoundException) GetMessage() string {
	return ptr.ToString(e.Message)
}
func (e *WorkspacesDefaultRoleNotFoundException) HasMessage() bool {
	return e.Message != nil
}
