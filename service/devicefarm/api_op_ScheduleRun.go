// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package devicefarm

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/devicefarm/types"
)

const opScheduleRun = "ScheduleRun"

// ScheduleRunRequest returns a request value for making API operation for
// AWS Device Farm.
//
// Schedules a run.
//
//    // Example sending a request using ScheduleRunRequest.
//    req := client.ScheduleRunRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/devicefarm-2015-06-23/ScheduleRun
func (c *Client) ScheduleRunRequest(input *types.ScheduleRunInput) ScheduleRunRequest {
	op := &aws.Operation{
		Name:       opScheduleRun,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &types.ScheduleRunInput{}
	}

	req := c.newRequest(op, input, &types.ScheduleRunOutput{})
	return ScheduleRunRequest{Request: req, Input: input, Copy: c.ScheduleRunRequest}
}

// ScheduleRunRequest is the request type for the
// ScheduleRun API operation.
type ScheduleRunRequest struct {
	*aws.Request
	Input *types.ScheduleRunInput
	Copy  func(*types.ScheduleRunInput) ScheduleRunRequest
}

// Send marshals and sends the ScheduleRun API request.
func (r ScheduleRunRequest) Send(ctx context.Context) (*ScheduleRunResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &ScheduleRunResponse{
		ScheduleRunOutput: r.Request.Data.(*types.ScheduleRunOutput),
		response:          &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// ScheduleRunResponse is the response type for the
// ScheduleRun API operation.
type ScheduleRunResponse struct {
	*types.ScheduleRunOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// ScheduleRun request.
func (r *ScheduleRunResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
