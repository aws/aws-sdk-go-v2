// Code generated by smithy-go-codegen DO NOT EDIT.

package devicefarm

import (
	"context"
	awsmiddleware "github.com/aws/aws-sdk-go-v2/aws/middleware"
	"github.com/aws/aws-sdk-go-v2/aws/signer/v4"
	"github.com/awslabs/smithy-go/middleware"
	smithyhttp "github.com/awslabs/smithy-go/transport/http"
	"time"
)

// Creates a signed, short-term URL that can be passed to a Selenium
// RemoteWebDriver constructor.
func (c *Client) CreateTestGridUrl(ctx context.Context, params *CreateTestGridUrlInput, optFns ...func(*Options)) (*CreateTestGridUrlOutput, error) {
	if params == nil {
		params = &CreateTestGridUrlInput{}
	}

	result, metadata, err := c.invokeOperation(ctx, "CreateTestGridUrl", params, optFns, addOperationCreateTestGridUrlMiddlewares)
	if err != nil {
		return nil, err
	}

	out := result.(*CreateTestGridUrlOutput)
	out.ResultMetadata = metadata
	return out, nil
}

type CreateTestGridUrlInput struct {

	// Lifetime, in seconds, of the URL.
	//
	// This member is required.
	ExpiresInSeconds *int32

	// ARN (from CreateTestGridProject or ListTestGridProjects) to associate with the
	// short-term URL.
	//
	// This member is required.
	ProjectArn *string
}

type CreateTestGridUrlOutput struct {

	// The number of seconds the URL from CreateTestGridUrlResult$url stays active.
	Expires *time.Time

	// A signed URL, expiring in CreateTestGridUrlRequest$expiresInSeconds seconds, to
	// be passed to a RemoteWebDriver.
	Url *string

	// Metadata pertaining to the operation's result.
	ResultMetadata middleware.Metadata
}

func addOperationCreateTestGridUrlMiddlewares(stack *middleware.Stack, options Options) (err error) {
	err = stack.Serialize.Add(&awsAwsjson11_serializeOpCreateTestGridUrl{}, middleware.After)
	if err != nil {
		return err
	}
	err = stack.Deserialize.Add(&awsAwsjson11_deserializeOpCreateTestGridUrl{}, middleware.After)
	if err != nil {
		return err
	}
	awsmiddleware.AddRequestInvocationIDMiddleware(stack)
	smithyhttp.AddContentLengthMiddleware(stack)
	addResolveEndpointMiddleware(stack, options)
	v4.AddComputePayloadSHA256Middleware(stack)
	addRetryMiddlewares(stack, options)
	addHTTPSignerV4Middleware(stack, options)
	awsmiddleware.AddAttemptClockSkewMiddleware(stack)
	addClientUserAgent(stack)
	smithyhttp.AddErrorCloseResponseBodyMiddleware(stack)
	smithyhttp.AddCloseResponseBodyMiddleware(stack)
	addOpCreateTestGridUrlValidationMiddleware(stack)
	stack.Initialize.Add(newServiceMetadataMiddleware_opCreateTestGridUrl(options.Region), middleware.Before)
	addRequestIDRetrieverMiddleware(stack)
	addResponseErrorMiddleware(stack)
	return nil
}

func newServiceMetadataMiddleware_opCreateTestGridUrl(region string) awsmiddleware.RegisterServiceMetadata {
	return awsmiddleware.RegisterServiceMetadata{
		Region:        region,
		ServiceID:     ServiceID,
		SigningName:   "devicefarm",
		OperationName: "CreateTestGridUrl",
	}
}
