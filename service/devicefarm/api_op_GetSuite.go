// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package devicefarm

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/devicefarm/types"
)

const opGetSuite = "GetSuite"

// GetSuiteRequest returns a request value for making API operation for
// AWS Device Farm.
//
// Gets information about a suite.
//
//    // Example sending a request using GetSuiteRequest.
//    req := client.GetSuiteRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/devicefarm-2015-06-23/GetSuite
func (c *Client) GetSuiteRequest(input *types.GetSuiteInput) GetSuiteRequest {
	op := &aws.Operation{
		Name:       opGetSuite,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &types.GetSuiteInput{}
	}

	req := c.newRequest(op, input, &types.GetSuiteOutput{})
	return GetSuiteRequest{Request: req, Input: input, Copy: c.GetSuiteRequest}
}

// GetSuiteRequest is the request type for the
// GetSuite API operation.
type GetSuiteRequest struct {
	*aws.Request
	Input *types.GetSuiteInput
	Copy  func(*types.GetSuiteInput) GetSuiteRequest
}

// Send marshals and sends the GetSuite API request.
func (r GetSuiteRequest) Send(ctx context.Context) (*GetSuiteResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &GetSuiteResponse{
		GetSuiteOutput: r.Request.Data.(*types.GetSuiteOutput),
		response:       &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// GetSuiteResponse is the response type for the
// GetSuite API operation.
type GetSuiteResponse struct {
	*types.GetSuiteOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// GetSuite request.
func (r *GetSuiteResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
