// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package types

import (
	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/internal/awsutil"
)

type UpdateUploadInput struct {
	_ struct{} `type:"structure"`

	// The Amazon Resource Name (ARN) of the uploaded test spec.
	//
	// Arn is a required field
	Arn *string `locationName:"arn" min:"32" type:"string" required:"true"`

	// The upload's content type (for example, "application/x-yaml").
	ContentType *string `locationName:"contentType" type:"string"`

	// Set to true if the YAML file has changed and needs to be updated; otherwise,
	// set to false.
	EditContent *bool `locationName:"editContent" type:"boolean"`

	// The upload's test spec file name. The name should not contain the '/' character.
	// The test spec file name must end with the .yaml or .yml file extension.
	Name *string `locationName:"name" type:"string"`
}

// String returns the string representation
func (s UpdateUploadInput) String() string {
	return awsutil.Prettify(s)
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *UpdateUploadInput) Validate() error {
	invalidParams := aws.ErrInvalidParams{Context: "UpdateUploadInput"}

	if s.Arn == nil {
		invalidParams.Add(aws.NewErrParamRequired("Arn"))
	}
	if s.Arn != nil && len(*s.Arn) < 32 {
		invalidParams.Add(aws.NewErrParamMinLen("Arn", 32))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

type UpdateUploadOutput struct {
	_ struct{} `type:"structure"`

	// A test spec uploaded to Device Farm.
	Upload *Upload `locationName:"upload" type:"structure"`
}

// String returns the string representation
func (s UpdateUploadOutput) String() string {
	return awsutil.Prettify(s)
}
