// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package devicefarm

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/devicefarm/types"
)

const opGetUpload = "GetUpload"

// GetUploadRequest returns a request value for making API operation for
// AWS Device Farm.
//
// Gets information about an upload.
//
//    // Example sending a request using GetUploadRequest.
//    req := client.GetUploadRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/devicefarm-2015-06-23/GetUpload
func (c *Client) GetUploadRequest(input *types.GetUploadInput) GetUploadRequest {
	op := &aws.Operation{
		Name:       opGetUpload,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &types.GetUploadInput{}
	}

	req := c.newRequest(op, input, &types.GetUploadOutput{})
	return GetUploadRequest{Request: req, Input: input, Copy: c.GetUploadRequest}
}

// GetUploadRequest is the request type for the
// GetUpload API operation.
type GetUploadRequest struct {
	*aws.Request
	Input *types.GetUploadInput
	Copy  func(*types.GetUploadInput) GetUploadRequest
}

// Send marshals and sends the GetUpload API request.
func (r GetUploadRequest) Send(ctx context.Context) (*GetUploadResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &GetUploadResponse{
		GetUploadOutput: r.Request.Data.(*types.GetUploadOutput),
		response:        &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// GetUploadResponse is the response type for the
// GetUpload API operation.
type GetUploadResponse struct {
	*types.GetUploadOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// GetUpload request.
func (r *GetUploadResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
