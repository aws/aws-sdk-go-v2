// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package devicefarm

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/devicefarm/types"
)

const opUpdateDevicePool = "UpdateDevicePool"

// UpdateDevicePoolRequest returns a request value for making API operation for
// AWS Device Farm.
//
// Modifies the name, description, and rules in a device pool given the attributes
// and the pool ARN. Rule updates are all-or-nothing, meaning they can only
// be updated as a whole (or not at all).
//
//    // Example sending a request using UpdateDevicePoolRequest.
//    req := client.UpdateDevicePoolRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/devicefarm-2015-06-23/UpdateDevicePool
func (c *Client) UpdateDevicePoolRequest(input *types.UpdateDevicePoolInput) UpdateDevicePoolRequest {
	op := &aws.Operation{
		Name:       opUpdateDevicePool,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &types.UpdateDevicePoolInput{}
	}

	req := c.newRequest(op, input, &types.UpdateDevicePoolOutput{})
	return UpdateDevicePoolRequest{Request: req, Input: input, Copy: c.UpdateDevicePoolRequest}
}

// UpdateDevicePoolRequest is the request type for the
// UpdateDevicePool API operation.
type UpdateDevicePoolRequest struct {
	*aws.Request
	Input *types.UpdateDevicePoolInput
	Copy  func(*types.UpdateDevicePoolInput) UpdateDevicePoolRequest
}

// Send marshals and sends the UpdateDevicePool API request.
func (r UpdateDevicePoolRequest) Send(ctx context.Context) (*UpdateDevicePoolResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &UpdateDevicePoolResponse{
		UpdateDevicePoolOutput: r.Request.Data.(*types.UpdateDevicePoolOutput),
		response:               &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// UpdateDevicePoolResponse is the response type for the
// UpdateDevicePool API operation.
type UpdateDevicePoolResponse struct {
	*types.UpdateDevicePoolOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// UpdateDevicePool request.
func (r *UpdateDevicePoolResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
