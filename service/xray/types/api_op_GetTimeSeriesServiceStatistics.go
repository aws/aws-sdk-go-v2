// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package types

import (
	"time"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/internal/awsutil"
)

type GetTimeSeriesServiceStatisticsInput struct {
	_ struct{} `type:"structure"`

	// The end of the time frame for which to aggregate statistics.
	//
	// EndTime is a required field
	EndTime *time.Time `type:"timestamp" required:"true"`

	// A filter expression defining entities that will be aggregated for statistics.
	// Supports ID, service, and edge functions. If no selector expression is specified,
	// edge statistics are returned.
	EntitySelectorExpression *string `min:"1" type:"string"`

	// The ARN of the group for which to pull statistics from.
	GroupARN *string `min:"1" type:"string"`

	// The case-sensitive name of the group for which to pull statistics from.
	GroupName *string `min:"1" type:"string"`

	// Pagination token. Not used.
	NextToken *string `type:"string"`

	// Aggregation period in seconds.
	Period *int64 `type:"integer"`

	// The start of the time frame for which to aggregate statistics.
	//
	// StartTime is a required field
	StartTime *time.Time `type:"timestamp" required:"true"`
}

// String returns the string representation
func (s GetTimeSeriesServiceStatisticsInput) String() string {
	return awsutil.Prettify(s)
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *GetTimeSeriesServiceStatisticsInput) Validate() error {
	invalidParams := aws.ErrInvalidParams{Context: "GetTimeSeriesServiceStatisticsInput"}

	if s.EndTime == nil {
		invalidParams.Add(aws.NewErrParamRequired("EndTime"))
	}
	if s.EntitySelectorExpression != nil && len(*s.EntitySelectorExpression) < 1 {
		invalidParams.Add(aws.NewErrParamMinLen("EntitySelectorExpression", 1))
	}
	if s.GroupARN != nil && len(*s.GroupARN) < 1 {
		invalidParams.Add(aws.NewErrParamMinLen("GroupARN", 1))
	}
	if s.GroupName != nil && len(*s.GroupName) < 1 {
		invalidParams.Add(aws.NewErrParamMinLen("GroupName", 1))
	}

	if s.StartTime == nil {
		invalidParams.Add(aws.NewErrParamRequired("StartTime"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

type GetTimeSeriesServiceStatisticsOutput struct {
	_ struct{} `type:"structure"`

	// A flag indicating whether or not a group's filter expression has been consistent,
	// or if a returned aggregation may show statistics from an older version of
	// the group's filter expression.
	ContainsOldGroupVersions *bool `type:"boolean"`

	// Pagination token. Not used.
	NextToken *string `type:"string"`

	// The collection of statistics.
	TimeSeriesServiceStatistics []TimeSeriesServiceStatistics `type:"list"`
}

// String returns the string representation
func (s GetTimeSeriesServiceStatisticsOutput) String() string {
	return awsutil.Prettify(s)
}
