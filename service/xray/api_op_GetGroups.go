// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package xray

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/internal/awsutil"
	"github.com/aws/aws-sdk-go-v2/private/protocol"
)

// Please also see https://docs.aws.amazon.com/goto/WebAPI/xray-2016-04-12/GetGroupsRequest
type GetGroupsInput struct {
	_ struct{} `type:"structure"`

	// Pagination token. Not used.
	NextToken *string `min:"1" type:"string"`
}

// String returns the string representation
func (s GetGroupsInput) String() string {
	return awsutil.Prettify(s)
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *GetGroupsInput) Validate() error {
	invalidParams := aws.ErrInvalidParams{Context: "GetGroupsInput"}
	if s.NextToken != nil && len(*s.NextToken) < 1 {
		invalidParams.Add(aws.NewErrParamMinLen("NextToken", 1))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// MarshalFields encodes the AWS API shape using the passed in protocol encoder.
func (s GetGroupsInput) MarshalFields(e protocol.FieldEncoder) error {

	if s.NextToken != nil {
		v := *s.NextToken

		metadata := protocol.Metadata{}
		e.SetValue(protocol.BodyTarget, "NextToken", protocol.QuotedValue{ValueMarshaler: protocol.StringValue(v)}, metadata)
	}
	return nil
}

// Please also see https://docs.aws.amazon.com/goto/WebAPI/xray-2016-04-12/GetGroupsResult
type GetGroupsOutput struct {
	_ struct{} `type:"structure"`

	// The collection of all active groups.
	Groups []GroupSummary `type:"list"`

	// Pagination token. Not used.
	NextToken *string `type:"string"`
}

// String returns the string representation
func (s GetGroupsOutput) String() string {
	return awsutil.Prettify(s)
}

// MarshalFields encodes the AWS API shape using the passed in protocol encoder.
func (s GetGroupsOutput) MarshalFields(e protocol.FieldEncoder) error {
	if len(s.Groups) > 0 {
		v := s.Groups

		metadata := protocol.Metadata{}
		ls0 := e.List(protocol.BodyTarget, "Groups", metadata)
		ls0.Start()
		for _, v1 := range v {
			ls0.ListAddFields(v1)
		}
		ls0.End()

	}
	if s.NextToken != nil {
		v := *s.NextToken

		metadata := protocol.Metadata{}
		e.SetValue(protocol.BodyTarget, "NextToken", protocol.QuotedValue{ValueMarshaler: protocol.StringValue(v)}, metadata)
	}
	return nil
}

const opGetGroups = "GetGroups"

// GetGroupsRequest returns a request value for making API operation for
// AWS X-Ray.
//
// Retrieves all active group details.
//
//    // Example sending a request using GetGroupsRequest.
//    req := client.GetGroupsRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/xray-2016-04-12/GetGroups
func (c *Client) GetGroupsRequest(input *GetGroupsInput) GetGroupsRequest {
	op := &aws.Operation{
		Name:       opGetGroups,
		HTTPMethod: "POST",
		HTTPPath:   "/Groups",
	}

	if input == nil {
		input = &GetGroupsInput{}
	}

	req := c.newRequest(op, input, &GetGroupsOutput{})
	return GetGroupsRequest{Request: req, Input: input, Copy: c.GetGroupsRequest}
}

// GetGroupsRequest is the request type for the
// GetGroups API operation.
type GetGroupsRequest struct {
	*aws.Request
	Input *GetGroupsInput
	Copy  func(*GetGroupsInput) GetGroupsRequest
}

// Send marshals and sends the GetGroups API request.
func (r GetGroupsRequest) Send(ctx context.Context) (*GetGroupsResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &GetGroupsResponse{
		GetGroupsOutput: r.Request.Data.(*GetGroupsOutput),
		response:        &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// GetGroupsResponse is the response type for the
// GetGroups API operation.
type GetGroupsResponse struct {
	*GetGroupsOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// GetGroups request.
func (r *GetGroupsResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
