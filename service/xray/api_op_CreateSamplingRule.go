// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package xray

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/xray/types"
)

const opCreateSamplingRule = "CreateSamplingRule"

// CreateSamplingRuleRequest returns a request value for making API operation for
// AWS X-Ray.
//
// Creates a rule to control sampling behavior for instrumented applications.
// Services retrieve rules with GetSamplingRules, and evaluate each rule in
// ascending order of priority for each request. If a rule matches, the service
// records a trace, borrowing it from the reservoir size. After 10 seconds,
// the service reports back to X-Ray with GetSamplingTargets to get updated
// versions of each in-use rule. The updated rule contains a trace quota that
// the service can use instead of borrowing from the reservoir.
//
//    // Example sending a request using CreateSamplingRuleRequest.
//    req := client.CreateSamplingRuleRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/xray-2016-04-12/CreateSamplingRule
func (c *Client) CreateSamplingRuleRequest(input *types.CreateSamplingRuleInput) CreateSamplingRuleRequest {
	op := &aws.Operation{
		Name:       opCreateSamplingRule,
		HTTPMethod: "POST",
		HTTPPath:   "/CreateSamplingRule",
	}

	if input == nil {
		input = &types.CreateSamplingRuleInput{}
	}

	req := c.newRequest(op, input, &types.CreateSamplingRuleOutput{})
	return CreateSamplingRuleRequest{Request: req, Input: input, Copy: c.CreateSamplingRuleRequest}
}

// CreateSamplingRuleRequest is the request type for the
// CreateSamplingRule API operation.
type CreateSamplingRuleRequest struct {
	*aws.Request
	Input *types.CreateSamplingRuleInput
	Copy  func(*types.CreateSamplingRuleInput) CreateSamplingRuleRequest
}

// Send marshals and sends the CreateSamplingRule API request.
func (r CreateSamplingRuleRequest) Send(ctx context.Context) (*CreateSamplingRuleResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &CreateSamplingRuleResponse{
		CreateSamplingRuleOutput: r.Request.Data.(*types.CreateSamplingRuleOutput),
		response:                 &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// CreateSamplingRuleResponse is the response type for the
// CreateSamplingRule API operation.
type CreateSamplingRuleResponse struct {
	*types.CreateSamplingRuleOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// CreateSamplingRule request.
func (r *CreateSamplingRuleResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
