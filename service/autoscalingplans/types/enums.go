// Code generated by smithy-go-codegen DO NOT EDIT.

package types

type ForecastDataType string

// Enum values for ForecastDataType
const (
	ForecastDataTypeCapacityforecast           ForecastDataType = "CapacityForecast"
	ForecastDataTypeLoadforecast               ForecastDataType = "LoadForecast"
	ForecastDataTypeScheduledactionmincapacity ForecastDataType = "ScheduledActionMinCapacity"
	ForecastDataTypeScheduledactionmaxcapacity ForecastDataType = "ScheduledActionMaxCapacity"
)

// Values returns all known values for ForecastDataType. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (ForecastDataType) Values() []ForecastDataType {
	return []ForecastDataType{
		"CapacityForecast",
		"LoadForecast",
		"ScheduledActionMinCapacity",
		"ScheduledActionMaxCapacity",
	}
}

type LoadMetricType string

// Enum values for LoadMetricType
const (
	LoadMetricTypeAsgtotalcpuutilization     LoadMetricType = "ASGTotalCPUUtilization"
	LoadMetricTypeAsgtotalnetworkin          LoadMetricType = "ASGTotalNetworkIn"
	LoadMetricTypeAsgtotalnetworkout         LoadMetricType = "ASGTotalNetworkOut"
	LoadMetricTypeAlbtargetgrouprequestcount LoadMetricType = "ALBTargetGroupRequestCount"
)

// Values returns all known values for LoadMetricType. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (LoadMetricType) Values() []LoadMetricType {
	return []LoadMetricType{
		"ASGTotalCPUUtilization",
		"ASGTotalNetworkIn",
		"ASGTotalNetworkOut",
		"ALBTargetGroupRequestCount",
	}
}

type MetricStatistic string

// Enum values for MetricStatistic
const (
	MetricStatisticAverage     MetricStatistic = "Average"
	MetricStatisticMinimum     MetricStatistic = "Minimum"
	MetricStatisticMaximum     MetricStatistic = "Maximum"
	MetricStatisticSamplecount MetricStatistic = "SampleCount"
	MetricStatisticSum         MetricStatistic = "Sum"
)

// Values returns all known values for MetricStatistic. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (MetricStatistic) Values() []MetricStatistic {
	return []MetricStatistic{
		"Average",
		"Minimum",
		"Maximum",
		"SampleCount",
		"Sum",
	}
}

type PolicyType string

// Enum values for PolicyType
const (
	PolicyTypeTargettrackingscaling PolicyType = "TargetTrackingScaling"
)

// Values returns all known values for PolicyType. Note that this can be expanded
// in the future, and so it is only as up to date as the client. The ordering of
// this slice is not guaranteed to be stable across updates.
func (PolicyType) Values() []PolicyType {
	return []PolicyType{
		"TargetTrackingScaling",
	}
}

type PredictiveScalingMaxCapacityBehavior string

// Enum values for PredictiveScalingMaxCapacityBehavior
const (
	PredictiveScalingMaxCapacityBehaviorSetforecastcapacitytomaxcapacity    PredictiveScalingMaxCapacityBehavior = "SetForecastCapacityToMaxCapacity"
	PredictiveScalingMaxCapacityBehaviorSetmaxcapacitytoforecastcapacity    PredictiveScalingMaxCapacityBehavior = "SetMaxCapacityToForecastCapacity"
	PredictiveScalingMaxCapacityBehaviorSetmaxcapacityaboveforecastcapacity PredictiveScalingMaxCapacityBehavior = "SetMaxCapacityAboveForecastCapacity"
)

// Values returns all known values for PredictiveScalingMaxCapacityBehavior. Note
// that this can be expanded in the future, and so it is only as up to date as the
// client. The ordering of this slice is not guaranteed to be stable across
// updates.
func (PredictiveScalingMaxCapacityBehavior) Values() []PredictiveScalingMaxCapacityBehavior {
	return []PredictiveScalingMaxCapacityBehavior{
		"SetForecastCapacityToMaxCapacity",
		"SetMaxCapacityToForecastCapacity",
		"SetMaxCapacityAboveForecastCapacity",
	}
}

type PredictiveScalingMode string

// Enum values for PredictiveScalingMode
const (
	PredictiveScalingModeForecastandscale PredictiveScalingMode = "ForecastAndScale"
	PredictiveScalingModeForecastonly     PredictiveScalingMode = "ForecastOnly"
)

// Values returns all known values for PredictiveScalingMode. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (PredictiveScalingMode) Values() []PredictiveScalingMode {
	return []PredictiveScalingMode{
		"ForecastAndScale",
		"ForecastOnly",
	}
}

type ScalableDimension string

// Enum values for ScalableDimension
const (
	ScalableDimensionAutoscalinggroupdesiredcapacity   ScalableDimension = "autoscaling:autoScalingGroup:DesiredCapacity"
	ScalableDimensionEcsservicedesiredcount            ScalableDimension = "ecs:service:DesiredCount"
	ScalableDimensionEc2spotfleetrequesttargetcapacity ScalableDimension = "ec2:spot-fleet-request:TargetCapacity"
	ScalableDimensionRdsclusterreadreplicacount        ScalableDimension = "rds:cluster:ReadReplicaCount"
	ScalableDimensionDynamodbtablereadcapacityunits    ScalableDimension = "dynamodb:table:ReadCapacityUnits"
	ScalableDimensionDynamodbtablewritecapacityunits   ScalableDimension = "dynamodb:table:WriteCapacityUnits"
	ScalableDimensionDynamodbindexreadcapacityunits    ScalableDimension = "dynamodb:index:ReadCapacityUnits"
	ScalableDimensionDynamodbindexwritecapacityunits   ScalableDimension = "dynamodb:index:WriteCapacityUnits"
)

// Values returns all known values for ScalableDimension. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (ScalableDimension) Values() []ScalableDimension {
	return []ScalableDimension{
		"autoscaling:autoScalingGroup:DesiredCapacity",
		"ecs:service:DesiredCount",
		"ec2:spot-fleet-request:TargetCapacity",
		"rds:cluster:ReadReplicaCount",
		"dynamodb:table:ReadCapacityUnits",
		"dynamodb:table:WriteCapacityUnits",
		"dynamodb:index:ReadCapacityUnits",
		"dynamodb:index:WriteCapacityUnits",
	}
}

type ScalingMetricType string

// Enum values for ScalingMetricType
const (
	ScalingMetricTypeAsgaveragecpuutilization                 ScalingMetricType = "ASGAverageCPUUtilization"
	ScalingMetricTypeAsgaveragenetworkin                      ScalingMetricType = "ASGAverageNetworkIn"
	ScalingMetricTypeAsgaveragenetworkout                     ScalingMetricType = "ASGAverageNetworkOut"
	ScalingMetricTypeDynamodbreadcapacityutilization          ScalingMetricType = "DynamoDBReadCapacityUtilization"
	ScalingMetricTypeDynamodbwritecapacityutilization         ScalingMetricType = "DynamoDBWriteCapacityUtilization"
	ScalingMetricTypeEcsserviceaveragecpuutilization          ScalingMetricType = "ECSServiceAverageCPUUtilization"
	ScalingMetricTypeEcsserviceaveragememoryutilization       ScalingMetricType = "ECSServiceAverageMemoryUtilization"
	ScalingMetricTypeAlbrequestcountpertarget                 ScalingMetricType = "ALBRequestCountPerTarget"
	ScalingMetricTypeRdsreaderaveragecpuutilization           ScalingMetricType = "RDSReaderAverageCPUUtilization"
	ScalingMetricTypeRdsreaderaveragedatabaseconnections      ScalingMetricType = "RDSReaderAverageDatabaseConnections"
	ScalingMetricTypeEc2spotfleetrequestaveragecpuutilization ScalingMetricType = "EC2SpotFleetRequestAverageCPUUtilization"
	ScalingMetricTypeEc2spotfleetrequestaveragenetworkin      ScalingMetricType = "EC2SpotFleetRequestAverageNetworkIn"
	ScalingMetricTypeEc2spotfleetrequestaveragenetworkout     ScalingMetricType = "EC2SpotFleetRequestAverageNetworkOut"
)

// Values returns all known values for ScalingMetricType. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (ScalingMetricType) Values() []ScalingMetricType {
	return []ScalingMetricType{
		"ASGAverageCPUUtilization",
		"ASGAverageNetworkIn",
		"ASGAverageNetworkOut",
		"DynamoDBReadCapacityUtilization",
		"DynamoDBWriteCapacityUtilization",
		"ECSServiceAverageCPUUtilization",
		"ECSServiceAverageMemoryUtilization",
		"ALBRequestCountPerTarget",
		"RDSReaderAverageCPUUtilization",
		"RDSReaderAverageDatabaseConnections",
		"EC2SpotFleetRequestAverageCPUUtilization",
		"EC2SpotFleetRequestAverageNetworkIn",
		"EC2SpotFleetRequestAverageNetworkOut",
	}
}

type ScalingPlanStatusCode string

// Enum values for ScalingPlanStatusCode
const (
	ScalingPlanStatusCodeActive             ScalingPlanStatusCode = "Active"
	ScalingPlanStatusCodeActivewithproblems ScalingPlanStatusCode = "ActiveWithProblems"
	ScalingPlanStatusCodeCreationinprogress ScalingPlanStatusCode = "CreationInProgress"
	ScalingPlanStatusCodeCreationfailed     ScalingPlanStatusCode = "CreationFailed"
	ScalingPlanStatusCodeDeletioninprogress ScalingPlanStatusCode = "DeletionInProgress"
	ScalingPlanStatusCodeDeletionfailed     ScalingPlanStatusCode = "DeletionFailed"
	ScalingPlanStatusCodeUpdateinprogress   ScalingPlanStatusCode = "UpdateInProgress"
	ScalingPlanStatusCodeUpdatefailed       ScalingPlanStatusCode = "UpdateFailed"
)

// Values returns all known values for ScalingPlanStatusCode. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (ScalingPlanStatusCode) Values() []ScalingPlanStatusCode {
	return []ScalingPlanStatusCode{
		"Active",
		"ActiveWithProblems",
		"CreationInProgress",
		"CreationFailed",
		"DeletionInProgress",
		"DeletionFailed",
		"UpdateInProgress",
		"UpdateFailed",
	}
}

type ScalingPolicyUpdateBehavior string

// Enum values for ScalingPolicyUpdateBehavior
const (
	ScalingPolicyUpdateBehaviorKeepexternalpolicies    ScalingPolicyUpdateBehavior = "KeepExternalPolicies"
	ScalingPolicyUpdateBehaviorReplaceexternalpolicies ScalingPolicyUpdateBehavior = "ReplaceExternalPolicies"
)

// Values returns all known values for ScalingPolicyUpdateBehavior. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
// The ordering of this slice is not guaranteed to be stable across updates.
func (ScalingPolicyUpdateBehavior) Values() []ScalingPolicyUpdateBehavior {
	return []ScalingPolicyUpdateBehavior{
		"KeepExternalPolicies",
		"ReplaceExternalPolicies",
	}
}

type ScalingStatusCode string

// Enum values for ScalingStatusCode
const (
	ScalingStatusCodeInactive        ScalingStatusCode = "Inactive"
	ScalingStatusCodePartiallyactive ScalingStatusCode = "PartiallyActive"
	ScalingStatusCodeActive          ScalingStatusCode = "Active"
)

// Values returns all known values for ScalingStatusCode. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (ScalingStatusCode) Values() []ScalingStatusCode {
	return []ScalingStatusCode{
		"Inactive",
		"PartiallyActive",
		"Active",
	}
}

type ServiceNamespace string

// Enum values for ServiceNamespace
const (
	ServiceNamespaceAutoscaling ServiceNamespace = "autoscaling"
	ServiceNamespaceEcs         ServiceNamespace = "ecs"
	ServiceNamespaceEc2         ServiceNamespace = "ec2"
	ServiceNamespaceRds         ServiceNamespace = "rds"
	ServiceNamespaceDynamodb    ServiceNamespace = "dynamodb"
)

// Values returns all known values for ServiceNamespace. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (ServiceNamespace) Values() []ServiceNamespace {
	return []ServiceNamespace{
		"autoscaling",
		"ecs",
		"ec2",
		"rds",
		"dynamodb",
	}
}
