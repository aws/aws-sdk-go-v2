// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package autoscalingplans

import (
	"fmt"
	"time"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/internal/awsutil"
)

const opCreateScalingPlan = "CreateScalingPlan"

// CreateScalingPlanRequest is a API request type for the CreateScalingPlan API operation.
type CreateScalingPlanRequest struct {
	*aws.Request
	Input *CreateScalingPlanInput
	Copy  func(*CreateScalingPlanInput) CreateScalingPlanRequest
}

// Send marshals and sends the CreateScalingPlan API request.
func (r CreateScalingPlanRequest) Send() (*CreateScalingPlanOutput, error) {
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	return r.Request.Data.(*CreateScalingPlanOutput), nil
}

// CreateScalingPlanRequest returns a request value for making API operation for
// AWS Auto Scaling Plans.
//
// Creates a scaling plan.
//
// A scaling plan contains a set of instructions used to configure dynamic scaling
// for the scalable resources in your application. AWS Auto Scaling creates
// target tracking scaling policies based on the scaling instructions in your
// scaling plan.
//
//    // Example sending a request using the CreateScalingPlanRequest method.
//    req := client.CreateScalingPlanRequest(params)
//    resp, err := req.Send()
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/autoscaling-plans-2018-01-06/CreateScalingPlan
func (c *AutoScalingPlans) CreateScalingPlanRequest(input *CreateScalingPlanInput) CreateScalingPlanRequest {
	op := &aws.Operation{
		Name:       opCreateScalingPlan,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &CreateScalingPlanInput{}
	}

	output := &CreateScalingPlanOutput{}
	req := c.newRequest(op, input, output)
	output.responseMetadata = aws.Response{Request: req}

	return CreateScalingPlanRequest{Request: req, Input: input, Copy: c.CreateScalingPlanRequest}
}

const opDeleteScalingPlan = "DeleteScalingPlan"

// DeleteScalingPlanRequest is a API request type for the DeleteScalingPlan API operation.
type DeleteScalingPlanRequest struct {
	*aws.Request
	Input *DeleteScalingPlanInput
	Copy  func(*DeleteScalingPlanInput) DeleteScalingPlanRequest
}

// Send marshals and sends the DeleteScalingPlan API request.
func (r DeleteScalingPlanRequest) Send() (*DeleteScalingPlanOutput, error) {
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	return r.Request.Data.(*DeleteScalingPlanOutput), nil
}

// DeleteScalingPlanRequest returns a request value for making API operation for
// AWS Auto Scaling Plans.
//
// Deletes the specified scaling plan.
//
//    // Example sending a request using the DeleteScalingPlanRequest method.
//    req := client.DeleteScalingPlanRequest(params)
//    resp, err := req.Send()
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/autoscaling-plans-2018-01-06/DeleteScalingPlan
func (c *AutoScalingPlans) DeleteScalingPlanRequest(input *DeleteScalingPlanInput) DeleteScalingPlanRequest {
	op := &aws.Operation{
		Name:       opDeleteScalingPlan,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DeleteScalingPlanInput{}
	}

	output := &DeleteScalingPlanOutput{}
	req := c.newRequest(op, input, output)
	output.responseMetadata = aws.Response{Request: req}

	return DeleteScalingPlanRequest{Request: req, Input: input, Copy: c.DeleteScalingPlanRequest}
}

const opDescribeScalingPlanResources = "DescribeScalingPlanResources"

// DescribeScalingPlanResourcesRequest is a API request type for the DescribeScalingPlanResources API operation.
type DescribeScalingPlanResourcesRequest struct {
	*aws.Request
	Input *DescribeScalingPlanResourcesInput
	Copy  func(*DescribeScalingPlanResourcesInput) DescribeScalingPlanResourcesRequest
}

// Send marshals and sends the DescribeScalingPlanResources API request.
func (r DescribeScalingPlanResourcesRequest) Send() (*DescribeScalingPlanResourcesOutput, error) {
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	return r.Request.Data.(*DescribeScalingPlanResourcesOutput), nil
}

// DescribeScalingPlanResourcesRequest returns a request value for making API operation for
// AWS Auto Scaling Plans.
//
// Describes the scalable resources in the specified scaling plan.
//
//    // Example sending a request using the DescribeScalingPlanResourcesRequest method.
//    req := client.DescribeScalingPlanResourcesRequest(params)
//    resp, err := req.Send()
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/autoscaling-plans-2018-01-06/DescribeScalingPlanResources
func (c *AutoScalingPlans) DescribeScalingPlanResourcesRequest(input *DescribeScalingPlanResourcesInput) DescribeScalingPlanResourcesRequest {
	op := &aws.Operation{
		Name:       opDescribeScalingPlanResources,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DescribeScalingPlanResourcesInput{}
	}

	output := &DescribeScalingPlanResourcesOutput{}
	req := c.newRequest(op, input, output)
	output.responseMetadata = aws.Response{Request: req}

	return DescribeScalingPlanResourcesRequest{Request: req, Input: input, Copy: c.DescribeScalingPlanResourcesRequest}
}

const opDescribeScalingPlans = "DescribeScalingPlans"

// DescribeScalingPlansRequest is a API request type for the DescribeScalingPlans API operation.
type DescribeScalingPlansRequest struct {
	*aws.Request
	Input *DescribeScalingPlansInput
	Copy  func(*DescribeScalingPlansInput) DescribeScalingPlansRequest
}

// Send marshals and sends the DescribeScalingPlans API request.
func (r DescribeScalingPlansRequest) Send() (*DescribeScalingPlansOutput, error) {
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	return r.Request.Data.(*DescribeScalingPlansOutput), nil
}

// DescribeScalingPlansRequest returns a request value for making API operation for
// AWS Auto Scaling Plans.
//
// Describes the specified scaling plans or all of your scaling plans.
//
//    // Example sending a request using the DescribeScalingPlansRequest method.
//    req := client.DescribeScalingPlansRequest(params)
//    resp, err := req.Send()
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/autoscaling-plans-2018-01-06/DescribeScalingPlans
func (c *AutoScalingPlans) DescribeScalingPlansRequest(input *DescribeScalingPlansInput) DescribeScalingPlansRequest {
	op := &aws.Operation{
		Name:       opDescribeScalingPlans,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DescribeScalingPlansInput{}
	}

	output := &DescribeScalingPlansOutput{}
	req := c.newRequest(op, input, output)
	output.responseMetadata = aws.Response{Request: req}

	return DescribeScalingPlansRequest{Request: req, Input: input, Copy: c.DescribeScalingPlansRequest}
}

const opUpdateScalingPlan = "UpdateScalingPlan"

// UpdateScalingPlanRequest is a API request type for the UpdateScalingPlan API operation.
type UpdateScalingPlanRequest struct {
	*aws.Request
	Input *UpdateScalingPlanInput
	Copy  func(*UpdateScalingPlanInput) UpdateScalingPlanRequest
}

// Send marshals and sends the UpdateScalingPlan API request.
func (r UpdateScalingPlanRequest) Send() (*UpdateScalingPlanOutput, error) {
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	return r.Request.Data.(*UpdateScalingPlanOutput), nil
}

// UpdateScalingPlanRequest returns a request value for making API operation for
// AWS Auto Scaling Plans.
//
// Updates the scaling plan for the specified scaling plan.
//
// You cannot update a scaling plan if it is in the process of being created,
// updated, or deleted.
//
//    // Example sending a request using the UpdateScalingPlanRequest method.
//    req := client.UpdateScalingPlanRequest(params)
//    resp, err := req.Send()
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/autoscaling-plans-2018-01-06/UpdateScalingPlan
func (c *AutoScalingPlans) UpdateScalingPlanRequest(input *UpdateScalingPlanInput) UpdateScalingPlanRequest {
	op := &aws.Operation{
		Name:       opUpdateScalingPlan,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &UpdateScalingPlanInput{}
	}

	output := &UpdateScalingPlanOutput{}
	req := c.newRequest(op, input, output)
	output.responseMetadata = aws.Response{Request: req}

	return UpdateScalingPlanRequest{Request: req, Input: input, Copy: c.UpdateScalingPlanRequest}
}

// Represents an application source.
// Please also see https://docs.aws.amazon.com/goto/WebAPI/autoscaling-plans-2018-01-06/ApplicationSource
type ApplicationSource struct {
	_ struct{} `type:"structure"`

	// The Amazon Resource Name (ARN) of a CloudFormation stack.
	CloudFormationStackARN *string `type:"string"`

	// A set of tags (up to 50).
	TagFilters []TagFilter `type:"list"`
}

// String returns the string representation
func (s ApplicationSource) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s ApplicationSource) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *ApplicationSource) Validate() error {
	invalidParams := aws.ErrInvalidParams{Context: "ApplicationSource"}
	if s.TagFilters != nil {
		for i, v := range s.TagFilters {
			if err := v.Validate(); err != nil {
				invalidParams.AddNested(fmt.Sprintf("%s[%v]", "TagFilters", i), err.(aws.ErrInvalidParams))
			}
		}
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// Please also see https://docs.aws.amazon.com/goto/WebAPI/autoscaling-plans-2018-01-06/CreateScalingPlanRequest
type CreateScalingPlanInput struct {
	_ struct{} `type:"structure"`

	// A CloudFormation stack or set of tags. You can create one scaling plan per
	// application source.
	//
	// ApplicationSource is a required field
	ApplicationSource *ApplicationSource `type:"structure" required:"true"`

	// The scaling instructions.
	//
	// ScalingInstructions is a required field
	ScalingInstructions []ScalingInstruction `type:"list" required:"true"`

	// The name of the scaling plan. Names cannot contain vertical bars, colons,
	// or forward slashes.
	//
	// ScalingPlanName is a required field
	ScalingPlanName *string `min:"1" type:"string" required:"true"`
}

// String returns the string representation
func (s CreateScalingPlanInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s CreateScalingPlanInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *CreateScalingPlanInput) Validate() error {
	invalidParams := aws.ErrInvalidParams{Context: "CreateScalingPlanInput"}

	if s.ApplicationSource == nil {
		invalidParams.Add(aws.NewErrParamRequired("ApplicationSource"))
	}

	if s.ScalingInstructions == nil {
		invalidParams.Add(aws.NewErrParamRequired("ScalingInstructions"))
	}

	if s.ScalingPlanName == nil {
		invalidParams.Add(aws.NewErrParamRequired("ScalingPlanName"))
	}
	if s.ScalingPlanName != nil && len(*s.ScalingPlanName) < 1 {
		invalidParams.Add(aws.NewErrParamMinLen("ScalingPlanName", 1))
	}
	if s.ApplicationSource != nil {
		if err := s.ApplicationSource.Validate(); err != nil {
			invalidParams.AddNested("ApplicationSource", err.(aws.ErrInvalidParams))
		}
	}
	if s.ScalingInstructions != nil {
		for i, v := range s.ScalingInstructions {
			if err := v.Validate(); err != nil {
				invalidParams.AddNested(fmt.Sprintf("%s[%v]", "ScalingInstructions", i), err.(aws.ErrInvalidParams))
			}
		}
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// Please also see https://docs.aws.amazon.com/goto/WebAPI/autoscaling-plans-2018-01-06/CreateScalingPlanResponse
type CreateScalingPlanOutput struct {
	_ struct{} `type:"structure"`

	responseMetadata aws.Response

	// The version of the scaling plan. This value is always 1.
	//
	// ScalingPlanVersion is a required field
	ScalingPlanVersion *int64 `type:"long" required:"true"`
}

// String returns the string representation
func (s CreateScalingPlanOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s CreateScalingPlanOutput) GoString() string {
	return s.String()
}

// SDKResponseMetdata return sthe response metadata for the API.
func (s CreateScalingPlanOutput) SDKResponseMetadata() aws.Response {
	return s.responseMetadata
}

// Represents a customized metric for a target tracking policy.
// Please also see https://docs.aws.amazon.com/goto/WebAPI/autoscaling-plans-2018-01-06/CustomizedScalingMetricSpecification
type CustomizedScalingMetricSpecification struct {
	_ struct{} `type:"structure"`

	// The dimensions of the metric.
	Dimensions []MetricDimension `type:"list"`

	// The name of the metric.
	//
	// MetricName is a required field
	MetricName *string `type:"string" required:"true"`

	// The namespace of the metric.
	//
	// Namespace is a required field
	Namespace *string `type:"string" required:"true"`

	// The statistic of the metric.
	//
	// Statistic is a required field
	Statistic MetricStatistic `type:"string" required:"true" enum:"true"`

	// The unit of the metric.
	Unit *string `type:"string"`
}

// String returns the string representation
func (s CustomizedScalingMetricSpecification) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s CustomizedScalingMetricSpecification) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *CustomizedScalingMetricSpecification) Validate() error {
	invalidParams := aws.ErrInvalidParams{Context: "CustomizedScalingMetricSpecification"}

	if s.MetricName == nil {
		invalidParams.Add(aws.NewErrParamRequired("MetricName"))
	}

	if s.Namespace == nil {
		invalidParams.Add(aws.NewErrParamRequired("Namespace"))
	}
	if len(s.Statistic) == 0 {
		invalidParams.Add(aws.NewErrParamRequired("Statistic"))
	}
	if s.Dimensions != nil {
		for i, v := range s.Dimensions {
			if err := v.Validate(); err != nil {
				invalidParams.AddNested(fmt.Sprintf("%s[%v]", "Dimensions", i), err.(aws.ErrInvalidParams))
			}
		}
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// Please also see https://docs.aws.amazon.com/goto/WebAPI/autoscaling-plans-2018-01-06/DeleteScalingPlanRequest
type DeleteScalingPlanInput struct {
	_ struct{} `type:"structure"`

	// The name of the scaling plan.
	//
	// ScalingPlanName is a required field
	ScalingPlanName *string `min:"1" type:"string" required:"true"`

	// The version of the scaling plan.
	//
	// ScalingPlanVersion is a required field
	ScalingPlanVersion *int64 `type:"long" required:"true"`
}

// String returns the string representation
func (s DeleteScalingPlanInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DeleteScalingPlanInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *DeleteScalingPlanInput) Validate() error {
	invalidParams := aws.ErrInvalidParams{Context: "DeleteScalingPlanInput"}

	if s.ScalingPlanName == nil {
		invalidParams.Add(aws.NewErrParamRequired("ScalingPlanName"))
	}
	if s.ScalingPlanName != nil && len(*s.ScalingPlanName) < 1 {
		invalidParams.Add(aws.NewErrParamMinLen("ScalingPlanName", 1))
	}

	if s.ScalingPlanVersion == nil {
		invalidParams.Add(aws.NewErrParamRequired("ScalingPlanVersion"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// Please also see https://docs.aws.amazon.com/goto/WebAPI/autoscaling-plans-2018-01-06/DeleteScalingPlanResponse
type DeleteScalingPlanOutput struct {
	_ struct{} `type:"structure"`

	responseMetadata aws.Response
}

// String returns the string representation
func (s DeleteScalingPlanOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DeleteScalingPlanOutput) GoString() string {
	return s.String()
}

// SDKResponseMetdata return sthe response metadata for the API.
func (s DeleteScalingPlanOutput) SDKResponseMetadata() aws.Response {
	return s.responseMetadata
}

// Please also see https://docs.aws.amazon.com/goto/WebAPI/autoscaling-plans-2018-01-06/DescribeScalingPlanResourcesRequest
type DescribeScalingPlanResourcesInput struct {
	_ struct{} `type:"structure"`

	// The maximum number of scalable resources to return. This value can be between
	// 1 and 50. The default value is 50.
	MaxResults *int64 `type:"integer"`

	// The token for the next set of results.
	NextToken *string `type:"string"`

	// The name of the scaling plan.
	//
	// ScalingPlanName is a required field
	ScalingPlanName *string `min:"1" type:"string" required:"true"`

	// The version of the scaling plan.
	//
	// ScalingPlanVersion is a required field
	ScalingPlanVersion *int64 `type:"long" required:"true"`
}

// String returns the string representation
func (s DescribeScalingPlanResourcesInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeScalingPlanResourcesInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *DescribeScalingPlanResourcesInput) Validate() error {
	invalidParams := aws.ErrInvalidParams{Context: "DescribeScalingPlanResourcesInput"}

	if s.ScalingPlanName == nil {
		invalidParams.Add(aws.NewErrParamRequired("ScalingPlanName"))
	}
	if s.ScalingPlanName != nil && len(*s.ScalingPlanName) < 1 {
		invalidParams.Add(aws.NewErrParamMinLen("ScalingPlanName", 1))
	}

	if s.ScalingPlanVersion == nil {
		invalidParams.Add(aws.NewErrParamRequired("ScalingPlanVersion"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// Please also see https://docs.aws.amazon.com/goto/WebAPI/autoscaling-plans-2018-01-06/DescribeScalingPlanResourcesResponse
type DescribeScalingPlanResourcesOutput struct {
	_ struct{} `type:"structure"`

	responseMetadata aws.Response

	// The token required to get the next set of results. This value is null if
	// there are no more results to return.
	NextToken *string `type:"string"`

	// Information about the scalable resources.
	ScalingPlanResources []ScalingPlanResource `type:"list"`
}

// String returns the string representation
func (s DescribeScalingPlanResourcesOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeScalingPlanResourcesOutput) GoString() string {
	return s.String()
}

// SDKResponseMetdata return sthe response metadata for the API.
func (s DescribeScalingPlanResourcesOutput) SDKResponseMetadata() aws.Response {
	return s.responseMetadata
}

// Please also see https://docs.aws.amazon.com/goto/WebAPI/autoscaling-plans-2018-01-06/DescribeScalingPlansRequest
type DescribeScalingPlansInput struct {
	_ struct{} `type:"structure"`

	// The sources for the applications (up to 10). If you specify scaling plan
	// names, you cannot specify application sources.
	ApplicationSources []ApplicationSource `type:"list"`

	// The maximum number of scalable resources to return. This value can be between
	// 1 and 50. The default value is 50.
	MaxResults *int64 `type:"integer"`

	// The token for the next set of results.
	NextToken *string `type:"string"`

	// The names of the scaling plans (up to 10). If you specify application sources,
	// you cannot specify scaling plan names.
	ScalingPlanNames []string `type:"list"`

	// The version of the scaling plan. If you specify a scaling plan version, you
	// must also specify a scaling plan name.
	ScalingPlanVersion *int64 `type:"long"`
}

// String returns the string representation
func (s DescribeScalingPlansInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeScalingPlansInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *DescribeScalingPlansInput) Validate() error {
	invalidParams := aws.ErrInvalidParams{Context: "DescribeScalingPlansInput"}
	if s.ApplicationSources != nil {
		for i, v := range s.ApplicationSources {
			if err := v.Validate(); err != nil {
				invalidParams.AddNested(fmt.Sprintf("%s[%v]", "ApplicationSources", i), err.(aws.ErrInvalidParams))
			}
		}
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// Please also see https://docs.aws.amazon.com/goto/WebAPI/autoscaling-plans-2018-01-06/DescribeScalingPlansResponse
type DescribeScalingPlansOutput struct {
	_ struct{} `type:"structure"`

	responseMetadata aws.Response

	// The token required to get the next set of results. This value is null if
	// there are no more results to return.
	NextToken *string `type:"string"`

	// Information about the scaling plans.
	ScalingPlans []ScalingPlan `type:"list"`
}

// String returns the string representation
func (s DescribeScalingPlansOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeScalingPlansOutput) GoString() string {
	return s.String()
}

// SDKResponseMetdata return sthe response metadata for the API.
func (s DescribeScalingPlansOutput) SDKResponseMetadata() aws.Response {
	return s.responseMetadata
}

// Represents a dimension for a customized metric.
// Please also see https://docs.aws.amazon.com/goto/WebAPI/autoscaling-plans-2018-01-06/MetricDimension
type MetricDimension struct {
	_ struct{} `type:"structure"`

	// The name of the dimension.
	//
	// Name is a required field
	Name *string `type:"string" required:"true"`

	// The value of the dimension.
	//
	// Value is a required field
	Value *string `type:"string" required:"true"`
}

// String returns the string representation
func (s MetricDimension) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s MetricDimension) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *MetricDimension) Validate() error {
	invalidParams := aws.ErrInvalidParams{Context: "MetricDimension"}

	if s.Name == nil {
		invalidParams.Add(aws.NewErrParamRequired("Name"))
	}

	if s.Value == nil {
		invalidParams.Add(aws.NewErrParamRequired("Value"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// Represents a predefined metric for a target tracking policy.
// Please also see https://docs.aws.amazon.com/goto/WebAPI/autoscaling-plans-2018-01-06/PredefinedScalingMetricSpecification
type PredefinedScalingMetricSpecification struct {
	_ struct{} `type:"structure"`

	// The metric type. The ALBRequestCountPerTarget metric type applies only to
	// Auto Scaling groups, Sport Fleet requests, and ECS services.
	//
	// PredefinedScalingMetricType is a required field
	PredefinedScalingMetricType ScalingMetricType `type:"string" required:"true" enum:"true"`

	// Identifies the resource associated with the metric type. You can't specify
	// a resource label unless the metric type is ALBRequestCountPerTarget and there
	// is a target group for an Application Load Balancer attached to the Auto Scaling
	// group, Spot Fleet request, or ECS service.
	//
	// The format is app/<load-balancer-name>/<load-balancer-id>/targetgroup/<target-group-name>/<target-group-id>,
	// where:
	//
	//    * app/<load-balancer-name>/<load-balancer-id> is the final portion of
	//    the load balancer ARN
	//
	//    * targetgroup/<target-group-name>/<target-group-id> is the final portion
	//    of the target group ARN.
	ResourceLabel *string `min:"1" type:"string"`
}

// String returns the string representation
func (s PredefinedScalingMetricSpecification) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s PredefinedScalingMetricSpecification) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *PredefinedScalingMetricSpecification) Validate() error {
	invalidParams := aws.ErrInvalidParams{Context: "PredefinedScalingMetricSpecification"}
	if len(s.PredefinedScalingMetricType) == 0 {
		invalidParams.Add(aws.NewErrParamRequired("PredefinedScalingMetricType"))
	}
	if s.ResourceLabel != nil && len(*s.ResourceLabel) < 1 {
		invalidParams.Add(aws.NewErrParamMinLen("ResourceLabel", 1))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// Specifies the scaling configuration for a scalable resource.
// Please also see https://docs.aws.amazon.com/goto/WebAPI/autoscaling-plans-2018-01-06/ScalingInstruction
type ScalingInstruction struct {
	_ struct{} `type:"structure"`

	// The maximum value to scale to in response to a scale out event.
	//
	// MaxCapacity is a required field
	MaxCapacity *int64 `type:"integer" required:"true"`

	// The minimum value to scale to in response to a scale in event.
	//
	// MinCapacity is a required field
	MinCapacity *int64 `type:"integer" required:"true"`

	// The ID of the resource. This string consists of the resource type and unique
	// identifier.
	//
	//    * Auto Scaling group - The resource type is autoScalingGroup and the unique
	//    identifier is the name of the Auto Scaling group. Example: autoScalingGroup/my-asg.
	//
	//    * ECS service - The resource type is service and the unique identifier
	//    is the cluster name and service name. Example: service/default/sample-webapp.
	//
	//    * Spot fleet request - The resource type is spot-fleet-request and the
	//    unique identifier is the Spot fleet request ID. Example: spot-fleet-request/sfr-73fbd2ce-aa30-494c-8788-1cee4EXAMPLE.
	//
	//    * DynamoDB table - The resource type is table and the unique identifier
	//    is the resource ID. Example: table/my-table.
	//
	//    * DynamoDB global secondary index - The resource type is index and the
	//    unique identifier is the resource ID. Example: table/my-table/index/my-table-index.
	//
	//    * Aurora DB cluster - The resource type is cluster and the unique identifier
	//    is the cluster name. Example: cluster:my-db-cluster.
	//
	// ResourceId is a required field
	ResourceId *string `min:"1" type:"string" required:"true"`

	// The scalable dimension associated with the resource.
	//
	//    * autoscaling:autoScalingGroup:DesiredCapacity - The desired capacity
	//    of an Auto Scaling group.
	//
	//    * ecs:service:DesiredCount - The desired task count of an ECS service.
	//
	//    * ec2:spot-fleet-request:TargetCapacity - The target capacity of a Spot
	//    fleet request.
	//
	//    * dynamodb:table:ReadCapacityUnits - The provisioned read capacity for
	//    a DynamoDB table.
	//
	//    * dynamodb:table:WriteCapacityUnits - The provisioned write capacity for
	//    a DynamoDB table.
	//
	//    * dynamodb:index:ReadCapacityUnits - The provisioned read capacity for
	//    a DynamoDB global secondary index.
	//
	//    * dynamodb:index:WriteCapacityUnits - The provisioned write capacity for
	//    a DynamoDB global secondary index.
	//
	//    * rds:cluster:ReadReplicaCount - The count of Aurora Replicas in an Aurora
	//    DB cluster. Available for Aurora MySQL-compatible edition.
	//
	// ScalableDimension is a required field
	ScalableDimension ScalableDimension `type:"string" required:"true" enum:"true"`

	// The namespace of the AWS service.
	//
	// ServiceNamespace is a required field
	ServiceNamespace ServiceNamespace `type:"string" required:"true" enum:"true"`

	// The target tracking scaling policies (up to 10).
	//
	// TargetTrackingConfigurations is a required field
	TargetTrackingConfigurations []TargetTrackingConfiguration `type:"list" required:"true"`
}

// String returns the string representation
func (s ScalingInstruction) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s ScalingInstruction) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *ScalingInstruction) Validate() error {
	invalidParams := aws.ErrInvalidParams{Context: "ScalingInstruction"}

	if s.MaxCapacity == nil {
		invalidParams.Add(aws.NewErrParamRequired("MaxCapacity"))
	}

	if s.MinCapacity == nil {
		invalidParams.Add(aws.NewErrParamRequired("MinCapacity"))
	}

	if s.ResourceId == nil {
		invalidParams.Add(aws.NewErrParamRequired("ResourceId"))
	}
	if s.ResourceId != nil && len(*s.ResourceId) < 1 {
		invalidParams.Add(aws.NewErrParamMinLen("ResourceId", 1))
	}
	if len(s.ScalableDimension) == 0 {
		invalidParams.Add(aws.NewErrParamRequired("ScalableDimension"))
	}
	if len(s.ServiceNamespace) == 0 {
		invalidParams.Add(aws.NewErrParamRequired("ServiceNamespace"))
	}

	if s.TargetTrackingConfigurations == nil {
		invalidParams.Add(aws.NewErrParamRequired("TargetTrackingConfigurations"))
	}
	if s.TargetTrackingConfigurations != nil {
		for i, v := range s.TargetTrackingConfigurations {
			if err := v.Validate(); err != nil {
				invalidParams.AddNested(fmt.Sprintf("%s[%v]", "TargetTrackingConfigurations", i), err.(aws.ErrInvalidParams))
			}
		}
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// Represents a scaling plan.
// Please also see https://docs.aws.amazon.com/goto/WebAPI/autoscaling-plans-2018-01-06/ScalingPlan
type ScalingPlan struct {
	_ struct{} `type:"structure"`

	// The application source.
	//
	// ApplicationSource is a required field
	ApplicationSource *ApplicationSource `type:"structure" required:"true"`

	// The Unix timestamp when the scaling plan was created.
	CreationTime *time.Time `type:"timestamp" timestampFormat:"unix"`

	// The scaling instructions.
	//
	// ScalingInstructions is a required field
	ScalingInstructions []ScalingInstruction `type:"list" required:"true"`

	// The name of the scaling plan.
	//
	// ScalingPlanName is a required field
	ScalingPlanName *string `min:"1" type:"string" required:"true"`

	// The version of the scaling plan.
	//
	// ScalingPlanVersion is a required field
	ScalingPlanVersion *int64 `type:"long" required:"true"`

	// The status of the scaling plan.
	//
	//    * Active - The scaling plan is active.
	//
	//    * ActiveWithProblems - The scaling plan is active, but the scaling configuration
	//    for one or more resources could not be applied.
	//
	//    * CreationInProgress - The scaling plan is being created.
	//
	//    * CreationFailed - The scaling plan could not be created.
	//
	//    * DeletionInProgress - The scaling plan is being deleted.
	//
	//    * DeletionFailed - The scaling plan could not be deleted.
	//
	// StatusCode is a required field
	StatusCode ScalingPlanStatusCode `type:"string" required:"true" enum:"true"`

	// A simple message about the current status of the scaling plan.
	StatusMessage *string `type:"string"`

	// The Unix timestamp when the scaling plan entered the current status.
	StatusStartTime *time.Time `type:"timestamp" timestampFormat:"unix"`
}

// String returns the string representation
func (s ScalingPlan) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s ScalingPlan) GoString() string {
	return s.String()
}

// Represents a scalable resource.
// Please also see https://docs.aws.amazon.com/goto/WebAPI/autoscaling-plans-2018-01-06/ScalingPlanResource
type ScalingPlanResource struct {
	_ struct{} `type:"structure"`

	// The ID of the resource. This string consists of the resource type and unique
	// identifier.
	//
	//    * Auto Scaling group - The resource type is autoScalingGroup and the unique
	//    identifier is the name of the Auto Scaling group. Example: autoScalingGroup/my-asg.
	//
	//    * ECS service - The resource type is service and the unique identifier
	//    is the cluster name and service name. Example: service/default/sample-webapp.
	//
	//    * Spot fleet request - The resource type is spot-fleet-request and the
	//    unique identifier is the Spot fleet request ID. Example: spot-fleet-request/sfr-73fbd2ce-aa30-494c-8788-1cee4EXAMPLE.
	//
	//    * DynamoDB table - The resource type is table and the unique identifier
	//    is the resource ID. Example: table/my-table.
	//
	//    * DynamoDB global secondary index - The resource type is index and the
	//    unique identifier is the resource ID. Example: table/my-table/index/my-table-index.
	//
	//    * Aurora DB cluster - The resource type is cluster and the unique identifier
	//    is the cluster name. Example: cluster:my-db-cluster.
	//
	// ResourceId is a required field
	ResourceId *string `min:"1" type:"string" required:"true"`

	// The scalable dimension for the resource.
	//
	//    * autoscaling:autoScalingGroup:DesiredCapacity - The desired capacity
	//    of an Auto Scaling group.
	//
	//    * ecs:service:DesiredCount - The desired task count of an ECS service.
	//
	//    * ec2:spot-fleet-request:TargetCapacity - The target capacity of a Spot
	//    fleet request.
	//
	//    * dynamodb:table:ReadCapacityUnits - The provisioned read capacity for
	//    a DynamoDB table.
	//
	//    * dynamodb:table:WriteCapacityUnits - The provisioned write capacity for
	//    a DynamoDB table.
	//
	//    * dynamodb:index:ReadCapacityUnits - The provisioned read capacity for
	//    a DynamoDB global secondary index.
	//
	//    * dynamodb:index:WriteCapacityUnits - The provisioned write capacity for
	//    a DynamoDB global secondary index.
	//
	//    * rds:cluster:ReadReplicaCount - The count of Aurora Replicas in an Aurora
	//    DB cluster. Available for Aurora MySQL-compatible edition.
	//
	// ScalableDimension is a required field
	ScalableDimension ScalableDimension `type:"string" required:"true" enum:"true"`

	// The name of the scaling plan.
	//
	// ScalingPlanName is a required field
	ScalingPlanName *string `min:"1" type:"string" required:"true"`

	// The version of the scaling plan.
	//
	// ScalingPlanVersion is a required field
	ScalingPlanVersion *int64 `type:"long" required:"true"`

	// The scaling policies.
	ScalingPolicies []ScalingPolicy `type:"list"`

	// The scaling status of the resource.
	//
	//    * Active - The scaling configuration is active.
	//
	//    * Inactive - The scaling configuration is not active because the scaling
	//    plan is being created or the scaling configuration could not be applied.
	//    Check the status message for more information.
	//
	//    * PartiallyActive - The scaling configuration is partially active because
	//    the scaling plan is being created or deleted or the scaling configuration
	//    could not be fully applied. Check the status message for more information.
	//
	// ScalingStatusCode is a required field
	ScalingStatusCode ScalingStatusCode `type:"string" required:"true" enum:"true"`

	// A simple message about the current scaling status of the resource.
	ScalingStatusMessage *string `type:"string"`

	// The namespace of the AWS service.
	//
	// ServiceNamespace is a required field
	ServiceNamespace ServiceNamespace `type:"string" required:"true" enum:"true"`
}

// String returns the string representation
func (s ScalingPlanResource) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s ScalingPlanResource) GoString() string {
	return s.String()
}

// Represents a scaling policy.
// Please also see https://docs.aws.amazon.com/goto/WebAPI/autoscaling-plans-2018-01-06/ScalingPolicy
type ScalingPolicy struct {
	_ struct{} `type:"structure"`

	// The name of the scaling policy.
	//
	// PolicyName is a required field
	PolicyName *string `min:"1" type:"string" required:"true"`

	// The type of scaling policy.
	//
	// PolicyType is a required field
	PolicyType PolicyType `type:"string" required:"true" enum:"true"`

	// The target tracking scaling policy.
	TargetTrackingConfiguration *TargetTrackingConfiguration `type:"structure"`
}

// String returns the string representation
func (s ScalingPolicy) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s ScalingPolicy) GoString() string {
	return s.String()
}

// Represents a tag.
// Please also see https://docs.aws.amazon.com/goto/WebAPI/autoscaling-plans-2018-01-06/TagFilter
type TagFilter struct {
	_ struct{} `type:"structure"`

	// The tag key.
	Key *string `min:"1" type:"string"`

	// The tag values (0 to 20).
	Values []string `type:"list"`
}

// String returns the string representation
func (s TagFilter) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s TagFilter) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *TagFilter) Validate() error {
	invalidParams := aws.ErrInvalidParams{Context: "TagFilter"}
	if s.Key != nil && len(*s.Key) < 1 {
		invalidParams.Add(aws.NewErrParamMinLen("Key", 1))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// Represents a target tracking scaling policy.
// Please also see https://docs.aws.amazon.com/goto/WebAPI/autoscaling-plans-2018-01-06/TargetTrackingConfiguration
type TargetTrackingConfiguration struct {
	_ struct{} `type:"structure"`

	// A customized metric.
	CustomizedScalingMetricSpecification *CustomizedScalingMetricSpecification `type:"structure"`

	// Indicates whether scale in by the target tracking policy is disabled. If
	// the value is true, scale in is disabled and the target tracking policy won't
	// remove capacity from the scalable resource. Otherwise, scale in is enabled
	// and the target tracking policy can remove capacity from the scalable resource.
	// The default value is false.
	DisableScaleIn *bool `type:"boolean"`

	// The estimated time, in seconds, until a newly launched instance can contribute
	// to the CloudWatch metrics. This value is used only if the resource is an
	// Auto Scaling group.
	EstimatedInstanceWarmup *int64 `type:"integer"`

	// A predefined metric.
	PredefinedScalingMetricSpecification *PredefinedScalingMetricSpecification `type:"structure"`

	// The amount of time, in seconds, after a scale in activity completes before
	// another scale in activity can start. This value is not used if the scalable
	// resource is an Auto Scaling group.
	//
	// The cooldown period is used to block subsequent scale in requests until it
	// has expired. The intention is to scale in conservatively to protect your
	// application's availability. However, if another alarm triggers a scale out
	// policy during the cooldown period after a scale-in, AWS Auto Scaling scales
	// out your scalable target immediately.
	ScaleInCooldown *int64 `type:"integer"`

	// The amount of time, in seconds, after a scale out activity completes before
	// another scale out activity can start. This value is not used if the scalable
	// resource is an Auto Scaling group.
	//
	// While the cooldown period is in effect, the capacity that has been added
	// by the previous scale out event that initiated the cooldown is calculated
	// as part of the desired capacity for the next scale out. The intention is
	// to continuously (but not excessively) scale out.
	ScaleOutCooldown *int64 `type:"integer"`

	// The target value for the metric. The range is 8.515920e-109 to 1.174271e+108
	// (Base 10) or 2e-360 to 2e360 (Base 2).
	//
	// TargetValue is a required field
	TargetValue *float64 `type:"double" required:"true"`
}

// String returns the string representation
func (s TargetTrackingConfiguration) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s TargetTrackingConfiguration) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *TargetTrackingConfiguration) Validate() error {
	invalidParams := aws.ErrInvalidParams{Context: "TargetTrackingConfiguration"}

	if s.TargetValue == nil {
		invalidParams.Add(aws.NewErrParamRequired("TargetValue"))
	}
	if s.CustomizedScalingMetricSpecification != nil {
		if err := s.CustomizedScalingMetricSpecification.Validate(); err != nil {
			invalidParams.AddNested("CustomizedScalingMetricSpecification", err.(aws.ErrInvalidParams))
		}
	}
	if s.PredefinedScalingMetricSpecification != nil {
		if err := s.PredefinedScalingMetricSpecification.Validate(); err != nil {
			invalidParams.AddNested("PredefinedScalingMetricSpecification", err.(aws.ErrInvalidParams))
		}
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// Please also see https://docs.aws.amazon.com/goto/WebAPI/autoscaling-plans-2018-01-06/UpdateScalingPlanRequest
type UpdateScalingPlanInput struct {
	_ struct{} `type:"structure"`

	// A CloudFormation stack or set of tags.
	ApplicationSource *ApplicationSource `type:"structure"`

	// The scaling instructions.
	ScalingInstructions []ScalingInstruction `type:"list"`

	// The name of the scaling plan.
	//
	// ScalingPlanName is a required field
	ScalingPlanName *string `min:"1" type:"string" required:"true"`

	// The version number.
	//
	// ScalingPlanVersion is a required field
	ScalingPlanVersion *int64 `type:"long" required:"true"`
}

// String returns the string representation
func (s UpdateScalingPlanInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s UpdateScalingPlanInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *UpdateScalingPlanInput) Validate() error {
	invalidParams := aws.ErrInvalidParams{Context: "UpdateScalingPlanInput"}

	if s.ScalingPlanName == nil {
		invalidParams.Add(aws.NewErrParamRequired("ScalingPlanName"))
	}
	if s.ScalingPlanName != nil && len(*s.ScalingPlanName) < 1 {
		invalidParams.Add(aws.NewErrParamMinLen("ScalingPlanName", 1))
	}

	if s.ScalingPlanVersion == nil {
		invalidParams.Add(aws.NewErrParamRequired("ScalingPlanVersion"))
	}
	if s.ApplicationSource != nil {
		if err := s.ApplicationSource.Validate(); err != nil {
			invalidParams.AddNested("ApplicationSource", err.(aws.ErrInvalidParams))
		}
	}
	if s.ScalingInstructions != nil {
		for i, v := range s.ScalingInstructions {
			if err := v.Validate(); err != nil {
				invalidParams.AddNested(fmt.Sprintf("%s[%v]", "ScalingInstructions", i), err.(aws.ErrInvalidParams))
			}
		}
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// Please also see https://docs.aws.amazon.com/goto/WebAPI/autoscaling-plans-2018-01-06/UpdateScalingPlanResponse
type UpdateScalingPlanOutput struct {
	_ struct{} `type:"structure"`

	responseMetadata aws.Response
}

// String returns the string representation
func (s UpdateScalingPlanOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s UpdateScalingPlanOutput) GoString() string {
	return s.String()
}

// SDKResponseMetdata return sthe response metadata for the API.
func (s UpdateScalingPlanOutput) SDKResponseMetadata() aws.Response {
	return s.responseMetadata
}

type MetricStatistic string

// Enum values for MetricStatistic
const (
	MetricStatisticAverage     MetricStatistic = "Average"
	MetricStatisticMinimum     MetricStatistic = "Minimum"
	MetricStatisticMaximum     MetricStatistic = "Maximum"
	MetricStatisticSampleCount MetricStatistic = "SampleCount"
	MetricStatisticSum         MetricStatistic = "Sum"
)

func (enum MetricStatistic) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum MetricStatistic) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type PolicyType string

// Enum values for PolicyType
const (
	PolicyTypeTargetTrackingScaling PolicyType = "TargetTrackingScaling"
)

func (enum PolicyType) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum PolicyType) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type ScalableDimension string

// Enum values for ScalableDimension
const (
	ScalableDimensionAutoscalingAutoScalingGroupDesiredCapacity ScalableDimension = "autoscaling:autoScalingGroup:DesiredCapacity"
	ScalableDimensionEcsServiceDesiredCount                     ScalableDimension = "ecs:service:DesiredCount"
	ScalableDimensionEc2SpotFleetRequestTargetCapacity          ScalableDimension = "ec2:spot-fleet-request:TargetCapacity"
	ScalableDimensionRdsClusterReadReplicaCount                 ScalableDimension = "rds:cluster:ReadReplicaCount"
	ScalableDimensionDynamodbTableReadCapacityUnits             ScalableDimension = "dynamodb:table:ReadCapacityUnits"
	ScalableDimensionDynamodbTableWriteCapacityUnits            ScalableDimension = "dynamodb:table:WriteCapacityUnits"
	ScalableDimensionDynamodbIndexReadCapacityUnits             ScalableDimension = "dynamodb:index:ReadCapacityUnits"
	ScalableDimensionDynamodbIndexWriteCapacityUnits            ScalableDimension = "dynamodb:index:WriteCapacityUnits"
)

func (enum ScalableDimension) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum ScalableDimension) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type ScalingMetricType string

// Enum values for ScalingMetricType
const (
	ScalingMetricTypeAsgaverageCpuutilization                 ScalingMetricType = "ASGAverageCPUUtilization"
	ScalingMetricTypeAsgaverageNetworkIn                      ScalingMetricType = "ASGAverageNetworkIn"
	ScalingMetricTypeAsgaverageNetworkOut                     ScalingMetricType = "ASGAverageNetworkOut"
	ScalingMetricTypeDynamoDbreadCapacityUtilization          ScalingMetricType = "DynamoDBReadCapacityUtilization"
	ScalingMetricTypeDynamoDbwriteCapacityUtilization         ScalingMetricType = "DynamoDBWriteCapacityUtilization"
	ScalingMetricTypeEcsserviceAverageCpuutilization          ScalingMetricType = "ECSServiceAverageCPUUtilization"
	ScalingMetricTypeEcsserviceAverageMemoryUtilization       ScalingMetricType = "ECSServiceAverageMemoryUtilization"
	ScalingMetricTypeAlbrequestCountPerTarget                 ScalingMetricType = "ALBRequestCountPerTarget"
	ScalingMetricTypeRdsreaderAverageCpuutilization           ScalingMetricType = "RDSReaderAverageCPUUtilization"
	ScalingMetricTypeRdsreaderAverageDatabaseConnections      ScalingMetricType = "RDSReaderAverageDatabaseConnections"
	ScalingMetricTypeEc2spotFleetRequestAverageCpuutilization ScalingMetricType = "EC2SpotFleetRequestAverageCPUUtilization"
	ScalingMetricTypeEc2spotFleetRequestAverageNetworkIn      ScalingMetricType = "EC2SpotFleetRequestAverageNetworkIn"
	ScalingMetricTypeEc2spotFleetRequestAverageNetworkOut     ScalingMetricType = "EC2SpotFleetRequestAverageNetworkOut"
)

func (enum ScalingMetricType) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum ScalingMetricType) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type ScalingPlanStatusCode string

// Enum values for ScalingPlanStatusCode
const (
	ScalingPlanStatusCodeActive             ScalingPlanStatusCode = "Active"
	ScalingPlanStatusCodeActiveWithProblems ScalingPlanStatusCode = "ActiveWithProblems"
	ScalingPlanStatusCodeCreationInProgress ScalingPlanStatusCode = "CreationInProgress"
	ScalingPlanStatusCodeCreationFailed     ScalingPlanStatusCode = "CreationFailed"
	ScalingPlanStatusCodeDeletionInProgress ScalingPlanStatusCode = "DeletionInProgress"
	ScalingPlanStatusCodeDeletionFailed     ScalingPlanStatusCode = "DeletionFailed"
	ScalingPlanStatusCodeUpdateInProgress   ScalingPlanStatusCode = "UpdateInProgress"
	ScalingPlanStatusCodeUpdateFailed       ScalingPlanStatusCode = "UpdateFailed"
)

func (enum ScalingPlanStatusCode) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum ScalingPlanStatusCode) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type ScalingStatusCode string

// Enum values for ScalingStatusCode
const (
	ScalingStatusCodeInactive        ScalingStatusCode = "Inactive"
	ScalingStatusCodePartiallyActive ScalingStatusCode = "PartiallyActive"
	ScalingStatusCodeActive          ScalingStatusCode = "Active"
)

func (enum ScalingStatusCode) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum ScalingStatusCode) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type ServiceNamespace string

// Enum values for ServiceNamespace
const (
	ServiceNamespaceAutoscaling ServiceNamespace = "autoscaling"
	ServiceNamespaceEcs         ServiceNamespace = "ecs"
	ServiceNamespaceEc2         ServiceNamespace = "ec2"
	ServiceNamespaceRds         ServiceNamespace = "rds"
	ServiceNamespaceDynamodb    ServiceNamespace = "dynamodb"
)

func (enum ServiceNamespace) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum ServiceNamespace) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}
