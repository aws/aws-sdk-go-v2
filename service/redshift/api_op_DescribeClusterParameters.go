// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package redshift

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/redshift/types"
)

const opDescribeClusterParameters = "DescribeClusterParameters"

// DescribeClusterParametersRequest returns a request value for making API operation for
// Amazon Redshift.
//
// Returns a detailed list of parameters contained within the specified Amazon
// Redshift parameter group. For each parameter the response includes information
// such as parameter name, description, data type, value, whether the parameter
// value is modifiable, and so on.
//
// You can specify source filter to retrieve parameters of only specific type.
// For example, to retrieve parameters that were modified by a user action such
// as from ModifyClusterParameterGroup, you can specify source equal to user.
//
// For more information about parameters and parameter groups, go to Amazon
// Redshift Parameter Groups (https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-parameter-groups.html)
// in the Amazon Redshift Cluster Management Guide.
//
//    // Example sending a request using DescribeClusterParametersRequest.
//    req := client.DescribeClusterParametersRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/redshift-2012-12-01/DescribeClusterParameters
func (c *Client) DescribeClusterParametersRequest(input *types.DescribeClusterParametersInput) DescribeClusterParametersRequest {
	op := &aws.Operation{
		Name:       opDescribeClusterParameters,
		HTTPMethod: "POST",
		HTTPPath:   "/",
		Paginator: &aws.Paginator{
			InputTokens:     []string{"Marker"},
			OutputTokens:    []string{"Marker"},
			LimitToken:      "MaxRecords",
			TruncationToken: "",
		},
	}

	if input == nil {
		input = &types.DescribeClusterParametersInput{}
	}

	req := c.newRequest(op, input, &types.DescribeClusterParametersOutput{})
	return DescribeClusterParametersRequest{Request: req, Input: input, Copy: c.DescribeClusterParametersRequest}
}

// DescribeClusterParametersRequest is the request type for the
// DescribeClusterParameters API operation.
type DescribeClusterParametersRequest struct {
	*aws.Request
	Input *types.DescribeClusterParametersInput
	Copy  func(*types.DescribeClusterParametersInput) DescribeClusterParametersRequest
}

// Send marshals and sends the DescribeClusterParameters API request.
func (r DescribeClusterParametersRequest) Send(ctx context.Context) (*DescribeClusterParametersResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &DescribeClusterParametersResponse{
		DescribeClusterParametersOutput: r.Request.Data.(*types.DescribeClusterParametersOutput),
		response:                        &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// NewDescribeClusterParametersRequestPaginator returns a paginator for DescribeClusterParameters.
// Use Next method to get the next page, and CurrentPage to get the current
// response page from the paginator. Next will return false, if there are
// no more pages, or an error was encountered.
//
// Note: This operation can generate multiple requests to a service.
//
//   // Example iterating over pages.
//   req := client.DescribeClusterParametersRequest(input)
//   p := redshift.NewDescribeClusterParametersRequestPaginator(req)
//
//   for p.Next(context.TODO()) {
//       page := p.CurrentPage()
//   }
//
//   if err := p.Err(); err != nil {
//       return err
//   }
//
func NewDescribeClusterParametersPaginator(req DescribeClusterParametersRequest) DescribeClusterParametersPaginator {
	return DescribeClusterParametersPaginator{
		Pager: aws.Pager{
			NewRequest: func(ctx context.Context) (*aws.Request, error) {
				var inCpy *types.DescribeClusterParametersInput
				if req.Input != nil {
					tmp := *req.Input
					inCpy = &tmp
				}

				newReq := req.Copy(inCpy)
				newReq.SetContext(ctx)
				return newReq.Request, nil
			},
		},
	}
}

// DescribeClusterParametersPaginator is used to paginate the request. This can be done by
// calling Next and CurrentPage.
type DescribeClusterParametersPaginator struct {
	aws.Pager
}

func (p *DescribeClusterParametersPaginator) CurrentPage() *types.DescribeClusterParametersOutput {
	return p.Pager.CurrentPage().(*types.DescribeClusterParametersOutput)
}

// DescribeClusterParametersResponse is the response type for the
// DescribeClusterParameters API operation.
type DescribeClusterParametersResponse struct {
	*types.DescribeClusterParametersOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// DescribeClusterParameters request.
func (r *DescribeClusterParametersResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
