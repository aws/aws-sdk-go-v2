// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package redshift

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/redshift/types"
)

const opCreateHsmConfiguration = "CreateHsmConfiguration"

// CreateHsmConfigurationRequest returns a request value for making API operation for
// Amazon Redshift.
//
// Creates an HSM configuration that contains the information required by an
// Amazon Redshift cluster to store and use database encryption keys in a Hardware
// Security Module (HSM). After creating the HSM configuration, you can specify
// it as a parameter when creating a cluster. The cluster will then store its
// encryption keys in the HSM.
//
// In addition to creating an HSM configuration, you must also create an HSM
// client certificate. For more information, go to Hardware Security Modules
// (https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-HSM.html)
// in the Amazon Redshift Cluster Management Guide.
//
//    // Example sending a request using CreateHsmConfigurationRequest.
//    req := client.CreateHsmConfigurationRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/redshift-2012-12-01/CreateHsmConfiguration
func (c *Client) CreateHsmConfigurationRequest(input *types.CreateHsmConfigurationInput) CreateHsmConfigurationRequest {
	op := &aws.Operation{
		Name:       opCreateHsmConfiguration,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &types.CreateHsmConfigurationInput{}
	}

	req := c.newRequest(op, input, &types.CreateHsmConfigurationOutput{})
	return CreateHsmConfigurationRequest{Request: req, Input: input, Copy: c.CreateHsmConfigurationRequest}
}

// CreateHsmConfigurationRequest is the request type for the
// CreateHsmConfiguration API operation.
type CreateHsmConfigurationRequest struct {
	*aws.Request
	Input *types.CreateHsmConfigurationInput
	Copy  func(*types.CreateHsmConfigurationInput) CreateHsmConfigurationRequest
}

// Send marshals and sends the CreateHsmConfiguration API request.
func (r CreateHsmConfigurationRequest) Send(ctx context.Context) (*CreateHsmConfigurationResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &CreateHsmConfigurationResponse{
		CreateHsmConfigurationOutput: r.Request.Data.(*types.CreateHsmConfigurationOutput),
		response:                     &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// CreateHsmConfigurationResponse is the response type for the
// CreateHsmConfiguration API operation.
type CreateHsmConfigurationResponse struct {
	*types.CreateHsmConfigurationOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// CreateHsmConfiguration request.
func (r *CreateHsmConfigurationResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
