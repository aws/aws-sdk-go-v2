// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package redshift

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/redshift/types"
)

const opDisableLogging = "DisableLogging"

// DisableLoggingRequest returns a request value for making API operation for
// Amazon Redshift.
//
// Stops logging information, such as queries and connection attempts, for the
// specified Amazon Redshift cluster.
//
//    // Example sending a request using DisableLoggingRequest.
//    req := client.DisableLoggingRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/redshift-2012-12-01/DisableLogging
func (c *Client) DisableLoggingRequest(input *types.DisableLoggingInput) DisableLoggingRequest {
	op := &aws.Operation{
		Name:       opDisableLogging,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &types.DisableLoggingInput{}
	}

	req := c.newRequest(op, input, &types.DisableLoggingOutput{})
	return DisableLoggingRequest{Request: req, Input: input, Copy: c.DisableLoggingRequest}
}

// DisableLoggingRequest is the request type for the
// DisableLogging API operation.
type DisableLoggingRequest struct {
	*aws.Request
	Input *types.DisableLoggingInput
	Copy  func(*types.DisableLoggingInput) DisableLoggingRequest
}

// Send marshals and sends the DisableLogging API request.
func (r DisableLoggingRequest) Send(ctx context.Context) (*DisableLoggingResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &DisableLoggingResponse{
		DisableLoggingOutput: r.Request.Data.(*types.DisableLoggingOutput),
		response:             &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// DisableLoggingResponse is the response type for the
// DisableLogging API operation.
type DisableLoggingResponse struct {
	*types.DisableLoggingOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// DisableLogging request.
func (r *DisableLoggingResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
