// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package redshift

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/redshift/types"
)

const opCreateHsmClientCertificate = "CreateHsmClientCertificate"

// CreateHsmClientCertificateRequest returns a request value for making API operation for
// Amazon Redshift.
//
// Creates an HSM client certificate that an Amazon Redshift cluster will use
// to connect to the client's HSM in order to store and retrieve the keys used
// to encrypt the cluster databases.
//
// The command returns a public key, which you must store in the HSM. In addition
// to creating the HSM certificate, you must create an Amazon Redshift HSM configuration
// that provides a cluster the information needed to store and use encryption
// keys in the HSM. For more information, go to Hardware Security Modules (https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-HSM.html)
// in the Amazon Redshift Cluster Management Guide.
//
//    // Example sending a request using CreateHsmClientCertificateRequest.
//    req := client.CreateHsmClientCertificateRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/redshift-2012-12-01/CreateHsmClientCertificate
func (c *Client) CreateHsmClientCertificateRequest(input *types.CreateHsmClientCertificateInput) CreateHsmClientCertificateRequest {
	op := &aws.Operation{
		Name:       opCreateHsmClientCertificate,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &types.CreateHsmClientCertificateInput{}
	}

	req := c.newRequest(op, input, &types.CreateHsmClientCertificateOutput{})
	return CreateHsmClientCertificateRequest{Request: req, Input: input, Copy: c.CreateHsmClientCertificateRequest}
}

// CreateHsmClientCertificateRequest is the request type for the
// CreateHsmClientCertificate API operation.
type CreateHsmClientCertificateRequest struct {
	*aws.Request
	Input *types.CreateHsmClientCertificateInput
	Copy  func(*types.CreateHsmClientCertificateInput) CreateHsmClientCertificateRequest
}

// Send marshals and sends the CreateHsmClientCertificate API request.
func (r CreateHsmClientCertificateRequest) Send(ctx context.Context) (*CreateHsmClientCertificateResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &CreateHsmClientCertificateResponse{
		CreateHsmClientCertificateOutput: r.Request.Data.(*types.CreateHsmClientCertificateOutput),
		response:                         &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// CreateHsmClientCertificateResponse is the response type for the
// CreateHsmClientCertificate API operation.
type CreateHsmClientCertificateResponse struct {
	*types.CreateHsmClientCertificateOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// CreateHsmClientCertificate request.
func (r *CreateHsmClientCertificateResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
