// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package redshift

type ActionType string

// Enum values for ActionType
const (
	ActionTypeRestoreCluster      ActionType = "restore-cluster"
	ActionTypeRecommendNodeConfig ActionType = "recommend-node-config"
)

func (enum ActionType) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum ActionType) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type Mode string

// Enum values for Mode
const (
	ModeStandard        Mode = "standard"
	ModeHighPerformance Mode = "high-performance"
)

func (enum Mode) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum Mode) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type NodeConfigurationOptionsFilterName string

// Enum values for NodeConfigurationOptionsFilterName
const (
	NodeConfigurationOptionsFilterNameNodeType                        NodeConfigurationOptionsFilterName = "NodeType"
	NodeConfigurationOptionsFilterNameNumberOfNodes                   NodeConfigurationOptionsFilterName = "NumberOfNodes"
	NodeConfigurationOptionsFilterNameEstimatedDiskUtilizationPercent NodeConfigurationOptionsFilterName = "EstimatedDiskUtilizationPercent"
	NodeConfigurationOptionsFilterNameMode                            NodeConfigurationOptionsFilterName = "Mode"
)

func (enum NodeConfigurationOptionsFilterName) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum NodeConfigurationOptionsFilterName) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type OperatorType string

// Enum values for OperatorType
const (
	OperatorTypeEq      OperatorType = "eq"
	OperatorTypeLt      OperatorType = "lt"
	OperatorTypeGt      OperatorType = "gt"
	OperatorTypeLe      OperatorType = "le"
	OperatorTypeGe      OperatorType = "ge"
	OperatorTypeIn      OperatorType = "in"
	OperatorTypeBetween OperatorType = "between"
)

func (enum OperatorType) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum OperatorType) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type ParameterApplyType string

// Enum values for ParameterApplyType
const (
	ParameterApplyTypeStatic  ParameterApplyType = "static"
	ParameterApplyTypeDynamic ParameterApplyType = "dynamic"
)

func (enum ParameterApplyType) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum ParameterApplyType) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type ReservedNodeOfferingType string

// Enum values for ReservedNodeOfferingType
const (
	ReservedNodeOfferingTypeRegular    ReservedNodeOfferingType = "Regular"
	ReservedNodeOfferingTypeUpgradable ReservedNodeOfferingType = "Upgradable"
)

func (enum ReservedNodeOfferingType) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum ReservedNodeOfferingType) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type ScheduleState string

// Enum values for ScheduleState
const (
	ScheduleStateModifying ScheduleState = "MODIFYING"
	ScheduleStateActive    ScheduleState = "ACTIVE"
	ScheduleStateFailed    ScheduleState = "FAILED"
)

func (enum ScheduleState) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum ScheduleState) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type ScheduledActionFilterName string

// Enum values for ScheduledActionFilterName
const (
	ScheduledActionFilterNameClusterIdentifier ScheduledActionFilterName = "cluster-identifier"
	ScheduledActionFilterNameIamRole           ScheduledActionFilterName = "iam-role"
)

func (enum ScheduledActionFilterName) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum ScheduledActionFilterName) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type ScheduledActionState string

// Enum values for ScheduledActionState
const (
	ScheduledActionStateActive   ScheduledActionState = "ACTIVE"
	ScheduledActionStateDisabled ScheduledActionState = "DISABLED"
)

func (enum ScheduledActionState) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum ScheduledActionState) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type ScheduledActionTypeValues string

// Enum values for ScheduledActionTypeValues
const (
	ScheduledActionTypeValuesResizeCluster ScheduledActionTypeValues = "ResizeCluster"
)

func (enum ScheduledActionTypeValues) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum ScheduledActionTypeValues) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type SnapshotAttributeToSortBy string

// Enum values for SnapshotAttributeToSortBy
const (
	SnapshotAttributeToSortBySourceType SnapshotAttributeToSortBy = "SOURCE_TYPE"
	SnapshotAttributeToSortByTotalSize  SnapshotAttributeToSortBy = "TOTAL_SIZE"
	SnapshotAttributeToSortByCreateTime SnapshotAttributeToSortBy = "CREATE_TIME"
)

func (enum SnapshotAttributeToSortBy) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum SnapshotAttributeToSortBy) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type SortByOrder string

// Enum values for SortByOrder
const (
	SortByOrderAsc  SortByOrder = "ASC"
	SortByOrderDesc SortByOrder = "DESC"
)

func (enum SortByOrder) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum SortByOrder) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type SourceType string

// Enum values for SourceType
const (
	SourceTypeCluster               SourceType = "cluster"
	SourceTypeClusterParameterGroup SourceType = "cluster-parameter-group"
	SourceTypeClusterSecurityGroup  SourceType = "cluster-security-group"
	SourceTypeClusterSnapshot       SourceType = "cluster-snapshot"
	SourceTypeScheduledAction       SourceType = "scheduled-action"
)

func (enum SourceType) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum SourceType) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type TableRestoreStatusType string

// Enum values for TableRestoreStatusType
const (
	TableRestoreStatusTypePending    TableRestoreStatusType = "PENDING"
	TableRestoreStatusTypeInProgress TableRestoreStatusType = "IN_PROGRESS"
	TableRestoreStatusTypeSucceeded  TableRestoreStatusType = "SUCCEEDED"
	TableRestoreStatusTypeFailed     TableRestoreStatusType = "FAILED"
	TableRestoreStatusTypeCanceled   TableRestoreStatusType = "CANCELED"
)

func (enum TableRestoreStatusType) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum TableRestoreStatusType) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}
