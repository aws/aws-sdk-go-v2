// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package globalaccelerator

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/globalaccelerator/types"
)

const opCreateAccelerator = "CreateAccelerator"

// CreateAcceleratorRequest returns a request value for making API operation for
// AWS Global Accelerator.
//
// Create an accelerator. An accelerator includes one or more listeners that
// process inbound connections and direct traffic to one or more endpoint groups,
// each of which includes endpoints, such as Network Load Balancers. To see
// an AWS CLI example of creating an accelerator, scroll down to Example.
//
// You must specify the US-West-2 (Oregon) Region to create or update accelerators.
//
//    // Example sending a request using CreateAcceleratorRequest.
//    req := client.CreateAcceleratorRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/globalaccelerator-2018-08-08/CreateAccelerator
func (c *Client) CreateAcceleratorRequest(input *types.CreateAcceleratorInput) CreateAcceleratorRequest {
	op := &aws.Operation{
		Name:       opCreateAccelerator,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &types.CreateAcceleratorInput{}
	}

	req := c.newRequest(op, input, &types.CreateAcceleratorOutput{})
	return CreateAcceleratorRequest{Request: req, Input: input, Copy: c.CreateAcceleratorRequest}
}

// CreateAcceleratorRequest is the request type for the
// CreateAccelerator API operation.
type CreateAcceleratorRequest struct {
	*aws.Request
	Input *types.CreateAcceleratorInput
	Copy  func(*types.CreateAcceleratorInput) CreateAcceleratorRequest
}

// Send marshals and sends the CreateAccelerator API request.
func (r CreateAcceleratorRequest) Send(ctx context.Context) (*CreateAcceleratorResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &CreateAcceleratorResponse{
		CreateAcceleratorOutput: r.Request.Data.(*types.CreateAcceleratorOutput),
		response:                &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// CreateAcceleratorResponse is the response type for the
// CreateAccelerator API operation.
type CreateAcceleratorResponse struct {
	*types.CreateAcceleratorOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// CreateAccelerator request.
func (r *CreateAcceleratorResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
