// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package globalaccelerator

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/private/protocol"
	"github.com/aws/aws-sdk-go-v2/private/protocol/jsonrpc"
	"github.com/aws/aws-sdk-go-v2/service/globalaccelerator/types"
)

const opDeleteAccelerator = "DeleteAccelerator"

// DeleteAcceleratorRequest returns a request value for making API operation for
// AWS Global Accelerator.
//
// Delete an accelerator. Note: before you can delete an accelerator, you must
// disable it and remove all dependent resources (listeners and endpoint groups).
//
//    // Example sending a request using DeleteAcceleratorRequest.
//    req := client.DeleteAcceleratorRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/globalaccelerator-2018-08-08/DeleteAccelerator
func (c *Client) DeleteAcceleratorRequest(input *types.DeleteAcceleratorInput) DeleteAcceleratorRequest {
	op := &aws.Operation{
		Name:       opDeleteAccelerator,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &types.DeleteAcceleratorInput{}
	}

	req := c.newRequest(op, input, &types.DeleteAcceleratorOutput{})
	req.Handlers.Unmarshal.Remove(jsonrpc.UnmarshalHandler)
	req.Handlers.Unmarshal.PushBackNamed(protocol.UnmarshalDiscardBodyHandler)
	return DeleteAcceleratorRequest{Request: req, Input: input, Copy: c.DeleteAcceleratorRequest}
}

// DeleteAcceleratorRequest is the request type for the
// DeleteAccelerator API operation.
type DeleteAcceleratorRequest struct {
	*aws.Request
	Input *types.DeleteAcceleratorInput
	Copy  func(*types.DeleteAcceleratorInput) DeleteAcceleratorRequest
}

// Send marshals and sends the DeleteAccelerator API request.
func (r DeleteAcceleratorRequest) Send(ctx context.Context) (*DeleteAcceleratorResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &DeleteAcceleratorResponse{
		DeleteAcceleratorOutput: r.Request.Data.(*types.DeleteAcceleratorOutput),
		response:                &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// DeleteAcceleratorResponse is the response type for the
// DeleteAccelerator API operation.
type DeleteAcceleratorResponse struct {
	*types.DeleteAcceleratorOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// DeleteAccelerator request.
func (r *DeleteAcceleratorResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
