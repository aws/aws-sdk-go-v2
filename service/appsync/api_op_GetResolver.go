// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package appsync

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/appsync/types"
)

const opGetResolver = "GetResolver"

// GetResolverRequest returns a request value for making API operation for
// AWS AppSync.
//
// Retrieves a Resolver object.
//
//    // Example sending a request using GetResolverRequest.
//    req := client.GetResolverRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/appsync-2017-07-25/GetResolver
func (c *Client) GetResolverRequest(input *types.GetResolverInput) GetResolverRequest {
	op := &aws.Operation{
		Name:       opGetResolver,
		HTTPMethod: "GET",
		HTTPPath:   "/v1/apis/{apiId}/types/{typeName}/resolvers/{fieldName}",
	}

	if input == nil {
		input = &types.GetResolverInput{}
	}

	req := c.newRequest(op, input, &types.GetResolverOutput{})
	return GetResolverRequest{Request: req, Input: input, Copy: c.GetResolverRequest}
}

// GetResolverRequest is the request type for the
// GetResolver API operation.
type GetResolverRequest struct {
	*aws.Request
	Input *types.GetResolverInput
	Copy  func(*types.GetResolverInput) GetResolverRequest
}

// Send marshals and sends the GetResolver API request.
func (r GetResolverRequest) Send(ctx context.Context) (*GetResolverResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &GetResolverResponse{
		GetResolverOutput: r.Request.Data.(*types.GetResolverOutput),
		response:          &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// GetResolverResponse is the response type for the
// GetResolver API operation.
type GetResolverResponse struct {
	*types.GetResolverOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// GetResolver request.
func (r *GetResolverResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
