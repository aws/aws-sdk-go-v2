// Code generated by smithy-go-codegen DO NOT EDIT.

package types

type AssetType string

// Enum values for AssetType
const (
	AssetTypeS3_snapshot AssetType = "S3_SNAPSHOT"
)

// Values returns all known values for AssetType. Note that this can be expanded in
// the future, and so it is only as up to date as the client. The ordering of this
// slice is not guaranteed to be stable across updates.
func (AssetType) Values() []AssetType {
	return []AssetType{
		"S3_SNAPSHOT",
	}
}

type Code string

// Enum values for Code
const (
	CodeAccess_denied_exception          Code = "ACCESS_DENIED_EXCEPTION"
	CodeInternal_server_exception        Code = "INTERNAL_SERVER_EXCEPTION"
	CodeMalware_detected                 Code = "MALWARE_DETECTED"
	CodeResource_not_found_exception     Code = "RESOURCE_NOT_FOUND_EXCEPTION"
	CodeService_quota_exceeded_exception Code = "SERVICE_QUOTA_EXCEEDED_EXCEPTION"
	CodeValidation_exception             Code = "VALIDATION_EXCEPTION"
	CodeMalware_scan_encrypted_file      Code = "MALWARE_SCAN_ENCRYPTED_FILE"
)

// Values returns all known values for Code. Note that this can be expanded in the
// future, and so it is only as up to date as the client. The ordering of this
// slice is not guaranteed to be stable across updates.
func (Code) Values() []Code {
	return []Code{
		"ACCESS_DENIED_EXCEPTION",
		"INTERNAL_SERVER_EXCEPTION",
		"MALWARE_DETECTED",
		"RESOURCE_NOT_FOUND_EXCEPTION",
		"SERVICE_QUOTA_EXCEEDED_EXCEPTION",
		"VALIDATION_EXCEPTION",
		"MALWARE_SCAN_ENCRYPTED_FILE",
	}
}

type JobErrorLimitName string

// Enum values for JobErrorLimitName
const (
	JobErrorLimitNameAssets_per_revision JobErrorLimitName = "Assets per revision"
	JobErrorLimitNameAsset_size_in_gb    JobErrorLimitName = "Asset size in GB"
)

// Values returns all known values for JobErrorLimitName. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (JobErrorLimitName) Values() []JobErrorLimitName {
	return []JobErrorLimitName{
		"Assets per revision",
		"Asset size in GB",
	}
}

type JobErrorResourceTypes string

// Enum values for JobErrorResourceTypes
const (
	JobErrorResourceTypesRevision JobErrorResourceTypes = "REVISION"
	JobErrorResourceTypesAsset    JobErrorResourceTypes = "ASSET"
)

// Values returns all known values for JobErrorResourceTypes. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (JobErrorResourceTypes) Values() []JobErrorResourceTypes {
	return []JobErrorResourceTypes{
		"REVISION",
		"ASSET",
	}
}

type LimitName string

// Enum values for LimitName
const (
	LimitNameProducts_per_account                                           LimitName = "Products per account"
	LimitNameData_sets_per_account                                          LimitName = "Data sets per account"
	LimitNameData_sets_per_product                                          LimitName = "Data sets per product"
	LimitNameRevisions_per_data_set                                         LimitName = "Revisions per data set"
	LimitNameAssets_per_revision                                            LimitName = "Assets per revision"
	LimitNameAssets_per_import_job_from_amazon_s3                           LimitName = "Assets per import job from Amazon S3"
	LimitNameAsset_per_export_job_from_amazon_s3                            LimitName = "Asset per export job from Amazon S3"
	LimitNameAsset_size_in_gb                                               LimitName = "Asset size in GB"
	LimitNameConcurrent_in_progress_jobs_to_import_assets_from_amazon_s3    LimitName = "Concurrent in progress jobs to import assets from Amazon S3"
	LimitNameConcurrent_in_progress_jobs_to_import_assets_from_a_signed_url LimitName = "Concurrent in progress jobs to import assets from a signed URL"
	LimitNameConcurrent_in_progress_jobs_to_export_assets_to_amazon_s3      LimitName = "Concurrent in progress jobs to export assets to Amazon S3"
	LimitNameConcurrent_in_progress_jobs_to_export_assets_to_a_signed_url   LimitName = "Concurrent in progress jobs to export assets to a signed URL"
)

// Values returns all known values for LimitName. Note that this can be expanded in
// the future, and so it is only as up to date as the client. The ordering of this
// slice is not guaranteed to be stable across updates.
func (LimitName) Values() []LimitName {
	return []LimitName{
		"Products per account",
		"Data sets per account",
		"Data sets per product",
		"Revisions per data set",
		"Assets per revision",
		"Assets per import job from Amazon S3",
		"Asset per export job from Amazon S3",
		"Asset size in GB",
		"Concurrent in progress jobs to import assets from Amazon S3",
		"Concurrent in progress jobs to import assets from a signed URL",
		"Concurrent in progress jobs to export assets to Amazon S3",
		"Concurrent in progress jobs to export assets to a signed URL",
	}
}

type Origin string

// Enum values for Origin
const (
	OriginOwned    Origin = "OWNED"
	OriginEntitled Origin = "ENTITLED"
)

// Values returns all known values for Origin. Note that this can be expanded in
// the future, and so it is only as up to date as the client. The ordering of this
// slice is not guaranteed to be stable across updates.
func (Origin) Values() []Origin {
	return []Origin{
		"OWNED",
		"ENTITLED",
	}
}

type ResourceType string

// Enum values for ResourceType
const (
	ResourceTypeData_set ResourceType = "DATA_SET"
	ResourceTypeRevision ResourceType = "REVISION"
	ResourceTypeAsset    ResourceType = "ASSET"
	ResourceTypeJob      ResourceType = "JOB"
)

// Values returns all known values for ResourceType. Note that this can be expanded
// in the future, and so it is only as up to date as the client. The ordering of
// this slice is not guaranteed to be stable across updates.
func (ResourceType) Values() []ResourceType {
	return []ResourceType{
		"DATA_SET",
		"REVISION",
		"ASSET",
		"JOB",
	}
}

type ServerSideEncryptionTypes string

// Enum values for ServerSideEncryptionTypes
const (
	ServerSideEncryptionTypesAws_kms ServerSideEncryptionTypes = "aws:kms"
	ServerSideEncryptionTypesAes256  ServerSideEncryptionTypes = "AES256"
)

// Values returns all known values for ServerSideEncryptionTypes. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
// The ordering of this slice is not guaranteed to be stable across updates.
func (ServerSideEncryptionTypes) Values() []ServerSideEncryptionTypes {
	return []ServerSideEncryptionTypes{
		"aws:kms",
		"AES256",
	}
}

type State string

// Enum values for State
const (
	StateWaiting     State = "WAITING"
	StateIn_progress State = "IN_PROGRESS"
	StateError       State = "ERROR"
	StateCompleted   State = "COMPLETED"
	StateCancelled   State = "CANCELLED"
	StateTimed_out   State = "TIMED_OUT"
)

// Values returns all known values for State. Note that this can be expanded in the
// future, and so it is only as up to date as the client. The ordering of this
// slice is not guaranteed to be stable across updates.
func (State) Values() []State {
	return []State{
		"WAITING",
		"IN_PROGRESS",
		"ERROR",
		"COMPLETED",
		"CANCELLED",
		"TIMED_OUT",
	}
}

type Type string

// Enum values for Type
const (
	TypeImport_assets_from_s3        Type = "IMPORT_ASSETS_FROM_S3"
	TypeImport_asset_from_signed_url Type = "IMPORT_ASSET_FROM_SIGNED_URL"
	TypeExport_assets_to_s3          Type = "EXPORT_ASSETS_TO_S3"
	TypeExport_asset_to_signed_url   Type = "EXPORT_ASSET_TO_SIGNED_URL"
)

// Values returns all known values for Type. Note that this can be expanded in the
// future, and so it is only as up to date as the client. The ordering of this
// slice is not guaranteed to be stable across updates.
func (Type) Values() []Type {
	return []Type{
		"IMPORT_ASSETS_FROM_S3",
		"IMPORT_ASSET_FROM_SIGNED_URL",
		"EXPORT_ASSETS_TO_S3",
		"EXPORT_ASSET_TO_SIGNED_URL",
	}
}
