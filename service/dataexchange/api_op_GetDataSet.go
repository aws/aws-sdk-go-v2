// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package dataexchange

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/dataexchange/types"
)

const opGetDataSet = "GetDataSet"

// GetDataSetRequest returns a request value for making API operation for
// AWS Data Exchange.
//
// This operation returns information about a data set.
//
//    // Example sending a request using GetDataSetRequest.
//    req := client.GetDataSetRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/dataexchange-2017-07-25/GetDataSet
func (c *Client) GetDataSetRequest(input *types.GetDataSetInput) GetDataSetRequest {
	op := &aws.Operation{
		Name:       opGetDataSet,
		HTTPMethod: "GET",
		HTTPPath:   "/v1/data-sets/{DataSetId}",
	}

	if input == nil {
		input = &types.GetDataSetInput{}
	}

	req := c.newRequest(op, input, &types.GetDataSetOutput{})
	return GetDataSetRequest{Request: req, Input: input, Copy: c.GetDataSetRequest}
}

// GetDataSetRequest is the request type for the
// GetDataSet API operation.
type GetDataSetRequest struct {
	*aws.Request
	Input *types.GetDataSetInput
	Copy  func(*types.GetDataSetInput) GetDataSetRequest
}

// Send marshals and sends the GetDataSet API request.
func (r GetDataSetRequest) Send(ctx context.Context) (*GetDataSetResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &GetDataSetResponse{
		GetDataSetOutput: r.Request.Data.(*types.GetDataSetOutput),
		response:         &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// GetDataSetResponse is the response type for the
// GetDataSet API operation.
type GetDataSetResponse struct {
	*types.GetDataSetOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// GetDataSet request.
func (r *GetDataSetResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
