// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package textract

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/textract/types"
)

const opStartDocumentTextDetection = "StartDocumentTextDetection"

// StartDocumentTextDetectionRequest returns a request value for making API operation for
// Amazon Textract.
//
// Starts the asynchronous detection of text in a document. Amazon Textract
// can detect lines of text and the words that make up a line of text.
//
// StartDocumentTextDetection can analyze text in documents that are in JPG,
// PNG, and PDF format. The documents are stored in an Amazon S3 bucket. Use
// DocumentLocation to specify the bucket name and file name of the document.
//
// StartTextDetection returns a job identifier (JobId) that you use to get the
// results of the operation. When text detection is finished, Amazon Textract
// publishes a completion status to the Amazon Simple Notification Service (Amazon
// SNS) topic that you specify in NotificationChannel. To get the results of
// the text detection operation, first check that the status value published
// to the Amazon SNS topic is SUCCEEDED. If so, call GetDocumentTextDetection,
// and pass the job identifier (JobId) from the initial call to StartDocumentTextDetection.
//
// For more information, see Document Text Detection (https://docs.aws.amazon.com/textract/latest/dg/how-it-works-detecting.html).
//
//    // Example sending a request using StartDocumentTextDetectionRequest.
//    req := client.StartDocumentTextDetectionRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/textract-2018-06-27/StartDocumentTextDetection
func (c *Client) StartDocumentTextDetectionRequest(input *types.StartDocumentTextDetectionInput) StartDocumentTextDetectionRequest {
	op := &aws.Operation{
		Name:       opStartDocumentTextDetection,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &types.StartDocumentTextDetectionInput{}
	}

	req := c.newRequest(op, input, &types.StartDocumentTextDetectionOutput{})
	return StartDocumentTextDetectionRequest{Request: req, Input: input, Copy: c.StartDocumentTextDetectionRequest}
}

// StartDocumentTextDetectionRequest is the request type for the
// StartDocumentTextDetection API operation.
type StartDocumentTextDetectionRequest struct {
	*aws.Request
	Input *types.StartDocumentTextDetectionInput
	Copy  func(*types.StartDocumentTextDetectionInput) StartDocumentTextDetectionRequest
}

// Send marshals and sends the StartDocumentTextDetection API request.
func (r StartDocumentTextDetectionRequest) Send(ctx context.Context) (*StartDocumentTextDetectionResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &StartDocumentTextDetectionResponse{
		StartDocumentTextDetectionOutput: r.Request.Data.(*types.StartDocumentTextDetectionOutput),
		response:                         &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// StartDocumentTextDetectionResponse is the response type for the
// StartDocumentTextDetection API operation.
type StartDocumentTextDetectionResponse struct {
	*types.StartDocumentTextDetectionOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// StartDocumentTextDetection request.
func (r *StartDocumentTextDetectionResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
