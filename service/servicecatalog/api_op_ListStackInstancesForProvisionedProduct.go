// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package servicecatalog

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/servicecatalog/types"
)

const opListStackInstancesForProvisionedProduct = "ListStackInstancesForProvisionedProduct"

// ListStackInstancesForProvisionedProductRequest returns a request value for making API operation for
// AWS Service Catalog.
//
// Returns summary information about stack instances that are associated with
// the specified CFN_STACKSET type provisioned product. You can filter for stack
// instances that are associated with a specific AWS account name or region.
//
//    // Example sending a request using ListStackInstancesForProvisionedProductRequest.
//    req := client.ListStackInstancesForProvisionedProductRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/servicecatalog-2015-12-10/ListStackInstancesForProvisionedProduct
func (c *Client) ListStackInstancesForProvisionedProductRequest(input *types.ListStackInstancesForProvisionedProductInput) ListStackInstancesForProvisionedProductRequest {
	op := &aws.Operation{
		Name:       opListStackInstancesForProvisionedProduct,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &types.ListStackInstancesForProvisionedProductInput{}
	}

	req := c.newRequest(op, input, &types.ListStackInstancesForProvisionedProductOutput{})
	return ListStackInstancesForProvisionedProductRequest{Request: req, Input: input, Copy: c.ListStackInstancesForProvisionedProductRequest}
}

// ListStackInstancesForProvisionedProductRequest is the request type for the
// ListStackInstancesForProvisionedProduct API operation.
type ListStackInstancesForProvisionedProductRequest struct {
	*aws.Request
	Input *types.ListStackInstancesForProvisionedProductInput
	Copy  func(*types.ListStackInstancesForProvisionedProductInput) ListStackInstancesForProvisionedProductRequest
}

// Send marshals and sends the ListStackInstancesForProvisionedProduct API request.
func (r ListStackInstancesForProvisionedProductRequest) Send(ctx context.Context) (*ListStackInstancesForProvisionedProductResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &ListStackInstancesForProvisionedProductResponse{
		ListStackInstancesForProvisionedProductOutput: r.Request.Data.(*types.ListStackInstancesForProvisionedProductOutput),
		response: &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// ListStackInstancesForProvisionedProductResponse is the response type for the
// ListStackInstancesForProvisionedProduct API operation.
type ListStackInstancesForProvisionedProductResponse struct {
	*types.ListStackInstancesForProvisionedProductOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// ListStackInstancesForProvisionedProduct request.
func (r *ListStackInstancesForProvisionedProductResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
