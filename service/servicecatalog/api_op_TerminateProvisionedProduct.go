// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package servicecatalog

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/servicecatalog/types"
)

const opTerminateProvisionedProduct = "TerminateProvisionedProduct"

// TerminateProvisionedProductRequest returns a request value for making API operation for
// AWS Service Catalog.
//
// Terminates the specified provisioned product.
//
// This operation does not delete any records associated with the provisioned
// product.
//
// You can check the status of this request using DescribeRecord.
//
//    // Example sending a request using TerminateProvisionedProductRequest.
//    req := client.TerminateProvisionedProductRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/servicecatalog-2015-12-10/TerminateProvisionedProduct
func (c *Client) TerminateProvisionedProductRequest(input *types.TerminateProvisionedProductInput) TerminateProvisionedProductRequest {
	op := &aws.Operation{
		Name:       opTerminateProvisionedProduct,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &types.TerminateProvisionedProductInput{}
	}

	req := c.newRequest(op, input, &types.TerminateProvisionedProductOutput{})
	return TerminateProvisionedProductRequest{Request: req, Input: input, Copy: c.TerminateProvisionedProductRequest}
}

// TerminateProvisionedProductRequest is the request type for the
// TerminateProvisionedProduct API operation.
type TerminateProvisionedProductRequest struct {
	*aws.Request
	Input *types.TerminateProvisionedProductInput
	Copy  func(*types.TerminateProvisionedProductInput) TerminateProvisionedProductRequest
}

// Send marshals and sends the TerminateProvisionedProduct API request.
func (r TerminateProvisionedProductRequest) Send(ctx context.Context) (*TerminateProvisionedProductResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &TerminateProvisionedProductResponse{
		TerminateProvisionedProductOutput: r.Request.Data.(*types.TerminateProvisionedProductOutput),
		response:                          &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// TerminateProvisionedProductResponse is the response type for the
// TerminateProvisionedProduct API operation.
type TerminateProvisionedProductResponse struct {
	*types.TerminateProvisionedProductOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// TerminateProvisionedProduct request.
func (r *TerminateProvisionedProductResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
