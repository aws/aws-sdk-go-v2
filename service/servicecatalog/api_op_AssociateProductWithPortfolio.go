// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package servicecatalog

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/servicecatalog/types"
)

const opAssociateProductWithPortfolio = "AssociateProductWithPortfolio"

// AssociateProductWithPortfolioRequest returns a request value for making API operation for
// AWS Service Catalog.
//
// Associates the specified product with the specified portfolio.
//
//    // Example sending a request using AssociateProductWithPortfolioRequest.
//    req := client.AssociateProductWithPortfolioRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/servicecatalog-2015-12-10/AssociateProductWithPortfolio
func (c *Client) AssociateProductWithPortfolioRequest(input *types.AssociateProductWithPortfolioInput) AssociateProductWithPortfolioRequest {
	op := &aws.Operation{
		Name:       opAssociateProductWithPortfolio,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &types.AssociateProductWithPortfolioInput{}
	}

	req := c.newRequest(op, input, &types.AssociateProductWithPortfolioOutput{})
	return AssociateProductWithPortfolioRequest{Request: req, Input: input, Copy: c.AssociateProductWithPortfolioRequest}
}

// AssociateProductWithPortfolioRequest is the request type for the
// AssociateProductWithPortfolio API operation.
type AssociateProductWithPortfolioRequest struct {
	*aws.Request
	Input *types.AssociateProductWithPortfolioInput
	Copy  func(*types.AssociateProductWithPortfolioInput) AssociateProductWithPortfolioRequest
}

// Send marshals and sends the AssociateProductWithPortfolio API request.
func (r AssociateProductWithPortfolioRequest) Send(ctx context.Context) (*AssociateProductWithPortfolioResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &AssociateProductWithPortfolioResponse{
		AssociateProductWithPortfolioOutput: r.Request.Data.(*types.AssociateProductWithPortfolioOutput),
		response:                            &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// AssociateProductWithPortfolioResponse is the response type for the
// AssociateProductWithPortfolio API operation.
type AssociateProductWithPortfolioResponse struct {
	*types.AssociateProductWithPortfolioOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// AssociateProductWithPortfolio request.
func (r *AssociateProductWithPortfolioResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
