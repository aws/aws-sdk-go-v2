// Code generated by smithy-go-codegen DO NOT EDIT.

package servicecatalog

import (
	"context"
	awsmiddleware "github.com/aws/aws-sdk-go-v2/aws/middleware"
	"github.com/aws/aws-sdk-go-v2/aws/signer/v4"
	"github.com/aws/aws-sdk-go-v2/service/servicecatalog/types"
	"github.com/awslabs/smithy-go/middleware"
	smithyhttp "github.com/awslabs/smithy-go/transport/http"
)

// Gets the status of the specified copy product operation.
func (c *Client) DescribeCopyProductStatus(ctx context.Context, params *DescribeCopyProductStatusInput, optFns ...func(*Options)) (*DescribeCopyProductStatusOutput, error) {
	if params == nil {
		params = &DescribeCopyProductStatusInput{}
	}

	result, metadata, err := c.invokeOperation(ctx, "DescribeCopyProductStatus", params, optFns, addOperationDescribeCopyProductStatusMiddlewares)
	if err != nil {
		return nil, err
	}

	out := result.(*DescribeCopyProductStatusOutput)
	out.ResultMetadata = metadata
	return out, nil
}

type DescribeCopyProductStatusInput struct {

	// The token for the copy product operation. This token is returned by CopyProduct.
	//
	// This member is required.
	CopyProductToken *string

	// The language code.
	//
	//     * en - English (default)
	//
	//     * jp - Japanese
	//
	//     * zh
	// - Chinese
	AcceptLanguage *string
}

type DescribeCopyProductStatusOutput struct {

	// The status of the copy product operation.
	CopyProductStatus types.CopyProductStatus

	// The status message.
	StatusDetail *string

	// The identifier of the copied product.
	TargetProductId *string

	// Metadata pertaining to the operation's result.
	ResultMetadata middleware.Metadata
}

func addOperationDescribeCopyProductStatusMiddlewares(stack *middleware.Stack, options Options) (err error) {
	err = stack.Serialize.Add(&awsAwsjson11_serializeOpDescribeCopyProductStatus{}, middleware.After)
	if err != nil {
		return err
	}
	err = stack.Deserialize.Add(&awsAwsjson11_deserializeOpDescribeCopyProductStatus{}, middleware.After)
	if err != nil {
		return err
	}
	awsmiddleware.AddRequestInvocationIDMiddleware(stack)
	smithyhttp.AddContentLengthMiddleware(stack)
	addResolveEndpointMiddleware(stack, options)
	v4.AddComputePayloadSHA256Middleware(stack)
	addRetryMiddlewares(stack, options)
	addHTTPSignerV4Middleware(stack, options)
	awsmiddleware.AddAttemptClockSkewMiddleware(stack)
	addClientUserAgent(stack)
	smithyhttp.AddErrorCloseResponseBodyMiddleware(stack)
	smithyhttp.AddCloseResponseBodyMiddleware(stack)
	addOpDescribeCopyProductStatusValidationMiddleware(stack)
	stack.Initialize.Add(newServiceMetadataMiddleware_opDescribeCopyProductStatus(options.Region), middleware.Before)
	addRequestIDRetrieverMiddleware(stack)
	addResponseErrorMiddleware(stack)
	return nil
}

func newServiceMetadataMiddleware_opDescribeCopyProductStatus(region string) awsmiddleware.RegisterServiceMetadata {
	return awsmiddleware.RegisterServiceMetadata{
		Region:        region,
		ServiceID:     ServiceID,
		SigningName:   "servicecatalog",
		OperationName: "DescribeCopyProductStatus",
	}
}
