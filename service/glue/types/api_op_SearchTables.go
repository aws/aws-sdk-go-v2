// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package types

import (
	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/internal/awsutil"
)

type SearchTablesInput struct {
	_ struct{} `type:"structure"`

	// A unique identifier, consisting of account_id/datalake.
	CatalogId *string `min:"1" type:"string"`

	// A list of key-value pairs, and a comparator used to filter the search results.
	// Returns all entities matching the predicate.
	Filters []PropertyPredicate `type:"list"`

	// The maximum number of tables to return in a single response.
	MaxResults *int64 `min:"1" type:"integer"`

	// A continuation token, included if this is a continuation call.
	NextToken *string `type:"string"`

	// A string used for a text search.
	//
	// Specifying a value in quotes filters based on an exact match to the value.
	SearchText *string `type:"string"`

	// A list of criteria for sorting the results by a field name, in an ascending
	// or descending order.
	SortCriteria []SortCriterion `type:"list"`
}

// String returns the string representation
func (s SearchTablesInput) String() string {
	return awsutil.Prettify(s)
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *SearchTablesInput) Validate() error {
	invalidParams := aws.ErrInvalidParams{Context: "SearchTablesInput"}
	if s.CatalogId != nil && len(*s.CatalogId) < 1 {
		invalidParams.Add(aws.NewErrParamMinLen("CatalogId", 1))
	}
	if s.MaxResults != nil && *s.MaxResults < 1 {
		invalidParams.Add(aws.NewErrParamMinValue("MaxResults", 1))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

type SearchTablesOutput struct {
	_ struct{} `type:"structure"`

	// A continuation token, present if the current list segment is not the last.
	NextToken *string `type:"string"`

	// A list of the requested Table objects. The SearchTables response returns
	// only the tables that you have access to.
	TableList []Table `type:"list"`
}

// String returns the string representation
func (s SearchTablesOutput) String() string {
	return awsutil.Prettify(s)
}
