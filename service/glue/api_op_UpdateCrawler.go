// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package glue

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/glue/types"
)

const opUpdateCrawler = "UpdateCrawler"

// UpdateCrawlerRequest returns a request value for making API operation for
// AWS Glue.
//
// Updates a crawler. If a crawler is running, you must stop it using StopCrawler
// before updating it.
//
//    // Example sending a request using UpdateCrawlerRequest.
//    req := client.UpdateCrawlerRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/glue-2017-03-31/UpdateCrawler
func (c *Client) UpdateCrawlerRequest(input *types.UpdateCrawlerInput) UpdateCrawlerRequest {
	op := &aws.Operation{
		Name:       opUpdateCrawler,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &types.UpdateCrawlerInput{}
	}

	req := c.newRequest(op, input, &types.UpdateCrawlerOutput{})
	return UpdateCrawlerRequest{Request: req, Input: input, Copy: c.UpdateCrawlerRequest}
}

// UpdateCrawlerRequest is the request type for the
// UpdateCrawler API operation.
type UpdateCrawlerRequest struct {
	*aws.Request
	Input *types.UpdateCrawlerInput
	Copy  func(*types.UpdateCrawlerInput) UpdateCrawlerRequest
}

// Send marshals and sends the UpdateCrawler API request.
func (r UpdateCrawlerRequest) Send(ctx context.Context) (*UpdateCrawlerResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &UpdateCrawlerResponse{
		UpdateCrawlerOutput: r.Request.Data.(*types.UpdateCrawlerOutput),
		response:            &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// UpdateCrawlerResponse is the response type for the
// UpdateCrawler API operation.
type UpdateCrawlerResponse struct {
	*types.UpdateCrawlerOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// UpdateCrawler request.
func (r *UpdateCrawlerResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
