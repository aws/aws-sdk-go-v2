// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package glue

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/glue/types"
)

const opGetWorkflow = "GetWorkflow"

// GetWorkflowRequest returns a request value for making API operation for
// AWS Glue.
//
// Retrieves resource metadata for a workflow.
//
//    // Example sending a request using GetWorkflowRequest.
//    req := client.GetWorkflowRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/glue-2017-03-31/GetWorkflow
func (c *Client) GetWorkflowRequest(input *types.GetWorkflowInput) GetWorkflowRequest {
	op := &aws.Operation{
		Name:       opGetWorkflow,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &types.GetWorkflowInput{}
	}

	req := c.newRequest(op, input, &types.GetWorkflowOutput{})
	return GetWorkflowRequest{Request: req, Input: input, Copy: c.GetWorkflowRequest}
}

// GetWorkflowRequest is the request type for the
// GetWorkflow API operation.
type GetWorkflowRequest struct {
	*aws.Request
	Input *types.GetWorkflowInput
	Copy  func(*types.GetWorkflowInput) GetWorkflowRequest
}

// Send marshals and sends the GetWorkflow API request.
func (r GetWorkflowRequest) Send(ctx context.Context) (*GetWorkflowResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &GetWorkflowResponse{
		GetWorkflowOutput: r.Request.Data.(*types.GetWorkflowOutput),
		response:          &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// GetWorkflowResponse is the response type for the
// GetWorkflow API operation.
type GetWorkflowResponse struct {
	*types.GetWorkflowOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// GetWorkflow request.
func (r *GetWorkflowResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
