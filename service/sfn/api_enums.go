// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package sfn

type ExecutionStatus string

// Enum values for ExecutionStatus
const (
	ExecutionStatusRunning   ExecutionStatus = "RUNNING"
	ExecutionStatusSucceeded ExecutionStatus = "SUCCEEDED"
	ExecutionStatusFailed    ExecutionStatus = "FAILED"
	ExecutionStatusTimedOut  ExecutionStatus = "TIMED_OUT"
	ExecutionStatusAborted   ExecutionStatus = "ABORTED"
)

func (enum ExecutionStatus) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum ExecutionStatus) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type HistoryEventType string

// Enum values for HistoryEventType
const (
	HistoryEventTypeActivityFailed               HistoryEventType = "ActivityFailed"
	HistoryEventTypeActivityScheduleFailed       HistoryEventType = "ActivityScheduleFailed"
	HistoryEventTypeActivityScheduled            HistoryEventType = "ActivityScheduled"
	HistoryEventTypeActivityStarted              HistoryEventType = "ActivityStarted"
	HistoryEventTypeActivitySucceeded            HistoryEventType = "ActivitySucceeded"
	HistoryEventTypeActivityTimedOut             HistoryEventType = "ActivityTimedOut"
	HistoryEventTypeChoiceStateEntered           HistoryEventType = "ChoiceStateEntered"
	HistoryEventTypeChoiceStateExited            HistoryEventType = "ChoiceStateExited"
	HistoryEventTypeTaskFailed                   HistoryEventType = "TaskFailed"
	HistoryEventTypeTaskScheduled                HistoryEventType = "TaskScheduled"
	HistoryEventTypeTaskStartFailed              HistoryEventType = "TaskStartFailed"
	HistoryEventTypeTaskStarted                  HistoryEventType = "TaskStarted"
	HistoryEventTypeTaskSubmitFailed             HistoryEventType = "TaskSubmitFailed"
	HistoryEventTypeTaskSubmitted                HistoryEventType = "TaskSubmitted"
	HistoryEventTypeTaskSucceeded                HistoryEventType = "TaskSucceeded"
	HistoryEventTypeTaskTimedOut                 HistoryEventType = "TaskTimedOut"
	HistoryEventTypeExecutionFailed              HistoryEventType = "ExecutionFailed"
	HistoryEventTypeExecutionStarted             HistoryEventType = "ExecutionStarted"
	HistoryEventTypeExecutionSucceeded           HistoryEventType = "ExecutionSucceeded"
	HistoryEventTypeExecutionAborted             HistoryEventType = "ExecutionAborted"
	HistoryEventTypeExecutionTimedOut            HistoryEventType = "ExecutionTimedOut"
	HistoryEventTypeFailStateEntered             HistoryEventType = "FailStateEntered"
	HistoryEventTypeLambdaFunctionFailed         HistoryEventType = "LambdaFunctionFailed"
	HistoryEventTypeLambdaFunctionScheduleFailed HistoryEventType = "LambdaFunctionScheduleFailed"
	HistoryEventTypeLambdaFunctionScheduled      HistoryEventType = "LambdaFunctionScheduled"
	HistoryEventTypeLambdaFunctionStartFailed    HistoryEventType = "LambdaFunctionStartFailed"
	HistoryEventTypeLambdaFunctionStarted        HistoryEventType = "LambdaFunctionStarted"
	HistoryEventTypeLambdaFunctionSucceeded      HistoryEventType = "LambdaFunctionSucceeded"
	HistoryEventTypeLambdaFunctionTimedOut       HistoryEventType = "LambdaFunctionTimedOut"
	HistoryEventTypeSucceedStateEntered          HistoryEventType = "SucceedStateEntered"
	HistoryEventTypeSucceedStateExited           HistoryEventType = "SucceedStateExited"
	HistoryEventTypeTaskStateAborted             HistoryEventType = "TaskStateAborted"
	HistoryEventTypeTaskStateEntered             HistoryEventType = "TaskStateEntered"
	HistoryEventTypeTaskStateExited              HistoryEventType = "TaskStateExited"
	HistoryEventTypePassStateEntered             HistoryEventType = "PassStateEntered"
	HistoryEventTypePassStateExited              HistoryEventType = "PassStateExited"
	HistoryEventTypeParallelStateAborted         HistoryEventType = "ParallelStateAborted"
	HistoryEventTypeParallelStateEntered         HistoryEventType = "ParallelStateEntered"
	HistoryEventTypeParallelStateExited          HistoryEventType = "ParallelStateExited"
	HistoryEventTypeParallelStateFailed          HistoryEventType = "ParallelStateFailed"
	HistoryEventTypeParallelStateStarted         HistoryEventType = "ParallelStateStarted"
	HistoryEventTypeParallelStateSucceeded       HistoryEventType = "ParallelStateSucceeded"
	HistoryEventTypeWaitStateAborted             HistoryEventType = "WaitStateAborted"
	HistoryEventTypeWaitStateEntered             HistoryEventType = "WaitStateEntered"
	HistoryEventTypeWaitStateExited              HistoryEventType = "WaitStateExited"
)

func (enum HistoryEventType) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum HistoryEventType) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type StateMachineStatus string

// Enum values for StateMachineStatus
const (
	StateMachineStatusActive   StateMachineStatus = "ACTIVE"
	StateMachineStatusDeleting StateMachineStatus = "DELETING"
)

func (enum StateMachineStatus) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum StateMachineStatus) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}
