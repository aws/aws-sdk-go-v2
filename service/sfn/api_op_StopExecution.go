// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package sfn

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/sfn/types"
)

const opStopExecution = "StopExecution"

// StopExecutionRequest returns a request value for making API operation for
// AWS Step Functions.
//
// Stops an execution.
//
//    // Example sending a request using StopExecutionRequest.
//    req := client.StopExecutionRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/states-2016-11-23/StopExecution
func (c *Client) StopExecutionRequest(input *types.StopExecutionInput) StopExecutionRequest {
	op := &aws.Operation{
		Name:       opStopExecution,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &types.StopExecutionInput{}
	}

	req := c.newRequest(op, input, &types.StopExecutionOutput{})
	return StopExecutionRequest{Request: req, Input: input, Copy: c.StopExecutionRequest}
}

// StopExecutionRequest is the request type for the
// StopExecution API operation.
type StopExecutionRequest struct {
	*aws.Request
	Input *types.StopExecutionInput
	Copy  func(*types.StopExecutionInput) StopExecutionRequest
}

// Send marshals and sends the StopExecution API request.
func (r StopExecutionRequest) Send(ctx context.Context) (*StopExecutionResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &StopExecutionResponse{
		StopExecutionOutput: r.Request.Data.(*types.StopExecutionOutput),
		response:            &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// StopExecutionResponse is the response type for the
// StopExecution API operation.
type StopExecutionResponse struct {
	*types.StopExecutionOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// StopExecution request.
func (r *StopExecutionResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
