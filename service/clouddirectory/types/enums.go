// Code generated by smithy-go-codegen DO NOT EDIT.

package types

type BatchReadExceptionType string

// Enum values for BatchReadExceptionType
const (
	BatchReadExceptionTypeValidationexception             BatchReadExceptionType = "ValidationException"
	BatchReadExceptionTypeInvalidarnexception             BatchReadExceptionType = "InvalidArnException"
	BatchReadExceptionTypeResourcenotfoundexception       BatchReadExceptionType = "ResourceNotFoundException"
	BatchReadExceptionTypeInvalidnexttokenexception       BatchReadExceptionType = "InvalidNextTokenException"
	BatchReadExceptionTypeAccessdeniedexception           BatchReadExceptionType = "AccessDeniedException"
	BatchReadExceptionTypeNotnodeexception                BatchReadExceptionType = "NotNodeException"
	BatchReadExceptionTypeFacetvalidationexception        BatchReadExceptionType = "FacetValidationException"
	BatchReadExceptionTypeCannotlistparentofrootexception BatchReadExceptionType = "CannotListParentOfRootException"
	BatchReadExceptionTypeNotindexexception               BatchReadExceptionType = "NotIndexException"
	BatchReadExceptionTypeNotpolicyexception              BatchReadExceptionType = "NotPolicyException"
	BatchReadExceptionTypeDirectorynotenabledexception    BatchReadExceptionType = "DirectoryNotEnabledException"
	BatchReadExceptionTypeLimitexceededexception          BatchReadExceptionType = "LimitExceededException"
	BatchReadExceptionTypeInternalserviceexception        BatchReadExceptionType = "InternalServiceException"
)

// Values returns all known values for BatchReadExceptionType. Note that this can
// be expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (BatchReadExceptionType) Values() []BatchReadExceptionType {
	return []BatchReadExceptionType{
		"ValidationException",
		"InvalidArnException",
		"ResourceNotFoundException",
		"InvalidNextTokenException",
		"AccessDeniedException",
		"NotNodeException",
		"FacetValidationException",
		"CannotListParentOfRootException",
		"NotIndexException",
		"NotPolicyException",
		"DirectoryNotEnabledException",
		"LimitExceededException",
		"InternalServiceException",
	}
}

type BatchWriteExceptionType string

// Enum values for BatchWriteExceptionType
const (
	BatchWriteExceptionTypeInternalserviceexception         BatchWriteExceptionType = "InternalServiceException"
	BatchWriteExceptionTypeValidationexception              BatchWriteExceptionType = "ValidationException"
	BatchWriteExceptionTypeInvalidarnexception              BatchWriteExceptionType = "InvalidArnException"
	BatchWriteExceptionTypeLinknamealreadyinuseexception    BatchWriteExceptionType = "LinkNameAlreadyInUseException"
	BatchWriteExceptionTypeStillcontainslinksexception      BatchWriteExceptionType = "StillContainsLinksException"
	BatchWriteExceptionTypeFacetvalidationexception         BatchWriteExceptionType = "FacetValidationException"
	BatchWriteExceptionTypeObjectnotdetachedexception       BatchWriteExceptionType = "ObjectNotDetachedException"
	BatchWriteExceptionTypeResourcenotfoundexception        BatchWriteExceptionType = "ResourceNotFoundException"
	BatchWriteExceptionTypeAccessdeniedexception            BatchWriteExceptionType = "AccessDeniedException"
	BatchWriteExceptionTypeInvalidattachmentexception       BatchWriteExceptionType = "InvalidAttachmentException"
	BatchWriteExceptionTypeNotindexexception                BatchWriteExceptionType = "NotIndexException"
	BatchWriteExceptionTypeNotnodeexception                 BatchWriteExceptionType = "NotNodeException"
	BatchWriteExceptionTypeIndexedattributemissingexception BatchWriteExceptionType = "IndexedAttributeMissingException"
	BatchWriteExceptionTypeObjectalreadydetachedexception   BatchWriteExceptionType = "ObjectAlreadyDetachedException"
	BatchWriteExceptionTypeNotpolicyexception               BatchWriteExceptionType = "NotPolicyException"
	BatchWriteExceptionTypeDirectorynotenabledexception     BatchWriteExceptionType = "DirectoryNotEnabledException"
	BatchWriteExceptionTypeLimitexceededexception           BatchWriteExceptionType = "LimitExceededException"
	BatchWriteExceptionTypeUnsupportedindextypeexception    BatchWriteExceptionType = "UnsupportedIndexTypeException"
)

// Values returns all known values for BatchWriteExceptionType. Note that this can
// be expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (BatchWriteExceptionType) Values() []BatchWriteExceptionType {
	return []BatchWriteExceptionType{
		"InternalServiceException",
		"ValidationException",
		"InvalidArnException",
		"LinkNameAlreadyInUseException",
		"StillContainsLinksException",
		"FacetValidationException",
		"ObjectNotDetachedException",
		"ResourceNotFoundException",
		"AccessDeniedException",
		"InvalidAttachmentException",
		"NotIndexException",
		"NotNodeException",
		"IndexedAttributeMissingException",
		"ObjectAlreadyDetachedException",
		"NotPolicyException",
		"DirectoryNotEnabledException",
		"LimitExceededException",
		"UnsupportedIndexTypeException",
	}
}

type ConsistencyLevel string

// Enum values for ConsistencyLevel
const (
	ConsistencyLevelSerializable ConsistencyLevel = "SERIALIZABLE"
	ConsistencyLevelEventual     ConsistencyLevel = "EVENTUAL"
)

// Values returns all known values for ConsistencyLevel. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (ConsistencyLevel) Values() []ConsistencyLevel {
	return []ConsistencyLevel{
		"SERIALIZABLE",
		"EVENTUAL",
	}
}

type DirectoryState string

// Enum values for DirectoryState
const (
	DirectoryStateEnabled  DirectoryState = "ENABLED"
	DirectoryStateDisabled DirectoryState = "DISABLED"
	DirectoryStateDeleted  DirectoryState = "DELETED"
)

// Values returns all known values for DirectoryState. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (DirectoryState) Values() []DirectoryState {
	return []DirectoryState{
		"ENABLED",
		"DISABLED",
		"DELETED",
	}
}

type FacetAttributeType string

// Enum values for FacetAttributeType
const (
	FacetAttributeTypeString   FacetAttributeType = "STRING"
	FacetAttributeTypeBinary   FacetAttributeType = "BINARY"
	FacetAttributeTypeBoolean  FacetAttributeType = "BOOLEAN"
	FacetAttributeTypeNumber   FacetAttributeType = "NUMBER"
	FacetAttributeTypeDatetime FacetAttributeType = "DATETIME"
	FacetAttributeTypeVariant  FacetAttributeType = "VARIANT"
)

// Values returns all known values for FacetAttributeType. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (FacetAttributeType) Values() []FacetAttributeType {
	return []FacetAttributeType{
		"STRING",
		"BINARY",
		"BOOLEAN",
		"NUMBER",
		"DATETIME",
		"VARIANT",
	}
}

type FacetStyle string

// Enum values for FacetStyle
const (
	FacetStyleStatic  FacetStyle = "STATIC"
	FacetStyleDynamic FacetStyle = "DYNAMIC"
)

// Values returns all known values for FacetStyle. Note that this can be expanded
// in the future, and so it is only as up to date as the client. The ordering of
// this slice is not guaranteed to be stable across updates.
func (FacetStyle) Values() []FacetStyle {
	return []FacetStyle{
		"STATIC",
		"DYNAMIC",
	}
}

type ObjectType string

// Enum values for ObjectType
const (
	ObjectTypeNode      ObjectType = "NODE"
	ObjectTypeLeaf_node ObjectType = "LEAF_NODE"
	ObjectTypePolicy    ObjectType = "POLICY"
	ObjectTypeIndex     ObjectType = "INDEX"
)

// Values returns all known values for ObjectType. Note that this can be expanded
// in the future, and so it is only as up to date as the client. The ordering of
// this slice is not guaranteed to be stable across updates.
func (ObjectType) Values() []ObjectType {
	return []ObjectType{
		"NODE",
		"LEAF_NODE",
		"POLICY",
		"INDEX",
	}
}

type RangeMode string

// Enum values for RangeMode
const (
	RangeModeFirst                      RangeMode = "FIRST"
	RangeModeLast                       RangeMode = "LAST"
	RangeModeLast_before_missing_values RangeMode = "LAST_BEFORE_MISSING_VALUES"
	RangeModeInclusive                  RangeMode = "INCLUSIVE"
	RangeModeExclusive                  RangeMode = "EXCLUSIVE"
)

// Values returns all known values for RangeMode. Note that this can be expanded in
// the future, and so it is only as up to date as the client. The ordering of this
// slice is not guaranteed to be stable across updates.
func (RangeMode) Values() []RangeMode {
	return []RangeMode{
		"FIRST",
		"LAST",
		"LAST_BEFORE_MISSING_VALUES",
		"INCLUSIVE",
		"EXCLUSIVE",
	}
}

type RequiredAttributeBehavior string

// Enum values for RequiredAttributeBehavior
const (
	RequiredAttributeBehaviorRequired_always RequiredAttributeBehavior = "REQUIRED_ALWAYS"
	RequiredAttributeBehaviorNot_required    RequiredAttributeBehavior = "NOT_REQUIRED"
)

// Values returns all known values for RequiredAttributeBehavior. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
// The ordering of this slice is not guaranteed to be stable across updates.
func (RequiredAttributeBehavior) Values() []RequiredAttributeBehavior {
	return []RequiredAttributeBehavior{
		"REQUIRED_ALWAYS",
		"NOT_REQUIRED",
	}
}

type RuleType string

// Enum values for RuleType
const (
	RuleTypeBinary_length     RuleType = "BINARY_LENGTH"
	RuleTypeNumber_comparison RuleType = "NUMBER_COMPARISON"
	RuleTypeString_from_set   RuleType = "STRING_FROM_SET"
	RuleTypeString_length     RuleType = "STRING_LENGTH"
)

// Values returns all known values for RuleType. Note that this can be expanded in
// the future, and so it is only as up to date as the client. The ordering of this
// slice is not guaranteed to be stable across updates.
func (RuleType) Values() []RuleType {
	return []RuleType{
		"BINARY_LENGTH",
		"NUMBER_COMPARISON",
		"STRING_FROM_SET",
		"STRING_LENGTH",
	}
}

type UpdateActionType string

// Enum values for UpdateActionType
const (
	UpdateActionTypeCreate_or_update UpdateActionType = "CREATE_OR_UPDATE"
	UpdateActionTypeDelete           UpdateActionType = "DELETE"
)

// Values returns all known values for UpdateActionType. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (UpdateActionType) Values() []UpdateActionType {
	return []UpdateActionType{
		"CREATE_OR_UPDATE",
		"DELETE",
	}
}
