// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package clouddirectory

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/private/protocol"
	"github.com/aws/aws-sdk-go-v2/private/protocol/restjson"
	"github.com/aws/aws-sdk-go-v2/service/clouddirectory/types"
)

const opDetachTypedLink = "DetachTypedLink"

// DetachTypedLinkRequest returns a request value for making API operation for
// Amazon CloudDirectory.
//
// Detaches a typed link from a specified source and target object. For more
// information, see Typed Links (https://docs.aws.amazon.com/clouddirectory/latest/developerguide/directory_objects_links.html#directory_objects_links_typedlink).
//
//    // Example sending a request using DetachTypedLinkRequest.
//    req := client.DetachTypedLinkRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/clouddirectory-2017-01-11/DetachTypedLink
func (c *Client) DetachTypedLinkRequest(input *types.DetachTypedLinkInput) DetachTypedLinkRequest {
	op := &aws.Operation{
		Name:       opDetachTypedLink,
		HTTPMethod: "PUT",
		HTTPPath:   "/amazonclouddirectory/2017-01-11/typedlink/detach",
	}

	if input == nil {
		input = &types.DetachTypedLinkInput{}
	}

	req := c.newRequest(op, input, &types.DetachTypedLinkOutput{})
	req.Handlers.Unmarshal.Remove(restjson.UnmarshalHandler)
	req.Handlers.Unmarshal.PushBackNamed(protocol.UnmarshalDiscardBodyHandler)
	return DetachTypedLinkRequest{Request: req, Input: input, Copy: c.DetachTypedLinkRequest}
}

// DetachTypedLinkRequest is the request type for the
// DetachTypedLink API operation.
type DetachTypedLinkRequest struct {
	*aws.Request
	Input *types.DetachTypedLinkInput
	Copy  func(*types.DetachTypedLinkInput) DetachTypedLinkRequest
}

// Send marshals and sends the DetachTypedLink API request.
func (r DetachTypedLinkRequest) Send(ctx context.Context) (*DetachTypedLinkResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &DetachTypedLinkResponse{
		DetachTypedLinkOutput: r.Request.Data.(*types.DetachTypedLinkOutput),
		response:              &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// DetachTypedLinkResponse is the response type for the
// DetachTypedLink API operation.
type DetachTypedLinkResponse struct {
	*types.DetachTypedLinkOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// DetachTypedLink request.
func (r *DetachTypedLinkResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
