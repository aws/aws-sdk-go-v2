// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package marketplacemetering

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/marketplacemetering/types"
)

const opMeterUsage = "MeterUsage"

// MeterUsageRequest returns a request value for making API operation for
// AWSMarketplace Metering.
//
// API to emit metering records. For identical requests, the API is idempotent.
// It simply returns the metering record ID.
//
// MeterUsage is authenticated on the buyer's AWS account, generally when running
// from an EC2 instance on the AWS Marketplace.
//
//    // Example sending a request using MeterUsageRequest.
//    req := client.MeterUsageRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/meteringmarketplace-2016-01-14/MeterUsage
func (c *Client) MeterUsageRequest(input *types.MeterUsageInput) MeterUsageRequest {
	op := &aws.Operation{
		Name:       opMeterUsage,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &types.MeterUsageInput{}
	}

	req := c.newRequest(op, input, &types.MeterUsageOutput{})
	return MeterUsageRequest{Request: req, Input: input, Copy: c.MeterUsageRequest}
}

// MeterUsageRequest is the request type for the
// MeterUsage API operation.
type MeterUsageRequest struct {
	*aws.Request
	Input *types.MeterUsageInput
	Copy  func(*types.MeterUsageInput) MeterUsageRequest
}

// Send marshals and sends the MeterUsage API request.
func (r MeterUsageRequest) Send(ctx context.Context) (*MeterUsageResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &MeterUsageResponse{
		MeterUsageOutput: r.Request.Data.(*types.MeterUsageOutput),
		response:         &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// MeterUsageResponse is the response type for the
// MeterUsage API operation.
type MeterUsageResponse struct {
	*types.MeterUsageOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// MeterUsage request.
func (r *MeterUsageResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
