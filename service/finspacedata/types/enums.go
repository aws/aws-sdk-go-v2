// Code generated by smithy-go-codegen DO NOT EDIT.

package types

type ChangesetStatus string

// Enum values for ChangesetStatus
const (
	ChangesetStatusPending       ChangesetStatus = "PENDING"
	ChangesetStatusFailed        ChangesetStatus = "FAILED"
	ChangesetStatusSuccess       ChangesetStatus = "SUCCESS"
	ChangesetStatusRunning       ChangesetStatus = "RUNNING"
	ChangesetStatusStopRequested ChangesetStatus = "STOP_REQUESTED"
)

// Values returns all known values for ChangesetStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (ChangesetStatus) Values() []ChangesetStatus {
	return []ChangesetStatus{
		"PENDING",
		"FAILED",
		"SUCCESS",
		"RUNNING",
		"STOP_REQUESTED",
	}
}

type ChangeType string

// Enum values for ChangeType
const (
	ChangeTypeReplace ChangeType = "REPLACE"
	ChangeTypeAppend  ChangeType = "APPEND"
	ChangeTypeModify  ChangeType = "MODIFY"
)

// Values returns all known values for ChangeType. Note that this can be expanded
// in the future, and so it is only as up to date as the client. The ordering of
// this slice is not guaranteed to be stable across updates.
func (ChangeType) Values() []ChangeType {
	return []ChangeType{
		"REPLACE",
		"APPEND",
		"MODIFY",
	}
}

type ErrorCategory string

// Enum values for ErrorCategory
const (
	ErrorCategoryValidation               ErrorCategory = "The_inputs_to_this_request_are_invalid"
	ErrorCategoryServiceQuotaExceeded     ErrorCategory = "Service_limits_have_been_exceeded"
	ErrorCategoryAccessDenied             ErrorCategory = "Missing_required_permission_to_perform_this_request"
	ErrorCategoryResourceNotFound         ErrorCategory = "One_or_more_inputs_to_this_request_were_not_found"
	ErrorCategoryThrottling               ErrorCategory = "The_system_temporarily_lacks_sufficient_resources_to_process_the_request"
	ErrorCategoryInternalServiceException ErrorCategory = "An_internal_error_has_occurred"
	ErrorCategoryCancelled                ErrorCategory = "Cancelled"
	ErrorCategoryUserRecoverable          ErrorCategory = "A_user_recoverable_error_has_occurred"
)

// Values returns all known values for ErrorCategory. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (ErrorCategory) Values() []ErrorCategory {
	return []ErrorCategory{
		"The_inputs_to_this_request_are_invalid",
		"Service_limits_have_been_exceeded",
		"Missing_required_permission_to_perform_this_request",
		"One_or_more_inputs_to_this_request_were_not_found",
		"The_system_temporarily_lacks_sufficient_resources_to_process_the_request",
		"An_internal_error_has_occurred",
		"Cancelled",
		"A_user_recoverable_error_has_occurred",
	}
}

type FormatType string

// Enum values for FormatType
const (
	FormatTypeCsv     FormatType = "CSV"
	FormatTypeJson    FormatType = "JSON"
	FormatTypeParquet FormatType = "PARQUET"
	FormatTypeXml     FormatType = "XML"
)

// Values returns all known values for FormatType. Note that this can be expanded
// in the future, and so it is only as up to date as the client. The ordering of
// this slice is not guaranteed to be stable across updates.
func (FormatType) Values() []FormatType {
	return []FormatType{
		"CSV",
		"JSON",
		"PARQUET",
		"XML",
	}
}

type LocationType string

// Enum values for LocationType
const (
	LocationTypeIngestion LocationType = "INGESTION"
	LocationTypeSagemaker LocationType = "SAGEMAKER"
)

// Values returns all known values for LocationType. Note that this can be expanded
// in the future, and so it is only as up to date as the client. The ordering of
// this slice is not guaranteed to be stable across updates.
func (LocationType) Values() []LocationType {
	return []LocationType{
		"INGESTION",
		"SAGEMAKER",
	}
}

type SourceType string

// Enum values for SourceType
const (
	SourceTypeS3 SourceType = "S3"
)

// Values returns all known values for SourceType. Note that this can be expanded
// in the future, and so it is only as up to date as the client. The ordering of
// this slice is not guaranteed to be stable across updates.
func (SourceType) Values() []SourceType {
	return []SourceType{
		"S3",
	}
}
