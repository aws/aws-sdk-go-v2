// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package cloudsearch

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/cloudsearch/types"
)

const opUpdateScalingParameters = "UpdateScalingParameters"

// UpdateScalingParametersRequest returns a request value for making API operation for
// Amazon CloudSearch.
//
// Configures scaling parameters for a domain. A domain's scaling parameters
// specify the desired search instance type and replication count. Amazon CloudSearch
// will still automatically scale your domain based on the volume of data and
// traffic, but not below the desired instance type and replication count. If
// the Multi-AZ option is enabled, these values control the resources used per
// Availability Zone. For more information, see Configuring Scaling Options
// (http://docs.aws.amazon.com/cloudsearch/latest/developerguide/configuring-scaling-options.html)
// in the Amazon CloudSearch Developer Guide.
//
//    // Example sending a request using UpdateScalingParametersRequest.
//    req := client.UpdateScalingParametersRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
func (c *Client) UpdateScalingParametersRequest(input *types.UpdateScalingParametersInput) UpdateScalingParametersRequest {
	op := &aws.Operation{
		Name:       opUpdateScalingParameters,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &types.UpdateScalingParametersInput{}
	}

	req := c.newRequest(op, input, &types.UpdateScalingParametersOutput{})
	return UpdateScalingParametersRequest{Request: req, Input: input, Copy: c.UpdateScalingParametersRequest}
}

// UpdateScalingParametersRequest is the request type for the
// UpdateScalingParameters API operation.
type UpdateScalingParametersRequest struct {
	*aws.Request
	Input *types.UpdateScalingParametersInput
	Copy  func(*types.UpdateScalingParametersInput) UpdateScalingParametersRequest
}

// Send marshals and sends the UpdateScalingParameters API request.
func (r UpdateScalingParametersRequest) Send(ctx context.Context) (*UpdateScalingParametersResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &UpdateScalingParametersResponse{
		UpdateScalingParametersOutput: r.Request.Data.(*types.UpdateScalingParametersOutput),
		response:                      &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// UpdateScalingParametersResponse is the response type for the
// UpdateScalingParameters API operation.
type UpdateScalingParametersResponse struct {
	*types.UpdateScalingParametersOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// UpdateScalingParameters request.
func (r *UpdateScalingParametersResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
