// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package signer

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/signer/types"
)

const opStartSigningJob = "StartSigningJob"

// StartSigningJobRequest returns a request value for making API operation for
// AWS Signer.
//
// Initiates a signing job to be performed on the code provided. Signing jobs
// are viewable by the ListSigningJobs operation for two years after they are
// performed. Note the following requirements:
//
//    * You must create an Amazon S3 source bucket. For more information, see
//    Create a Bucket (http://docs.aws.amazon.com/AmazonS3/latest/gsg/CreatingABucket.html)
//    in the Amazon S3 Getting Started Guide.
//
//    * Your S3 source bucket must be version enabled.
//
//    * You must create an S3 destination bucket. Code signing uses your S3
//    destination bucket to write your signed code.
//
//    * You specify the name of the source and destination buckets when calling
//    the StartSigningJob operation.
//
//    * You must also specify a request token that identifies your request to
//    code signing.
//
// You can call the DescribeSigningJob and the ListSigningJobs actions after
// you call StartSigningJob.
//
// For a Java example that shows how to use this action, see http://docs.aws.amazon.com/acm/latest/userguide/
// (http://docs.aws.amazon.com/acm/latest/userguide/)
//
//    // Example sending a request using StartSigningJobRequest.
//    req := client.StartSigningJobRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/signer-2017-08-25/StartSigningJob
func (c *Client) StartSigningJobRequest(input *types.StartSigningJobInput) StartSigningJobRequest {
	op := &aws.Operation{
		Name:       opStartSigningJob,
		HTTPMethod: "POST",
		HTTPPath:   "/signing-jobs",
	}

	if input == nil {
		input = &types.StartSigningJobInput{}
	}

	req := c.newRequest(op, input, &types.StartSigningJobOutput{})
	return StartSigningJobRequest{Request: req, Input: input, Copy: c.StartSigningJobRequest}
}

// StartSigningJobRequest is the request type for the
// StartSigningJob API operation.
type StartSigningJobRequest struct {
	*aws.Request
	Input *types.StartSigningJobInput
	Copy  func(*types.StartSigningJobInput) StartSigningJobRequest
}

// Send marshals and sends the StartSigningJob API request.
func (r StartSigningJobRequest) Send(ctx context.Context) (*StartSigningJobResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &StartSigningJobResponse{
		StartSigningJobOutput: r.Request.Data.(*types.StartSigningJobOutput),
		response:              &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// StartSigningJobResponse is the response type for the
// StartSigningJob API operation.
type StartSigningJobResponse struct {
	*types.StartSigningJobOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// StartSigningJob request.
func (r *StartSigningJobResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
