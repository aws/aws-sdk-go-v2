// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package signer

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/signer/types"
)

const opListSigningJobs = "ListSigningJobs"

// ListSigningJobsRequest returns a request value for making API operation for
// AWS Signer.
//
// Lists all your signing jobs. You can use the maxResults parameter to limit
// the number of signing jobs that are returned in the response. If additional
// jobs remain to be listed, code signing returns a nextToken value. Use this
// value in subsequent calls to ListSigningJobs to fetch the remaining values.
// You can continue calling ListSigningJobs with your maxResults parameter and
// with new values that code signing returns in the nextToken parameter until
// all of your signing jobs have been returned.
//
//    // Example sending a request using ListSigningJobsRequest.
//    req := client.ListSigningJobsRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/signer-2017-08-25/ListSigningJobs
func (c *Client) ListSigningJobsRequest(input *types.ListSigningJobsInput) ListSigningJobsRequest {
	op := &aws.Operation{
		Name:       opListSigningJobs,
		HTTPMethod: "GET",
		HTTPPath:   "/signing-jobs",
		Paginator: &aws.Paginator{
			InputTokens:     []string{"nextToken"},
			OutputTokens:    []string{"nextToken"},
			LimitToken:      "maxResults",
			TruncationToken: "",
		},
	}

	if input == nil {
		input = &types.ListSigningJobsInput{}
	}

	req := c.newRequest(op, input, &types.ListSigningJobsOutput{})
	return ListSigningJobsRequest{Request: req, Input: input, Copy: c.ListSigningJobsRequest}
}

// ListSigningJobsRequest is the request type for the
// ListSigningJobs API operation.
type ListSigningJobsRequest struct {
	*aws.Request
	Input *types.ListSigningJobsInput
	Copy  func(*types.ListSigningJobsInput) ListSigningJobsRequest
}

// Send marshals and sends the ListSigningJobs API request.
func (r ListSigningJobsRequest) Send(ctx context.Context) (*ListSigningJobsResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &ListSigningJobsResponse{
		ListSigningJobsOutput: r.Request.Data.(*types.ListSigningJobsOutput),
		response:              &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// NewListSigningJobsRequestPaginator returns a paginator for ListSigningJobs.
// Use Next method to get the next page, and CurrentPage to get the current
// response page from the paginator. Next will return false, if there are
// no more pages, or an error was encountered.
//
// Note: This operation can generate multiple requests to a service.
//
//   // Example iterating over pages.
//   req := client.ListSigningJobsRequest(input)
//   p := signer.NewListSigningJobsRequestPaginator(req)
//
//   for p.Next(context.TODO()) {
//       page := p.CurrentPage()
//   }
//
//   if err := p.Err(); err != nil {
//       return err
//   }
//
func NewListSigningJobsPaginator(req ListSigningJobsRequest) ListSigningJobsPaginator {
	return ListSigningJobsPaginator{
		Pager: aws.Pager{
			NewRequest: func(ctx context.Context) (*aws.Request, error) {
				var inCpy *types.ListSigningJobsInput
				if req.Input != nil {
					tmp := *req.Input
					inCpy = &tmp
				}

				newReq := req.Copy(inCpy)
				newReq.SetContext(ctx)
				return newReq.Request, nil
			},
		},
	}
}

// ListSigningJobsPaginator is used to paginate the request. This can be done by
// calling Next and CurrentPage.
type ListSigningJobsPaginator struct {
	aws.Pager
}

func (p *ListSigningJobsPaginator) CurrentPage() *types.ListSigningJobsOutput {
	return p.Pager.CurrentPage().(*types.ListSigningJobsOutput)
}

// ListSigningJobsResponse is the response type for the
// ListSigningJobs API operation.
type ListSigningJobsResponse struct {
	*types.ListSigningJobsOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// ListSigningJobs request.
func (r *ListSigningJobsResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
