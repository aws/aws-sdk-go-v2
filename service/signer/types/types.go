// Code generated by smithy-go-codegen DO NOT EDIT.

package types

import (
	"time"
)

// Points to an S3Destination object that contains information about your S3
// bucket.
type Destination struct {
	// The S3Destination object.
	S3 *S3Destination
}

// The encryption algorithm options that are available to a code signing job.
type EncryptionAlgorithmOptions struct {
	// The default encryption algorithm that is used by a code signing job.
	DefaultValue EncryptionAlgorithm
	// The set of accepted encryption algorithms that are allowed in a code signing
	// job.
	AllowedValues []EncryptionAlgorithm
}

// The hash algorithms that are available to a code signing job.
type HashAlgorithmOptions struct {
	// The set of accepted hash algorithms allowed in a code signing job.
	AllowedValues []HashAlgorithm
	// The default hash algorithm that is used in a code signing job.
	DefaultValue HashAlgorithm
}

// The name and prefix of the S3 bucket where code signing saves your signed
// objects.
type S3Destination struct {
	// Name of the S3 bucket.
	BucketName *string
	// An Amazon S3 prefix that you can use to limit responses to those that begin with
	// the specified prefix.
	Prefix *string
}

// The S3 bucket name and key where code signing saved your signed code image.
type S3SignedObject struct {
	// Name of the S3 bucket.
	BucketName *string
	// Key name that uniquely identifies a signed code image in your bucket.
	Key *string
}

// Information about the S3 bucket where you saved your unsigned code.
type S3Source struct {
	// Name of the S3 bucket.
	BucketName *string
	// Version of your source image in your version enabled S3 bucket.
	Version *string
	// Key name of the bucket object that contains your unsigned code.
	Key *string
}

// Points to an S3SignedObject object that contains information about your signed
// code image.
type SignedObject struct {
	// The S3SignedObject.
	S3 *S3SignedObject
}

// The configuration of a code signing operation.
type SigningConfiguration struct {
	// The encryption algorithm options that are available for a code signing job.
	EncryptionAlgorithmOptions *EncryptionAlgorithmOptions
	// The hash algorithm options that are available for a code signing job.
	HashAlgorithmOptions *HashAlgorithmOptions
}

// A signing configuration that overrides the default encryption or hash algorithm
// of a signing job.
type SigningConfigurationOverrides struct {
	// A specified override of the default encryption algorithm that is used in a code
	// signing job.
	EncryptionAlgorithm EncryptionAlgorithm
	// A specified override of the default hash algorithm that is used in a code
	// signing job.
	HashAlgorithm HashAlgorithm
}

// The image format of a code signing platform or profile.
type SigningImageFormat struct {
	// The default format of a code signing image.
	DefaultFormat ImageFormat
	// The supported formats of a code signing image.
	SupportedFormats []ImageFormat
}

// Contains information about a signing job.
type SigningJob struct {
	// The status of the signing job.
	Status SigningStatus
	// A Source that contains information about a signing job's code image source.
	Source *Source
	// The ID of the signing job.
	JobId *string
	// A SigningMaterial object that contains the Amazon Resource Name (ARN) of the
	// certificate used for the signing job.
	SigningMaterial *SigningMaterial
	// The date and time that the signing job was created.
	CreatedAt *time.Time
	// A SignedObject structure that contains information about a signing job's signed
	// code image.
	SignedObject *SignedObject
}

// The ACM certificate that is used to sign your code.
type SigningMaterial struct {
	// The Amazon Resource Name (ARN) of the certificates that is used to sign your
	// code.
	CertificateArn *string
}

// Contains information about the signing configurations and parameters that are
// used to perform a code signing job.
type SigningPlatform struct {
	// The types of targets that can be signed by a code signing platform.
	Target *string
	// The display name of a code signing platform.
	DisplayName *string
	// The configuration of a code signing platform. This includes the designated hash
	// algorithm and encryption algorithm of a signing platform.
	SigningConfiguration *SigningConfiguration
	// The image format of a code signing platform or profile.
	SigningImageFormat *SigningImageFormat
	// The ID of a code signing; platform.
	PlatformId *string
	// The category of a code signing platform.
	Category Category
	// Any partner entities linked to a code signing platform.
	Partner *string
	// The maximum size (in MB) of code that can be signed by a code signing platform.
	MaxSizeInMB *int32
}

// Any overrides that are applied to the signing configuration of a code signing
// platform.
type SigningPlatformOverrides struct {
	// A signing configuration that overrides the default encryption or hash algorithm
	// of a signing job.
	SigningConfiguration *SigningConfigurationOverrides
	// A signed image is a JSON object. When overriding the default signing platform
	// configuration, a customer can select either of two signing formats, JSONEmbedded
	// or JSONDetached. (A third format value, JSON, is reserved for future use.) With
	// JSONEmbedded, the signing image has the payload embedded in it. With
	// JSONDetached, the payload is not be embedded in the signing image.
	SigningImageFormat ImageFormat
}

// Contains information about the ACM certificates and code signing configuration
// parameters that can be used by a given code signing user.
type SigningProfile struct {
	// The ACM certificate that is available for use by a signing profile.
	SigningMaterial *SigningMaterial
	// The parameters that are available for use by a code signing user.
	SigningParameters map[string]*string
	// The name of the signing profile.
	ProfileName *string
	// The ID of a platform that is available for use by a signing profile.
	PlatformId *string
	// The Amazon Resource Name (ARN) for the signing profile.
	Arn *string
	// A list of tags associated with the signing profile.
	Tags map[string]*string
	// The status of a code signing profile.
	Status SigningProfileStatus
}

// An S3Source object that contains information about the S3 bucket where you saved
// your unsigned code.
type Source struct {
	// The S3Source object.
	S3 *S3Source
}
