// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package signer

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/signer/types"
)

const opListSigningProfiles = "ListSigningProfiles"

// ListSigningProfilesRequest returns a request value for making API operation for
// AWS Signer.
//
// Lists all available signing profiles in your AWS account. Returns only profiles
// with an ACTIVE status unless the includeCanceled request field is set to
// true. If additional jobs remain to be listed, code signing returns a nextToken
// value. Use this value in subsequent calls to ListSigningJobs to fetch the
// remaining values. You can continue calling ListSigningJobs with your maxResults
// parameter and with new values that code signing returns in the nextToken
// parameter until all of your signing jobs have been returned.
//
//    // Example sending a request using ListSigningProfilesRequest.
//    req := client.ListSigningProfilesRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/signer-2017-08-25/ListSigningProfiles
func (c *Client) ListSigningProfilesRequest(input *types.ListSigningProfilesInput) ListSigningProfilesRequest {
	op := &aws.Operation{
		Name:       opListSigningProfiles,
		HTTPMethod: "GET",
		HTTPPath:   "/signing-profiles",
		Paginator: &aws.Paginator{
			InputTokens:     []string{"nextToken"},
			OutputTokens:    []string{"nextToken"},
			LimitToken:      "maxResults",
			TruncationToken: "",
		},
	}

	if input == nil {
		input = &types.ListSigningProfilesInput{}
	}

	req := c.newRequest(op, input, &types.ListSigningProfilesOutput{})
	return ListSigningProfilesRequest{Request: req, Input: input, Copy: c.ListSigningProfilesRequest}
}

// ListSigningProfilesRequest is the request type for the
// ListSigningProfiles API operation.
type ListSigningProfilesRequest struct {
	*aws.Request
	Input *types.ListSigningProfilesInput
	Copy  func(*types.ListSigningProfilesInput) ListSigningProfilesRequest
}

// Send marshals and sends the ListSigningProfiles API request.
func (r ListSigningProfilesRequest) Send(ctx context.Context) (*ListSigningProfilesResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &ListSigningProfilesResponse{
		ListSigningProfilesOutput: r.Request.Data.(*types.ListSigningProfilesOutput),
		response:                  &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// NewListSigningProfilesRequestPaginator returns a paginator for ListSigningProfiles.
// Use Next method to get the next page, and CurrentPage to get the current
// response page from the paginator. Next will return false, if there are
// no more pages, or an error was encountered.
//
// Note: This operation can generate multiple requests to a service.
//
//   // Example iterating over pages.
//   req := client.ListSigningProfilesRequest(input)
//   p := signer.NewListSigningProfilesRequestPaginator(req)
//
//   for p.Next(context.TODO()) {
//       page := p.CurrentPage()
//   }
//
//   if err := p.Err(); err != nil {
//       return err
//   }
//
func NewListSigningProfilesPaginator(req ListSigningProfilesRequest) ListSigningProfilesPaginator {
	return ListSigningProfilesPaginator{
		Pager: aws.Pager{
			NewRequest: func(ctx context.Context) (*aws.Request, error) {
				var inCpy *types.ListSigningProfilesInput
				if req.Input != nil {
					tmp := *req.Input
					inCpy = &tmp
				}

				newReq := req.Copy(inCpy)
				newReq.SetContext(ctx)
				return newReq.Request, nil
			},
		},
	}
}

// ListSigningProfilesPaginator is used to paginate the request. This can be done by
// calling Next and CurrentPage.
type ListSigningProfilesPaginator struct {
	aws.Pager
}

func (p *ListSigningProfilesPaginator) CurrentPage() *types.ListSigningProfilesOutput {
	return p.Pager.CurrentPage().(*types.ListSigningProfilesOutput)
}

// ListSigningProfilesResponse is the response type for the
// ListSigningProfiles API operation.
type ListSigningProfilesResponse struct {
	*types.ListSigningProfilesOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// ListSigningProfiles request.
func (r *ListSigningProfilesResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
