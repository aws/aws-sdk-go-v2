// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package transfer

type EndpointType string

// Enum values for EndpointType
const (
	EndpointTypePublic      EndpointType = "PUBLIC"
	EndpointTypeVpcEndpoint EndpointType = "VPC_ENDPOINT"
)

func (enum EndpointType) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum EndpointType) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type HomeDirectoryType string

// Enum values for HomeDirectoryType
const (
	HomeDirectoryTypePath    HomeDirectoryType = "PATH"
	HomeDirectoryTypeLogical HomeDirectoryType = "LOGICAL"
)

func (enum HomeDirectoryType) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum HomeDirectoryType) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

// Returns information related to the type of user authentication that is in
// use for a server's users. For SERVICE_MANAGED authentication, the Secure
// Shell (SSH) public keys are stored with a user on an SFTP server instance.
// For API_GATEWAY authentication, your custom authentication method is implemented
// by using an API call. A server can have only one method of authentication.
type IdentityProviderType string

// Enum values for IdentityProviderType
const (
	IdentityProviderTypeServiceManaged IdentityProviderType = "SERVICE_MANAGED"
	IdentityProviderTypeApiGateway     IdentityProviderType = "API_GATEWAY"
)

func (enum IdentityProviderType) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum IdentityProviderType) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

// Describes the condition of the SFTP server with respect to its ability to
// perform file operations. There are six possible states: OFFLINE, ONLINE,
// STARTING, STOPPING, START_FAILED, and STOP_FAILED.
//
// OFFLINE indicates that the SFTP server exists, but that it is not available
// for file operations. ONLINE indicates that the SFTP server is available to
// perform file operations. STARTING indicates that the SFTP server's was instantiated,
// but the server is not yet available to perform file operations. Under normal
// conditions, it can take a couple of minutes for an SFTP server to be completely
// operational. Both START_FAILED and STOP_FAILED are error conditions.
type State string

// Enum values for State
const (
	StateOffline     State = "OFFLINE"
	StateOnline      State = "ONLINE"
	StateStarting    State = "STARTING"
	StateStopping    State = "STOPPING"
	StateStartFailed State = "START_FAILED"
	StateStopFailed  State = "STOP_FAILED"
)

func (enum State) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum State) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}
