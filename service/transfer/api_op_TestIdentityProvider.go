// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package transfer

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/transfer/types"
)

const opTestIdentityProvider = "TestIdentityProvider"

// TestIdentityProviderRequest returns a request value for making API operation for
// AWS Transfer for SFTP.
//
// If the IdentityProviderType of the server is API_Gateway, tests whether your
// API Gateway is set up successfully. We highly recommend that you call this
// operation to test your authentication method as soon as you create your server.
// By doing so, you can troubleshoot issues with the API Gateway integration
// to ensure that your users can successfully use the service.
//
//    // Example sending a request using TestIdentityProviderRequest.
//    req := client.TestIdentityProviderRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/transfer-2018-11-05/TestIdentityProvider
func (c *Client) TestIdentityProviderRequest(input *types.TestIdentityProviderInput) TestIdentityProviderRequest {
	op := &aws.Operation{
		Name:       opTestIdentityProvider,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &types.TestIdentityProviderInput{}
	}

	req := c.newRequest(op, input, &types.TestIdentityProviderOutput{})
	return TestIdentityProviderRequest{Request: req, Input: input, Copy: c.TestIdentityProviderRequest}
}

// TestIdentityProviderRequest is the request type for the
// TestIdentityProvider API operation.
type TestIdentityProviderRequest struct {
	*aws.Request
	Input *types.TestIdentityProviderInput
	Copy  func(*types.TestIdentityProviderInput) TestIdentityProviderRequest
}

// Send marshals and sends the TestIdentityProvider API request.
func (r TestIdentityProviderRequest) Send(ctx context.Context) (*TestIdentityProviderResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &TestIdentityProviderResponse{
		TestIdentityProviderOutput: r.Request.Data.(*types.TestIdentityProviderOutput),
		response:                   &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// TestIdentityProviderResponse is the response type for the
// TestIdentityProvider API operation.
type TestIdentityProviderResponse struct {
	*types.TestIdentityProviderOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// TestIdentityProvider request.
func (r *TestIdentityProviderResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
