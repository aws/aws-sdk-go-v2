// Code generated by smithy-go-codegen DO NOT EDIT.

package types

type CustomStepStatus string

// Enum values for CustomStepStatus
const (
	CustomStepStatusSuccess CustomStepStatus = "SUCCESS"
	CustomStepStatusFailure CustomStepStatus = "FAILURE"
)

// Values returns all known values for CustomStepStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (CustomStepStatus) Values() []CustomStepStatus {
	return []CustomStepStatus{
		"SUCCESS",
		"FAILURE",
	}
}

type Domain string

// Enum values for Domain
const (
	DomainS3  Domain = "S3"
	DomainEfs Domain = "EFS"
)

// Values returns all known values for Domain. Note that this can be expanded in
// the future, and so it is only as up to date as the client. The ordering of this
// slice is not guaranteed to be stable across updates.
func (Domain) Values() []Domain {
	return []Domain{
		"S3",
		"EFS",
	}
}

type EndpointType string

// Enum values for EndpointType
const (
	EndpointTypePublic      EndpointType = "PUBLIC"
	EndpointTypeVpc         EndpointType = "VPC"
	EndpointTypeVpcEndpoint EndpointType = "VPC_ENDPOINT"
)

// Values returns all known values for EndpointType. Note that this can be expanded
// in the future, and so it is only as up to date as the client. The ordering of
// this slice is not guaranteed to be stable across updates.
func (EndpointType) Values() []EndpointType {
	return []EndpointType{
		"PUBLIC",
		"VPC",
		"VPC_ENDPOINT",
	}
}

type ExecutionErrorType string

// Enum values for ExecutionErrorType
const (
	ExecutionErrorTypePermissionDenied    ExecutionErrorType = "PERMISSION_DENIED"
	ExecutionErrorTypeCustomStepFailed    ExecutionErrorType = "CUSTOM_STEP_FAILED"
	ExecutionErrorTypeThrottled           ExecutionErrorType = "THROTTLED"
	ExecutionErrorTypeAlreadyExists       ExecutionErrorType = "ALREADY_EXISTS"
	ExecutionErrorTypeNotFound            ExecutionErrorType = "NOT_FOUND"
	ExecutionErrorTypeBadRequest          ExecutionErrorType = "BAD_REQUEST"
	ExecutionErrorTypeTimeout             ExecutionErrorType = "TIMEOUT"
	ExecutionErrorTypeInternalServerError ExecutionErrorType = "INTERNAL_SERVER_ERROR"
)

// Values returns all known values for ExecutionErrorType. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (ExecutionErrorType) Values() []ExecutionErrorType {
	return []ExecutionErrorType{
		"PERMISSION_DENIED",
		"CUSTOM_STEP_FAILED",
		"THROTTLED",
		"ALREADY_EXISTS",
		"NOT_FOUND",
		"BAD_REQUEST",
		"TIMEOUT",
		"INTERNAL_SERVER_ERROR",
	}
}

type ExecutionStatus string

// Enum values for ExecutionStatus
const (
	ExecutionStatusInProgress        ExecutionStatus = "IN_PROGRESS"
	ExecutionStatusCompleted         ExecutionStatus = "COMPLETED"
	ExecutionStatusException         ExecutionStatus = "EXCEPTION"
	ExecutionStatusHandlingException ExecutionStatus = "HANDLING_EXCEPTION"
)

// Values returns all known values for ExecutionStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (ExecutionStatus) Values() []ExecutionStatus {
	return []ExecutionStatus{
		"IN_PROGRESS",
		"COMPLETED",
		"EXCEPTION",
		"HANDLING_EXCEPTION",
	}
}

type HomeDirectoryType string

// Enum values for HomeDirectoryType
const (
	HomeDirectoryTypePath    HomeDirectoryType = "PATH"
	HomeDirectoryTypeLogical HomeDirectoryType = "LOGICAL"
)

// Values returns all known values for HomeDirectoryType. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (HomeDirectoryType) Values() []HomeDirectoryType {
	return []HomeDirectoryType{
		"PATH",
		"LOGICAL",
	}
}

type IdentityProviderType string

// Enum values for IdentityProviderType
const (
	IdentityProviderTypeServiceManaged      IdentityProviderType = "SERVICE_MANAGED"
	IdentityProviderTypeApiGateway          IdentityProviderType = "API_GATEWAY"
	IdentityProviderTypeAwsDirectoryService IdentityProviderType = "AWS_DIRECTORY_SERVICE"
	IdentityProviderTypeAwsLambda           IdentityProviderType = "AWS_LAMBDA"
)

// Values returns all known values for IdentityProviderType. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (IdentityProviderType) Values() []IdentityProviderType {
	return []IdentityProviderType{
		"SERVICE_MANAGED",
		"API_GATEWAY",
		"AWS_DIRECTORY_SERVICE",
		"AWS_LAMBDA",
	}
}

type OverwriteExisting string

// Enum values for OverwriteExisting
const (
	OverwriteExistingTrue  OverwriteExisting = "TRUE"
	OverwriteExistingFalse OverwriteExisting = "FALSE"
)

// Values returns all known values for OverwriteExisting. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (OverwriteExisting) Values() []OverwriteExisting {
	return []OverwriteExisting{
		"TRUE",
		"FALSE",
	}
}

type Protocol string

// Enum values for Protocol
const (
	ProtocolSftp Protocol = "SFTP"
	ProtocolFtp  Protocol = "FTP"
	ProtocolFtps Protocol = "FTPS"
)

// Values returns all known values for Protocol. Note that this can be expanded in
// the future, and so it is only as up to date as the client. The ordering of this
// slice is not guaranteed to be stable across updates.
func (Protocol) Values() []Protocol {
	return []Protocol{
		"SFTP",
		"FTP",
		"FTPS",
	}
}

type State string

// Enum values for State
const (
	StateOffline     State = "OFFLINE"
	StateOnline      State = "ONLINE"
	StateStarting    State = "STARTING"
	StateStopping    State = "STOPPING"
	StateStartFailed State = "START_FAILED"
	StateStopFailed  State = "STOP_FAILED"
)

// Values returns all known values for State. Note that this can be expanded in the
// future, and so it is only as up to date as the client. The ordering of this
// slice is not guaranteed to be stable across updates.
func (State) Values() []State {
	return []State{
		"OFFLINE",
		"ONLINE",
		"STARTING",
		"STOPPING",
		"START_FAILED",
		"STOP_FAILED",
	}
}

type TlsSessionResumptionMode string

// Enum values for TlsSessionResumptionMode
const (
	TlsSessionResumptionModeDisabled TlsSessionResumptionMode = "DISABLED"
	TlsSessionResumptionModeEnabled  TlsSessionResumptionMode = "ENABLED"
	TlsSessionResumptionModeEnforced TlsSessionResumptionMode = "ENFORCED"
)

// Values returns all known values for TlsSessionResumptionMode. Note that this can
// be expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (TlsSessionResumptionMode) Values() []TlsSessionResumptionMode {
	return []TlsSessionResumptionMode{
		"DISABLED",
		"ENABLED",
		"ENFORCED",
	}
}

type WorkflowStepType string

// Enum values for WorkflowStepType
const (
	WorkflowStepTypeCopy   WorkflowStepType = "COPY"
	WorkflowStepTypeCustom WorkflowStepType = "CUSTOM"
	WorkflowStepTypeTag    WorkflowStepType = "TAG"
	WorkflowStepTypeDelete WorkflowStepType = "DELETE"
)

// Values returns all known values for WorkflowStepType. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (WorkflowStepType) Values() []WorkflowStepType {
	return []WorkflowStepType{
		"COPY",
		"CUSTOM",
		"TAG",
		"DELETE",
	}
}
