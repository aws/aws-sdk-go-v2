// Code generated by smithy-go-codegen DO NOT EDIT.

package types

type ActionType string

// Enum values for ActionType
const (
	ActionTypeAddAlternateBillingContact              ActionType = "ADD_ALTERNATE_BILLING_CONTACT"
	ActionTypeCreateAnomalyMonitor                    ActionType = "CREATE_ANOMALY_MONITOR"
	ActionTypeCreateBudget                            ActionType = "CREATE_BUDGET"
	ActionTypeEnableCostOptimizationHub               ActionType = "ENABLE_COST_OPTIMIZATION_HUB"
	ActionTypeMigrateToGranularPermissions            ActionType = "MIGRATE_TO_GRANULAR_PERMISSIONS"
	ActionTypePaymentsDue                             ActionType = "PAYMENTS_DUE"
	ActionTypePaymentsPastDue                         ActionType = "PAYMENTS_PAST_DUE"
	ActionTypeReviewAnomalies                         ActionType = "REVIEW_ANOMALIES"
	ActionTypeReviewBudgetAlerts                      ActionType = "REVIEW_BUDGET_ALERTS"
	ActionTypeReviewBudgetsExceeded                   ActionType = "REVIEW_BUDGETS_EXCEEDED"
	ActionTypeReviewExpiringRi                        ActionType = "REVIEW_EXPIRING_RI"
	ActionTypeReviewExpiringSp                        ActionType = "REVIEW_EXPIRING_SP"
	ActionTypeReviewFreetierUsageAlerts               ActionType = "REVIEW_FREETIER_USAGE_ALERTS"
	ActionTypeReviewSavingsOpportunityRecommendations ActionType = "REVIEW_SAVINGS_OPPORTUNITY_RECOMMENDATIONS"
	ActionTypeUpdateExpiredPaymentMethod              ActionType = "UPDATE_EXPIRED_PAYMENT_METHOD"
	ActionTypeUpdateInvalidPaymentMethod              ActionType = "UPDATE_INVALID_PAYMENT_METHOD"
	ActionTypeUpdateTaxExemptionCertificate           ActionType = "UPDATE_TAX_EXEMPTION_CERTIFICATE"
	ActionTypeUpdateTaxRegistrationNumber             ActionType = "UPDATE_TAX_REGISTRATION_NUMBER"
)

// Values returns all known values for ActionType. Note that this can be expanded
// in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ActionType) Values() []ActionType {
	return []ActionType{
		"ADD_ALTERNATE_BILLING_CONTACT",
		"CREATE_ANOMALY_MONITOR",
		"CREATE_BUDGET",
		"ENABLE_COST_OPTIMIZATION_HUB",
		"MIGRATE_TO_GRANULAR_PERMISSIONS",
		"PAYMENTS_DUE",
		"PAYMENTS_PAST_DUE",
		"REVIEW_ANOMALIES",
		"REVIEW_BUDGET_ALERTS",
		"REVIEW_BUDGETS_EXCEEDED",
		"REVIEW_EXPIRING_RI",
		"REVIEW_EXPIRING_SP",
		"REVIEW_FREETIER_USAGE_ALERTS",
		"REVIEW_SAVINGS_OPPORTUNITY_RECOMMENDATIONS",
		"UPDATE_EXPIRED_PAYMENT_METHOD",
		"UPDATE_INVALID_PAYMENT_METHOD",
		"UPDATE_TAX_EXEMPTION_CERTIFICATE",
		"UPDATE_TAX_REGISTRATION_NUMBER",
	}
}

type Feature string

// Enum values for Feature
const (
	FeatureAccount              Feature = "ACCOUNT"
	FeatureBudgets              Feature = "BUDGETS"
	FeatureCostAnomalyDetection Feature = "COST_ANOMALY_DETECTION"
	FeatureCostOptimizationHub  Feature = "COST_OPTIMIZATION_HUB"
	FeatureFreeTier             Feature = "FREE_TIER"
	FeatureIam                  Feature = "IAM"
	FeaturePayments             Feature = "PAYMENTS"
	FeatureReservations         Feature = "RESERVATIONS"
	FeatureSavingsPlans         Feature = "SAVINGS_PLANS"
	FeatureTaxSettings          Feature = "TAX_SETTINGS"
)

// Values returns all known values for Feature. Note that this can be expanded in
// the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (Feature) Values() []Feature {
	return []Feature{
		"ACCOUNT",
		"BUDGETS",
		"COST_ANOMALY_DETECTION",
		"COST_OPTIMIZATION_HUB",
		"FREE_TIER",
		"IAM",
		"PAYMENTS",
		"RESERVATIONS",
		"SAVINGS_PLANS",
		"TAX_SETTINGS",
	}
}

type FilterName string

// Enum values for FilterName
const (
	FilterNameFeature  FilterName = "FEATURE"
	FilterNameSeverity FilterName = "SEVERITY"
	FilterNameType     FilterName = "TYPE"
)

// Values returns all known values for FilterName. Note that this can be expanded
// in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (FilterName) Values() []FilterName {
	return []FilterName{
		"FEATURE",
		"SEVERITY",
		"TYPE",
	}
}

type MatchOption string

// Enum values for MatchOption
const (
	MatchOptionEquals    MatchOption = "EQUALS"
	MatchOptionNotEquals MatchOption = "NOT_EQUALS"
)

// Values returns all known values for MatchOption. Note that this can be expanded
// in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (MatchOption) Values() []MatchOption {
	return []MatchOption{
		"EQUALS",
		"NOT_EQUALS",
	}
}

type Severity string

// Enum values for Severity
const (
	SeverityInfo     Severity = "INFO"
	SeverityWarning  Severity = "WARNING"
	SeverityCritical Severity = "CRITICAL"
)

// Values returns all known values for Severity. Note that this can be expanded in
// the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (Severity) Values() []Severity {
	return []Severity{
		"INFO",
		"WARNING",
		"CRITICAL",
	}
}

type ValidationExceptionReason string

// Enum values for ValidationExceptionReason
const (
	ValidationExceptionReasonUnknownOperation      ValidationExceptionReason = "unknownOperation"
	ValidationExceptionReasonCannotParse           ValidationExceptionReason = "cannotParse"
	ValidationExceptionReasonFieldValidationFailed ValidationExceptionReason = "fieldValidationFailed"
	ValidationExceptionReasonOther                 ValidationExceptionReason = "other"
)

// Values returns all known values for ValidationExceptionReason. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ValidationExceptionReason) Values() []ValidationExceptionReason {
	return []ValidationExceptionReason{
		"unknownOperation",
		"cannotParse",
		"fieldValidationFailed",
		"other",
	}
}
