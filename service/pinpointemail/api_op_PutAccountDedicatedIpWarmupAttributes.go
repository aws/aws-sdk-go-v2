// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package pinpointemail

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/pinpointemail/types"
)

const opPutAccountDedicatedIpWarmupAttributes = "PutAccountDedicatedIpWarmupAttributes"

// PutAccountDedicatedIpWarmupAttributesRequest returns a request value for making API operation for
// Amazon Pinpoint Email Service.
//
// Enable or disable the automatic warm-up feature for dedicated IP addresses.
//
//    // Example sending a request using PutAccountDedicatedIpWarmupAttributesRequest.
//    req := client.PutAccountDedicatedIpWarmupAttributesRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/pinpoint-email-2018-07-26/PutAccountDedicatedIpWarmupAttributes
func (c *Client) PutAccountDedicatedIpWarmupAttributesRequest(input *types.PutAccountDedicatedIpWarmupAttributesInput) PutAccountDedicatedIpWarmupAttributesRequest {
	op := &aws.Operation{
		Name:       opPutAccountDedicatedIpWarmupAttributes,
		HTTPMethod: "PUT",
		HTTPPath:   "/v1/email/account/dedicated-ips/warmup",
	}

	if input == nil {
		input = &types.PutAccountDedicatedIpWarmupAttributesInput{}
	}

	req := c.newRequest(op, input, &types.PutAccountDedicatedIpWarmupAttributesOutput{})
	return PutAccountDedicatedIpWarmupAttributesRequest{Request: req, Input: input, Copy: c.PutAccountDedicatedIpWarmupAttributesRequest}
}

// PutAccountDedicatedIpWarmupAttributesRequest is the request type for the
// PutAccountDedicatedIpWarmupAttributes API operation.
type PutAccountDedicatedIpWarmupAttributesRequest struct {
	*aws.Request
	Input *types.PutAccountDedicatedIpWarmupAttributesInput
	Copy  func(*types.PutAccountDedicatedIpWarmupAttributesInput) PutAccountDedicatedIpWarmupAttributesRequest
}

// Send marshals and sends the PutAccountDedicatedIpWarmupAttributes API request.
func (r PutAccountDedicatedIpWarmupAttributesRequest) Send(ctx context.Context) (*PutAccountDedicatedIpWarmupAttributesResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &PutAccountDedicatedIpWarmupAttributesResponse{
		PutAccountDedicatedIpWarmupAttributesOutput: r.Request.Data.(*types.PutAccountDedicatedIpWarmupAttributesOutput),
		response: &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// PutAccountDedicatedIpWarmupAttributesResponse is the response type for the
// PutAccountDedicatedIpWarmupAttributes API operation.
type PutAccountDedicatedIpWarmupAttributesResponse struct {
	*types.PutAccountDedicatedIpWarmupAttributesOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// PutAccountDedicatedIpWarmupAttributes request.
func (r *PutAccountDedicatedIpWarmupAttributesResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
