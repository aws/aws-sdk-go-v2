// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package pinpointemail

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/internal/awsutil"
	"github.com/aws/aws-sdk-go-v2/private/protocol"
)

// A request to retrieve the status of the Deliverability dashboard for your
// account. When the Deliverability dashboard is enabled, you gain access to
// reputation metrics for the domains that you use to send email using Amazon
// Pinpoint. You also gain the ability to perform predictive inbox placement
// tests.
//
// When you use the Deliverability dashboard, you pay a monthly charge of USD$1,250.00,
// in addition to any other fees that you accrue by using Amazon Pinpoint. If
// you enable the Deliverability dashboard after the first day of a calendar
// month, AWS prorates the monthly charge based on how many days have elapsed
// in the current calendar month.
// Please also see https://docs.aws.amazon.com/goto/WebAPI/pinpoint-email-2018-07-26/GetDeliverabilityDashboardOptionsRequest
type GetDeliverabilityDashboardOptionsInput struct {
	_ struct{} `type:"structure"`
}

// String returns the string representation
func (s GetDeliverabilityDashboardOptionsInput) String() string {
	return awsutil.Prettify(s)
}

// MarshalFields encodes the AWS API shape using the passed in protocol encoder.
func (s GetDeliverabilityDashboardOptionsInput) MarshalFields(e protocol.FieldEncoder) error {
	e.SetValue(protocol.HeaderTarget, "Content-Type", protocol.StringValue("application/x-amz-json-1.1"), protocol.Metadata{})

	return nil
}

// An object that shows the status of the Deliverability dashboard for your
// Amazon Pinpoint account.
// Please also see https://docs.aws.amazon.com/goto/WebAPI/pinpoint-email-2018-07-26/GetDeliverabilityDashboardOptionsResponse
type GetDeliverabilityDashboardOptionsOutput struct {
	_ struct{} `type:"structure"`

	// Indicates whether the Deliverability dashboard is enabled. If the value is
	// true, then the dashboard is enabled.
	//
	// DashboardEnabled is a required field
	DashboardEnabled *bool `type:"boolean" required:"true"`
}

// String returns the string representation
func (s GetDeliverabilityDashboardOptionsOutput) String() string {
	return awsutil.Prettify(s)
}

// MarshalFields encodes the AWS API shape using the passed in protocol encoder.
func (s GetDeliverabilityDashboardOptionsOutput) MarshalFields(e protocol.FieldEncoder) error {
	if s.DashboardEnabled != nil {
		v := *s.DashboardEnabled

		metadata := protocol.Metadata{}
		e.SetValue(protocol.BodyTarget, "DashboardEnabled", protocol.BoolValue(v), metadata)
	}
	return nil
}

const opGetDeliverabilityDashboardOptions = "GetDeliverabilityDashboardOptions"

// GetDeliverabilityDashboardOptionsRequest returns a request value for making API operation for
// Amazon Pinpoint Email Service.
//
// Show the status of the Deliverability dashboard. When the Deliverability
// dashboard is enabled, you gain access to reputation metrics for the domains
// that you use to send email using Amazon Pinpoint. You also gain the ability
// to perform predictive inbox placement tests.
//
// When you use the Deliverability dashboard, you pay a monthly charge of USD$1,250.00,
// in addition to any other fees that you accrue by using Amazon Pinpoint. If
// you enable the Deliverability dashboard after the first day of a calendar
// month, AWS prorates the monthly charge based on how many days have elapsed
// in the current calendar month.
//
//    // Example sending a request using GetDeliverabilityDashboardOptionsRequest.
//    req := client.GetDeliverabilityDashboardOptionsRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/pinpoint-email-2018-07-26/GetDeliverabilityDashboardOptions
func (c *Client) GetDeliverabilityDashboardOptionsRequest(input *GetDeliverabilityDashboardOptionsInput) GetDeliverabilityDashboardOptionsRequest {
	op := &aws.Operation{
		Name:       opGetDeliverabilityDashboardOptions,
		HTTPMethod: "GET",
		HTTPPath:   "/v1/email/deliverability-dashboard",
	}

	if input == nil {
		input = &GetDeliverabilityDashboardOptionsInput{}
	}

	req := c.newRequest(op, input, &GetDeliverabilityDashboardOptionsOutput{})
	return GetDeliverabilityDashboardOptionsRequest{Request: req, Input: input, Copy: c.GetDeliverabilityDashboardOptionsRequest}
}

// GetDeliverabilityDashboardOptionsRequest is the request type for the
// GetDeliverabilityDashboardOptions API operation.
type GetDeliverabilityDashboardOptionsRequest struct {
	*aws.Request
	Input *GetDeliverabilityDashboardOptionsInput
	Copy  func(*GetDeliverabilityDashboardOptionsInput) GetDeliverabilityDashboardOptionsRequest
}

// Send marshals and sends the GetDeliverabilityDashboardOptions API request.
func (r GetDeliverabilityDashboardOptionsRequest) Send(ctx context.Context) (*GetDeliverabilityDashboardOptionsResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &GetDeliverabilityDashboardOptionsResponse{
		GetDeliverabilityDashboardOptionsOutput: r.Request.Data.(*GetDeliverabilityDashboardOptionsOutput),
		response:                                &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// GetDeliverabilityDashboardOptionsResponse is the response type for the
// GetDeliverabilityDashboardOptions API operation.
type GetDeliverabilityDashboardOptionsResponse struct {
	*GetDeliverabilityDashboardOptionsOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// GetDeliverabilityDashboardOptions request.
func (r *GetDeliverabilityDashboardOptionsResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
