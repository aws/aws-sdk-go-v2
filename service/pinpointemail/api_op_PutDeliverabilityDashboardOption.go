// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package pinpointemail

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/pinpointemail/types"
)

const opPutDeliverabilityDashboardOption = "PutDeliverabilityDashboardOption"

// PutDeliverabilityDashboardOptionRequest returns a request value for making API operation for
// Amazon Pinpoint Email Service.
//
// Enable or disable the Deliverability dashboard for your Amazon Pinpoint account.
// When you enable the Deliverability dashboard, you gain access to reputation,
// deliverability, and other metrics for the domains that you use to send email
// using Amazon Pinpoint. You also gain the ability to perform predictive inbox
// placement tests.
//
// When you use the Deliverability dashboard, you pay a monthly subscription
// charge, in addition to any other fees that you accrue by using Amazon Pinpoint.
// For more information about the features and cost of a Deliverability dashboard
// subscription, see Amazon Pinpoint Pricing (http://aws.amazon.com/pinpoint/pricing/).
//
//    // Example sending a request using PutDeliverabilityDashboardOptionRequest.
//    req := client.PutDeliverabilityDashboardOptionRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/pinpoint-email-2018-07-26/PutDeliverabilityDashboardOption
func (c *Client) PutDeliverabilityDashboardOptionRequest(input *types.PutDeliverabilityDashboardOptionInput) PutDeliverabilityDashboardOptionRequest {
	op := &aws.Operation{
		Name:       opPutDeliverabilityDashboardOption,
		HTTPMethod: "PUT",
		HTTPPath:   "/v1/email/deliverability-dashboard",
	}

	if input == nil {
		input = &types.PutDeliverabilityDashboardOptionInput{}
	}

	req := c.newRequest(op, input, &types.PutDeliverabilityDashboardOptionOutput{})
	return PutDeliverabilityDashboardOptionRequest{Request: req, Input: input, Copy: c.PutDeliverabilityDashboardOptionRequest}
}

// PutDeliverabilityDashboardOptionRequest is the request type for the
// PutDeliverabilityDashboardOption API operation.
type PutDeliverabilityDashboardOptionRequest struct {
	*aws.Request
	Input *types.PutDeliverabilityDashboardOptionInput
	Copy  func(*types.PutDeliverabilityDashboardOptionInput) PutDeliverabilityDashboardOptionRequest
}

// Send marshals and sends the PutDeliverabilityDashboardOption API request.
func (r PutDeliverabilityDashboardOptionRequest) Send(ctx context.Context) (*PutDeliverabilityDashboardOptionResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &PutDeliverabilityDashboardOptionResponse{
		PutDeliverabilityDashboardOptionOutput: r.Request.Data.(*types.PutDeliverabilityDashboardOptionOutput),
		response:                               &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// PutDeliverabilityDashboardOptionResponse is the response type for the
// PutDeliverabilityDashboardOption API operation.
type PutDeliverabilityDashboardOptionResponse struct {
	*types.PutDeliverabilityDashboardOptionOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// PutDeliverabilityDashboardOption request.
func (r *PutDeliverabilityDashboardOptionResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
