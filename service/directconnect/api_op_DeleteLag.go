// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package directconnect

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/directconnect/types"
)

const opDeleteLag = "DeleteLag"

// DeleteLagRequest returns a request value for making API operation for
// AWS Direct Connect.
//
// Deletes the specified link aggregation group (LAG). You cannot delete a LAG
// if it has active virtual interfaces or hosted connections.
//
//    // Example sending a request using DeleteLagRequest.
//    req := client.DeleteLagRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/directconnect-2012-10-25/DeleteLag
func (c *Client) DeleteLagRequest(input *types.DeleteLagInput) DeleteLagRequest {
	op := &aws.Operation{
		Name:       opDeleteLag,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &types.DeleteLagInput{}
	}

	req := c.newRequest(op, input, &types.DeleteLagOutput{})
	return DeleteLagRequest{Request: req, Input: input, Copy: c.DeleteLagRequest}
}

// DeleteLagRequest is the request type for the
// DeleteLag API operation.
type DeleteLagRequest struct {
	*aws.Request
	Input *types.DeleteLagInput
	Copy  func(*types.DeleteLagInput) DeleteLagRequest
}

// Send marshals and sends the DeleteLag API request.
func (r DeleteLagRequest) Send(ctx context.Context) (*DeleteLagResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &DeleteLagResponse{
		DeleteLagOutput: r.Request.Data.(*types.DeleteLagOutput),
		response:        &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// DeleteLagResponse is the response type for the
// DeleteLag API operation.
type DeleteLagResponse struct {
	*types.DeleteLagOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// DeleteLag request.
func (r *DeleteLagResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
