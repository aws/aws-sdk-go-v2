// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package directconnect

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/directconnect/types"
)

const opAllocatePublicVirtualInterface = "AllocatePublicVirtualInterface"

// AllocatePublicVirtualInterfaceRequest returns a request value for making API operation for
// AWS Direct Connect.
//
// Provisions a public virtual interface to be owned by the specified AWS account.
//
// The owner of a connection calls this function to provision a public virtual
// interface to be owned by the specified AWS account.
//
// Virtual interfaces created using this function must be confirmed by the owner
// using ConfirmPublicVirtualInterface. Until this step has been completed,
// the virtual interface is in the confirming state and is not available to
// handle traffic.
//
// When creating an IPv6 public virtual interface, omit the Amazon address and
// customer address. IPv6 addresses are automatically assigned from the Amazon
// pool of IPv6 addresses; you cannot specify custom IPv6 addresses.
//
//    // Example sending a request using AllocatePublicVirtualInterfaceRequest.
//    req := client.AllocatePublicVirtualInterfaceRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/directconnect-2012-10-25/AllocatePublicVirtualInterface
func (c *Client) AllocatePublicVirtualInterfaceRequest(input *types.AllocatePublicVirtualInterfaceInput) AllocatePublicVirtualInterfaceRequest {
	op := &aws.Operation{
		Name:       opAllocatePublicVirtualInterface,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &types.AllocatePublicVirtualInterfaceInput{}
	}

	req := c.newRequest(op, input, &types.AllocatePublicVirtualInterfaceOutput{})
	return AllocatePublicVirtualInterfaceRequest{Request: req, Input: input, Copy: c.AllocatePublicVirtualInterfaceRequest}
}

// AllocatePublicVirtualInterfaceRequest is the request type for the
// AllocatePublicVirtualInterface API operation.
type AllocatePublicVirtualInterfaceRequest struct {
	*aws.Request
	Input *types.AllocatePublicVirtualInterfaceInput
	Copy  func(*types.AllocatePublicVirtualInterfaceInput) AllocatePublicVirtualInterfaceRequest
}

// Send marshals and sends the AllocatePublicVirtualInterface API request.
func (r AllocatePublicVirtualInterfaceRequest) Send(ctx context.Context) (*AllocatePublicVirtualInterfaceResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &AllocatePublicVirtualInterfaceResponse{
		AllocatePublicVirtualInterfaceOutput: r.Request.Data.(*types.AllocatePublicVirtualInterfaceOutput),
		response:                             &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// AllocatePublicVirtualInterfaceResponse is the response type for the
// AllocatePublicVirtualInterface API operation.
type AllocatePublicVirtualInterfaceResponse struct {
	*types.AllocatePublicVirtualInterfaceOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// AllocatePublicVirtualInterface request.
func (r *AllocatePublicVirtualInterfaceResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
