// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package managedblockchain

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/managedblockchain/types"
)

const opGetMember = "GetMember"

// GetMemberRequest returns a request value for making API operation for
// Amazon Managed Blockchain.
//
// Returns detailed information about a member.
//
//    // Example sending a request using GetMemberRequest.
//    req := client.GetMemberRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/managedblockchain-2018-09-24/GetMember
func (c *Client) GetMemberRequest(input *types.GetMemberInput) GetMemberRequest {
	op := &aws.Operation{
		Name:       opGetMember,
		HTTPMethod: "GET",
		HTTPPath:   "/networks/{networkId}/members/{memberId}",
	}

	if input == nil {
		input = &types.GetMemberInput{}
	}

	req := c.newRequest(op, input, &types.GetMemberOutput{})
	return GetMemberRequest{Request: req, Input: input, Copy: c.GetMemberRequest}
}

// GetMemberRequest is the request type for the
// GetMember API operation.
type GetMemberRequest struct {
	*aws.Request
	Input *types.GetMemberInput
	Copy  func(*types.GetMemberInput) GetMemberRequest
}

// Send marshals and sends the GetMember API request.
func (r GetMemberRequest) Send(ctx context.Context) (*GetMemberResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &GetMemberResponse{
		GetMemberOutput: r.Request.Data.(*types.GetMemberOutput),
		response:        &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// GetMemberResponse is the response type for the
// GetMember API operation.
type GetMemberResponse struct {
	*types.GetMemberOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// GetMember request.
func (r *GetMemberResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
