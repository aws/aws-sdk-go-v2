// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

// Package managedblockchainiface provides an interface to enable mocking the Amazon Managed Blockchain service client
// for testing your code.
//
// It is important to note that this interface will have breaking changes
// when the service model is updated and adds new API operations, paginators,
// and waiters.
package managedblockchainiface

import (
	"github.com/aws/aws-sdk-go-v2/service/managedblockchain"
	"github.com/aws/aws-sdk-go-v2/service/managedblockchain/types"
)

// ClientAPI provides an interface to enable mocking the
// managedblockchain.Client methods. This make unit testing your code that
// calls out to the SDK's service client's calls easier.
//
// The best way to use this interface is so the SDK's service client's calls
// can be stubbed out for unit testing your code with the SDK without needing
// to inject custom request handlers into the SDK's request pipeline.
//
//    // myFunc uses an SDK service client to make a request to
//    // ManagedBlockchain.
//    func myFunc(svc managedblockchainiface.ClientAPI) bool {
//        // Make svc.CreateMember request
//    }
//
//    func main() {
//        cfg, err := external.LoadDefaultAWSConfig()
//        if err != nil {
//            panic("failed to load config, " + err.Error())
//        }
//
//        svc := managedblockchain.New(cfg)
//
//        myFunc(svc)
//    }
//
// In your _test.go file:
//
//    // Define a mock struct to be used in your unit tests of myFunc.
//    type mockClientClient struct {
//        managedblockchainiface.ClientPI
//    }
//    func (m *mockClientClient) CreateMember(input *types.CreateMemberInput) (*types.CreateMemberOutput, error) {
//        // mock response/functionality
//    }
//
//    func TestMyFunc(t *testing.T) {
//        // Setup Test
//        mockSvc := &mockClientClient{}
//
//        myfunc(mockSvc)
//
//        // Verify myFunc's functionality
//    }
//
// It is important to note that this interface will have breaking changes
// when the service model is updated and adds new API operations, paginators,
// and waiters. Its suggested to use the pattern above for testing, or using
// tooling to generate mocks to satisfy the interfaces.
type ClientAPI interface {
	CreateMemberRequest(*types.CreateMemberInput) managedblockchain.CreateMemberRequest

	CreateNetworkRequest(*types.CreateNetworkInput) managedblockchain.CreateNetworkRequest

	CreateNodeRequest(*types.CreateNodeInput) managedblockchain.CreateNodeRequest

	CreateProposalRequest(*types.CreateProposalInput) managedblockchain.CreateProposalRequest

	DeleteMemberRequest(*types.DeleteMemberInput) managedblockchain.DeleteMemberRequest

	DeleteNodeRequest(*types.DeleteNodeInput) managedblockchain.DeleteNodeRequest

	GetMemberRequest(*types.GetMemberInput) managedblockchain.GetMemberRequest

	GetNetworkRequest(*types.GetNetworkInput) managedblockchain.GetNetworkRequest

	GetNodeRequest(*types.GetNodeInput) managedblockchain.GetNodeRequest

	GetProposalRequest(*types.GetProposalInput) managedblockchain.GetProposalRequest

	ListInvitationsRequest(*types.ListInvitationsInput) managedblockchain.ListInvitationsRequest

	ListMembersRequest(*types.ListMembersInput) managedblockchain.ListMembersRequest

	ListNetworksRequest(*types.ListNetworksInput) managedblockchain.ListNetworksRequest

	ListNodesRequest(*types.ListNodesInput) managedblockchain.ListNodesRequest

	ListProposalVotesRequest(*types.ListProposalVotesInput) managedblockchain.ListProposalVotesRequest

	ListProposalsRequest(*types.ListProposalsInput) managedblockchain.ListProposalsRequest

	RejectInvitationRequest(*types.RejectInvitationInput) managedblockchain.RejectInvitationRequest

	VoteOnProposalRequest(*types.VoteOnProposalInput) managedblockchain.VoteOnProposalRequest
}

var _ ClientAPI = (*managedblockchain.Client)(nil)
