// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package managedblockchain

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/managedblockchain/types"
)

const opDeleteMember = "DeleteMember"

// DeleteMemberRequest returns a request value for making API operation for
// Amazon Managed Blockchain.
//
// Deletes a member. Deleting a member removes the member and all associated
// resources from the network. DeleteMember can only be called for a specified
// MemberId if the principal performing the action is associated with the AWS
// account that owns the member. In all other cases, the DeleteMember action
// is carried out as the result of an approved proposal to remove a member.
// If MemberId is the last member in a network specified by the last AWS account,
// the network is deleted also.
//
//    // Example sending a request using DeleteMemberRequest.
//    req := client.DeleteMemberRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/managedblockchain-2018-09-24/DeleteMember
func (c *Client) DeleteMemberRequest(input *types.DeleteMemberInput) DeleteMemberRequest {
	op := &aws.Operation{
		Name:       opDeleteMember,
		HTTPMethod: "DELETE",
		HTTPPath:   "/networks/{networkId}/members/{memberId}",
	}

	if input == nil {
		input = &types.DeleteMemberInput{}
	}

	req := c.newRequest(op, input, &types.DeleteMemberOutput{})
	return DeleteMemberRequest{Request: req, Input: input, Copy: c.DeleteMemberRequest}
}

// DeleteMemberRequest is the request type for the
// DeleteMember API operation.
type DeleteMemberRequest struct {
	*aws.Request
	Input *types.DeleteMemberInput
	Copy  func(*types.DeleteMemberInput) DeleteMemberRequest
}

// Send marshals and sends the DeleteMember API request.
func (r DeleteMemberRequest) Send(ctx context.Context) (*DeleteMemberResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &DeleteMemberResponse{
		DeleteMemberOutput: r.Request.Data.(*types.DeleteMemberOutput),
		response:           &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// DeleteMemberResponse is the response type for the
// DeleteMember API operation.
type DeleteMemberResponse struct {
	*types.DeleteMemberOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// DeleteMember request.
func (r *DeleteMemberResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
