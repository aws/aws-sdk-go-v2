// Code generated by smithy-go-codegen DO NOT EDIT.

package types

type BackupJobState string

// Enum values for BackupJobState
const (
	BackupJobStateCreated   BackupJobState = "CREATED"
	BackupJobStatePending   BackupJobState = "PENDING"
	BackupJobStateRunning   BackupJobState = "RUNNING"
	BackupJobStateAborting  BackupJobState = "ABORTING"
	BackupJobStateAborted   BackupJobState = "ABORTED"
	BackupJobStateCompleted BackupJobState = "COMPLETED"
	BackupJobStateFailed    BackupJobState = "FAILED"
	BackupJobStateExpired   BackupJobState = "EXPIRED"
)

// Values returns all known values for BackupJobState. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (BackupJobState) Values() []BackupJobState {
	return []BackupJobState{
		"CREATED",
		"PENDING",
		"RUNNING",
		"ABORTING",
		"ABORTED",
		"COMPLETED",
		"FAILED",
		"EXPIRED",
	}
}

type BackupVaultEvent string

// Enum values for BackupVaultEvent
const (
	BackupVaultEventBackupJobStarted      BackupVaultEvent = "BACKUP_JOB_STARTED"
	BackupVaultEventBackupJobCompleted    BackupVaultEvent = "BACKUP_JOB_COMPLETED"
	BackupVaultEventBackupJobSuccessful   BackupVaultEvent = "BACKUP_JOB_SUCCESSFUL"
	BackupVaultEventBackupJobFailed       BackupVaultEvent = "BACKUP_JOB_FAILED"
	BackupVaultEventBackupJobExpired      BackupVaultEvent = "BACKUP_JOB_EXPIRED"
	BackupVaultEventRestoreJobStarted     BackupVaultEvent = "RESTORE_JOB_STARTED"
	BackupVaultEventRestoreJobCompleted   BackupVaultEvent = "RESTORE_JOB_COMPLETED"
	BackupVaultEventRestoreJobSuccessful  BackupVaultEvent = "RESTORE_JOB_SUCCESSFUL"
	BackupVaultEventRestoreJobFailed      BackupVaultEvent = "RESTORE_JOB_FAILED"
	BackupVaultEventCopyJobStarted        BackupVaultEvent = "COPY_JOB_STARTED"
	BackupVaultEventCopyJobSuccessful     BackupVaultEvent = "COPY_JOB_SUCCESSFUL"
	BackupVaultEventCopyJobFailed         BackupVaultEvent = "COPY_JOB_FAILED"
	BackupVaultEventRecoveryPointModified BackupVaultEvent = "RECOVERY_POINT_MODIFIED"
	BackupVaultEventBackupPlanCreated     BackupVaultEvent = "BACKUP_PLAN_CREATED"
	BackupVaultEventBackupPlanModified    BackupVaultEvent = "BACKUP_PLAN_MODIFIED"
	BackupVaultEventS3BackupObjectFailed  BackupVaultEvent = "S3_BACKUP_OBJECT_FAILED"
	BackupVaultEventS3RestoreObjectFailed BackupVaultEvent = "S3_RESTORE_OBJECT_FAILED"
)

// Values returns all known values for BackupVaultEvent. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (BackupVaultEvent) Values() []BackupVaultEvent {
	return []BackupVaultEvent{
		"BACKUP_JOB_STARTED",
		"BACKUP_JOB_COMPLETED",
		"BACKUP_JOB_SUCCESSFUL",
		"BACKUP_JOB_FAILED",
		"BACKUP_JOB_EXPIRED",
		"RESTORE_JOB_STARTED",
		"RESTORE_JOB_COMPLETED",
		"RESTORE_JOB_SUCCESSFUL",
		"RESTORE_JOB_FAILED",
		"COPY_JOB_STARTED",
		"COPY_JOB_SUCCESSFUL",
		"COPY_JOB_FAILED",
		"RECOVERY_POINT_MODIFIED",
		"BACKUP_PLAN_CREATED",
		"BACKUP_PLAN_MODIFIED",
		"S3_BACKUP_OBJECT_FAILED",
		"S3_RESTORE_OBJECT_FAILED",
	}
}

type ConditionType string

// Enum values for ConditionType
const (
	ConditionTypeStringequals ConditionType = "STRINGEQUALS"
)

// Values returns all known values for ConditionType. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (ConditionType) Values() []ConditionType {
	return []ConditionType{
		"STRINGEQUALS",
	}
}

type CopyJobState string

// Enum values for CopyJobState
const (
	CopyJobStateCreated   CopyJobState = "CREATED"
	CopyJobStateRunning   CopyJobState = "RUNNING"
	CopyJobStateCompleted CopyJobState = "COMPLETED"
	CopyJobStateFailed    CopyJobState = "FAILED"
)

// Values returns all known values for CopyJobState. Note that this can be expanded
// in the future, and so it is only as up to date as the client. The ordering of
// this slice is not guaranteed to be stable across updates.
func (CopyJobState) Values() []CopyJobState {
	return []CopyJobState{
		"CREATED",
		"RUNNING",
		"COMPLETED",
		"FAILED",
	}
}

type RecoveryPointStatus string

// Enum values for RecoveryPointStatus
const (
	RecoveryPointStatusCompleted RecoveryPointStatus = "COMPLETED"
	RecoveryPointStatusPartial   RecoveryPointStatus = "PARTIAL"
	RecoveryPointStatusDeleting  RecoveryPointStatus = "DELETING"
	RecoveryPointStatusExpired   RecoveryPointStatus = "EXPIRED"
)

// Values returns all known values for RecoveryPointStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (RecoveryPointStatus) Values() []RecoveryPointStatus {
	return []RecoveryPointStatus{
		"COMPLETED",
		"PARTIAL",
		"DELETING",
		"EXPIRED",
	}
}

type RestoreJobStatus string

// Enum values for RestoreJobStatus
const (
	RestoreJobStatusPending   RestoreJobStatus = "PENDING"
	RestoreJobStatusRunning   RestoreJobStatus = "RUNNING"
	RestoreJobStatusCompleted RestoreJobStatus = "COMPLETED"
	RestoreJobStatusAborted   RestoreJobStatus = "ABORTED"
	RestoreJobStatusFailed    RestoreJobStatus = "FAILED"
)

// Values returns all known values for RestoreJobStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (RestoreJobStatus) Values() []RestoreJobStatus {
	return []RestoreJobStatus{
		"PENDING",
		"RUNNING",
		"COMPLETED",
		"ABORTED",
		"FAILED",
	}
}

type StorageClass string

// Enum values for StorageClass
const (
	StorageClassWarm    StorageClass = "WARM"
	StorageClassCold    StorageClass = "COLD"
	StorageClassDeleted StorageClass = "DELETED"
)

// Values returns all known values for StorageClass. Note that this can be expanded
// in the future, and so it is only as up to date as the client. The ordering of
// this slice is not guaranteed to be stable across updates.
func (StorageClass) Values() []StorageClass {
	return []StorageClass{
		"WARM",
		"COLD",
		"DELETED",
	}
}
