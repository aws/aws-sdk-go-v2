// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package backup

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/backup/types"
)

const opUpdateRecoveryPointLifecycle = "UpdateRecoveryPointLifecycle"

// UpdateRecoveryPointLifecycleRequest returns a request value for making API operation for
// AWS Backup.
//
// Sets the transition lifecycle of a recovery point.
//
// The lifecycle defines when a protected resource is transitioned to cold storage
// and when it expires. AWS Backup transitions and expires backups automatically
// according to the lifecycle that you define.
//
// Backups transitioned to cold storage must be stored in cold storage for a
// minimum of 90 days. Therefore, the “expire after days” setting must be
// 90 days greater than the “transition to cold after days” setting. The
// “transition to cold after days” setting cannot be changed after a backup
// has been transitioned to cold.
//
//    // Example sending a request using UpdateRecoveryPointLifecycleRequest.
//    req := client.UpdateRecoveryPointLifecycleRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/backup-2018-11-15/UpdateRecoveryPointLifecycle
func (c *Client) UpdateRecoveryPointLifecycleRequest(input *types.UpdateRecoveryPointLifecycleInput) UpdateRecoveryPointLifecycleRequest {
	op := &aws.Operation{
		Name:       opUpdateRecoveryPointLifecycle,
		HTTPMethod: "POST",
		HTTPPath:   "/backup-vaults/{backupVaultName}/recovery-points/{recoveryPointArn}",
	}

	if input == nil {
		input = &types.UpdateRecoveryPointLifecycleInput{}
	}

	req := c.newRequest(op, input, &types.UpdateRecoveryPointLifecycleOutput{})
	return UpdateRecoveryPointLifecycleRequest{Request: req, Input: input, Copy: c.UpdateRecoveryPointLifecycleRequest}
}

// UpdateRecoveryPointLifecycleRequest is the request type for the
// UpdateRecoveryPointLifecycle API operation.
type UpdateRecoveryPointLifecycleRequest struct {
	*aws.Request
	Input *types.UpdateRecoveryPointLifecycleInput
	Copy  func(*types.UpdateRecoveryPointLifecycleInput) UpdateRecoveryPointLifecycleRequest
}

// Send marshals and sends the UpdateRecoveryPointLifecycle API request.
func (r UpdateRecoveryPointLifecycleRequest) Send(ctx context.Context) (*UpdateRecoveryPointLifecycleResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &UpdateRecoveryPointLifecycleResponse{
		UpdateRecoveryPointLifecycleOutput: r.Request.Data.(*types.UpdateRecoveryPointLifecycleOutput),
		response:                           &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// UpdateRecoveryPointLifecycleResponse is the response type for the
// UpdateRecoveryPointLifecycle API operation.
type UpdateRecoveryPointLifecycleResponse struct {
	*types.UpdateRecoveryPointLifecycleOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// UpdateRecoveryPointLifecycle request.
func (r *UpdateRecoveryPointLifecycleResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
