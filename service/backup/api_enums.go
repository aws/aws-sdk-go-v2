// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package backup

type BackupJobState string

// Enum values for BackupJobState
const (
	BackupJobStateCreated   BackupJobState = "CREATED"
	BackupJobStatePending   BackupJobState = "PENDING"
	BackupJobStateRunning   BackupJobState = "RUNNING"
	BackupJobStateAborting  BackupJobState = "ABORTING"
	BackupJobStateAborted   BackupJobState = "ABORTED"
	BackupJobStateCompleted BackupJobState = "COMPLETED"
	BackupJobStateFailed    BackupJobState = "FAILED"
	BackupJobStateExpired   BackupJobState = "EXPIRED"
)

func (enum BackupJobState) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum BackupJobState) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type BackupVaultEvent string

// Enum values for BackupVaultEvent
const (
	BackupVaultEventBackupJobStarted      BackupVaultEvent = "BACKUP_JOB_STARTED"
	BackupVaultEventBackupJobCompleted    BackupVaultEvent = "BACKUP_JOB_COMPLETED"
	BackupVaultEventBackupJobSuccessful   BackupVaultEvent = "BACKUP_JOB_SUCCESSFUL"
	BackupVaultEventBackupJobFailed       BackupVaultEvent = "BACKUP_JOB_FAILED"
	BackupVaultEventBackupJobExpired      BackupVaultEvent = "BACKUP_JOB_EXPIRED"
	BackupVaultEventRestoreJobStarted     BackupVaultEvent = "RESTORE_JOB_STARTED"
	BackupVaultEventRestoreJobCompleted   BackupVaultEvent = "RESTORE_JOB_COMPLETED"
	BackupVaultEventRestoreJobSuccessful  BackupVaultEvent = "RESTORE_JOB_SUCCESSFUL"
	BackupVaultEventRestoreJobFailed      BackupVaultEvent = "RESTORE_JOB_FAILED"
	BackupVaultEventCopyJobStarted        BackupVaultEvent = "COPY_JOB_STARTED"
	BackupVaultEventCopyJobSuccessful     BackupVaultEvent = "COPY_JOB_SUCCESSFUL"
	BackupVaultEventCopyJobFailed         BackupVaultEvent = "COPY_JOB_FAILED"
	BackupVaultEventRecoveryPointModified BackupVaultEvent = "RECOVERY_POINT_MODIFIED"
	BackupVaultEventBackupPlanCreated     BackupVaultEvent = "BACKUP_PLAN_CREATED"
	BackupVaultEventBackupPlanModified    BackupVaultEvent = "BACKUP_PLAN_MODIFIED"
)

func (enum BackupVaultEvent) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum BackupVaultEvent) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type ConditionType string

// Enum values for ConditionType
const (
	ConditionTypeStringequals ConditionType = "STRINGEQUALS"
)

func (enum ConditionType) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum ConditionType) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type CopyJobState string

// Enum values for CopyJobState
const (
	CopyJobStateCreated   CopyJobState = "CREATED"
	CopyJobStateRunning   CopyJobState = "RUNNING"
	CopyJobStateCompleted CopyJobState = "COMPLETED"
	CopyJobStateFailed    CopyJobState = "FAILED"
)

func (enum CopyJobState) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum CopyJobState) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type RecoveryPointStatus string

// Enum values for RecoveryPointStatus
const (
	RecoveryPointStatusCompleted RecoveryPointStatus = "COMPLETED"
	RecoveryPointStatusPartial   RecoveryPointStatus = "PARTIAL"
	RecoveryPointStatusDeleting  RecoveryPointStatus = "DELETING"
	RecoveryPointStatusExpired   RecoveryPointStatus = "EXPIRED"
)

func (enum RecoveryPointStatus) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum RecoveryPointStatus) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type RestoreJobStatus string

// Enum values for RestoreJobStatus
const (
	RestoreJobStatusPending   RestoreJobStatus = "PENDING"
	RestoreJobStatusRunning   RestoreJobStatus = "RUNNING"
	RestoreJobStatusCompleted RestoreJobStatus = "COMPLETED"
	RestoreJobStatusAborted   RestoreJobStatus = "ABORTED"
	RestoreJobStatusFailed    RestoreJobStatus = "FAILED"
)

func (enum RestoreJobStatus) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum RestoreJobStatus) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type StorageClass string

// Enum values for StorageClass
const (
	StorageClassWarm    StorageClass = "WARM"
	StorageClassCold    StorageClass = "COLD"
	StorageClassDeleted StorageClass = "DELETED"
)

func (enum StorageClass) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum StorageClass) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}
