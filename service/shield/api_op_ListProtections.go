// Code generated by smithy-go-codegen DO NOT EDIT.

package shield

import (
	"context"
	awsmiddleware "github.com/aws/aws-sdk-go-v2/aws/middleware"
	"github.com/aws/aws-sdk-go-v2/aws/retry"
	"github.com/aws/aws-sdk-go-v2/aws/signer/v4"
	"github.com/aws/aws-sdk-go-v2/service/shield/types"
	smithy "github.com/awslabs/smithy-go"
	"github.com/awslabs/smithy-go/middleware"
	smithyhttp "github.com/awslabs/smithy-go/transport/http"
)

// Lists all Protection () objects for the account.
func (c *Client) ListProtections(ctx context.Context, params *ListProtectionsInput, optFns ...func(*Options)) (*ListProtectionsOutput, error) {
	stack := middleware.NewStack("ListProtections", smithyhttp.NewStackRequest)
	options := c.options.Copy()
	for _, fn := range optFns {
		fn(&options)
	}
	addawsAwsjson11_serdeOpListProtectionsMiddlewares(stack)
	awsmiddleware.AddRequestInvocationIDMiddleware(stack)
	smithyhttp.AddContentLengthMiddleware(stack)
	AddResolveEndpointMiddleware(stack, options)
	v4.AddComputePayloadSHA256Middleware(stack)
	retry.AddRetryMiddlewares(stack, options)
	addHTTPSignerV4Middleware(stack, options)
	awsmiddleware.AddAttemptClockSkewMiddleware(stack)
	addClientUserAgent(stack)
	smithyhttp.AddErrorCloseResponseBodyMiddleware(stack)
	smithyhttp.AddCloseResponseBodyMiddleware(stack)
	stack.Initialize.Add(newServiceMetadataMiddleware_opListProtections(options.Region), middleware.Before)

	for _, fn := range options.APIOptions {
		if err := fn(stack); err != nil {
			return nil, err
		}
	}
	handler := middleware.DecorateHandler(smithyhttp.NewClientHandler(options.HTTPClient), stack)
	result, metadata, err := handler.Handle(ctx, params)
	if err != nil {
		return nil, &smithy.OperationError{
			ServiceID:     ServiceID,
			OperationName: "ListProtections",
			Err:           err,
		}
	}
	out := result.(*ListProtectionsOutput)
	out.ResultMetadata = metadata
	return out, nil
}

type ListProtectionsInput struct {
	// The ListProtectionsRequest.NextToken value from a previous call to
	// ListProtections. Pass null if this is the first call.
	NextToken *string
	// The maximum number of Protection () objects to be returned. If this is left
	// blank the first 20 results will be returned. This is a maximum value; it is
	// possible that AWS WAF will return the results in smaller batches. That is, the
	// number of Protection () objects returned could be less than MaxResults, even if
	// there are still more Protection () objects yet to return. If there are more
	// Protection () objects to return, AWS WAF will always also return a NextToken.
	MaxResults *int32
}

type ListProtectionsOutput struct {
	// If you specify a value for MaxResults and you have more Protections than the
	// value of MaxResults, AWS Shield Advanced returns a NextToken value in the
	// response that allows you to list another group of Protections. For the second
	// and subsequent ListProtections requests, specify the value of NextToken from the
	// previous response to get information about another batch of Protections. AWS WAF
	// might return the list of Protection () objects in batches smaller than the
	// number specified by MaxResults. If there are more Protection () objects to
	// return, AWS WAF will always also return a NextToken.
	NextToken *string
	// The array of enabled Protection () objects.
	Protections []*types.Protection

	// Metadata pertaining to the operation's result.
	ResultMetadata middleware.Metadata
}

func addawsAwsjson11_serdeOpListProtectionsMiddlewares(stack *middleware.Stack) {
	stack.Serialize.Add(&awsAwsjson11_serializeOpListProtections{}, middleware.After)
	stack.Deserialize.Add(&awsAwsjson11_deserializeOpListProtections{}, middleware.After)
}

func newServiceMetadataMiddleware_opListProtections(region string) awsmiddleware.RegisterServiceMetadata {
	return awsmiddleware.RegisterServiceMetadata{
		Region:        region,
		ServiceID:     ServiceID,
		SigningName:   "shield",
		OperationName: "ListProtections",
	}
}
