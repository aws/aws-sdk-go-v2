// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package shield

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/internal/awsutil"
)

type GetSubscriptionStateInput struct {
	_ struct{} `type:"structure"`
}

// String returns the string representation
func (s GetSubscriptionStateInput) String() string {
	return awsutil.Prettify(s)
}

type GetSubscriptionStateOutput struct {
	_ struct{} `type:"structure"`

	// The status of the subscription.
	//
	// SubscriptionState is a required field
	SubscriptionState SubscriptionState `type:"string" required:"true" enum:"true"`
}

// String returns the string representation
func (s GetSubscriptionStateOutput) String() string {
	return awsutil.Prettify(s)
}

const opGetSubscriptionState = "GetSubscriptionState"

// GetSubscriptionStateRequest returns a request value for making API operation for
// AWS Shield.
//
// Returns the SubscriptionState, either Active or Inactive.
//
//    // Example sending a request using GetSubscriptionStateRequest.
//    req := client.GetSubscriptionStateRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/shield-2016-06-02/GetSubscriptionState
func (c *Client) GetSubscriptionStateRequest(input *GetSubscriptionStateInput) GetSubscriptionStateRequest {
	op := &aws.Operation{
		Name:       opGetSubscriptionState,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &GetSubscriptionStateInput{}
	}

	req := c.newRequest(op, input, &GetSubscriptionStateOutput{})

	return GetSubscriptionStateRequest{Request: req, Input: input, Copy: c.GetSubscriptionStateRequest}
}

// GetSubscriptionStateRequest is the request type for the
// GetSubscriptionState API operation.
type GetSubscriptionStateRequest struct {
	*aws.Request
	Input *GetSubscriptionStateInput
	Copy  func(*GetSubscriptionStateInput) GetSubscriptionStateRequest
}

// Send marshals and sends the GetSubscriptionState API request.
func (r GetSubscriptionStateRequest) Send(ctx context.Context) (*GetSubscriptionStateResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &GetSubscriptionStateResponse{
		GetSubscriptionStateOutput: r.Request.Data.(*GetSubscriptionStateOutput),
		response:                   &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// GetSubscriptionStateResponse is the response type for the
// GetSubscriptionState API operation.
type GetSubscriptionStateResponse struct {
	*GetSubscriptionStateOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// GetSubscriptionState request.
func (r *GetSubscriptionStateResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
