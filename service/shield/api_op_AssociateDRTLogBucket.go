// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package shield

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/shield/types"
)

const opAssociateDRTLogBucket = "AssociateDRTLogBucket"

// AssociateDRTLogBucketRequest returns a request value for making API operation for
// AWS Shield.
//
// Authorizes the DDoS Response team (DRT) to access the specified Amazon S3
// bucket containing your AWS WAF logs. You can associate up to 10 Amazon S3
// buckets with your subscription.
//
// To use the services of the DRT and make an AssociateDRTLogBucket request,
// you must be subscribed to the Business Support plan (https://aws.amazon.com/premiumsupport/business-support/)
// or the Enterprise Support plan (https://aws.amazon.com/premiumsupport/enterprise-support/).
//
//    // Example sending a request using AssociateDRTLogBucketRequest.
//    req := client.AssociateDRTLogBucketRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/shield-2016-06-02/AssociateDRTLogBucket
func (c *Client) AssociateDRTLogBucketRequest(input *types.AssociateDRTLogBucketInput) AssociateDRTLogBucketRequest {
	op := &aws.Operation{
		Name:       opAssociateDRTLogBucket,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &types.AssociateDRTLogBucketInput{}
	}

	req := c.newRequest(op, input, &types.AssociateDRTLogBucketOutput{})
	return AssociateDRTLogBucketRequest{Request: req, Input: input, Copy: c.AssociateDRTLogBucketRequest}
}

// AssociateDRTLogBucketRequest is the request type for the
// AssociateDRTLogBucket API operation.
type AssociateDRTLogBucketRequest struct {
	*aws.Request
	Input *types.AssociateDRTLogBucketInput
	Copy  func(*types.AssociateDRTLogBucketInput) AssociateDRTLogBucketRequest
}

// Send marshals and sends the AssociateDRTLogBucket API request.
func (r AssociateDRTLogBucketRequest) Send(ctx context.Context) (*AssociateDRTLogBucketResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &AssociateDRTLogBucketResponse{
		AssociateDRTLogBucketOutput: r.Request.Data.(*types.AssociateDRTLogBucketOutput),
		response:                    &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// AssociateDRTLogBucketResponse is the response type for the
// AssociateDRTLogBucket API operation.
type AssociateDRTLogBucketResponse struct {
	*types.AssociateDRTLogBucketOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// AssociateDRTLogBucket request.
func (r *AssociateDRTLogBucketResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
