// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package shield

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/shield/types"
)

const opListAttacks = "ListAttacks"

// ListAttacksRequest returns a request value for making API operation for
// AWS Shield.
//
// Returns all ongoing DDoS attacks or all DDoS attacks during a specified time
// period.
//
//    // Example sending a request using ListAttacksRequest.
//    req := client.ListAttacksRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/shield-2016-06-02/ListAttacks
func (c *Client) ListAttacksRequest(input *types.ListAttacksInput) ListAttacksRequest {
	op := &aws.Operation{
		Name:       opListAttacks,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &types.ListAttacksInput{}
	}

	req := c.newRequest(op, input, &types.ListAttacksOutput{})
	return ListAttacksRequest{Request: req, Input: input, Copy: c.ListAttacksRequest}
}

// ListAttacksRequest is the request type for the
// ListAttacks API operation.
type ListAttacksRequest struct {
	*aws.Request
	Input *types.ListAttacksInput
	Copy  func(*types.ListAttacksInput) ListAttacksRequest
}

// Send marshals and sends the ListAttacks API request.
func (r ListAttacksRequest) Send(ctx context.Context) (*ListAttacksResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &ListAttacksResponse{
		ListAttacksOutput: r.Request.Data.(*types.ListAttacksOutput),
		response:          &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// ListAttacksResponse is the response type for the
// ListAttacks API operation.
type ListAttacksResponse struct {
	*types.ListAttacksOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// ListAttacks request.
func (r *ListAttacksResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
