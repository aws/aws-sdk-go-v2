// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package shield

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/shield/types"
)

const opUpdateSubscription = "UpdateSubscription"

// UpdateSubscriptionRequest returns a request value for making API operation for
// AWS Shield.
//
// Updates the details of an existing subscription. Only enter values for parameters
// you want to change. Empty parameters are not updated.
//
//    // Example sending a request using UpdateSubscriptionRequest.
//    req := client.UpdateSubscriptionRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/shield-2016-06-02/UpdateSubscription
func (c *Client) UpdateSubscriptionRequest(input *types.UpdateSubscriptionInput) UpdateSubscriptionRequest {
	op := &aws.Operation{
		Name:       opUpdateSubscription,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &types.UpdateSubscriptionInput{}
	}

	req := c.newRequest(op, input, &types.UpdateSubscriptionOutput{})
	return UpdateSubscriptionRequest{Request: req, Input: input, Copy: c.UpdateSubscriptionRequest}
}

// UpdateSubscriptionRequest is the request type for the
// UpdateSubscription API operation.
type UpdateSubscriptionRequest struct {
	*aws.Request
	Input *types.UpdateSubscriptionInput
	Copy  func(*types.UpdateSubscriptionInput) UpdateSubscriptionRequest
}

// Send marshals and sends the UpdateSubscription API request.
func (r UpdateSubscriptionRequest) Send(ctx context.Context) (*UpdateSubscriptionResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &UpdateSubscriptionResponse{
		UpdateSubscriptionOutput: r.Request.Data.(*types.UpdateSubscriptionOutput),
		response:                 &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// UpdateSubscriptionResponse is the response type for the
// UpdateSubscription API operation.
type UpdateSubscriptionResponse struct {
	*types.UpdateSubscriptionOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// UpdateSubscription request.
func (r *UpdateSubscriptionResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
