// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package migrationhub

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/migrationhub/types"
)

const opNotifyApplicationState = "NotifyApplicationState"

// NotifyApplicationStateRequest returns a request value for making API operation for
// AWS Migration Hub.
//
// Sets the migration state of an application. For a given application identified
// by the value passed to ApplicationId, its status is set or updated by passing
// one of three values to Status: NOT_STARTED | IN_PROGRESS | COMPLETED.
//
//    // Example sending a request using NotifyApplicationStateRequest.
//    req := client.NotifyApplicationStateRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/AWSMigrationHub-2017-05-31/NotifyApplicationState
func (c *Client) NotifyApplicationStateRequest(input *types.NotifyApplicationStateInput) NotifyApplicationStateRequest {
	op := &aws.Operation{
		Name:       opNotifyApplicationState,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &types.NotifyApplicationStateInput{}
	}

	req := c.newRequest(op, input, &types.NotifyApplicationStateOutput{})
	return NotifyApplicationStateRequest{Request: req, Input: input, Copy: c.NotifyApplicationStateRequest}
}

// NotifyApplicationStateRequest is the request type for the
// NotifyApplicationState API operation.
type NotifyApplicationStateRequest struct {
	*aws.Request
	Input *types.NotifyApplicationStateInput
	Copy  func(*types.NotifyApplicationStateInput) NotifyApplicationStateRequest
}

// Send marshals and sends the NotifyApplicationState API request.
func (r NotifyApplicationStateRequest) Send(ctx context.Context) (*NotifyApplicationStateResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &NotifyApplicationStateResponse{
		NotifyApplicationStateOutput: r.Request.Data.(*types.NotifyApplicationStateOutput),
		response:                     &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// NotifyApplicationStateResponse is the response type for the
// NotifyApplicationState API operation.
type NotifyApplicationStateResponse struct {
	*types.NotifyApplicationStateOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// NotifyApplicationState request.
func (r *NotifyApplicationStateResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
