// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package s3control

type JobManifestFieldName string

// Enum values for JobManifestFieldName
const (
	JobManifestFieldNameIgnore    JobManifestFieldName = "Ignore"
	JobManifestFieldNameBucket    JobManifestFieldName = "Bucket"
	JobManifestFieldNameKey       JobManifestFieldName = "Key"
	JobManifestFieldNameVersionId JobManifestFieldName = "VersionId"
)

func (enum JobManifestFieldName) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum JobManifestFieldName) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type JobManifestFormat string

// Enum values for JobManifestFormat
const (
	JobManifestFormatS3batchOperationsCsv20180820 JobManifestFormat = "S3BatchOperations_CSV_20180820"
	JobManifestFormatS3inventoryReportCsv20161130 JobManifestFormat = "S3InventoryReport_CSV_20161130"
)

func (enum JobManifestFormat) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum JobManifestFormat) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type JobReportFormat string

// Enum values for JobReportFormat
const (
	JobReportFormatReportCsv20180820 JobReportFormat = "Report_CSV_20180820"
)

func (enum JobReportFormat) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum JobReportFormat) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type JobReportScope string

// Enum values for JobReportScope
const (
	JobReportScopeAllTasks        JobReportScope = "AllTasks"
	JobReportScopeFailedTasksOnly JobReportScope = "FailedTasksOnly"
)

func (enum JobReportScope) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum JobReportScope) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type JobStatus string

// Enum values for JobStatus
const (
	JobStatusActive     JobStatus = "Active"
	JobStatusCancelled  JobStatus = "Cancelled"
	JobStatusCancelling JobStatus = "Cancelling"
	JobStatusComplete   JobStatus = "Complete"
	JobStatusCompleting JobStatus = "Completing"
	JobStatusFailed     JobStatus = "Failed"
	JobStatusFailing    JobStatus = "Failing"
	JobStatusNew        JobStatus = "New"
	JobStatusPaused     JobStatus = "Paused"
	JobStatusPausing    JobStatus = "Pausing"
	JobStatusPreparing  JobStatus = "Preparing"
	JobStatusReady      JobStatus = "Ready"
	JobStatusSuspended  JobStatus = "Suspended"
)

func (enum JobStatus) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum JobStatus) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type NetworkOrigin string

// Enum values for NetworkOrigin
const (
	NetworkOriginInternet NetworkOrigin = "Internet"
	NetworkOriginVpc      NetworkOrigin = "VPC"
)

func (enum NetworkOrigin) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum NetworkOrigin) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type OperationName string

// Enum values for OperationName
const (
	OperationNameLambdaInvoke            OperationName = "LambdaInvoke"
	OperationNameS3putObjectCopy         OperationName = "S3PutObjectCopy"
	OperationNameS3putObjectAcl          OperationName = "S3PutObjectAcl"
	OperationNameS3putObjectTagging      OperationName = "S3PutObjectTagging"
	OperationNameS3initiateRestoreObject OperationName = "S3InitiateRestoreObject"
	OperationNameS3putObjectLegalHold    OperationName = "S3PutObjectLegalHold"
	OperationNameS3putObjectRetention    OperationName = "S3PutObjectRetention"
)

func (enum OperationName) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum OperationName) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type RequestedJobStatus string

// Enum values for RequestedJobStatus
const (
	RequestedJobStatusCancelled RequestedJobStatus = "Cancelled"
	RequestedJobStatusReady     RequestedJobStatus = "Ready"
)

func (enum RequestedJobStatus) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum RequestedJobStatus) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type S3CannedAccessControlList string

// Enum values for S3CannedAccessControlList
const (
	S3CannedAccessControlListPrivate                S3CannedAccessControlList = "private"
	S3CannedAccessControlListPublicRead             S3CannedAccessControlList = "public-read"
	S3CannedAccessControlListPublicReadWrite        S3CannedAccessControlList = "public-read-write"
	S3CannedAccessControlListAwsExecRead            S3CannedAccessControlList = "aws-exec-read"
	S3CannedAccessControlListAuthenticatedRead      S3CannedAccessControlList = "authenticated-read"
	S3CannedAccessControlListBucketOwnerRead        S3CannedAccessControlList = "bucket-owner-read"
	S3CannedAccessControlListBucketOwnerFullControl S3CannedAccessControlList = "bucket-owner-full-control"
)

func (enum S3CannedAccessControlList) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum S3CannedAccessControlList) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type S3GlacierJobTier string

// Enum values for S3GlacierJobTier
const (
	S3GlacierJobTierBulk     S3GlacierJobTier = "BULK"
	S3GlacierJobTierStandard S3GlacierJobTier = "STANDARD"
)

func (enum S3GlacierJobTier) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum S3GlacierJobTier) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type S3GranteeTypeIdentifier string

// Enum values for S3GranteeTypeIdentifier
const (
	S3GranteeTypeIdentifierId           S3GranteeTypeIdentifier = "id"
	S3GranteeTypeIdentifierEmailAddress S3GranteeTypeIdentifier = "emailAddress"
	S3GranteeTypeIdentifierUri          S3GranteeTypeIdentifier = "uri"
)

func (enum S3GranteeTypeIdentifier) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum S3GranteeTypeIdentifier) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type S3MetadataDirective string

// Enum values for S3MetadataDirective
const (
	S3MetadataDirectiveCopy    S3MetadataDirective = "COPY"
	S3MetadataDirectiveReplace S3MetadataDirective = "REPLACE"
)

func (enum S3MetadataDirective) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum S3MetadataDirective) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type S3ObjectLockLegalHoldStatus string

// Enum values for S3ObjectLockLegalHoldStatus
const (
	S3ObjectLockLegalHoldStatusOff S3ObjectLockLegalHoldStatus = "OFF"
	S3ObjectLockLegalHoldStatusOn  S3ObjectLockLegalHoldStatus = "ON"
)

func (enum S3ObjectLockLegalHoldStatus) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum S3ObjectLockLegalHoldStatus) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type S3ObjectLockMode string

// Enum values for S3ObjectLockMode
const (
	S3ObjectLockModeCompliance S3ObjectLockMode = "COMPLIANCE"
	S3ObjectLockModeGovernance S3ObjectLockMode = "GOVERNANCE"
)

func (enum S3ObjectLockMode) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum S3ObjectLockMode) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type S3ObjectLockRetentionMode string

// Enum values for S3ObjectLockRetentionMode
const (
	S3ObjectLockRetentionModeCompliance S3ObjectLockRetentionMode = "COMPLIANCE"
	S3ObjectLockRetentionModeGovernance S3ObjectLockRetentionMode = "GOVERNANCE"
)

func (enum S3ObjectLockRetentionMode) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum S3ObjectLockRetentionMode) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type S3Permission string

// Enum values for S3Permission
const (
	S3PermissionFullControl S3Permission = "FULL_CONTROL"
	S3PermissionRead        S3Permission = "READ"
	S3PermissionWrite       S3Permission = "WRITE"
	S3PermissionReadAcp     S3Permission = "READ_ACP"
	S3PermissionWriteAcp    S3Permission = "WRITE_ACP"
)

func (enum S3Permission) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum S3Permission) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type S3SSEAlgorithm string

// Enum values for S3SSEAlgorithm
const (
	S3SSEAlgorithmAes256 S3SSEAlgorithm = "AES256"
	S3SSEAlgorithmKms    S3SSEAlgorithm = "KMS"
)

func (enum S3SSEAlgorithm) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum S3SSEAlgorithm) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type S3StorageClass string

// Enum values for S3StorageClass
const (
	S3StorageClassStandard           S3StorageClass = "STANDARD"
	S3StorageClassStandardIa         S3StorageClass = "STANDARD_IA"
	S3StorageClassOnezoneIa          S3StorageClass = "ONEZONE_IA"
	S3StorageClassGlacier            S3StorageClass = "GLACIER"
	S3StorageClassIntelligentTiering S3StorageClass = "INTELLIGENT_TIERING"
	S3StorageClassDeepArchive        S3StorageClass = "DEEP_ARCHIVE"
)

func (enum S3StorageClass) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum S3StorageClass) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}
