// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package cloudformation

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/cloudformation/types"
)

const opCreateChangeSet = "CreateChangeSet"

// CreateChangeSetRequest returns a request value for making API operation for
// AWS CloudFormation.
//
// Creates a list of changes that will be applied to a stack so that you can
// review the changes before executing them. You can create a change set for
// a stack that doesn't exist or an existing stack. If you create a change set
// for a stack that doesn't exist, the change set shows all of the resources
// that AWS CloudFormation will create. If you create a change set for an existing
// stack, AWS CloudFormation compares the stack's information with the information
// that you submit in the change set and lists the differences. Use change sets
// to understand which resources AWS CloudFormation will create or change, and
// how it will change resources in an existing stack, before you create or update
// a stack.
//
// To create a change set for a stack that doesn't exist, for the ChangeSetType
// parameter, specify CREATE. To create a change set for an existing stack,
// specify UPDATE for the ChangeSetType parameter. To create a change set for
// an import operation, specify IMPORT for the ChangeSetType parameter. After
// the CreateChangeSet call successfully completes, AWS CloudFormation starts
// creating the change set. To check the status of the change set or to review
// it, use the DescribeChangeSet action.
//
// When you are satisfied with the changes the change set will make, execute
// the change set by using the ExecuteChangeSet action. AWS CloudFormation doesn't
// make changes until you execute the change set.
//
//    // Example sending a request using CreateChangeSetRequest.
//    req := client.CreateChangeSetRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/cloudformation-2010-05-15/CreateChangeSet
func (c *Client) CreateChangeSetRequest(input *types.CreateChangeSetInput) CreateChangeSetRequest {
	op := &aws.Operation{
		Name:       opCreateChangeSet,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &types.CreateChangeSetInput{}
	}

	req := c.newRequest(op, input, &types.CreateChangeSetOutput{})
	return CreateChangeSetRequest{Request: req, Input: input, Copy: c.CreateChangeSetRequest}
}

// CreateChangeSetRequest is the request type for the
// CreateChangeSet API operation.
type CreateChangeSetRequest struct {
	*aws.Request
	Input *types.CreateChangeSetInput
	Copy  func(*types.CreateChangeSetInput) CreateChangeSetRequest
}

// Send marshals and sends the CreateChangeSet API request.
func (r CreateChangeSetRequest) Send(ctx context.Context) (*CreateChangeSetResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &CreateChangeSetResponse{
		CreateChangeSetOutput: r.Request.Data.(*types.CreateChangeSetOutput),
		response:              &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// CreateChangeSetResponse is the response type for the
// CreateChangeSet API operation.
type CreateChangeSetResponse struct {
	*types.CreateChangeSetOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// CreateChangeSet request.
func (r *CreateChangeSetResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
