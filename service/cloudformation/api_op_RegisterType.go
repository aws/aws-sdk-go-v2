// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package cloudformation

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/cloudformation/types"
)

const opRegisterType = "RegisterType"

// RegisterTypeRequest returns a request value for making API operation for
// AWS CloudFormation.
//
// Registers a type with the CloudFormation service. Registering a type makes
// it available for use in CloudFormation templates in your AWS account, and
// includes:
//
//    * Validating the resource schema
//
//    * Determining which handlers have been specified for the resource
//
//    * Making the resource type available for use in your account
//
// For more information on how to develop types and ready them for registeration,
// see Creating Resource Providers (cloudformation-cli/latest/userguide/resource-types.html)
// in the CloudFormation CLI User Guide.
//
// Once you have initiated a registration request using RegisterType , you can
// use DescribeTypeRegistration to monitor the progress of the registration
// request.
//
//    // Example sending a request using RegisterTypeRequest.
//    req := client.RegisterTypeRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/cloudformation-2010-05-15/RegisterType
func (c *Client) RegisterTypeRequest(input *types.RegisterTypeInput) RegisterTypeRequest {
	op := &aws.Operation{
		Name:       opRegisterType,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &types.RegisterTypeInput{}
	}

	req := c.newRequest(op, input, &types.RegisterTypeOutput{})
	return RegisterTypeRequest{Request: req, Input: input, Copy: c.RegisterTypeRequest}
}

// RegisterTypeRequest is the request type for the
// RegisterType API operation.
type RegisterTypeRequest struct {
	*aws.Request
	Input *types.RegisterTypeInput
	Copy  func(*types.RegisterTypeInput) RegisterTypeRequest
}

// Send marshals and sends the RegisterType API request.
func (r RegisterTypeRequest) Send(ctx context.Context) (*RegisterTypeResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &RegisterTypeResponse{
		RegisterTypeOutput: r.Request.Data.(*types.RegisterTypeOutput),
		response:           &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// RegisterTypeResponse is the response type for the
// RegisterType API operation.
type RegisterTypeResponse struct {
	*types.RegisterTypeOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// RegisterType request.
func (r *RegisterTypeResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
