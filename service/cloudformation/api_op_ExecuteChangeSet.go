// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package cloudformation

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/cloudformation/types"
)

const opExecuteChangeSet = "ExecuteChangeSet"

// ExecuteChangeSetRequest returns a request value for making API operation for
// AWS CloudFormation.
//
// Updates a stack using the input information that was provided when the specified
// change set was created. After the call successfully completes, AWS CloudFormation
// starts updating the stack. Use the DescribeStacks action to view the status
// of the update.
//
// When you execute a change set, AWS CloudFormation deletes all other change
// sets associated with the stack because they aren't valid for the updated
// stack.
//
// If a stack policy is associated with the stack, AWS CloudFormation enforces
// the policy during the update. You can't specify a temporary stack policy
// that overrides the current policy.
//
//    // Example sending a request using ExecuteChangeSetRequest.
//    req := client.ExecuteChangeSetRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/cloudformation-2010-05-15/ExecuteChangeSet
func (c *Client) ExecuteChangeSetRequest(input *types.ExecuteChangeSetInput) ExecuteChangeSetRequest {
	op := &aws.Operation{
		Name:       opExecuteChangeSet,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &types.ExecuteChangeSetInput{}
	}

	req := c.newRequest(op, input, &types.ExecuteChangeSetOutput{})
	return ExecuteChangeSetRequest{Request: req, Input: input, Copy: c.ExecuteChangeSetRequest}
}

// ExecuteChangeSetRequest is the request type for the
// ExecuteChangeSet API operation.
type ExecuteChangeSetRequest struct {
	*aws.Request
	Input *types.ExecuteChangeSetInput
	Copy  func(*types.ExecuteChangeSetInput) ExecuteChangeSetRequest
}

// Send marshals and sends the ExecuteChangeSet API request.
func (r ExecuteChangeSetRequest) Send(ctx context.Context) (*ExecuteChangeSetResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &ExecuteChangeSetResponse{
		ExecuteChangeSetOutput: r.Request.Data.(*types.ExecuteChangeSetOutput),
		response:               &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// ExecuteChangeSetResponse is the response type for the
// ExecuteChangeSet API operation.
type ExecuteChangeSetResponse struct {
	*types.ExecuteChangeSetOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// ExecuteChangeSet request.
func (r *ExecuteChangeSetResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
