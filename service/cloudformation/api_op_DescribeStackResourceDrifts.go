// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package cloudformation

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/cloudformation/types"
)

const opDescribeStackResourceDrifts = "DescribeStackResourceDrifts"

// DescribeStackResourceDriftsRequest returns a request value for making API operation for
// AWS CloudFormation.
//
// Returns drift information for the resources that have been checked for drift
// in the specified stack. This includes actual and expected configuration values
// for resources where AWS CloudFormation detects configuration drift.
//
// For a given stack, there will be one StackResourceDrift for each stack resource
// that has been checked for drift. Resources that have not yet been checked
// for drift are not included. Resources that do not currently support drift
// detection are not checked, and so not included. For a list of resources that
// support drift detection, see Resources that Support Drift Detection (https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-drift-resource-list.html).
//
// Use DetectStackResourceDrift to detect drift on individual resources, or
// DetectStackDrift to detect drift on all supported resources for a given stack.
//
//    // Example sending a request using DescribeStackResourceDriftsRequest.
//    req := client.DescribeStackResourceDriftsRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/cloudformation-2010-05-15/DescribeStackResourceDrifts
func (c *Client) DescribeStackResourceDriftsRequest(input *types.DescribeStackResourceDriftsInput) DescribeStackResourceDriftsRequest {
	op := &aws.Operation{
		Name:       opDescribeStackResourceDrifts,
		HTTPMethod: "POST",
		HTTPPath:   "/",
		Paginator: &aws.Paginator{
			InputTokens:     []string{"NextToken"},
			OutputTokens:    []string{"NextToken"},
			LimitToken:      "MaxResults",
			TruncationToken: "",
		},
	}

	if input == nil {
		input = &types.DescribeStackResourceDriftsInput{}
	}

	req := c.newRequest(op, input, &types.DescribeStackResourceDriftsOutput{})
	return DescribeStackResourceDriftsRequest{Request: req, Input: input, Copy: c.DescribeStackResourceDriftsRequest}
}

// DescribeStackResourceDriftsRequest is the request type for the
// DescribeStackResourceDrifts API operation.
type DescribeStackResourceDriftsRequest struct {
	*aws.Request
	Input *types.DescribeStackResourceDriftsInput
	Copy  func(*types.DescribeStackResourceDriftsInput) DescribeStackResourceDriftsRequest
}

// Send marshals and sends the DescribeStackResourceDrifts API request.
func (r DescribeStackResourceDriftsRequest) Send(ctx context.Context) (*DescribeStackResourceDriftsResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &DescribeStackResourceDriftsResponse{
		DescribeStackResourceDriftsOutput: r.Request.Data.(*types.DescribeStackResourceDriftsOutput),
		response:                          &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// NewDescribeStackResourceDriftsRequestPaginator returns a paginator for DescribeStackResourceDrifts.
// Use Next method to get the next page, and CurrentPage to get the current
// response page from the paginator. Next will return false, if there are
// no more pages, or an error was encountered.
//
// Note: This operation can generate multiple requests to a service.
//
//   // Example iterating over pages.
//   req := client.DescribeStackResourceDriftsRequest(input)
//   p := cloudformation.NewDescribeStackResourceDriftsRequestPaginator(req)
//
//   for p.Next(context.TODO()) {
//       page := p.CurrentPage()
//   }
//
//   if err := p.Err(); err != nil {
//       return err
//   }
//
func NewDescribeStackResourceDriftsPaginator(req DescribeStackResourceDriftsRequest) DescribeStackResourceDriftsPaginator {
	return DescribeStackResourceDriftsPaginator{
		Pager: aws.Pager{
			NewRequest: func(ctx context.Context) (*aws.Request, error) {
				var inCpy *types.DescribeStackResourceDriftsInput
				if req.Input != nil {
					tmp := *req.Input
					inCpy = &tmp
				}

				newReq := req.Copy(inCpy)
				newReq.SetContext(ctx)
				return newReq.Request, nil
			},
		},
	}
}

// DescribeStackResourceDriftsPaginator is used to paginate the request. This can be done by
// calling Next and CurrentPage.
type DescribeStackResourceDriftsPaginator struct {
	aws.Pager
}

func (p *DescribeStackResourceDriftsPaginator) CurrentPage() *types.DescribeStackResourceDriftsOutput {
	return p.Pager.CurrentPage().(*types.DescribeStackResourceDriftsOutput)
}

// DescribeStackResourceDriftsResponse is the response type for the
// DescribeStackResourceDrifts API operation.
type DescribeStackResourceDriftsResponse struct {
	*types.DescribeStackResourceDriftsOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// DescribeStackResourceDrifts request.
func (r *DescribeStackResourceDriftsResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
