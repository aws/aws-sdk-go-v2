// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package cloudformation

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/cloudformation/types"
)

const opDescribeStackDriftDetectionStatus = "DescribeStackDriftDetectionStatus"

// DescribeStackDriftDetectionStatusRequest returns a request value for making API operation for
// AWS CloudFormation.
//
// Returns information about a stack drift detection operation. A stack drift
// detection operation detects whether a stack's actual configuration differs,
// or has drifted, from it's expected configuration, as defined in the stack
// template and any values specified as template parameters. A stack is considered
// to have drifted if one or more of its resources have drifted. For more information
// on stack and resource drift, see Detecting Unregulated Configuration Changes
// to Stacks and Resources (https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-drift.html).
//
// Use DetectStackDrift to initiate a stack drift detection operation. DetectStackDrift
// returns a StackDriftDetectionId you can use to monitor the progress of the
// operation using DescribeStackDriftDetectionStatus. Once the drift detection
// operation has completed, use DescribeStackResourceDrifts to return drift
// information about the stack and its resources.
//
//    // Example sending a request using DescribeStackDriftDetectionStatusRequest.
//    req := client.DescribeStackDriftDetectionStatusRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/cloudformation-2010-05-15/DescribeStackDriftDetectionStatus
func (c *Client) DescribeStackDriftDetectionStatusRequest(input *types.DescribeStackDriftDetectionStatusInput) DescribeStackDriftDetectionStatusRequest {
	op := &aws.Operation{
		Name:       opDescribeStackDriftDetectionStatus,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &types.DescribeStackDriftDetectionStatusInput{}
	}

	req := c.newRequest(op, input, &types.DescribeStackDriftDetectionStatusOutput{})
	return DescribeStackDriftDetectionStatusRequest{Request: req, Input: input, Copy: c.DescribeStackDriftDetectionStatusRequest}
}

// DescribeStackDriftDetectionStatusRequest is the request type for the
// DescribeStackDriftDetectionStatus API operation.
type DescribeStackDriftDetectionStatusRequest struct {
	*aws.Request
	Input *types.DescribeStackDriftDetectionStatusInput
	Copy  func(*types.DescribeStackDriftDetectionStatusInput) DescribeStackDriftDetectionStatusRequest
}

// Send marshals and sends the DescribeStackDriftDetectionStatus API request.
func (r DescribeStackDriftDetectionStatusRequest) Send(ctx context.Context) (*DescribeStackDriftDetectionStatusResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &DescribeStackDriftDetectionStatusResponse{
		DescribeStackDriftDetectionStatusOutput: r.Request.Data.(*types.DescribeStackDriftDetectionStatusOutput),
		response:                                &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// DescribeStackDriftDetectionStatusResponse is the response type for the
// DescribeStackDriftDetectionStatus API operation.
type DescribeStackDriftDetectionStatusResponse struct {
	*types.DescribeStackDriftDetectionStatusOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// DescribeStackDriftDetectionStatus request.
func (r *DescribeStackDriftDetectionStatusResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
