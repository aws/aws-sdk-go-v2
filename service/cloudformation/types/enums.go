// Code generated by smithy-go-codegen DO NOT EDIT.

package types

type AccountGateStatus string

// Enum values for AccountGateStatus
const (
	AccountGateStatusSucceeded AccountGateStatus = "SUCCEEDED"
	AccountGateStatusFailed    AccountGateStatus = "FAILED"
	AccountGateStatusSkipped   AccountGateStatus = "SKIPPED"
)

// Values returns all known values for AccountGateStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (AccountGateStatus) Values() []AccountGateStatus {
	return []AccountGateStatus{
		"SUCCEEDED",
		"FAILED",
		"SKIPPED",
	}
}

type Capability string

// Enum values for Capability
const (
	CapabilityCapability_iam         Capability = "CAPABILITY_IAM"
	CapabilityCapability_named_iam   Capability = "CAPABILITY_NAMED_IAM"
	CapabilityCapability_auto_expand Capability = "CAPABILITY_AUTO_EXPAND"
)

// Values returns all known values for Capability. Note that this can be expanded
// in the future, and so it is only as up to date as the client. The ordering of
// this slice is not guaranteed to be stable across updates.
func (Capability) Values() []Capability {
	return []Capability{
		"CAPABILITY_IAM",
		"CAPABILITY_NAMED_IAM",
		"CAPABILITY_AUTO_EXPAND",
	}
}

type ChangeAction string

// Enum values for ChangeAction
const (
	ChangeActionAdd    ChangeAction = "Add"
	ChangeActionModify ChangeAction = "Modify"
	ChangeActionRemove ChangeAction = "Remove"
	ChangeActionImport ChangeAction = "Import"
)

// Values returns all known values for ChangeAction. Note that this can be expanded
// in the future, and so it is only as up to date as the client. The ordering of
// this slice is not guaranteed to be stable across updates.
func (ChangeAction) Values() []ChangeAction {
	return []ChangeAction{
		"Add",
		"Modify",
		"Remove",
		"Import",
	}
}

type ChangeSetStatus string

// Enum values for ChangeSetStatus
const (
	ChangeSetStatusCreate_pending     ChangeSetStatus = "CREATE_PENDING"
	ChangeSetStatusCreate_in_progress ChangeSetStatus = "CREATE_IN_PROGRESS"
	ChangeSetStatusCreate_complete    ChangeSetStatus = "CREATE_COMPLETE"
	ChangeSetStatusDelete_complete    ChangeSetStatus = "DELETE_COMPLETE"
	ChangeSetStatusFailed             ChangeSetStatus = "FAILED"
)

// Values returns all known values for ChangeSetStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (ChangeSetStatus) Values() []ChangeSetStatus {
	return []ChangeSetStatus{
		"CREATE_PENDING",
		"CREATE_IN_PROGRESS",
		"CREATE_COMPLETE",
		"DELETE_COMPLETE",
		"FAILED",
	}
}

type ChangeSetType string

// Enum values for ChangeSetType
const (
	ChangeSetTypeCreate ChangeSetType = "CREATE"
	ChangeSetTypeUpdate ChangeSetType = "UPDATE"
	ChangeSetTypeImport ChangeSetType = "IMPORT"
)

// Values returns all known values for ChangeSetType. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (ChangeSetType) Values() []ChangeSetType {
	return []ChangeSetType{
		"CREATE",
		"UPDATE",
		"IMPORT",
	}
}

type ChangeSource string

// Enum values for ChangeSource
const (
	ChangeSourceResourcereference  ChangeSource = "ResourceReference"
	ChangeSourceParameterreference ChangeSource = "ParameterReference"
	ChangeSourceResourceattribute  ChangeSource = "ResourceAttribute"
	ChangeSourceDirectmodification ChangeSource = "DirectModification"
	ChangeSourceAutomatic          ChangeSource = "Automatic"
)

// Values returns all known values for ChangeSource. Note that this can be expanded
// in the future, and so it is only as up to date as the client. The ordering of
// this slice is not guaranteed to be stable across updates.
func (ChangeSource) Values() []ChangeSource {
	return []ChangeSource{
		"ResourceReference",
		"ParameterReference",
		"ResourceAttribute",
		"DirectModification",
		"Automatic",
	}
}

type ChangeType string

// Enum values for ChangeType
const (
	ChangeTypeResource ChangeType = "Resource"
)

// Values returns all known values for ChangeType. Note that this can be expanded
// in the future, and so it is only as up to date as the client. The ordering of
// this slice is not guaranteed to be stable across updates.
func (ChangeType) Values() []ChangeType {
	return []ChangeType{
		"Resource",
	}
}

type DeprecatedStatus string

// Enum values for DeprecatedStatus
const (
	DeprecatedStatusLive       DeprecatedStatus = "LIVE"
	DeprecatedStatusDeprecated DeprecatedStatus = "DEPRECATED"
)

// Values returns all known values for DeprecatedStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (DeprecatedStatus) Values() []DeprecatedStatus {
	return []DeprecatedStatus{
		"LIVE",
		"DEPRECATED",
	}
}

type DifferenceType string

// Enum values for DifferenceType
const (
	DifferenceTypeAdd       DifferenceType = "ADD"
	DifferenceTypeRemove    DifferenceType = "REMOVE"
	DifferenceTypeNot_equal DifferenceType = "NOT_EQUAL"
)

// Values returns all known values for DifferenceType. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (DifferenceType) Values() []DifferenceType {
	return []DifferenceType{
		"ADD",
		"REMOVE",
		"NOT_EQUAL",
	}
}

type EvaluationType string

// Enum values for EvaluationType
const (
	EvaluationTypeStatic  EvaluationType = "Static"
	EvaluationTypeDynamic EvaluationType = "Dynamic"
)

// Values returns all known values for EvaluationType. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (EvaluationType) Values() []EvaluationType {
	return []EvaluationType{
		"Static",
		"Dynamic",
	}
}

type ExecutionStatus string

// Enum values for ExecutionStatus
const (
	ExecutionStatusUnavailable         ExecutionStatus = "UNAVAILABLE"
	ExecutionStatusAvailable           ExecutionStatus = "AVAILABLE"
	ExecutionStatusExecute_in_progress ExecutionStatus = "EXECUTE_IN_PROGRESS"
	ExecutionStatusExecute_complete    ExecutionStatus = "EXECUTE_COMPLETE"
	ExecutionStatusExecute_failed      ExecutionStatus = "EXECUTE_FAILED"
	ExecutionStatusObsolete            ExecutionStatus = "OBSOLETE"
)

// Values returns all known values for ExecutionStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (ExecutionStatus) Values() []ExecutionStatus {
	return []ExecutionStatus{
		"UNAVAILABLE",
		"AVAILABLE",
		"EXECUTE_IN_PROGRESS",
		"EXECUTE_COMPLETE",
		"EXECUTE_FAILED",
		"OBSOLETE",
	}
}

type HandlerErrorCode string

// Enum values for HandlerErrorCode
const (
	HandlerErrorCodeNotupdatable            HandlerErrorCode = "NotUpdatable"
	HandlerErrorCodeInvalidrequest          HandlerErrorCode = "InvalidRequest"
	HandlerErrorCodeAccessdenied            HandlerErrorCode = "AccessDenied"
	HandlerErrorCodeInvalidcredentials      HandlerErrorCode = "InvalidCredentials"
	HandlerErrorCodeAlreadyexists           HandlerErrorCode = "AlreadyExists"
	HandlerErrorCodeNotfound                HandlerErrorCode = "NotFound"
	HandlerErrorCodeResourceconflict        HandlerErrorCode = "ResourceConflict"
	HandlerErrorCodeThrottling              HandlerErrorCode = "Throttling"
	HandlerErrorCodeServicelimitexceeded    HandlerErrorCode = "ServiceLimitExceeded"
	HandlerErrorCodeServicetimeout          HandlerErrorCode = "NotStabilized"
	HandlerErrorCodeGeneralserviceexception HandlerErrorCode = "GeneralServiceException"
	HandlerErrorCodeServiceinternalerror    HandlerErrorCode = "ServiceInternalError"
	HandlerErrorCodeNetworkfailure          HandlerErrorCode = "NetworkFailure"
	HandlerErrorCodeInternalfailure         HandlerErrorCode = "InternalFailure"
)

// Values returns all known values for HandlerErrorCode. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (HandlerErrorCode) Values() []HandlerErrorCode {
	return []HandlerErrorCode{
		"NotUpdatable",
		"InvalidRequest",
		"AccessDenied",
		"InvalidCredentials",
		"AlreadyExists",
		"NotFound",
		"ResourceConflict",
		"Throttling",
		"ServiceLimitExceeded",
		"NotStabilized",
		"GeneralServiceException",
		"ServiceInternalError",
		"NetworkFailure",
		"InternalFailure",
	}
}

type OnFailure string

// Enum values for OnFailure
const (
	OnFailureDo_nothing OnFailure = "DO_NOTHING"
	OnFailureRollback   OnFailure = "ROLLBACK"
	OnFailureDelete     OnFailure = "DELETE"
)

// Values returns all known values for OnFailure. Note that this can be expanded in
// the future, and so it is only as up to date as the client. The ordering of this
// slice is not guaranteed to be stable across updates.
func (OnFailure) Values() []OnFailure {
	return []OnFailure{
		"DO_NOTHING",
		"ROLLBACK",
		"DELETE",
	}
}

type OperationStatus string

// Enum values for OperationStatus
const (
	OperationStatusPending     OperationStatus = "PENDING"
	OperationStatusIn_progress OperationStatus = "IN_PROGRESS"
	OperationStatusSuccess     OperationStatus = "SUCCESS"
	OperationStatusFailed      OperationStatus = "FAILED"
)

// Values returns all known values for OperationStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (OperationStatus) Values() []OperationStatus {
	return []OperationStatus{
		"PENDING",
		"IN_PROGRESS",
		"SUCCESS",
		"FAILED",
	}
}

type PermissionModels string

// Enum values for PermissionModels
const (
	PermissionModelsService_managed PermissionModels = "SERVICE_MANAGED"
	PermissionModelsSelf_managed    PermissionModels = "SELF_MANAGED"
)

// Values returns all known values for PermissionModels. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (PermissionModels) Values() []PermissionModels {
	return []PermissionModels{
		"SERVICE_MANAGED",
		"SELF_MANAGED",
	}
}

type ProvisioningType string

// Enum values for ProvisioningType
const (
	ProvisioningTypeNon_provisionable ProvisioningType = "NON_PROVISIONABLE"
	ProvisioningTypeImmutable         ProvisioningType = "IMMUTABLE"
	ProvisioningTypeFully_mutable     ProvisioningType = "FULLY_MUTABLE"
)

// Values returns all known values for ProvisioningType. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (ProvisioningType) Values() []ProvisioningType {
	return []ProvisioningType{
		"NON_PROVISIONABLE",
		"IMMUTABLE",
		"FULLY_MUTABLE",
	}
}

type RegistrationStatus string

// Enum values for RegistrationStatus
const (
	RegistrationStatusComplete    RegistrationStatus = "COMPLETE"
	RegistrationStatusIn_progress RegistrationStatus = "IN_PROGRESS"
	RegistrationStatusFailed      RegistrationStatus = "FAILED"
)

// Values returns all known values for RegistrationStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (RegistrationStatus) Values() []RegistrationStatus {
	return []RegistrationStatus{
		"COMPLETE",
		"IN_PROGRESS",
		"FAILED",
	}
}

type RegistryType string

// Enum values for RegistryType
const (
	RegistryTypeResource RegistryType = "RESOURCE"
)

// Values returns all known values for RegistryType. Note that this can be expanded
// in the future, and so it is only as up to date as the client. The ordering of
// this slice is not guaranteed to be stable across updates.
func (RegistryType) Values() []RegistryType {
	return []RegistryType{
		"RESOURCE",
	}
}

type Replacement string

// Enum values for Replacement
const (
	ReplacementTrue        Replacement = "True"
	ReplacementFalse       Replacement = "False"
	ReplacementConditional Replacement = "Conditional"
)

// Values returns all known values for Replacement. Note that this can be expanded
// in the future, and so it is only as up to date as the client. The ordering of
// this slice is not guaranteed to be stable across updates.
func (Replacement) Values() []Replacement {
	return []Replacement{
		"True",
		"False",
		"Conditional",
	}
}

type RequiresRecreation string

// Enum values for RequiresRecreation
const (
	RequiresRecreationNever         RequiresRecreation = "Never"
	RequiresRecreationConditionally RequiresRecreation = "Conditionally"
	RequiresRecreationAlways        RequiresRecreation = "Always"
)

// Values returns all known values for RequiresRecreation. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (RequiresRecreation) Values() []RequiresRecreation {
	return []RequiresRecreation{
		"Never",
		"Conditionally",
		"Always",
	}
}

type ResourceAttribute string

// Enum values for ResourceAttribute
const (
	ResourceAttributeProperties     ResourceAttribute = "Properties"
	ResourceAttributeMetadata       ResourceAttribute = "Metadata"
	ResourceAttributeCreationpolicy ResourceAttribute = "CreationPolicy"
	ResourceAttributeUpdatepolicy   ResourceAttribute = "UpdatePolicy"
	ResourceAttributeDeletionpolicy ResourceAttribute = "DeletionPolicy"
	ResourceAttributeTags           ResourceAttribute = "Tags"
)

// Values returns all known values for ResourceAttribute. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (ResourceAttribute) Values() []ResourceAttribute {
	return []ResourceAttribute{
		"Properties",
		"Metadata",
		"CreationPolicy",
		"UpdatePolicy",
		"DeletionPolicy",
		"Tags",
	}
}

type ResourceSignalStatus string

// Enum values for ResourceSignalStatus
const (
	ResourceSignalStatusSuccess ResourceSignalStatus = "SUCCESS"
	ResourceSignalStatusFailure ResourceSignalStatus = "FAILURE"
)

// Values returns all known values for ResourceSignalStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (ResourceSignalStatus) Values() []ResourceSignalStatus {
	return []ResourceSignalStatus{
		"SUCCESS",
		"FAILURE",
	}
}

type ResourceStatus string

// Enum values for ResourceStatus
const (
	ResourceStatusCreate_in_progress          ResourceStatus = "CREATE_IN_PROGRESS"
	ResourceStatusCreate_failed               ResourceStatus = "CREATE_FAILED"
	ResourceStatusCreate_complete             ResourceStatus = "CREATE_COMPLETE"
	ResourceStatusDelete_in_progress          ResourceStatus = "DELETE_IN_PROGRESS"
	ResourceStatusDelete_failed               ResourceStatus = "DELETE_FAILED"
	ResourceStatusDelete_complete             ResourceStatus = "DELETE_COMPLETE"
	ResourceStatusDelete_skipped              ResourceStatus = "DELETE_SKIPPED"
	ResourceStatusUpdate_in_progress          ResourceStatus = "UPDATE_IN_PROGRESS"
	ResourceStatusUpdate_failed               ResourceStatus = "UPDATE_FAILED"
	ResourceStatusUpdate_complete             ResourceStatus = "UPDATE_COMPLETE"
	ResourceStatusImport_failed               ResourceStatus = "IMPORT_FAILED"
	ResourceStatusImport_complete             ResourceStatus = "IMPORT_COMPLETE"
	ResourceStatusImport_in_progress          ResourceStatus = "IMPORT_IN_PROGRESS"
	ResourceStatusImport_rollback_in_progress ResourceStatus = "IMPORT_ROLLBACK_IN_PROGRESS"
	ResourceStatusImport_rollback_failed      ResourceStatus = "IMPORT_ROLLBACK_FAILED"
	ResourceStatusImport_rollback_complete    ResourceStatus = "IMPORT_ROLLBACK_COMPLETE"
)

// Values returns all known values for ResourceStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (ResourceStatus) Values() []ResourceStatus {
	return []ResourceStatus{
		"CREATE_IN_PROGRESS",
		"CREATE_FAILED",
		"CREATE_COMPLETE",
		"DELETE_IN_PROGRESS",
		"DELETE_FAILED",
		"DELETE_COMPLETE",
		"DELETE_SKIPPED",
		"UPDATE_IN_PROGRESS",
		"UPDATE_FAILED",
		"UPDATE_COMPLETE",
		"IMPORT_FAILED",
		"IMPORT_COMPLETE",
		"IMPORT_IN_PROGRESS",
		"IMPORT_ROLLBACK_IN_PROGRESS",
		"IMPORT_ROLLBACK_FAILED",
		"IMPORT_ROLLBACK_COMPLETE",
	}
}

type StackDriftDetectionStatus string

// Enum values for StackDriftDetectionStatus
const (
	StackDriftDetectionStatusDetection_in_progress StackDriftDetectionStatus = "DETECTION_IN_PROGRESS"
	StackDriftDetectionStatusDetection_failed      StackDriftDetectionStatus = "DETECTION_FAILED"
	StackDriftDetectionStatusDetection_complete    StackDriftDetectionStatus = "DETECTION_COMPLETE"
)

// Values returns all known values for StackDriftDetectionStatus. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
// The ordering of this slice is not guaranteed to be stable across updates.
func (StackDriftDetectionStatus) Values() []StackDriftDetectionStatus {
	return []StackDriftDetectionStatus{
		"DETECTION_IN_PROGRESS",
		"DETECTION_FAILED",
		"DETECTION_COMPLETE",
	}
}

type StackDriftStatus string

// Enum values for StackDriftStatus
const (
	StackDriftStatusDrifted     StackDriftStatus = "DRIFTED"
	StackDriftStatusIn_sync     StackDriftStatus = "IN_SYNC"
	StackDriftStatusUnknown     StackDriftStatus = "UNKNOWN"
	StackDriftStatusNot_checked StackDriftStatus = "NOT_CHECKED"
)

// Values returns all known values for StackDriftStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (StackDriftStatus) Values() []StackDriftStatus {
	return []StackDriftStatus{
		"DRIFTED",
		"IN_SYNC",
		"UNKNOWN",
		"NOT_CHECKED",
	}
}

type StackInstanceDetailedStatus string

// Enum values for StackInstanceDetailedStatus
const (
	StackInstanceDetailedStatusPending    StackInstanceDetailedStatus = "PENDING"
	StackInstanceDetailedStatusRunning    StackInstanceDetailedStatus = "RUNNING"
	StackInstanceDetailedStatusSucceeded  StackInstanceDetailedStatus = "SUCCEEDED"
	StackInstanceDetailedStatusFailed     StackInstanceDetailedStatus = "FAILED"
	StackInstanceDetailedStatusCancelled  StackInstanceDetailedStatus = "CANCELLED"
	StackInstanceDetailedStatusInoperable StackInstanceDetailedStatus = "INOPERABLE"
)

// Values returns all known values for StackInstanceDetailedStatus. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
// The ordering of this slice is not guaranteed to be stable across updates.
func (StackInstanceDetailedStatus) Values() []StackInstanceDetailedStatus {
	return []StackInstanceDetailedStatus{
		"PENDING",
		"RUNNING",
		"SUCCEEDED",
		"FAILED",
		"CANCELLED",
		"INOPERABLE",
	}
}

type StackInstanceFilterName string

// Enum values for StackInstanceFilterName
const (
	StackInstanceFilterNameDetailed_status StackInstanceFilterName = "DETAILED_STATUS"
)

// Values returns all known values for StackInstanceFilterName. Note that this can
// be expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (StackInstanceFilterName) Values() []StackInstanceFilterName {
	return []StackInstanceFilterName{
		"DETAILED_STATUS",
	}
}

type StackInstanceStatus string

// Enum values for StackInstanceStatus
const (
	StackInstanceStatusCurrent    StackInstanceStatus = "CURRENT"
	StackInstanceStatusOutdated   StackInstanceStatus = "OUTDATED"
	StackInstanceStatusInoperable StackInstanceStatus = "INOPERABLE"
)

// Values returns all known values for StackInstanceStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (StackInstanceStatus) Values() []StackInstanceStatus {
	return []StackInstanceStatus{
		"CURRENT",
		"OUTDATED",
		"INOPERABLE",
	}
}

type StackResourceDriftStatus string

// Enum values for StackResourceDriftStatus
const (
	StackResourceDriftStatusIn_sync     StackResourceDriftStatus = "IN_SYNC"
	StackResourceDriftStatusModified    StackResourceDriftStatus = "MODIFIED"
	StackResourceDriftStatusDeleted     StackResourceDriftStatus = "DELETED"
	StackResourceDriftStatusNot_checked StackResourceDriftStatus = "NOT_CHECKED"
)

// Values returns all known values for StackResourceDriftStatus. Note that this can
// be expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (StackResourceDriftStatus) Values() []StackResourceDriftStatus {
	return []StackResourceDriftStatus{
		"IN_SYNC",
		"MODIFIED",
		"DELETED",
		"NOT_CHECKED",
	}
}

type StackSetDriftDetectionStatus string

// Enum values for StackSetDriftDetectionStatus
const (
	StackSetDriftDetectionStatusCompleted       StackSetDriftDetectionStatus = "COMPLETED"
	StackSetDriftDetectionStatusFailed          StackSetDriftDetectionStatus = "FAILED"
	StackSetDriftDetectionStatusPartial_success StackSetDriftDetectionStatus = "PARTIAL_SUCCESS"
	StackSetDriftDetectionStatusIn_progress     StackSetDriftDetectionStatus = "IN_PROGRESS"
	StackSetDriftDetectionStatusStopped         StackSetDriftDetectionStatus = "STOPPED"
)

// Values returns all known values for StackSetDriftDetectionStatus. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
// The ordering of this slice is not guaranteed to be stable across updates.
func (StackSetDriftDetectionStatus) Values() []StackSetDriftDetectionStatus {
	return []StackSetDriftDetectionStatus{
		"COMPLETED",
		"FAILED",
		"PARTIAL_SUCCESS",
		"IN_PROGRESS",
		"STOPPED",
	}
}

type StackSetDriftStatus string

// Enum values for StackSetDriftStatus
const (
	StackSetDriftStatusDrifted     StackSetDriftStatus = "DRIFTED"
	StackSetDriftStatusIn_sync     StackSetDriftStatus = "IN_SYNC"
	StackSetDriftStatusNot_checked StackSetDriftStatus = "NOT_CHECKED"
)

// Values returns all known values for StackSetDriftStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (StackSetDriftStatus) Values() []StackSetDriftStatus {
	return []StackSetDriftStatus{
		"DRIFTED",
		"IN_SYNC",
		"NOT_CHECKED",
	}
}

type StackSetOperationAction string

// Enum values for StackSetOperationAction
const (
	StackSetOperationActionCreate       StackSetOperationAction = "CREATE"
	StackSetOperationActionUpdate       StackSetOperationAction = "UPDATE"
	StackSetOperationActionDelete       StackSetOperationAction = "DELETE"
	StackSetOperationActionDetect_drift StackSetOperationAction = "DETECT_DRIFT"
)

// Values returns all known values for StackSetOperationAction. Note that this can
// be expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (StackSetOperationAction) Values() []StackSetOperationAction {
	return []StackSetOperationAction{
		"CREATE",
		"UPDATE",
		"DELETE",
		"DETECT_DRIFT",
	}
}

type StackSetOperationResultStatus string

// Enum values for StackSetOperationResultStatus
const (
	StackSetOperationResultStatusPending   StackSetOperationResultStatus = "PENDING"
	StackSetOperationResultStatusRunning   StackSetOperationResultStatus = "RUNNING"
	StackSetOperationResultStatusSucceeded StackSetOperationResultStatus = "SUCCEEDED"
	StackSetOperationResultStatusFailed    StackSetOperationResultStatus = "FAILED"
	StackSetOperationResultStatusCancelled StackSetOperationResultStatus = "CANCELLED"
)

// Values returns all known values for StackSetOperationResultStatus. Note that
// this can be expanded in the future, and so it is only as up to date as the
// client. The ordering of this slice is not guaranteed to be stable across
// updates.
func (StackSetOperationResultStatus) Values() []StackSetOperationResultStatus {
	return []StackSetOperationResultStatus{
		"PENDING",
		"RUNNING",
		"SUCCEEDED",
		"FAILED",
		"CANCELLED",
	}
}

type StackSetOperationStatus string

// Enum values for StackSetOperationStatus
const (
	StackSetOperationStatusRunning   StackSetOperationStatus = "RUNNING"
	StackSetOperationStatusSucceeded StackSetOperationStatus = "SUCCEEDED"
	StackSetOperationStatusFailed    StackSetOperationStatus = "FAILED"
	StackSetOperationStatusStopping  StackSetOperationStatus = "STOPPING"
	StackSetOperationStatusStopped   StackSetOperationStatus = "STOPPED"
	StackSetOperationStatusQueued    StackSetOperationStatus = "QUEUED"
)

// Values returns all known values for StackSetOperationStatus. Note that this can
// be expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (StackSetOperationStatus) Values() []StackSetOperationStatus {
	return []StackSetOperationStatus{
		"RUNNING",
		"SUCCEEDED",
		"FAILED",
		"STOPPING",
		"STOPPED",
		"QUEUED",
	}
}

type StackSetStatus string

// Enum values for StackSetStatus
const (
	StackSetStatusActive  StackSetStatus = "ACTIVE"
	StackSetStatusDeleted StackSetStatus = "DELETED"
)

// Values returns all known values for StackSetStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (StackSetStatus) Values() []StackSetStatus {
	return []StackSetStatus{
		"ACTIVE",
		"DELETED",
	}
}

type StackStatus string

// Enum values for StackStatus
const (
	StackStatusCreate_in_progress                           StackStatus = "CREATE_IN_PROGRESS"
	StackStatusCreate_failed                                StackStatus = "CREATE_FAILED"
	StackStatusCreate_complete                              StackStatus = "CREATE_COMPLETE"
	StackStatusRollback_in_progress                         StackStatus = "ROLLBACK_IN_PROGRESS"
	StackStatusRollback_failed                              StackStatus = "ROLLBACK_FAILED"
	StackStatusRollback_complete                            StackStatus = "ROLLBACK_COMPLETE"
	StackStatusDelete_in_progress                           StackStatus = "DELETE_IN_PROGRESS"
	StackStatusDelete_failed                                StackStatus = "DELETE_FAILED"
	StackStatusDelete_complete                              StackStatus = "DELETE_COMPLETE"
	StackStatusUpdate_in_progress                           StackStatus = "UPDATE_IN_PROGRESS"
	StackStatusUpdate_complete_cleanup_in_progress          StackStatus = "UPDATE_COMPLETE_CLEANUP_IN_PROGRESS"
	StackStatusUpdate_complete                              StackStatus = "UPDATE_COMPLETE"
	StackStatusUpdate_rollback_in_progress                  StackStatus = "UPDATE_ROLLBACK_IN_PROGRESS"
	StackStatusUpdate_rollback_failed                       StackStatus = "UPDATE_ROLLBACK_FAILED"
	StackStatusUpdate_rollback_complete_cleanup_in_progress StackStatus = "UPDATE_ROLLBACK_COMPLETE_CLEANUP_IN_PROGRESS"
	StackStatusUpdate_rollback_complete                     StackStatus = "UPDATE_ROLLBACK_COMPLETE"
	StackStatusReview_in_progress                           StackStatus = "REVIEW_IN_PROGRESS"
	StackStatusImport_in_progress                           StackStatus = "IMPORT_IN_PROGRESS"
	StackStatusImport_complete                              StackStatus = "IMPORT_COMPLETE"
	StackStatusImport_rollback_in_progress                  StackStatus = "IMPORT_ROLLBACK_IN_PROGRESS"
	StackStatusImport_rollback_failed                       StackStatus = "IMPORT_ROLLBACK_FAILED"
	StackStatusImport_rollback_complete                     StackStatus = "IMPORT_ROLLBACK_COMPLETE"
)

// Values returns all known values for StackStatus. Note that this can be expanded
// in the future, and so it is only as up to date as the client. The ordering of
// this slice is not guaranteed to be stable across updates.
func (StackStatus) Values() []StackStatus {
	return []StackStatus{
		"CREATE_IN_PROGRESS",
		"CREATE_FAILED",
		"CREATE_COMPLETE",
		"ROLLBACK_IN_PROGRESS",
		"ROLLBACK_FAILED",
		"ROLLBACK_COMPLETE",
		"DELETE_IN_PROGRESS",
		"DELETE_FAILED",
		"DELETE_COMPLETE",
		"UPDATE_IN_PROGRESS",
		"UPDATE_COMPLETE_CLEANUP_IN_PROGRESS",
		"UPDATE_COMPLETE",
		"UPDATE_ROLLBACK_IN_PROGRESS",
		"UPDATE_ROLLBACK_FAILED",
		"UPDATE_ROLLBACK_COMPLETE_CLEANUP_IN_PROGRESS",
		"UPDATE_ROLLBACK_COMPLETE",
		"REVIEW_IN_PROGRESS",
		"IMPORT_IN_PROGRESS",
		"IMPORT_COMPLETE",
		"IMPORT_ROLLBACK_IN_PROGRESS",
		"IMPORT_ROLLBACK_FAILED",
		"IMPORT_ROLLBACK_COMPLETE",
	}
}

type TemplateStage string

// Enum values for TemplateStage
const (
	TemplateStageOriginal  TemplateStage = "Original"
	TemplateStageProcessed TemplateStage = "Processed"
)

// Values returns all known values for TemplateStage. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (TemplateStage) Values() []TemplateStage {
	return []TemplateStage{
		"Original",
		"Processed",
	}
}

type Visibility string

// Enum values for Visibility
const (
	VisibilityPublic  Visibility = "PUBLIC"
	VisibilityPrivate Visibility = "PRIVATE"
)

// Values returns all known values for Visibility. Note that this can be expanded
// in the future, and so it is only as up to date as the client. The ordering of
// this slice is not guaranteed to be stable across updates.
func (Visibility) Values() []Visibility {
	return []Visibility{
		"PUBLIC",
		"PRIVATE",
	}
}
