// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package types

import (
	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/internal/awsutil"
	"github.com/aws/aws-sdk-go-v2/service/cloudformation/enums"
)

type DeregisterTypeInput struct {
	_ struct{} `type:"structure"`

	// The Amazon Resource Name (ARN) of the type.
	//
	// Conditional: You must specify TypeName or Arn.
	Arn *string `type:"string"`

	// The kind of type.
	//
	// Currently the only valid value is RESOURCE.
	Type enums.RegistryType `type:"string" enum:"true"`

	// The name of the type.
	//
	// Conditional: You must specify TypeName or Arn.
	TypeName *string `min:"10" type:"string"`

	// The ID of a specific version of the type. The version ID is the value at
	// the end of the Amazon Resource Name (ARN) assigned to the type version when
	// it is registered.
	VersionId *string `min:"1" type:"string"`
}

// String returns the string representation
func (s DeregisterTypeInput) String() string {
	return awsutil.Prettify(s)
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *DeregisterTypeInput) Validate() error {
	invalidParams := aws.ErrInvalidParams{Context: "DeregisterTypeInput"}
	if s.TypeName != nil && len(*s.TypeName) < 10 {
		invalidParams.Add(aws.NewErrParamMinLen("TypeName", 10))
	}
	if s.VersionId != nil && len(*s.VersionId) < 1 {
		invalidParams.Add(aws.NewErrParamMinLen("VersionId", 1))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

type DeregisterTypeOutput struct {
	_ struct{} `type:"structure"`
}

// String returns the string representation
func (s DeregisterTypeOutput) String() string {
	return awsutil.Prettify(s)
}
