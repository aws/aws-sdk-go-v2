// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package efs

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/efs/types"
)

const opPutLifecycleConfiguration = "PutLifecycleConfiguration"

// PutLifecycleConfigurationRequest returns a request value for making API operation for
// Amazon Elastic File System.
//
// Enables lifecycle management by creating a new LifecycleConfiguration object.
// A LifecycleConfiguration object defines when files in an Amazon EFS file
// system are automatically transitioned to the lower-cost EFS Infrequent Access
// (IA) storage class. A LifecycleConfiguration applies to all files in a file
// system.
//
// Each Amazon EFS file system supports one lifecycle configuration, which applies
// to all files in the file system. If a LifecycleConfiguration object already
// exists for the specified file system, a PutLifecycleConfiguration call modifies
// the existing configuration. A PutLifecycleConfiguration call with an empty
// LifecyclePolicies array in the request body deletes any existing LifecycleConfiguration
// and disables lifecycle management.
//
// In the request, specify the following:
//
//    * The ID for the file system for which you are enabling, disabling, or
//    modifying lifecycle management.
//
//    * A LifecyclePolicies array of LifecyclePolicy objects that define when
//    files are moved to the IA storage class. The array can contain only one
//    LifecyclePolicy item.
//
// This operation requires permissions for the elasticfilesystem:PutLifecycleConfiguration
// operation.
//
// To apply a LifecycleConfiguration object to an encrypted file system, you
// need the same AWS Key Management Service (AWS KMS) permissions as when you
// created the encrypted file system.
//
//    // Example sending a request using PutLifecycleConfigurationRequest.
//    req := client.PutLifecycleConfigurationRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/elasticfilesystem-2015-02-01/PutLifecycleConfiguration
func (c *Client) PutLifecycleConfigurationRequest(input *types.PutLifecycleConfigurationInput) PutLifecycleConfigurationRequest {
	op := &aws.Operation{
		Name:       opPutLifecycleConfiguration,
		HTTPMethod: "PUT",
		HTTPPath:   "/2015-02-01/file-systems/{FileSystemId}/lifecycle-configuration",
	}

	if input == nil {
		input = &types.PutLifecycleConfigurationInput{}
	}

	req := c.newRequest(op, input, &types.PutLifecycleConfigurationOutput{})
	return PutLifecycleConfigurationRequest{Request: req, Input: input, Copy: c.PutLifecycleConfigurationRequest}
}

// PutLifecycleConfigurationRequest is the request type for the
// PutLifecycleConfiguration API operation.
type PutLifecycleConfigurationRequest struct {
	*aws.Request
	Input *types.PutLifecycleConfigurationInput
	Copy  func(*types.PutLifecycleConfigurationInput) PutLifecycleConfigurationRequest
}

// Send marshals and sends the PutLifecycleConfiguration API request.
func (r PutLifecycleConfigurationRequest) Send(ctx context.Context) (*PutLifecycleConfigurationResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &PutLifecycleConfigurationResponse{
		PutLifecycleConfigurationOutput: r.Request.Data.(*types.PutLifecycleConfigurationOutput),
		response:                        &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// PutLifecycleConfigurationResponse is the response type for the
// PutLifecycleConfiguration API operation.
type PutLifecycleConfigurationResponse struct {
	*types.PutLifecycleConfigurationOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// PutLifecycleConfiguration request.
func (r *PutLifecycleConfigurationResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
