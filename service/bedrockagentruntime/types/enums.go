// Code generated by smithy-go-codegen DO NOT EDIT.

package types

type ActionGroupSignature string

// Enum values for ActionGroupSignature
const (
	ActionGroupSignatureAmazonUserinput       ActionGroupSignature = "AMAZON.UserInput"
	ActionGroupSignatureAmazonCodeinterpreter ActionGroupSignature = "AMAZON.CodeInterpreter"
)

// Values returns all known values for ActionGroupSignature. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ActionGroupSignature) Values() []ActionGroupSignature {
	return []ActionGroupSignature{
		"AMAZON.UserInput",
		"AMAZON.CodeInterpreter",
	}
}

type ActionInvocationType string

// Enum values for ActionInvocationType
const (
	ActionInvocationTypeResult                    ActionInvocationType = "RESULT"
	ActionInvocationTypeUserConfirmation          ActionInvocationType = "USER_CONFIRMATION"
	ActionInvocationTypeUserConfirmationAndResult ActionInvocationType = "USER_CONFIRMATION_AND_RESULT"
)

// Values returns all known values for ActionInvocationType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ActionInvocationType) Values() []ActionInvocationType {
	return []ActionInvocationType{
		"RESULT",
		"USER_CONFIRMATION",
		"USER_CONFIRMATION_AND_RESULT",
	}
}

type ConfirmationState string

// Enum values for ConfirmationState
const (
	ConfirmationStateConfirm ConfirmationState = "CONFIRM"
	ConfirmationStateDeny    ConfirmationState = "DENY"
)

// Values returns all known values for ConfirmationState. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ConfirmationState) Values() []ConfirmationState {
	return []ConfirmationState{
		"CONFIRM",
		"DENY",
	}
}

type CreationMode string

// Enum values for CreationMode
const (
	CreationModeDefault    CreationMode = "DEFAULT"
	CreationModeOverridden CreationMode = "OVERRIDDEN"
)

// Values returns all known values for CreationMode. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (CreationMode) Values() []CreationMode {
	return []CreationMode{
		"DEFAULT",
		"OVERRIDDEN",
	}
}

type CustomControlMethod string

// Enum values for CustomControlMethod
const (
	CustomControlMethodReturnControl CustomControlMethod = "RETURN_CONTROL"
)

// Values returns all known values for CustomControlMethod. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (CustomControlMethod) Values() []CustomControlMethod {
	return []CustomControlMethod{
		"RETURN_CONTROL",
	}
}

type ExecutionType string

// Enum values for ExecutionType
const (
	ExecutionTypeLambda        ExecutionType = "LAMBDA"
	ExecutionTypeReturnControl ExecutionType = "RETURN_CONTROL"
)

// Values returns all known values for ExecutionType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ExecutionType) Values() []ExecutionType {
	return []ExecutionType{
		"LAMBDA",
		"RETURN_CONTROL",
	}
}

type ExternalSourceType string

// Enum values for ExternalSourceType
const (
	ExternalSourceTypeS3          ExternalSourceType = "S3"
	ExternalSourceTypeByteContent ExternalSourceType = "BYTE_CONTENT"
)

// Values returns all known values for ExternalSourceType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ExternalSourceType) Values() []ExternalSourceType {
	return []ExternalSourceType{
		"S3",
		"BYTE_CONTENT",
	}
}

type FileSourceType string

// Enum values for FileSourceType
const (
	FileSourceTypeS3          FileSourceType = "S3"
	FileSourceTypeByteContent FileSourceType = "BYTE_CONTENT"
)

// Values returns all known values for FileSourceType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (FileSourceType) Values() []FileSourceType {
	return []FileSourceType{
		"S3",
		"BYTE_CONTENT",
	}
}

type FileUseCase string

// Enum values for FileUseCase
const (
	FileUseCaseCodeInterpreter FileUseCase = "CODE_INTERPRETER"
	FileUseCaseChat            FileUseCase = "CHAT"
)

// Values returns all known values for FileUseCase. Note that this can be expanded
// in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (FileUseCase) Values() []FileUseCase {
	return []FileUseCase{
		"CODE_INTERPRETER",
		"CHAT",
	}
}

type FlowCompletionReason string

// Enum values for FlowCompletionReason
const (
	FlowCompletionReasonSuccess FlowCompletionReason = "SUCCESS"
)

// Values returns all known values for FlowCompletionReason. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (FlowCompletionReason) Values() []FlowCompletionReason {
	return []FlowCompletionReason{
		"SUCCESS",
	}
}

type GuadrailAction string

// Enum values for GuadrailAction
const (
	GuadrailActionIntervened GuadrailAction = "INTERVENED"
	GuadrailActionNone       GuadrailAction = "NONE"
)

// Values returns all known values for GuadrailAction. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (GuadrailAction) Values() []GuadrailAction {
	return []GuadrailAction{
		"INTERVENED",
		"NONE",
	}
}

type GuardrailAction string

// Enum values for GuardrailAction
const (
	GuardrailActionIntervened GuardrailAction = "INTERVENED"
	GuardrailActionNone       GuardrailAction = "NONE"
)

// Values returns all known values for GuardrailAction. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (GuardrailAction) Values() []GuardrailAction {
	return []GuardrailAction{
		"INTERVENED",
		"NONE",
	}
}

type GuardrailContentFilterConfidence string

// Enum values for GuardrailContentFilterConfidence
const (
	GuardrailContentFilterConfidenceNone   GuardrailContentFilterConfidence = "NONE"
	GuardrailContentFilterConfidenceLow    GuardrailContentFilterConfidence = "LOW"
	GuardrailContentFilterConfidenceMedium GuardrailContentFilterConfidence = "MEDIUM"
	GuardrailContentFilterConfidenceHigh   GuardrailContentFilterConfidence = "HIGH"
)

// Values returns all known values for GuardrailContentFilterConfidence. Note that
// this can be expanded in the future, and so it is only as up to date as the
// client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (GuardrailContentFilterConfidence) Values() []GuardrailContentFilterConfidence {
	return []GuardrailContentFilterConfidence{
		"NONE",
		"LOW",
		"MEDIUM",
		"HIGH",
	}
}

type GuardrailContentFilterType string

// Enum values for GuardrailContentFilterType
const (
	GuardrailContentFilterTypeInsults      GuardrailContentFilterType = "INSULTS"
	GuardrailContentFilterTypeHate         GuardrailContentFilterType = "HATE"
	GuardrailContentFilterTypeSexual       GuardrailContentFilterType = "SEXUAL"
	GuardrailContentFilterTypeViolence     GuardrailContentFilterType = "VIOLENCE"
	GuardrailContentFilterTypeMisconduct   GuardrailContentFilterType = "MISCONDUCT"
	GuardrailContentFilterTypePromptAttack GuardrailContentFilterType = "PROMPT_ATTACK"
)

// Values returns all known values for GuardrailContentFilterType. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (GuardrailContentFilterType) Values() []GuardrailContentFilterType {
	return []GuardrailContentFilterType{
		"INSULTS",
		"HATE",
		"SEXUAL",
		"VIOLENCE",
		"MISCONDUCT",
		"PROMPT_ATTACK",
	}
}

type GuardrailContentPolicyAction string

// Enum values for GuardrailContentPolicyAction
const (
	GuardrailContentPolicyActionBlocked GuardrailContentPolicyAction = "BLOCKED"
)

// Values returns all known values for GuardrailContentPolicyAction. Note that
// this can be expanded in the future, and so it is only as up to date as the
// client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (GuardrailContentPolicyAction) Values() []GuardrailContentPolicyAction {
	return []GuardrailContentPolicyAction{
		"BLOCKED",
	}
}

type GuardrailManagedWordType string

// Enum values for GuardrailManagedWordType
const (
	GuardrailManagedWordTypeProfanity GuardrailManagedWordType = "PROFANITY"
)

// Values returns all known values for GuardrailManagedWordType. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (GuardrailManagedWordType) Values() []GuardrailManagedWordType {
	return []GuardrailManagedWordType{
		"PROFANITY",
	}
}

type GuardrailPiiEntityType string

// Enum values for GuardrailPiiEntityType
const (
	GuardrailPiiEntityTypeAddress                             GuardrailPiiEntityType = "ADDRESS"
	GuardrailPiiEntityTypeAge                                 GuardrailPiiEntityType = "AGE"
	GuardrailPiiEntityTypeAwsAccessKey                        GuardrailPiiEntityType = "AWS_ACCESS_KEY"
	GuardrailPiiEntityTypeAwsSecretKey                        GuardrailPiiEntityType = "AWS_SECRET_KEY"
	GuardrailPiiEntityTypeCaHealthNumber                      GuardrailPiiEntityType = "CA_HEALTH_NUMBER"
	GuardrailPiiEntityTypeCaSocialInsuranceNumber             GuardrailPiiEntityType = "CA_SOCIAL_INSURANCE_NUMBER"
	GuardrailPiiEntityTypeCreditDebitCardCvv                  GuardrailPiiEntityType = "CREDIT_DEBIT_CARD_CVV"
	GuardrailPiiEntityTypeCreditDebitCardExpiry               GuardrailPiiEntityType = "CREDIT_DEBIT_CARD_EXPIRY"
	GuardrailPiiEntityTypeCreditDebitCardNumber               GuardrailPiiEntityType = "CREDIT_DEBIT_CARD_NUMBER"
	GuardrailPiiEntityTypeDriverId                            GuardrailPiiEntityType = "DRIVER_ID"
	GuardrailPiiEntityTypeEmail                               GuardrailPiiEntityType = "EMAIL"
	GuardrailPiiEntityTypeInternationalBankAccountNumber      GuardrailPiiEntityType = "INTERNATIONAL_BANK_ACCOUNT_NUMBER"
	GuardrailPiiEntityTypeIpAddress                           GuardrailPiiEntityType = "IP_ADDRESS"
	GuardrailPiiEntityTypeLicensePlate                        GuardrailPiiEntityType = "LICENSE_PLATE"
	GuardrailPiiEntityTypeMacAddress                          GuardrailPiiEntityType = "MAC_ADDRESS"
	GuardrailPiiEntityTypeName                                GuardrailPiiEntityType = "NAME"
	GuardrailPiiEntityTypePassword                            GuardrailPiiEntityType = "PASSWORD"
	GuardrailPiiEntityTypePhone                               GuardrailPiiEntityType = "PHONE"
	GuardrailPiiEntityTypePin                                 GuardrailPiiEntityType = "PIN"
	GuardrailPiiEntityTypeSwiftCode                           GuardrailPiiEntityType = "SWIFT_CODE"
	GuardrailPiiEntityTypeUkNationalHealthServiceNumber       GuardrailPiiEntityType = "UK_NATIONAL_HEALTH_SERVICE_NUMBER"
	GuardrailPiiEntityTypeUkNationalInsuranceNumber           GuardrailPiiEntityType = "UK_NATIONAL_INSURANCE_NUMBER"
	GuardrailPiiEntityTypeUkUniqueTaxpayerReferenceNumber     GuardrailPiiEntityType = "UK_UNIQUE_TAXPAYER_REFERENCE_NUMBER"
	GuardrailPiiEntityTypeUrl                                 GuardrailPiiEntityType = "URL"
	GuardrailPiiEntityTypeUsername                            GuardrailPiiEntityType = "USERNAME"
	GuardrailPiiEntityTypeUsBankAccountNumber                 GuardrailPiiEntityType = "US_BANK_ACCOUNT_NUMBER"
	GuardrailPiiEntityTypeUsBankRoutingNumber                 GuardrailPiiEntityType = "US_BANK_ROUTING_NUMBER"
	GuardrailPiiEntityTypeUsIndividualTaxIdentificationNumber GuardrailPiiEntityType = "US_INDIVIDUAL_TAX_IDENTIFICATION_NUMBER"
	GuardrailPiiEntityTypeUsPassportNumber                    GuardrailPiiEntityType = "US_PASSPORT_NUMBER"
	GuardrailPiiEntityTypeUsSocialSecurityNumber              GuardrailPiiEntityType = "US_SOCIAL_SECURITY_NUMBER"
	GuardrailPiiEntityTypeVehicleIdentificationNumber         GuardrailPiiEntityType = "VEHICLE_IDENTIFICATION_NUMBER"
)

// Values returns all known values for GuardrailPiiEntityType. Note that this can
// be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (GuardrailPiiEntityType) Values() []GuardrailPiiEntityType {
	return []GuardrailPiiEntityType{
		"ADDRESS",
		"AGE",
		"AWS_ACCESS_KEY",
		"AWS_SECRET_KEY",
		"CA_HEALTH_NUMBER",
		"CA_SOCIAL_INSURANCE_NUMBER",
		"CREDIT_DEBIT_CARD_CVV",
		"CREDIT_DEBIT_CARD_EXPIRY",
		"CREDIT_DEBIT_CARD_NUMBER",
		"DRIVER_ID",
		"EMAIL",
		"INTERNATIONAL_BANK_ACCOUNT_NUMBER",
		"IP_ADDRESS",
		"LICENSE_PLATE",
		"MAC_ADDRESS",
		"NAME",
		"PASSWORD",
		"PHONE",
		"PIN",
		"SWIFT_CODE",
		"UK_NATIONAL_HEALTH_SERVICE_NUMBER",
		"UK_NATIONAL_INSURANCE_NUMBER",
		"UK_UNIQUE_TAXPAYER_REFERENCE_NUMBER",
		"URL",
		"USERNAME",
		"US_BANK_ACCOUNT_NUMBER",
		"US_BANK_ROUTING_NUMBER",
		"US_INDIVIDUAL_TAX_IDENTIFICATION_NUMBER",
		"US_PASSPORT_NUMBER",
		"US_SOCIAL_SECURITY_NUMBER",
		"VEHICLE_IDENTIFICATION_NUMBER",
	}
}

type GuardrailSensitiveInformationPolicyAction string

// Enum values for GuardrailSensitiveInformationPolicyAction
const (
	GuardrailSensitiveInformationPolicyActionBlocked    GuardrailSensitiveInformationPolicyAction = "BLOCKED"
	GuardrailSensitiveInformationPolicyActionAnonymized GuardrailSensitiveInformationPolicyAction = "ANONYMIZED"
)

// Values returns all known values for GuardrailSensitiveInformationPolicyAction.
// Note that this can be expanded in the future, and so it is only as up to date as
// the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (GuardrailSensitiveInformationPolicyAction) Values() []GuardrailSensitiveInformationPolicyAction {
	return []GuardrailSensitiveInformationPolicyAction{
		"BLOCKED",
		"ANONYMIZED",
	}
}

type GuardrailTopicPolicyAction string

// Enum values for GuardrailTopicPolicyAction
const (
	GuardrailTopicPolicyActionBlocked GuardrailTopicPolicyAction = "BLOCKED"
)

// Values returns all known values for GuardrailTopicPolicyAction. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (GuardrailTopicPolicyAction) Values() []GuardrailTopicPolicyAction {
	return []GuardrailTopicPolicyAction{
		"BLOCKED",
	}
}

type GuardrailTopicType string

// Enum values for GuardrailTopicType
const (
	GuardrailTopicTypeDeny GuardrailTopicType = "DENY"
)

// Values returns all known values for GuardrailTopicType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (GuardrailTopicType) Values() []GuardrailTopicType {
	return []GuardrailTopicType{
		"DENY",
	}
}

type GuardrailWordPolicyAction string

// Enum values for GuardrailWordPolicyAction
const (
	GuardrailWordPolicyActionBlocked GuardrailWordPolicyAction = "BLOCKED"
)

// Values returns all known values for GuardrailWordPolicyAction. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (GuardrailWordPolicyAction) Values() []GuardrailWordPolicyAction {
	return []GuardrailWordPolicyAction{
		"BLOCKED",
	}
}

type InvocationType string

// Enum values for InvocationType
const (
	InvocationTypeActionGroup                InvocationType = "ACTION_GROUP"
	InvocationTypeKnowledgeBase              InvocationType = "KNOWLEDGE_BASE"
	InvocationTypeFinish                     InvocationType = "FINISH"
	InvocationTypeActionGroupCodeInterpreter InvocationType = "ACTION_GROUP_CODE_INTERPRETER"
)

// Values returns all known values for InvocationType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (InvocationType) Values() []InvocationType {
	return []InvocationType{
		"ACTION_GROUP",
		"KNOWLEDGE_BASE",
		"FINISH",
		"ACTION_GROUP_CODE_INTERPRETER",
	}
}

type MemoryType string

// Enum values for MemoryType
const (
	MemoryTypeSessionSummary MemoryType = "SESSION_SUMMARY"
)

// Values returns all known values for MemoryType. Note that this can be expanded
// in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (MemoryType) Values() []MemoryType {
	return []MemoryType{
		"SESSION_SUMMARY",
	}
}

type NodeType string

// Enum values for NodeType
const (
	NodeTypeFlowInputNode      NodeType = "FlowInputNode"
	NodeTypeFlowOutputNode     NodeType = "FlowOutputNode"
	NodeTypeLambdaFunctionNode NodeType = "LambdaFunctionNode"
	NodeTypeKnowledgeBaseNode  NodeType = "KnowledgeBaseNode"
	NodeTypePromptNode         NodeType = "PromptNode"
	NodeTypeConditionNode      NodeType = "ConditionNode"
	NodeTypeLexNode            NodeType = "LexNode"
)

// Values returns all known values for NodeType. Note that this can be expanded in
// the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (NodeType) Values() []NodeType {
	return []NodeType{
		"FlowInputNode",
		"FlowOutputNode",
		"LambdaFunctionNode",
		"KnowledgeBaseNode",
		"PromptNode",
		"ConditionNode",
		"LexNode",
	}
}

type ParameterType string

// Enum values for ParameterType
const (
	ParameterTypeString  ParameterType = "string"
	ParameterTypeNumber  ParameterType = "number"
	ParameterTypeInteger ParameterType = "integer"
	ParameterTypeBoolean ParameterType = "boolean"
	ParameterTypeArray   ParameterType = "array"
)

// Values returns all known values for ParameterType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ParameterType) Values() []ParameterType {
	return []ParameterType{
		"string",
		"number",
		"integer",
		"boolean",
		"array",
	}
}

type PromptState string

// Enum values for PromptState
const (
	PromptStateEnabled  PromptState = "ENABLED"
	PromptStateDisabled PromptState = "DISABLED"
)

// Values returns all known values for PromptState. Note that this can be expanded
// in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (PromptState) Values() []PromptState {
	return []PromptState{
		"ENABLED",
		"DISABLED",
	}
}

type PromptType string

// Enum values for PromptType
const (
	PromptTypePreProcessing                   PromptType = "PRE_PROCESSING"
	PromptTypeOrchestration                   PromptType = "ORCHESTRATION"
	PromptTypeKnowledgeBaseResponseGeneration PromptType = "KNOWLEDGE_BASE_RESPONSE_GENERATION"
	PromptTypePostProcessing                  PromptType = "POST_PROCESSING"
	PromptTypeRoutingClassifier               PromptType = "ROUTING_CLASSIFIER"
)

// Values returns all known values for PromptType. Note that this can be expanded
// in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (PromptType) Values() []PromptType {
	return []PromptType{
		"PRE_PROCESSING",
		"ORCHESTRATION",
		"KNOWLEDGE_BASE_RESPONSE_GENERATION",
		"POST_PROCESSING",
		"ROUTING_CLASSIFIER",
	}
}

type QueryTransformationType string

// Enum values for QueryTransformationType
const (
	QueryTransformationTypeQueryDecomposition QueryTransformationType = "QUERY_DECOMPOSITION"
)

// Values returns all known values for QueryTransformationType. Note that this can
// be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (QueryTransformationType) Values() []QueryTransformationType {
	return []QueryTransformationType{
		"QUERY_DECOMPOSITION",
	}
}

type RequireConfirmation string

// Enum values for RequireConfirmation
const (
	RequireConfirmationEnabled  RequireConfirmation = "ENABLED"
	RequireConfirmationDisabled RequireConfirmation = "DISABLED"
)

// Values returns all known values for RequireConfirmation. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (RequireConfirmation) Values() []RequireConfirmation {
	return []RequireConfirmation{
		"ENABLED",
		"DISABLED",
	}
}

type ResponseState string

// Enum values for ResponseState
const (
	ResponseStateFailure  ResponseState = "FAILURE"
	ResponseStateReprompt ResponseState = "REPROMPT"
)

// Values returns all known values for ResponseState. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ResponseState) Values() []ResponseState {
	return []ResponseState{
		"FAILURE",
		"REPROMPT",
	}
}

type RetrievalResultLocationType string

// Enum values for RetrievalResultLocationType
const (
	RetrievalResultLocationTypeS3         RetrievalResultLocationType = "S3"
	RetrievalResultLocationTypeWeb        RetrievalResultLocationType = "WEB"
	RetrievalResultLocationTypeConfluence RetrievalResultLocationType = "CONFLUENCE"
	RetrievalResultLocationTypeSalesforce RetrievalResultLocationType = "SALESFORCE"
	RetrievalResultLocationTypeSharepoint RetrievalResultLocationType = "SHAREPOINT"
)

// Values returns all known values for RetrievalResultLocationType. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (RetrievalResultLocationType) Values() []RetrievalResultLocationType {
	return []RetrievalResultLocationType{
		"S3",
		"WEB",
		"CONFLUENCE",
		"SALESFORCE",
		"SHAREPOINT",
	}
}

type RetrieveAndGenerateType string

// Enum values for RetrieveAndGenerateType
const (
	RetrieveAndGenerateTypeKnowledgeBase   RetrieveAndGenerateType = "KNOWLEDGE_BASE"
	RetrieveAndGenerateTypeExternalSources RetrieveAndGenerateType = "EXTERNAL_SOURCES"
)

// Values returns all known values for RetrieveAndGenerateType. Note that this can
// be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (RetrieveAndGenerateType) Values() []RetrieveAndGenerateType {
	return []RetrieveAndGenerateType{
		"KNOWLEDGE_BASE",
		"EXTERNAL_SOURCES",
	}
}

type SearchType string

// Enum values for SearchType
const (
	SearchTypeHybrid   SearchType = "HYBRID"
	SearchTypeSemantic SearchType = "SEMANTIC"
)

// Values returns all known values for SearchType. Note that this can be expanded
// in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (SearchType) Values() []SearchType {
	return []SearchType{
		"HYBRID",
		"SEMANTIC",
	}
}

type Source string

// Enum values for Source
const (
	SourceActionGroup   Source = "ACTION_GROUP"
	SourceKnowledgeBase Source = "KNOWLEDGE_BASE"
	SourceParser        Source = "PARSER"
)

// Values returns all known values for Source. Note that this can be expanded in
// the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (Source) Values() []Source {
	return []Source{
		"ACTION_GROUP",
		"KNOWLEDGE_BASE",
		"PARSER",
	}
}

type Type string

// Enum values for Type
const (
	TypeActionGroup   Type = "ACTION_GROUP"
	TypeKnowledgeBase Type = "KNOWLEDGE_BASE"
	TypeFinish        Type = "FINISH"
	TypeAskUser       Type = "ASK_USER"
	TypeReprompt      Type = "REPROMPT"
)

// Values returns all known values for Type. Note that this can be expanded in the
// future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (Type) Values() []Type {
	return []Type{
		"ACTION_GROUP",
		"KNOWLEDGE_BASE",
		"FINISH",
		"ASK_USER",
		"REPROMPT",
	}
}
