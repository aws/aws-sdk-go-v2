// Code generated by smithy-go-codegen DO NOT EDIT.

package types

type CreationMode string

// Enum values for CreationMode
const (
	CreationModeDefault    CreationMode = "DEFAULT"
	CreationModeOverridden CreationMode = "OVERRIDDEN"
)

// Values returns all known values for CreationMode. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (CreationMode) Values() []CreationMode {
	return []CreationMode{
		"DEFAULT",
		"OVERRIDDEN",
	}
}

type ExternalSourceType string

// Enum values for ExternalSourceType
const (
	ExternalSourceTypeS3          ExternalSourceType = "S3"
	ExternalSourceTypeByteContent ExternalSourceType = "BYTE_CONTENT"
)

// Values returns all known values for ExternalSourceType. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (ExternalSourceType) Values() []ExternalSourceType {
	return []ExternalSourceType{
		"S3",
		"BYTE_CONTENT",
	}
}

type InvocationType string

// Enum values for InvocationType
const (
	InvocationTypeActionGroup   InvocationType = "ACTION_GROUP"
	InvocationTypeKnowledgeBase InvocationType = "KNOWLEDGE_BASE"
	InvocationTypeFinish        InvocationType = "FINISH"
)

// Values returns all known values for InvocationType. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (InvocationType) Values() []InvocationType {
	return []InvocationType{
		"ACTION_GROUP",
		"KNOWLEDGE_BASE",
		"FINISH",
	}
}

type PromptType string

// Enum values for PromptType
const (
	PromptTypePreProcessing                   PromptType = "PRE_PROCESSING"
	PromptTypeOrchestration                   PromptType = "ORCHESTRATION"
	PromptTypeKnowledgeBaseResponseGeneration PromptType = "KNOWLEDGE_BASE_RESPONSE_GENERATION"
	PromptTypePostProcessing                  PromptType = "POST_PROCESSING"
)

// Values returns all known values for PromptType. Note that this can be expanded
// in the future, and so it is only as up to date as the client. The ordering of
// this slice is not guaranteed to be stable across updates.
func (PromptType) Values() []PromptType {
	return []PromptType{
		"PRE_PROCESSING",
		"ORCHESTRATION",
		"KNOWLEDGE_BASE_RESPONSE_GENERATION",
		"POST_PROCESSING",
	}
}

type ResponseState string

// Enum values for ResponseState
const (
	ResponseStateFailure  ResponseState = "FAILURE"
	ResponseStateReprompt ResponseState = "REPROMPT"
)

// Values returns all known values for ResponseState. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (ResponseState) Values() []ResponseState {
	return []ResponseState{
		"FAILURE",
		"REPROMPT",
	}
}

type RetrievalResultLocationType string

// Enum values for RetrievalResultLocationType
const (
	RetrievalResultLocationTypeS3 RetrievalResultLocationType = "S3"
)

// Values returns all known values for RetrievalResultLocationType. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
// The ordering of this slice is not guaranteed to be stable across updates.
func (RetrievalResultLocationType) Values() []RetrievalResultLocationType {
	return []RetrievalResultLocationType{
		"S3",
	}
}

type RetrieveAndGenerateType string

// Enum values for RetrieveAndGenerateType
const (
	RetrieveAndGenerateTypeKnowledgeBase   RetrieveAndGenerateType = "KNOWLEDGE_BASE"
	RetrieveAndGenerateTypeExternalSources RetrieveAndGenerateType = "EXTERNAL_SOURCES"
)

// Values returns all known values for RetrieveAndGenerateType. Note that this can
// be expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (RetrieveAndGenerateType) Values() []RetrieveAndGenerateType {
	return []RetrieveAndGenerateType{
		"KNOWLEDGE_BASE",
		"EXTERNAL_SOURCES",
	}
}

type SearchType string

// Enum values for SearchType
const (
	SearchTypeHybrid   SearchType = "HYBRID"
	SearchTypeSemantic SearchType = "SEMANTIC"
)

// Values returns all known values for SearchType. Note that this can be expanded
// in the future, and so it is only as up to date as the client. The ordering of
// this slice is not guaranteed to be stable across updates.
func (SearchType) Values() []SearchType {
	return []SearchType{
		"HYBRID",
		"SEMANTIC",
	}
}

type Source string

// Enum values for Source
const (
	SourceActionGroup   Source = "ACTION_GROUP"
	SourceKnowledgeBase Source = "KNOWLEDGE_BASE"
	SourceParser        Source = "PARSER"
)

// Values returns all known values for Source. Note that this can be expanded in
// the future, and so it is only as up to date as the client. The ordering of this
// slice is not guaranteed to be stable across updates.
func (Source) Values() []Source {
	return []Source{
		"ACTION_GROUP",
		"KNOWLEDGE_BASE",
		"PARSER",
	}
}

type Type string

// Enum values for Type
const (
	TypeActionGroup   Type = "ACTION_GROUP"
	TypeKnowledgeBase Type = "KNOWLEDGE_BASE"
	TypeFinish        Type = "FINISH"
	TypeAskUser       Type = "ASK_USER"
	TypeReprompt      Type = "REPROMPT"
)

// Values returns all known values for Type. Note that this can be expanded in the
// future, and so it is only as up to date as the client. The ordering of this
// slice is not guaranteed to be stable across updates.
func (Type) Values() []Type {
	return []Type{
		"ACTION_GROUP",
		"KNOWLEDGE_BASE",
		"FINISH",
		"ASK_USER",
		"REPROMPT",
	}
}
