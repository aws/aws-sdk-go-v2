// Code generated by smithy-go-codegen DO NOT EDIT.

package types

import (
	"time"
)

// Used in the exception error that is thrown if you start an assessment run for an
// assessment target that includes an EC2 instance that is already participating in
// another started assessment run.
type AgentAlreadyRunningAssessment struct {
	// ID of the agent that is running on an EC2 instance that is already participating
	// in another started assessment run.
	AgentId *string
	// The ARN of the assessment run that has already been started.
	AssessmentRunArn *string
}

// Contains information about an Amazon Inspector agent. This data type is used as
// a request parameter in the ListAssessmentRunAgents () action.
type AgentFilter struct {
	// The detailed health state of the agent. Values can be set to IDLE, RUNNING,
	// SHUTDOWN, UNHEALTHY, THROTTLED, and UNKNOWN.
	AgentHealthCodes []AgentHealthCode
	// The current health state of the agent. Values can be set to HEALTHY or
	// UNHEALTHY.
	AgentHealths []AgentHealth
}

// Used as a response element in the PreviewAgents () action.
type AgentPreview struct {
	// The health status of the Amazon Inspector Agent.
	AgentHealth AgentHealth
	// The kernel version of the operating system running on the EC2 instance on which
	// the Amazon Inspector Agent is installed.
	KernelVersion *string
	// The operating system running on the EC2 instance on which the Amazon Inspector
	// Agent is installed.
	OperatingSystem *string
	// The Auto Scaling group for the EC2 instance where the agent is installed.
	AutoScalingGroup *string
	// The version of the Amazon Inspector Agent.
	AgentVersion *string
	// The IP address of the EC2 instance on which the Amazon Inspector Agent is
	// installed.
	Ipv4Address *string
	// The hostname of the EC2 instance on which the Amazon Inspector Agent is
	// installed.
	Hostname *string
	// The ID of the EC2 instance where the agent is installed.
	AgentId *string
}

// A snapshot of an Amazon Inspector assessment run that contains the findings of
// the assessment run . Used as the response element in the DescribeAssessmentRuns
// () action.
type AssessmentRun struct {
	// Provides a total count of generated findings per severity.
	FindingCounts map[string]*int32
	// The user-defined attributes that are assigned to every generated finding.
	UserAttributesForFindings []*Attribute
	// The rules packages selected for the assessment run.
	RulesPackageArns []*string
	// The ARN of the assessment template that is associated with the assessment run.
	AssessmentTemplateArn *string
	// A list of notifications for the event subscriptions. A notification about a
	// particular generated finding is added to this list only once.
	Notifications []*AssessmentRunNotification
	// The state of the assessment run.
	State AssessmentRunState
	// The assessment run completion time that corresponds to the rules packages
	// evaluation completion time or failure.
	CompletedAt *time.Time
	// The last time when the assessment run's state changed.
	StateChangedAt *time.Time
	// The auto-generated name for the assessment run.
	Name *string
	// The ARN of the assessment run.
	Arn *string
	// The time when StartAssessmentRun () was called.
	StartedAt *time.Time
	// A list of the assessment run state changes.
	StateChanges []*AssessmentRunStateChange
	// The duration of the assessment run.
	DurationInSeconds *int32
	// The time when StartAssessmentRun () was called.
	CreatedAt *time.Time
	// A Boolean value (true or false) that specifies whether the process of collecting
	// data from the agents is completed.
	DataCollected *bool
}

// Contains information about an Amazon Inspector agent. This data type is used as
// a response element in the ListAssessmentRunAgents () action.
type AssessmentRunAgent struct {
	// The ARN of the assessment run that is associated with the agent.
	AssessmentRunArn *string
	// The detailed health state of the agent.
	AgentHealthCode AgentHealthCode
	// The Auto Scaling group of the EC2 instance that is specified by the agent ID.
	AutoScalingGroup *string
	// The AWS account of the EC2 instance where the agent is installed.
	AgentId *string
	// The current health state of the agent.
	AgentHealth AgentHealth
	// The Amazon Inspector application data metrics that are collected by the agent.
	TelemetryMetadata []*TelemetryMetadata
	// The description for the agent health code.
	AgentHealthDetails *string
}

// Used as the request parameter in the ListAssessmentRuns () action.
type AssessmentRunFilter struct {
	// For a record to match a filter, an explicit value or a string containing a
	// wildcard that is specified for this data type property must match the value of
	// the assessmentRunName property of the AssessmentRun () data type.
	NamePattern *string
	// For a record to match a filter, one of the values specified for this data type
	// property must be the exact match of the value of the assessmentRunState property
	// of the AssessmentRun () data type.
	States []AssessmentRunState
	// For a record to match a filter, the value that is specified for this data type
	// property must inclusively match any value between the specified minimum and
	// maximum values of the startTime property of the AssessmentRun () data type.
	StartTimeRange *TimestampRange
	// For a record to match a filter, the value that is specified for this data type
	// property must inclusively match any value between the specified minimum and
	// maximum values of the durationInSeconds property of the AssessmentRun () data
	// type.
	DurationRange *DurationRange
	// For a record to match a filter, the value that is specified for this data type
	// property must be contained in the list of values of the rulesPackages property
	// of the AssessmentRun () data type.
	RulesPackageArns []*string
	// For a record to match a filter, the value that is specified for this data type
	// property must match the stateChangedAt property of the AssessmentRun () data
	// type.
	StateChangeTimeRange *TimestampRange
	// For a record to match a filter, the value that is specified for this data type
	// property must inclusively match any value between the specified minimum and
	// maximum values of the completedAt property of the AssessmentRun () data type.
	CompletionTimeRange *TimestampRange
}

// Used as one of the elements of the AssessmentRun () data type.
type AssessmentRunNotification struct {
	// The message included in the notification.
	Message *string
	// The date of the notification.
	Date *time.Time
	// The status code of the SNS notification.
	SnsPublishStatusCode AssessmentRunNotificationSnsStatusCode
	// The event for which a notification is sent.
	Event InspectorEvent
	// The SNS topic to which the SNS notification is sent.
	SnsTopicArn *string
	// The Boolean value that specifies whether the notification represents an error.
	Error *bool
}

// Used as one of the elements of the AssessmentRun () data type.
type AssessmentRunStateChange struct {
	// The assessment run state.
	State AssessmentRunState
	// The last time the assessment run state changed.
	StateChangedAt *time.Time
}

// Contains information about an Amazon Inspector application. This data type is
// used as the response element in the DescribeAssessmentTargets () action.
type AssessmentTarget struct {
	// The ARN that specifies the Amazon Inspector assessment target.
	Arn *string
	// The time at which UpdateAssessmentTarget () is called.
	UpdatedAt *time.Time
	// The ARN that specifies the resource group that is associated with the assessment
	// target.
	ResourceGroupArn *string
	// The name of the Amazon Inspector assessment target.
	Name *string
	// The time at which the assessment target is created.
	CreatedAt *time.Time
}

// Used as the request parameter in the ListAssessmentTargets () action.
type AssessmentTargetFilter struct {
	// For a record to match a filter, an explicit value or a string that contains a
	// wildcard that is specified for this data type property must match the value of
	// the assessmentTargetName property of the AssessmentTarget () data type.
	AssessmentTargetNamePattern *string
}

// Contains information about an Amazon Inspector assessment template. This data
// type is used as the response element in the DescribeAssessmentTemplates ()
// action.
type AssessmentTemplate struct {
	// The ARN of the assessment target that corresponds to this assessment template.
	AssessmentTargetArn *string
	// The duration in seconds specified for this assessment template. The default
	// value is 3600 seconds (one hour). The maximum value is 86400 seconds (one day).
	DurationInSeconds *int32
	// The Amazon Resource Name (ARN) of the most recent assessment run associated with
	// this assessment template. This value exists only when the value of
	// assessmentRunCount is greaterpa than zero.
	LastAssessmentRunArn *string
	// The time at which the assessment template is created.
	CreatedAt *time.Time
	// The number of existing assessment runs associated with this assessment template.
	// This value can be zero or a positive integer.
	AssessmentRunCount *int32
	// The rules packages that are specified for this assessment template.
	RulesPackageArns []*string
	// The user-defined attributes that are assigned to every generated finding from
	// the assessment run that uses this assessment template.
	UserAttributesForFindings []*Attribute
	// The ARN of the assessment template.
	Arn *string
	// The name of the assessment template.
	Name *string
}

// Used as the request parameter in the ListAssessmentTemplates () action.
type AssessmentTemplateFilter struct {
	// For a record to match a filter, an explicit value or a string that contains a
	// wildcard that is specified for this data type property must match the value of
	// the assessmentTemplateName property of the AssessmentTemplate () data type.
	NamePattern *string
	// For a record to match a filter, the values that are specified for this data type
	// property must be contained in the list of values of the rulesPackageArns
	// property of the AssessmentTemplate () data type.
	RulesPackageArns []*string
	// For a record to match a filter, the value specified for this data type property
	// must inclusively match any value between the specified minimum and maximum
	// values of the durationInSeconds property of the AssessmentTemplate () data type.
	DurationRange *DurationRange
}

// A collection of attributes of the host from which the finding is generated.
type AssetAttributes struct {
	// The ID of the Amazon Machine Image (AMI) that is installed on the EC2 instance
	// where the finding is generated.
	AmiId *string
	// The hostname of the EC2 instance where the finding is generated.
	Hostname *string
	// An array of the network interfaces interacting with the EC2 instance where the
	// finding is generated.
	NetworkInterfaces []*NetworkInterface
	// The ID of the agent that is installed on the EC2 instance where the finding is
	// generated.
	AgentId *string
	// The tags related to the EC2 instance where the finding is generated.
	Tags []*Tag
	// The Auto Scaling group of the EC2 instance where the finding is generated.
	AutoScalingGroup *string
	// The list of IP v4 addresses of the EC2 instance where the finding is generated.
	Ipv4Addresses []*string
	// The schema version of this data type.
	SchemaVersion *int32
}

// This data type is used as a request parameter in the AddAttributesToFindings ()
// and CreateAssessmentTemplate () actions.
type Attribute struct {
	// The attribute key.
	Key *string
	// The value assigned to the attribute key.
	Value *string
}

// This data type is used in the AssessmentTemplateFilter () data type.
type DurationRange struct {
	// The maximum value of the duration range. Must be less than or equal to 604800
	// seconds (1 week).
	MaxSeconds *int32
	// The minimum value of the duration range. Must be greater than zero.
	MinSeconds *int32
}

// This data type is used in the Subscription () data type.
type EventSubscription struct {
	// The time at which SubscribeToEvent () is called.
	SubscribedAt *time.Time
	// The event for which Amazon Simple Notification Service (SNS) notifications are
	// sent.
	Event InspectorEvent
}

// Contains information about what was excluded from an assessment run.
type Exclusion struct {
	// The description of the exclusion.
	Description *string
	// The AWS resources for which the exclusion pertains.
	Scopes []*Scope
	// The system-defined attributes for the exclusion.
	Attributes []*Attribute
	// The recommendation for the exclusion.
	Recommendation *string
	// The ARN that specifies the exclusion.
	Arn *string
	// The name of the exclusion.
	Title *string
}

// Contains information about what is excluded from an assessment run given the
// current state of the assessment template.
type ExclusionPreview struct {
	// The description of the exclusion preview.
	Description *string
	// The recommendation for the exclusion preview.
	Recommendation *string
	// The AWS resources for which the exclusion preview pertains.
	Scopes []*Scope
	// The system-defined attributes for the exclusion preview.
	Attributes []*Attribute
	// The name of the exclusion preview.
	Title *string
}

// Includes details about the failed items.
type FailedItemDetails struct {
	// Indicates whether you can immediately retry a request for this item for a
	// specified resource.
	Retryable *bool
	// The status code of a failed item.
	FailureCode FailedItemErrorCode
}

// Contains information about an Amazon Inspector finding. This data type is used
// as the response element in the DescribeFindings () action.
type Finding struct {
	// The finding severity. Values can be set to High, Medium, Low, and Informational.
	Severity Severity
	// The numeric value of the finding severity.
	NumericSeverity *float64
	// The name of the finding.
	Title *string
	// The ARN that specifies the finding.
	Arn *string
	// The type of the host from which the finding is generated.
	AssetType AssetType
	// The schema version of this data type.
	SchemaVersion *int32
	// The ID of the finding.
	Id *string
	// The time when AddAttributesToFindings () is called.
	UpdatedAt *time.Time
	// This data type is used in the Finding () data type.
	ServiceAttributes *InspectorServiceAttributes
	// The recommendation for the finding.
	Recommendation *string
	// The user-defined attributes that are assigned to the finding.
	UserAttributes []*Attribute
	// The system-defined attributes for the finding.
	Attributes []*Attribute
	// The time when the finding was generated.
	CreatedAt *time.Time
	// A collection of attributes of the host from which the finding is generated.
	AssetAttributes *AssetAttributes
	// The data element is set to "Inspector".
	Service *string
	// This data element is currently not used.
	IndicatorOfCompromise *bool
	// The description of the finding.
	Description *string
	// This data element is currently not used.
	Confidence *int32
}

// This data type is used as a request parameter in the ListFindings () action.
type FindingFilter struct {
	// For a record to match a filter, one of the values that is specified for this
	// data type property must be the exact match of the value of the rulesPackageArn
	// property of the Finding () data type.
	RulesPackageArns []*string
	// For a record to match a filter, one of the values that is specified for this
	// data type property must be the exact match of the value of the severity property
	// of the Finding () data type.
	Severities []Severity
	// For a record to match a filter, one of the values that is specified for this
	// data type property must be the exact match of the value of the ruleName property
	// of the Finding () data type.
	RuleNames []*string
	// For a record to match a filter, one of the values that is specified for this
	// data type property must be the exact match of the value of the autoScalingGroup
	// property of the Finding () data type.
	AutoScalingGroups []*string
	// For a record to match a filter, the list of values that are specified for this
	// data type property must be contained in the list of values of the attributes
	// property of the Finding () data type.
	Attributes []*Attribute
	// For a record to match a filter, one of the values that is specified for this
	// data type property must be the exact match of the value of the agentId property
	// of the Finding () data type.
	AgentIds []*string
	// For a record to match a filter, the value that is specified for this data type
	// property must be contained in the list of values of the userAttributes property
	// of the Finding () data type.
	UserAttributes []*Attribute
	// The time range during which the finding is generated.
	CreationTimeRange *TimestampRange
}

// This data type is used in the Finding () data type.
type InspectorServiceAttributes struct {
	// The ARN of the assessment run during which the finding is generated.
	AssessmentRunArn *string
	// The schema version of this data type.
	SchemaVersion *int32
	// The ARN of the rules package that is used to generate the finding.
	RulesPackageArn *string
}

// Contains information about the network interfaces interacting with an EC2
// instance. This data type is used as one of the elements of the AssetAttributes
// () data type.
type NetworkInterface struct {
	// The ID of the network interface.
	NetworkInterfaceId *string
	// The ID of a subnet associated with the network interface.
	SubnetId *string
	// A list of the private IP addresses associated with the network interface.
	// Includes the privateDnsName and privateIpAddress.
	PrivateIpAddresses []*PrivateIp
	// The ID of a VPC associated with the network interface.
	VpcId *string
	// The IP addresses associated with the network interface.
	Ipv6Addresses []*string
	// The public IP address from which the network interface is reachable.
	PublicIp *string
	// The name of a private DNS associated with the network interface.
	PrivateDnsName *string
	// The private IP address associated with the network interface.
	PrivateIpAddress *string
	// The name of a public DNS associated with the network interface.
	PublicDnsName *string
	// A list of the security groups associated with the network interface. Includes
	// the groupId and groupName.
	SecurityGroups []*SecurityGroup
}

// Contains information about a private IP address associated with a network
// interface. This data type is used as a response element in the DescribeFindings
// () action.
type PrivateIp struct {
	// The full IP address of the network inteface.
	PrivateIpAddress *string
	// The DNS name of the private IP address.
	PrivateDnsName *string
}

// Contains information about a resource group. The resource group defines a set of
// tags that, when queried, identify the AWS resources that make up the assessment
// target. This data type is used as the response element in the
// DescribeResourceGroups () action.
type ResourceGroup struct {
	// The tags (key and value pairs) of the resource group. This data type property is
	// used in the CreateResourceGroup () action.
	Tags []*ResourceGroupTag
	// The time at which resource group is created.
	CreatedAt *time.Time
	// The ARN of the resource group.
	Arn *string
}

// This data type is used as one of the elements of the ResourceGroup () data type.
type ResourceGroupTag struct {
	// A tag key.
	Key *string
	// The value assigned to a tag key.
	Value *string
}

// Contains information about an Amazon Inspector rules package. This data type is
// used as the response element in the DescribeRulesPackages () action.
type RulesPackage struct {
	// The name of the rules package.
	Name *string
	// The provider of the rules package.
	Provider *string
	// The version ID of the rules package.
	Version *string
	// The ARN of the rules package.
	Arn *string
	// The description of the rules package.
	Description *string
}

// This data type contains key-value pairs that identify various Amazon resources.
type Scope struct {
	// The resource identifier for the specified scope type.
	Value *string
	// The type of the scope.
	Key ScopeType
}

// Contains information about a security group associated with a network interface.
// This data type is used as one of the elements of the NetworkInterface () data
// type.
type SecurityGroup struct {
	// The name of the security group.
	GroupName *string
	// The ID of the security group.
	GroupId *string
}

// This data type is used as a response element in the ListEventSubscriptions ()
// action.
type Subscription struct {
	// The list of existing event subscriptions.
	EventSubscriptions []*EventSubscription
	// The ARN of the Amazon Simple Notification Service (SNS) topic to which the SNS
	// notifications are sent.
	TopicArn *string
	// The ARN of the assessment template that is used during the event for which the
	// SNS notification is sent.
	ResourceArn *string
}

// A key and value pair. This data type is used as a request parameter in the
// SetTagsForResource () action and a response element in the ListTagsForResource
// () action.
type Tag struct {
	// A value assigned to a tag key.
	Value *string
	// A tag key.
	Key *string
}

// The metadata about the Amazon Inspector application data metrics collected by
// the agent. This data type is used as the response element in the
// GetTelemetryMetadata () action.
type TelemetryMetadata struct {
	// The count of messages that the agent sends to the Amazon Inspector service.
	Count *int64
	// The data size of messages that the agent sends to the Amazon Inspector service.
	DataSize *int64
	// A specific type of behavioral data that is collected by the agent.
	MessageType *string
}

// This data type is used in the AssessmentRunFilter () data type.
type TimestampRange struct {
	// The maximum value of the timestamp range.
	EndDate *time.Time
	// The minimum value of the timestamp range.
	BeginDate *time.Time
}
