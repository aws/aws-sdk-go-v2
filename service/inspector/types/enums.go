// Code generated by smithy-go-codegen DO NOT EDIT.

package types

type AccessDeniedErrorCode string

// Enum values for AccessDeniedErrorCode
const (
	AccessDeniedErrorCodeAccess_denied_to_assessment_target   AccessDeniedErrorCode = "ACCESS_DENIED_TO_ASSESSMENT_TARGET"
	AccessDeniedErrorCodeAccess_denied_to_assessment_template AccessDeniedErrorCode = "ACCESS_DENIED_TO_ASSESSMENT_TEMPLATE"
	AccessDeniedErrorCodeAccess_denied_to_assessment_run      AccessDeniedErrorCode = "ACCESS_DENIED_TO_ASSESSMENT_RUN"
	AccessDeniedErrorCodeAccess_denied_to_finding             AccessDeniedErrorCode = "ACCESS_DENIED_TO_FINDING"
	AccessDeniedErrorCodeAccess_denied_to_resource_group      AccessDeniedErrorCode = "ACCESS_DENIED_TO_RESOURCE_GROUP"
	AccessDeniedErrorCodeAccess_denied_to_rules_package       AccessDeniedErrorCode = "ACCESS_DENIED_TO_RULES_PACKAGE"
	AccessDeniedErrorCodeAccess_denied_to_sns_topic           AccessDeniedErrorCode = "ACCESS_DENIED_TO_SNS_TOPIC"
	AccessDeniedErrorCodeAccess_denied_to_iam_role            AccessDeniedErrorCode = "ACCESS_DENIED_TO_IAM_ROLE"
)

// Values returns all known values for AccessDeniedErrorCode. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (AccessDeniedErrorCode) Values() []AccessDeniedErrorCode {
	return []AccessDeniedErrorCode{
		"ACCESS_DENIED_TO_ASSESSMENT_TARGET",
		"ACCESS_DENIED_TO_ASSESSMENT_TEMPLATE",
		"ACCESS_DENIED_TO_ASSESSMENT_RUN",
		"ACCESS_DENIED_TO_FINDING",
		"ACCESS_DENIED_TO_RESOURCE_GROUP",
		"ACCESS_DENIED_TO_RULES_PACKAGE",
		"ACCESS_DENIED_TO_SNS_TOPIC",
		"ACCESS_DENIED_TO_IAM_ROLE",
	}
}

type AgentHealth string

// Enum values for AgentHealth
const (
	AgentHealthHealthy   AgentHealth = "HEALTHY"
	AgentHealthUnhealthy AgentHealth = "UNHEALTHY"
	AgentHealthUnknown   AgentHealth = "UNKNOWN"
)

// Values returns all known values for AgentHealth. Note that this can be expanded
// in the future, and so it is only as up to date as the client. The ordering of
// this slice is not guaranteed to be stable across updates.
func (AgentHealth) Values() []AgentHealth {
	return []AgentHealth{
		"HEALTHY",
		"UNHEALTHY",
		"UNKNOWN",
	}
}

type AgentHealthCode string

// Enum values for AgentHealthCode
const (
	AgentHealthCodeIdle      AgentHealthCode = "IDLE"
	AgentHealthCodeRunning   AgentHealthCode = "RUNNING"
	AgentHealthCodeShutdown  AgentHealthCode = "SHUTDOWN"
	AgentHealthCodeUnhealthy AgentHealthCode = "UNHEALTHY"
	AgentHealthCodeThrottled AgentHealthCode = "THROTTLED"
	AgentHealthCodeUnknown   AgentHealthCode = "UNKNOWN"
)

// Values returns all known values for AgentHealthCode. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (AgentHealthCode) Values() []AgentHealthCode {
	return []AgentHealthCode{
		"IDLE",
		"RUNNING",
		"SHUTDOWN",
		"UNHEALTHY",
		"THROTTLED",
		"UNKNOWN",
	}
}

type AssessmentRunNotificationSnsStatusCode string

// Enum values for AssessmentRunNotificationSnsStatusCode
const (
	AssessmentRunNotificationSnsStatusCodeSuccess              AssessmentRunNotificationSnsStatusCode = "SUCCESS"
	AssessmentRunNotificationSnsStatusCodeTopic_does_not_exist AssessmentRunNotificationSnsStatusCode = "TOPIC_DOES_NOT_EXIST"
	AssessmentRunNotificationSnsStatusCodeAccess_denied        AssessmentRunNotificationSnsStatusCode = "ACCESS_DENIED"
	AssessmentRunNotificationSnsStatusCodeInternal_error       AssessmentRunNotificationSnsStatusCode = "INTERNAL_ERROR"
)

// Values returns all known values for AssessmentRunNotificationSnsStatusCode. Note
// that this can be expanded in the future, and so it is only as up to date as the
// client. The ordering of this slice is not guaranteed to be stable across
// updates.
func (AssessmentRunNotificationSnsStatusCode) Values() []AssessmentRunNotificationSnsStatusCode {
	return []AssessmentRunNotificationSnsStatusCode{
		"SUCCESS",
		"TOPIC_DOES_NOT_EXIST",
		"ACCESS_DENIED",
		"INTERNAL_ERROR",
	}
}

type AssessmentRunState string

// Enum values for AssessmentRunState
const (
	AssessmentRunStateCreated                           AssessmentRunState = "CREATED"
	AssessmentRunStateStart_data_collection_pending     AssessmentRunState = "START_DATA_COLLECTION_PENDING"
	AssessmentRunStateStart_data_collection_in_progress AssessmentRunState = "START_DATA_COLLECTION_IN_PROGRESS"
	AssessmentRunStateCollecting_data                   AssessmentRunState = "COLLECTING_DATA"
	AssessmentRunStateStop_data_collection_pending      AssessmentRunState = "STOP_DATA_COLLECTION_PENDING"
	AssessmentRunStateData_collected                    AssessmentRunState = "DATA_COLLECTED"
	AssessmentRunStateStart_evaluating_rules_pending    AssessmentRunState = "START_EVALUATING_RULES_PENDING"
	AssessmentRunStateEvaluating_rules                  AssessmentRunState = "EVALUATING_RULES"
	AssessmentRunStateFailed                            AssessmentRunState = "FAILED"
	AssessmentRunStateError                             AssessmentRunState = "ERROR"
	AssessmentRunStateCompleted                         AssessmentRunState = "COMPLETED"
	AssessmentRunStateCompleted_with_errors             AssessmentRunState = "COMPLETED_WITH_ERRORS"
	AssessmentRunStateCanceled                          AssessmentRunState = "CANCELED"
)

// Values returns all known values for AssessmentRunState. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (AssessmentRunState) Values() []AssessmentRunState {
	return []AssessmentRunState{
		"CREATED",
		"START_DATA_COLLECTION_PENDING",
		"START_DATA_COLLECTION_IN_PROGRESS",
		"COLLECTING_DATA",
		"STOP_DATA_COLLECTION_PENDING",
		"DATA_COLLECTED",
		"START_EVALUATING_RULES_PENDING",
		"EVALUATING_RULES",
		"FAILED",
		"ERROR",
		"COMPLETED",
		"COMPLETED_WITH_ERRORS",
		"CANCELED",
	}
}

type AssetType string

// Enum values for AssetType
const (
	AssetTypeEc2_instance AssetType = "ec2-instance"
)

// Values returns all known values for AssetType. Note that this can be expanded in
// the future, and so it is only as up to date as the client. The ordering of this
// slice is not guaranteed to be stable across updates.
func (AssetType) Values() []AssetType {
	return []AssetType{
		"ec2-instance",
	}
}

type FailedItemErrorCode string

// Enum values for FailedItemErrorCode
const (
	FailedItemErrorCodeInvalid_arn         FailedItemErrorCode = "INVALID_ARN"
	FailedItemErrorCodeDuplicate_arn       FailedItemErrorCode = "DUPLICATE_ARN"
	FailedItemErrorCodeItem_does_not_exist FailedItemErrorCode = "ITEM_DOES_NOT_EXIST"
	FailedItemErrorCodeAccess_denied       FailedItemErrorCode = "ACCESS_DENIED"
	FailedItemErrorCodeLimit_exceeded      FailedItemErrorCode = "LIMIT_EXCEEDED"
	FailedItemErrorCodeInternal_error      FailedItemErrorCode = "INTERNAL_ERROR"
)

// Values returns all known values for FailedItemErrorCode. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (FailedItemErrorCode) Values() []FailedItemErrorCode {
	return []FailedItemErrorCode{
		"INVALID_ARN",
		"DUPLICATE_ARN",
		"ITEM_DOES_NOT_EXIST",
		"ACCESS_DENIED",
		"LIMIT_EXCEEDED",
		"INTERNAL_ERROR",
	}
}

type InspectorEvent string

// Enum values for InspectorEvent
const (
	InspectorEventAssessment_run_started       InspectorEvent = "ASSESSMENT_RUN_STARTED"
	InspectorEventAssessment_run_completed     InspectorEvent = "ASSESSMENT_RUN_COMPLETED"
	InspectorEventAssessment_run_state_changed InspectorEvent = "ASSESSMENT_RUN_STATE_CHANGED"
	InspectorEventFinding_reported             InspectorEvent = "FINDING_REPORTED"
	InspectorEventOther                        InspectorEvent = "OTHER"
)

// Values returns all known values for InspectorEvent. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (InspectorEvent) Values() []InspectorEvent {
	return []InspectorEvent{
		"ASSESSMENT_RUN_STARTED",
		"ASSESSMENT_RUN_COMPLETED",
		"ASSESSMENT_RUN_STATE_CHANGED",
		"FINDING_REPORTED",
		"OTHER",
	}
}

type InvalidCrossAccountRoleErrorCode string

// Enum values for InvalidCrossAccountRoleErrorCode
const (
	InvalidCrossAccountRoleErrorCodeRole_does_not_exist_or_invalid_trust_relationship InvalidCrossAccountRoleErrorCode = "ROLE_DOES_NOT_EXIST_OR_INVALID_TRUST_RELATIONSHIP"
	InvalidCrossAccountRoleErrorCodeRole_does_not_have_correct_policy                 InvalidCrossAccountRoleErrorCode = "ROLE_DOES_NOT_HAVE_CORRECT_POLICY"
)

// Values returns all known values for InvalidCrossAccountRoleErrorCode. Note that
// this can be expanded in the future, and so it is only as up to date as the
// client. The ordering of this slice is not guaranteed to be stable across
// updates.
func (InvalidCrossAccountRoleErrorCode) Values() []InvalidCrossAccountRoleErrorCode {
	return []InvalidCrossAccountRoleErrorCode{
		"ROLE_DOES_NOT_EXIST_OR_INVALID_TRUST_RELATIONSHIP",
		"ROLE_DOES_NOT_HAVE_CORRECT_POLICY",
	}
}

type InvalidInputErrorCode string

// Enum values for InvalidInputErrorCode
const (
	InvalidInputErrorCodeInvalid_assessment_target_arn                  InvalidInputErrorCode = "INVALID_ASSESSMENT_TARGET_ARN"
	InvalidInputErrorCodeInvalid_assessment_template_arn                InvalidInputErrorCode = "INVALID_ASSESSMENT_TEMPLATE_ARN"
	InvalidInputErrorCodeInvalid_assessment_run_arn                     InvalidInputErrorCode = "INVALID_ASSESSMENT_RUN_ARN"
	InvalidInputErrorCodeInvalid_finding_arn                            InvalidInputErrorCode = "INVALID_FINDING_ARN"
	InvalidInputErrorCodeInvalid_resource_group_arn                     InvalidInputErrorCode = "INVALID_RESOURCE_GROUP_ARN"
	InvalidInputErrorCodeInvalid_rules_package_arn                      InvalidInputErrorCode = "INVALID_RULES_PACKAGE_ARN"
	InvalidInputErrorCodeInvalid_resource_arn                           InvalidInputErrorCode = "INVALID_RESOURCE_ARN"
	InvalidInputErrorCodeInvalid_sns_topic_arn                          InvalidInputErrorCode = "INVALID_SNS_TOPIC_ARN"
	InvalidInputErrorCodeInvalid_iam_role_arn                           InvalidInputErrorCode = "INVALID_IAM_ROLE_ARN"
	InvalidInputErrorCodeInvalid_assessment_target_name                 InvalidInputErrorCode = "INVALID_ASSESSMENT_TARGET_NAME"
	InvalidInputErrorCodeInvalid_assessment_target_name_pattern         InvalidInputErrorCode = "INVALID_ASSESSMENT_TARGET_NAME_PATTERN"
	InvalidInputErrorCodeInvalid_assessment_template_name               InvalidInputErrorCode = "INVALID_ASSESSMENT_TEMPLATE_NAME"
	InvalidInputErrorCodeInvalid_assessment_template_name_pattern       InvalidInputErrorCode = "INVALID_ASSESSMENT_TEMPLATE_NAME_PATTERN"
	InvalidInputErrorCodeInvalid_assessment_template_duration           InvalidInputErrorCode = "INVALID_ASSESSMENT_TEMPLATE_DURATION"
	InvalidInputErrorCodeInvalid_assessment_template_duration_range     InvalidInputErrorCode = "INVALID_ASSESSMENT_TEMPLATE_DURATION_RANGE"
	InvalidInputErrorCodeInvalid_assessment_run_duration_range          InvalidInputErrorCode = "INVALID_ASSESSMENT_RUN_DURATION_RANGE"
	InvalidInputErrorCodeInvalid_assessment_run_start_time_range        InvalidInputErrorCode = "INVALID_ASSESSMENT_RUN_START_TIME_RANGE"
	InvalidInputErrorCodeInvalid_assessment_run_completion_time_range   InvalidInputErrorCode = "INVALID_ASSESSMENT_RUN_COMPLETION_TIME_RANGE"
	InvalidInputErrorCodeInvalid_assessment_run_state_change_time_range InvalidInputErrorCode = "INVALID_ASSESSMENT_RUN_STATE_CHANGE_TIME_RANGE"
	InvalidInputErrorCodeInvalid_assessment_run_state                   InvalidInputErrorCode = "INVALID_ASSESSMENT_RUN_STATE"
	InvalidInputErrorCodeInvalid_tag                                    InvalidInputErrorCode = "INVALID_TAG"
	InvalidInputErrorCodeInvalid_tag_key                                InvalidInputErrorCode = "INVALID_TAG_KEY"
	InvalidInputErrorCodeInvalid_tag_value                              InvalidInputErrorCode = "INVALID_TAG_VALUE"
	InvalidInputErrorCodeInvalid_resource_group_tag_key                 InvalidInputErrorCode = "INVALID_RESOURCE_GROUP_TAG_KEY"
	InvalidInputErrorCodeInvalid_resource_group_tag_value               InvalidInputErrorCode = "INVALID_RESOURCE_GROUP_TAG_VALUE"
	InvalidInputErrorCodeInvalid_attribute                              InvalidInputErrorCode = "INVALID_ATTRIBUTE"
	InvalidInputErrorCodeInvalid_user_attribute                         InvalidInputErrorCode = "INVALID_USER_ATTRIBUTE"
	InvalidInputErrorCodeInvalid_user_attribute_key                     InvalidInputErrorCode = "INVALID_USER_ATTRIBUTE_KEY"
	InvalidInputErrorCodeInvalid_user_attribute_value                   InvalidInputErrorCode = "INVALID_USER_ATTRIBUTE_VALUE"
	InvalidInputErrorCodeInvalid_pagination_token                       InvalidInputErrorCode = "INVALID_PAGINATION_TOKEN"
	InvalidInputErrorCodeInvalid_max_results                            InvalidInputErrorCode = "INVALID_MAX_RESULTS"
	InvalidInputErrorCodeInvalid_agent_id                               InvalidInputErrorCode = "INVALID_AGENT_ID"
	InvalidInputErrorCodeInvalid_auto_scaling_group                     InvalidInputErrorCode = "INVALID_AUTO_SCALING_GROUP"
	InvalidInputErrorCodeInvalid_rule_name                              InvalidInputErrorCode = "INVALID_RULE_NAME"
	InvalidInputErrorCodeInvalid_severity                               InvalidInputErrorCode = "INVALID_SEVERITY"
	InvalidInputErrorCodeInvalid_locale                                 InvalidInputErrorCode = "INVALID_LOCALE"
	InvalidInputErrorCodeInvalid_event                                  InvalidInputErrorCode = "INVALID_EVENT"
	InvalidInputErrorCodeAssessment_target_name_already_taken           InvalidInputErrorCode = "ASSESSMENT_TARGET_NAME_ALREADY_TAKEN"
	InvalidInputErrorCodeAssessment_template_name_already_taken         InvalidInputErrorCode = "ASSESSMENT_TEMPLATE_NAME_ALREADY_TAKEN"
	InvalidInputErrorCodeInvalid_number_of_assessment_target_arns       InvalidInputErrorCode = "INVALID_NUMBER_OF_ASSESSMENT_TARGET_ARNS"
	InvalidInputErrorCodeInvalid_number_of_assessment_template_arns     InvalidInputErrorCode = "INVALID_NUMBER_OF_ASSESSMENT_TEMPLATE_ARNS"
	InvalidInputErrorCodeInvalid_number_of_assessment_run_arns          InvalidInputErrorCode = "INVALID_NUMBER_OF_ASSESSMENT_RUN_ARNS"
	InvalidInputErrorCodeInvalid_number_of_finding_arns                 InvalidInputErrorCode = "INVALID_NUMBER_OF_FINDING_ARNS"
	InvalidInputErrorCodeInvalid_number_of_resource_group_arns          InvalidInputErrorCode = "INVALID_NUMBER_OF_RESOURCE_GROUP_ARNS"
	InvalidInputErrorCodeInvalid_number_of_rules_package_arns           InvalidInputErrorCode = "INVALID_NUMBER_OF_RULES_PACKAGE_ARNS"
	InvalidInputErrorCodeInvalid_number_of_assessment_run_states        InvalidInputErrorCode = "INVALID_NUMBER_OF_ASSESSMENT_RUN_STATES"
	InvalidInputErrorCodeInvalid_number_of_tags                         InvalidInputErrorCode = "INVALID_NUMBER_OF_TAGS"
	InvalidInputErrorCodeInvalid_number_of_resource_group_tags          InvalidInputErrorCode = "INVALID_NUMBER_OF_RESOURCE_GROUP_TAGS"
	InvalidInputErrorCodeInvalid_number_of_attributes                   InvalidInputErrorCode = "INVALID_NUMBER_OF_ATTRIBUTES"
	InvalidInputErrorCodeInvalid_number_of_user_attributes              InvalidInputErrorCode = "INVALID_NUMBER_OF_USER_ATTRIBUTES"
	InvalidInputErrorCodeInvalid_number_of_agent_ids                    InvalidInputErrorCode = "INVALID_NUMBER_OF_AGENT_IDS"
	InvalidInputErrorCodeInvalid_number_of_auto_scaling_groups          InvalidInputErrorCode = "INVALID_NUMBER_OF_AUTO_SCALING_GROUPS"
	InvalidInputErrorCodeInvalid_number_of_rule_names                   InvalidInputErrorCode = "INVALID_NUMBER_OF_RULE_NAMES"
	InvalidInputErrorCodeInvalid_number_of_severities                   InvalidInputErrorCode = "INVALID_NUMBER_OF_SEVERITIES"
)

// Values returns all known values for InvalidInputErrorCode. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (InvalidInputErrorCode) Values() []InvalidInputErrorCode {
	return []InvalidInputErrorCode{
		"INVALID_ASSESSMENT_TARGET_ARN",
		"INVALID_ASSESSMENT_TEMPLATE_ARN",
		"INVALID_ASSESSMENT_RUN_ARN",
		"INVALID_FINDING_ARN",
		"INVALID_RESOURCE_GROUP_ARN",
		"INVALID_RULES_PACKAGE_ARN",
		"INVALID_RESOURCE_ARN",
		"INVALID_SNS_TOPIC_ARN",
		"INVALID_IAM_ROLE_ARN",
		"INVALID_ASSESSMENT_TARGET_NAME",
		"INVALID_ASSESSMENT_TARGET_NAME_PATTERN",
		"INVALID_ASSESSMENT_TEMPLATE_NAME",
		"INVALID_ASSESSMENT_TEMPLATE_NAME_PATTERN",
		"INVALID_ASSESSMENT_TEMPLATE_DURATION",
		"INVALID_ASSESSMENT_TEMPLATE_DURATION_RANGE",
		"INVALID_ASSESSMENT_RUN_DURATION_RANGE",
		"INVALID_ASSESSMENT_RUN_START_TIME_RANGE",
		"INVALID_ASSESSMENT_RUN_COMPLETION_TIME_RANGE",
		"INVALID_ASSESSMENT_RUN_STATE_CHANGE_TIME_RANGE",
		"INVALID_ASSESSMENT_RUN_STATE",
		"INVALID_TAG",
		"INVALID_TAG_KEY",
		"INVALID_TAG_VALUE",
		"INVALID_RESOURCE_GROUP_TAG_KEY",
		"INVALID_RESOURCE_GROUP_TAG_VALUE",
		"INVALID_ATTRIBUTE",
		"INVALID_USER_ATTRIBUTE",
		"INVALID_USER_ATTRIBUTE_KEY",
		"INVALID_USER_ATTRIBUTE_VALUE",
		"INVALID_PAGINATION_TOKEN",
		"INVALID_MAX_RESULTS",
		"INVALID_AGENT_ID",
		"INVALID_AUTO_SCALING_GROUP",
		"INVALID_RULE_NAME",
		"INVALID_SEVERITY",
		"INVALID_LOCALE",
		"INVALID_EVENT",
		"ASSESSMENT_TARGET_NAME_ALREADY_TAKEN",
		"ASSESSMENT_TEMPLATE_NAME_ALREADY_TAKEN",
		"INVALID_NUMBER_OF_ASSESSMENT_TARGET_ARNS",
		"INVALID_NUMBER_OF_ASSESSMENT_TEMPLATE_ARNS",
		"INVALID_NUMBER_OF_ASSESSMENT_RUN_ARNS",
		"INVALID_NUMBER_OF_FINDING_ARNS",
		"INVALID_NUMBER_OF_RESOURCE_GROUP_ARNS",
		"INVALID_NUMBER_OF_RULES_PACKAGE_ARNS",
		"INVALID_NUMBER_OF_ASSESSMENT_RUN_STATES",
		"INVALID_NUMBER_OF_TAGS",
		"INVALID_NUMBER_OF_RESOURCE_GROUP_TAGS",
		"INVALID_NUMBER_OF_ATTRIBUTES",
		"INVALID_NUMBER_OF_USER_ATTRIBUTES",
		"INVALID_NUMBER_OF_AGENT_IDS",
		"INVALID_NUMBER_OF_AUTO_SCALING_GROUPS",
		"INVALID_NUMBER_OF_RULE_NAMES",
		"INVALID_NUMBER_OF_SEVERITIES",
	}
}

type LimitExceededErrorCode string

// Enum values for LimitExceededErrorCode
const (
	LimitExceededErrorCodeAssessment_target_limit_exceeded   LimitExceededErrorCode = "ASSESSMENT_TARGET_LIMIT_EXCEEDED"
	LimitExceededErrorCodeAssessment_template_limit_exceeded LimitExceededErrorCode = "ASSESSMENT_TEMPLATE_LIMIT_EXCEEDED"
	LimitExceededErrorCodeAssessment_run_limit_exceeded      LimitExceededErrorCode = "ASSESSMENT_RUN_LIMIT_EXCEEDED"
	LimitExceededErrorCodeResource_group_limit_exceeded      LimitExceededErrorCode = "RESOURCE_GROUP_LIMIT_EXCEEDED"
	LimitExceededErrorCodeEvent_subscription_limit_exceeded  LimitExceededErrorCode = "EVENT_SUBSCRIPTION_LIMIT_EXCEEDED"
)

// Values returns all known values for LimitExceededErrorCode. Note that this can
// be expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (LimitExceededErrorCode) Values() []LimitExceededErrorCode {
	return []LimitExceededErrorCode{
		"ASSESSMENT_TARGET_LIMIT_EXCEEDED",
		"ASSESSMENT_TEMPLATE_LIMIT_EXCEEDED",
		"ASSESSMENT_RUN_LIMIT_EXCEEDED",
		"RESOURCE_GROUP_LIMIT_EXCEEDED",
		"EVENT_SUBSCRIPTION_LIMIT_EXCEEDED",
	}
}

type Locale string

// Enum values for Locale
const (
	LocaleEn_us Locale = "EN_US"
)

// Values returns all known values for Locale. Note that this can be expanded in
// the future, and so it is only as up to date as the client. The ordering of this
// slice is not guaranteed to be stable across updates.
func (Locale) Values() []Locale {
	return []Locale{
		"EN_US",
	}
}

type NoSuchEntityErrorCode string

// Enum values for NoSuchEntityErrorCode
const (
	NoSuchEntityErrorCodeAssessment_target_does_not_exist   NoSuchEntityErrorCode = "ASSESSMENT_TARGET_DOES_NOT_EXIST"
	NoSuchEntityErrorCodeAssessment_template_does_not_exist NoSuchEntityErrorCode = "ASSESSMENT_TEMPLATE_DOES_NOT_EXIST"
	NoSuchEntityErrorCodeAssessment_run_does_not_exist      NoSuchEntityErrorCode = "ASSESSMENT_RUN_DOES_NOT_EXIST"
	NoSuchEntityErrorCodeFinding_does_not_exist             NoSuchEntityErrorCode = "FINDING_DOES_NOT_EXIST"
	NoSuchEntityErrorCodeResource_group_does_not_exist      NoSuchEntityErrorCode = "RESOURCE_GROUP_DOES_NOT_EXIST"
	NoSuchEntityErrorCodeRules_package_does_not_exist       NoSuchEntityErrorCode = "RULES_PACKAGE_DOES_NOT_EXIST"
	NoSuchEntityErrorCodeSns_topic_does_not_exist           NoSuchEntityErrorCode = "SNS_TOPIC_DOES_NOT_EXIST"
	NoSuchEntityErrorCodeIam_role_does_not_exist            NoSuchEntityErrorCode = "IAM_ROLE_DOES_NOT_EXIST"
)

// Values returns all known values for NoSuchEntityErrorCode. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (NoSuchEntityErrorCode) Values() []NoSuchEntityErrorCode {
	return []NoSuchEntityErrorCode{
		"ASSESSMENT_TARGET_DOES_NOT_EXIST",
		"ASSESSMENT_TEMPLATE_DOES_NOT_EXIST",
		"ASSESSMENT_RUN_DOES_NOT_EXIST",
		"FINDING_DOES_NOT_EXIST",
		"RESOURCE_GROUP_DOES_NOT_EXIST",
		"RULES_PACKAGE_DOES_NOT_EXIST",
		"SNS_TOPIC_DOES_NOT_EXIST",
		"IAM_ROLE_DOES_NOT_EXIST",
	}
}

type PreviewStatus string

// Enum values for PreviewStatus
const (
	PreviewStatusWork_in_progress PreviewStatus = "WORK_IN_PROGRESS"
	PreviewStatusCompleted        PreviewStatus = "COMPLETED"
)

// Values returns all known values for PreviewStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (PreviewStatus) Values() []PreviewStatus {
	return []PreviewStatus{
		"WORK_IN_PROGRESS",
		"COMPLETED",
	}
}

type ReportFileFormat string

// Enum values for ReportFileFormat
const (
	ReportFileFormatHtml ReportFileFormat = "HTML"
	ReportFileFormatPdf  ReportFileFormat = "PDF"
)

// Values returns all known values for ReportFileFormat. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (ReportFileFormat) Values() []ReportFileFormat {
	return []ReportFileFormat{
		"HTML",
		"PDF",
	}
}

type ReportStatus string

// Enum values for ReportStatus
const (
	ReportStatusWork_in_progress ReportStatus = "WORK_IN_PROGRESS"
	ReportStatusFailed           ReportStatus = "FAILED"
	ReportStatusCompleted        ReportStatus = "COMPLETED"
)

// Values returns all known values for ReportStatus. Note that this can be expanded
// in the future, and so it is only as up to date as the client. The ordering of
// this slice is not guaranteed to be stable across updates.
func (ReportStatus) Values() []ReportStatus {
	return []ReportStatus{
		"WORK_IN_PROGRESS",
		"FAILED",
		"COMPLETED",
	}
}

type ReportType string

// Enum values for ReportType
const (
	ReportTypeFinding ReportType = "FINDING"
	ReportTypeFull    ReportType = "FULL"
)

// Values returns all known values for ReportType. Note that this can be expanded
// in the future, and so it is only as up to date as the client. The ordering of
// this slice is not guaranteed to be stable across updates.
func (ReportType) Values() []ReportType {
	return []ReportType{
		"FINDING",
		"FULL",
	}
}

type ScopeType string

// Enum values for ScopeType
const (
	ScopeTypeInstance_id       ScopeType = "INSTANCE_ID"
	ScopeTypeRules_package_arn ScopeType = "RULES_PACKAGE_ARN"
)

// Values returns all known values for ScopeType. Note that this can be expanded in
// the future, and so it is only as up to date as the client. The ordering of this
// slice is not guaranteed to be stable across updates.
func (ScopeType) Values() []ScopeType {
	return []ScopeType{
		"INSTANCE_ID",
		"RULES_PACKAGE_ARN",
	}
}

type Severity string

// Enum values for Severity
const (
	SeverityLow           Severity = "Low"
	SeverityMedium        Severity = "Medium"
	SeverityHigh          Severity = "High"
	SeverityInformational Severity = "Informational"
	SeverityUndefined     Severity = "Undefined"
)

// Values returns all known values for Severity. Note that this can be expanded in
// the future, and so it is only as up to date as the client. The ordering of this
// slice is not guaranteed to be stable across updates.
func (Severity) Values() []Severity {
	return []Severity{
		"Low",
		"Medium",
		"High",
		"Informational",
		"Undefined",
	}
}

type StopAction string

// Enum values for StopAction
const (
	StopActionStart_evaluation StopAction = "START_EVALUATION"
	StopActionSkip_evaluation  StopAction = "SKIP_EVALUATION"
)

// Values returns all known values for StopAction. Note that this can be expanded
// in the future, and so it is only as up to date as the client. The ordering of
// this slice is not guaranteed to be stable across updates.
func (StopAction) Values() []StopAction {
	return []StopAction{
		"START_EVALUATION",
		"SKIP_EVALUATION",
	}
}
