// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package inspector

import (
	"fmt"
	"time"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/internal/awsutil"
	"github.com/aws/aws-sdk-go-v2/private/protocol"
	"github.com/aws/aws-sdk-go-v2/private/protocol/jsonrpc"
)

const opAddAttributesToFindings = "AddAttributesToFindings"

// AddAttributesToFindingsRequest is a API request type for the AddAttributesToFindings API operation.
type AddAttributesToFindingsRequest struct {
	*aws.Request
	Input *AddAttributesToFindingsInput
	Copy  func(*AddAttributesToFindingsInput) AddAttributesToFindingsRequest
}

// Send marshals and sends the AddAttributesToFindings API request.
func (r AddAttributesToFindingsRequest) Send() (*AddAttributesToFindingsOutput, error) {
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	return r.Request.Data.(*AddAttributesToFindingsOutput), nil
}

// AddAttributesToFindingsRequest returns a request value for making API operation for
// Amazon Inspector.
//
// Assigns attributes (key and value pairs) to the findings that are specified
// by the ARNs of the findings.
//
//    // Example sending a request using the AddAttributesToFindingsRequest method.
//    req := client.AddAttributesToFindingsRequest(params)
//    resp, err := req.Send()
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/inspector-2016-02-16/AddAttributesToFindings
func (c *Inspector) AddAttributesToFindingsRequest(input *AddAttributesToFindingsInput) AddAttributesToFindingsRequest {
	op := &aws.Operation{
		Name:       opAddAttributesToFindings,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &AddAttributesToFindingsInput{}
	}

	output := &AddAttributesToFindingsOutput{}
	req := c.newRequest(op, input, output)
	output.responseMetadata = aws.Response{Request: req}

	return AddAttributesToFindingsRequest{Request: req, Input: input, Copy: c.AddAttributesToFindingsRequest}
}

const opCreateAssessmentTarget = "CreateAssessmentTarget"

// CreateAssessmentTargetRequest is a API request type for the CreateAssessmentTarget API operation.
type CreateAssessmentTargetRequest struct {
	*aws.Request
	Input *CreateAssessmentTargetInput
	Copy  func(*CreateAssessmentTargetInput) CreateAssessmentTargetRequest
}

// Send marshals and sends the CreateAssessmentTarget API request.
func (r CreateAssessmentTargetRequest) Send() (*CreateAssessmentTargetOutput, error) {
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	return r.Request.Data.(*CreateAssessmentTargetOutput), nil
}

// CreateAssessmentTargetRequest returns a request value for making API operation for
// Amazon Inspector.
//
// Creates a new assessment target using the ARN of the resource group that
// is generated by CreateResourceGroup. If the service-linked role (https://docs.aws.amazon.com/inspector/latest/userguide/inspector_slr.html)
// isn’t already registered, also creates and registers a service-linked role
// to grant Amazon Inspector access to AWS Services needed to perform security
// assessments. You can create up to 50 assessment targets per AWS account.
// You can run up to 500 concurrent agents per AWS account. For more information,
// see  Amazon Inspector Assessment Targets (http://docs.aws.amazon.com/inspector/latest/userguide/inspector_applications.html).
//
//    // Example sending a request using the CreateAssessmentTargetRequest method.
//    req := client.CreateAssessmentTargetRequest(params)
//    resp, err := req.Send()
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/inspector-2016-02-16/CreateAssessmentTarget
func (c *Inspector) CreateAssessmentTargetRequest(input *CreateAssessmentTargetInput) CreateAssessmentTargetRequest {
	op := &aws.Operation{
		Name:       opCreateAssessmentTarget,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &CreateAssessmentTargetInput{}
	}

	output := &CreateAssessmentTargetOutput{}
	req := c.newRequest(op, input, output)
	output.responseMetadata = aws.Response{Request: req}

	return CreateAssessmentTargetRequest{Request: req, Input: input, Copy: c.CreateAssessmentTargetRequest}
}

const opCreateAssessmentTemplate = "CreateAssessmentTemplate"

// CreateAssessmentTemplateRequest is a API request type for the CreateAssessmentTemplate API operation.
type CreateAssessmentTemplateRequest struct {
	*aws.Request
	Input *CreateAssessmentTemplateInput
	Copy  func(*CreateAssessmentTemplateInput) CreateAssessmentTemplateRequest
}

// Send marshals and sends the CreateAssessmentTemplate API request.
func (r CreateAssessmentTemplateRequest) Send() (*CreateAssessmentTemplateOutput, error) {
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	return r.Request.Data.(*CreateAssessmentTemplateOutput), nil
}

// CreateAssessmentTemplateRequest returns a request value for making API operation for
// Amazon Inspector.
//
// Creates an assessment template for the assessment target that is specified
// by the ARN of the assessment target. If the service-linked role (https://docs.aws.amazon.com/inspector/latest/userguide/inspector_slr.html)
// isn’t already registered, also creates and registers a service-linked role
// to grant Amazon Inspector access to AWS Services needed to perform security
// assessments.
//
//    // Example sending a request using the CreateAssessmentTemplateRequest method.
//    req := client.CreateAssessmentTemplateRequest(params)
//    resp, err := req.Send()
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/inspector-2016-02-16/CreateAssessmentTemplate
func (c *Inspector) CreateAssessmentTemplateRequest(input *CreateAssessmentTemplateInput) CreateAssessmentTemplateRequest {
	op := &aws.Operation{
		Name:       opCreateAssessmentTemplate,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &CreateAssessmentTemplateInput{}
	}

	output := &CreateAssessmentTemplateOutput{}
	req := c.newRequest(op, input, output)
	output.responseMetadata = aws.Response{Request: req}

	return CreateAssessmentTemplateRequest{Request: req, Input: input, Copy: c.CreateAssessmentTemplateRequest}
}

const opCreateResourceGroup = "CreateResourceGroup"

// CreateResourceGroupRequest is a API request type for the CreateResourceGroup API operation.
type CreateResourceGroupRequest struct {
	*aws.Request
	Input *CreateResourceGroupInput
	Copy  func(*CreateResourceGroupInput) CreateResourceGroupRequest
}

// Send marshals and sends the CreateResourceGroup API request.
func (r CreateResourceGroupRequest) Send() (*CreateResourceGroupOutput, error) {
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	return r.Request.Data.(*CreateResourceGroupOutput), nil
}

// CreateResourceGroupRequest returns a request value for making API operation for
// Amazon Inspector.
//
// Creates a resource group using the specified set of tags (key and value pairs)
// that are used to select the EC2 instances to be included in an Amazon Inspector
// assessment target. The created resource group is then used to create an Amazon
// Inspector assessment target. For more information, see CreateAssessmentTarget.
//
//    // Example sending a request using the CreateResourceGroupRequest method.
//    req := client.CreateResourceGroupRequest(params)
//    resp, err := req.Send()
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/inspector-2016-02-16/CreateResourceGroup
func (c *Inspector) CreateResourceGroupRequest(input *CreateResourceGroupInput) CreateResourceGroupRequest {
	op := &aws.Operation{
		Name:       opCreateResourceGroup,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &CreateResourceGroupInput{}
	}

	output := &CreateResourceGroupOutput{}
	req := c.newRequest(op, input, output)
	output.responseMetadata = aws.Response{Request: req}

	return CreateResourceGroupRequest{Request: req, Input: input, Copy: c.CreateResourceGroupRequest}
}

const opDeleteAssessmentRun = "DeleteAssessmentRun"

// DeleteAssessmentRunRequest is a API request type for the DeleteAssessmentRun API operation.
type DeleteAssessmentRunRequest struct {
	*aws.Request
	Input *DeleteAssessmentRunInput
	Copy  func(*DeleteAssessmentRunInput) DeleteAssessmentRunRequest
}

// Send marshals and sends the DeleteAssessmentRun API request.
func (r DeleteAssessmentRunRequest) Send() (*DeleteAssessmentRunOutput, error) {
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	return r.Request.Data.(*DeleteAssessmentRunOutput), nil
}

// DeleteAssessmentRunRequest returns a request value for making API operation for
// Amazon Inspector.
//
// Deletes the assessment run that is specified by the ARN of the assessment
// run.
//
//    // Example sending a request using the DeleteAssessmentRunRequest method.
//    req := client.DeleteAssessmentRunRequest(params)
//    resp, err := req.Send()
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/inspector-2016-02-16/DeleteAssessmentRun
func (c *Inspector) DeleteAssessmentRunRequest(input *DeleteAssessmentRunInput) DeleteAssessmentRunRequest {
	op := &aws.Operation{
		Name:       opDeleteAssessmentRun,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DeleteAssessmentRunInput{}
	}

	output := &DeleteAssessmentRunOutput{}
	req := c.newRequest(op, input, output)
	req.Handlers.Unmarshal.Remove(jsonrpc.UnmarshalHandler)
	req.Handlers.Unmarshal.PushBackNamed(protocol.UnmarshalDiscardBodyHandler)
	output.responseMetadata = aws.Response{Request: req}

	return DeleteAssessmentRunRequest{Request: req, Input: input, Copy: c.DeleteAssessmentRunRequest}
}

const opDeleteAssessmentTarget = "DeleteAssessmentTarget"

// DeleteAssessmentTargetRequest is a API request type for the DeleteAssessmentTarget API operation.
type DeleteAssessmentTargetRequest struct {
	*aws.Request
	Input *DeleteAssessmentTargetInput
	Copy  func(*DeleteAssessmentTargetInput) DeleteAssessmentTargetRequest
}

// Send marshals and sends the DeleteAssessmentTarget API request.
func (r DeleteAssessmentTargetRequest) Send() (*DeleteAssessmentTargetOutput, error) {
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	return r.Request.Data.(*DeleteAssessmentTargetOutput), nil
}

// DeleteAssessmentTargetRequest returns a request value for making API operation for
// Amazon Inspector.
//
// Deletes the assessment target that is specified by the ARN of the assessment
// target.
//
//    // Example sending a request using the DeleteAssessmentTargetRequest method.
//    req := client.DeleteAssessmentTargetRequest(params)
//    resp, err := req.Send()
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/inspector-2016-02-16/DeleteAssessmentTarget
func (c *Inspector) DeleteAssessmentTargetRequest(input *DeleteAssessmentTargetInput) DeleteAssessmentTargetRequest {
	op := &aws.Operation{
		Name:       opDeleteAssessmentTarget,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DeleteAssessmentTargetInput{}
	}

	output := &DeleteAssessmentTargetOutput{}
	req := c.newRequest(op, input, output)
	req.Handlers.Unmarshal.Remove(jsonrpc.UnmarshalHandler)
	req.Handlers.Unmarshal.PushBackNamed(protocol.UnmarshalDiscardBodyHandler)
	output.responseMetadata = aws.Response{Request: req}

	return DeleteAssessmentTargetRequest{Request: req, Input: input, Copy: c.DeleteAssessmentTargetRequest}
}

const opDeleteAssessmentTemplate = "DeleteAssessmentTemplate"

// DeleteAssessmentTemplateRequest is a API request type for the DeleteAssessmentTemplate API operation.
type DeleteAssessmentTemplateRequest struct {
	*aws.Request
	Input *DeleteAssessmentTemplateInput
	Copy  func(*DeleteAssessmentTemplateInput) DeleteAssessmentTemplateRequest
}

// Send marshals and sends the DeleteAssessmentTemplate API request.
func (r DeleteAssessmentTemplateRequest) Send() (*DeleteAssessmentTemplateOutput, error) {
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	return r.Request.Data.(*DeleteAssessmentTemplateOutput), nil
}

// DeleteAssessmentTemplateRequest returns a request value for making API operation for
// Amazon Inspector.
//
// Deletes the assessment template that is specified by the ARN of the assessment
// template.
//
//    // Example sending a request using the DeleteAssessmentTemplateRequest method.
//    req := client.DeleteAssessmentTemplateRequest(params)
//    resp, err := req.Send()
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/inspector-2016-02-16/DeleteAssessmentTemplate
func (c *Inspector) DeleteAssessmentTemplateRequest(input *DeleteAssessmentTemplateInput) DeleteAssessmentTemplateRequest {
	op := &aws.Operation{
		Name:       opDeleteAssessmentTemplate,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DeleteAssessmentTemplateInput{}
	}

	output := &DeleteAssessmentTemplateOutput{}
	req := c.newRequest(op, input, output)
	req.Handlers.Unmarshal.Remove(jsonrpc.UnmarshalHandler)
	req.Handlers.Unmarshal.PushBackNamed(protocol.UnmarshalDiscardBodyHandler)
	output.responseMetadata = aws.Response{Request: req}

	return DeleteAssessmentTemplateRequest{Request: req, Input: input, Copy: c.DeleteAssessmentTemplateRequest}
}

const opDescribeAssessmentRuns = "DescribeAssessmentRuns"

// DescribeAssessmentRunsRequest is a API request type for the DescribeAssessmentRuns API operation.
type DescribeAssessmentRunsRequest struct {
	*aws.Request
	Input *DescribeAssessmentRunsInput
	Copy  func(*DescribeAssessmentRunsInput) DescribeAssessmentRunsRequest
}

// Send marshals and sends the DescribeAssessmentRuns API request.
func (r DescribeAssessmentRunsRequest) Send() (*DescribeAssessmentRunsOutput, error) {
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	return r.Request.Data.(*DescribeAssessmentRunsOutput), nil
}

// DescribeAssessmentRunsRequest returns a request value for making API operation for
// Amazon Inspector.
//
// Describes the assessment runs that are specified by the ARNs of the assessment
// runs.
//
//    // Example sending a request using the DescribeAssessmentRunsRequest method.
//    req := client.DescribeAssessmentRunsRequest(params)
//    resp, err := req.Send()
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/inspector-2016-02-16/DescribeAssessmentRuns
func (c *Inspector) DescribeAssessmentRunsRequest(input *DescribeAssessmentRunsInput) DescribeAssessmentRunsRequest {
	op := &aws.Operation{
		Name:       opDescribeAssessmentRuns,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DescribeAssessmentRunsInput{}
	}

	output := &DescribeAssessmentRunsOutput{}
	req := c.newRequest(op, input, output)
	output.responseMetadata = aws.Response{Request: req}

	return DescribeAssessmentRunsRequest{Request: req, Input: input, Copy: c.DescribeAssessmentRunsRequest}
}

const opDescribeAssessmentTargets = "DescribeAssessmentTargets"

// DescribeAssessmentTargetsRequest is a API request type for the DescribeAssessmentTargets API operation.
type DescribeAssessmentTargetsRequest struct {
	*aws.Request
	Input *DescribeAssessmentTargetsInput
	Copy  func(*DescribeAssessmentTargetsInput) DescribeAssessmentTargetsRequest
}

// Send marshals and sends the DescribeAssessmentTargets API request.
func (r DescribeAssessmentTargetsRequest) Send() (*DescribeAssessmentTargetsOutput, error) {
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	return r.Request.Data.(*DescribeAssessmentTargetsOutput), nil
}

// DescribeAssessmentTargetsRequest returns a request value for making API operation for
// Amazon Inspector.
//
// Describes the assessment targets that are specified by the ARNs of the assessment
// targets.
//
//    // Example sending a request using the DescribeAssessmentTargetsRequest method.
//    req := client.DescribeAssessmentTargetsRequest(params)
//    resp, err := req.Send()
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/inspector-2016-02-16/DescribeAssessmentTargets
func (c *Inspector) DescribeAssessmentTargetsRequest(input *DescribeAssessmentTargetsInput) DescribeAssessmentTargetsRequest {
	op := &aws.Operation{
		Name:       opDescribeAssessmentTargets,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DescribeAssessmentTargetsInput{}
	}

	output := &DescribeAssessmentTargetsOutput{}
	req := c.newRequest(op, input, output)
	output.responseMetadata = aws.Response{Request: req}

	return DescribeAssessmentTargetsRequest{Request: req, Input: input, Copy: c.DescribeAssessmentTargetsRequest}
}

const opDescribeAssessmentTemplates = "DescribeAssessmentTemplates"

// DescribeAssessmentTemplatesRequest is a API request type for the DescribeAssessmentTemplates API operation.
type DescribeAssessmentTemplatesRequest struct {
	*aws.Request
	Input *DescribeAssessmentTemplatesInput
	Copy  func(*DescribeAssessmentTemplatesInput) DescribeAssessmentTemplatesRequest
}

// Send marshals and sends the DescribeAssessmentTemplates API request.
func (r DescribeAssessmentTemplatesRequest) Send() (*DescribeAssessmentTemplatesOutput, error) {
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	return r.Request.Data.(*DescribeAssessmentTemplatesOutput), nil
}

// DescribeAssessmentTemplatesRequest returns a request value for making API operation for
// Amazon Inspector.
//
// Describes the assessment templates that are specified by the ARNs of the
// assessment templates.
//
//    // Example sending a request using the DescribeAssessmentTemplatesRequest method.
//    req := client.DescribeAssessmentTemplatesRequest(params)
//    resp, err := req.Send()
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/inspector-2016-02-16/DescribeAssessmentTemplates
func (c *Inspector) DescribeAssessmentTemplatesRequest(input *DescribeAssessmentTemplatesInput) DescribeAssessmentTemplatesRequest {
	op := &aws.Operation{
		Name:       opDescribeAssessmentTemplates,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DescribeAssessmentTemplatesInput{}
	}

	output := &DescribeAssessmentTemplatesOutput{}
	req := c.newRequest(op, input, output)
	output.responseMetadata = aws.Response{Request: req}

	return DescribeAssessmentTemplatesRequest{Request: req, Input: input, Copy: c.DescribeAssessmentTemplatesRequest}
}

const opDescribeCrossAccountAccessRole = "DescribeCrossAccountAccessRole"

// DescribeCrossAccountAccessRoleRequest is a API request type for the DescribeCrossAccountAccessRole API operation.
type DescribeCrossAccountAccessRoleRequest struct {
	*aws.Request
	Input *DescribeCrossAccountAccessRoleInput
	Copy  func(*DescribeCrossAccountAccessRoleInput) DescribeCrossAccountAccessRoleRequest
}

// Send marshals and sends the DescribeCrossAccountAccessRole API request.
func (r DescribeCrossAccountAccessRoleRequest) Send() (*DescribeCrossAccountAccessRoleOutput, error) {
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	return r.Request.Data.(*DescribeCrossAccountAccessRoleOutput), nil
}

// DescribeCrossAccountAccessRoleRequest returns a request value for making API operation for
// Amazon Inspector.
//
// Describes the IAM role that enables Amazon Inspector to access your AWS account.
//
//    // Example sending a request using the DescribeCrossAccountAccessRoleRequest method.
//    req := client.DescribeCrossAccountAccessRoleRequest(params)
//    resp, err := req.Send()
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/inspector-2016-02-16/DescribeCrossAccountAccessRole
func (c *Inspector) DescribeCrossAccountAccessRoleRequest(input *DescribeCrossAccountAccessRoleInput) DescribeCrossAccountAccessRoleRequest {
	op := &aws.Operation{
		Name:       opDescribeCrossAccountAccessRole,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DescribeCrossAccountAccessRoleInput{}
	}

	output := &DescribeCrossAccountAccessRoleOutput{}
	req := c.newRequest(op, input, output)
	output.responseMetadata = aws.Response{Request: req}

	return DescribeCrossAccountAccessRoleRequest{Request: req, Input: input, Copy: c.DescribeCrossAccountAccessRoleRequest}
}

const opDescribeFindings = "DescribeFindings"

// DescribeFindingsRequest is a API request type for the DescribeFindings API operation.
type DescribeFindingsRequest struct {
	*aws.Request
	Input *DescribeFindingsInput
	Copy  func(*DescribeFindingsInput) DescribeFindingsRequest
}

// Send marshals and sends the DescribeFindings API request.
func (r DescribeFindingsRequest) Send() (*DescribeFindingsOutput, error) {
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	return r.Request.Data.(*DescribeFindingsOutput), nil
}

// DescribeFindingsRequest returns a request value for making API operation for
// Amazon Inspector.
//
// Describes the findings that are specified by the ARNs of the findings.
//
//    // Example sending a request using the DescribeFindingsRequest method.
//    req := client.DescribeFindingsRequest(params)
//    resp, err := req.Send()
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/inspector-2016-02-16/DescribeFindings
func (c *Inspector) DescribeFindingsRequest(input *DescribeFindingsInput) DescribeFindingsRequest {
	op := &aws.Operation{
		Name:       opDescribeFindings,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DescribeFindingsInput{}
	}

	output := &DescribeFindingsOutput{}
	req := c.newRequest(op, input, output)
	output.responseMetadata = aws.Response{Request: req}

	return DescribeFindingsRequest{Request: req, Input: input, Copy: c.DescribeFindingsRequest}
}

const opDescribeResourceGroups = "DescribeResourceGroups"

// DescribeResourceGroupsRequest is a API request type for the DescribeResourceGroups API operation.
type DescribeResourceGroupsRequest struct {
	*aws.Request
	Input *DescribeResourceGroupsInput
	Copy  func(*DescribeResourceGroupsInput) DescribeResourceGroupsRequest
}

// Send marshals and sends the DescribeResourceGroups API request.
func (r DescribeResourceGroupsRequest) Send() (*DescribeResourceGroupsOutput, error) {
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	return r.Request.Data.(*DescribeResourceGroupsOutput), nil
}

// DescribeResourceGroupsRequest returns a request value for making API operation for
// Amazon Inspector.
//
// Describes the resource groups that are specified by the ARNs of the resource
// groups.
//
//    // Example sending a request using the DescribeResourceGroupsRequest method.
//    req := client.DescribeResourceGroupsRequest(params)
//    resp, err := req.Send()
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/inspector-2016-02-16/DescribeResourceGroups
func (c *Inspector) DescribeResourceGroupsRequest(input *DescribeResourceGroupsInput) DescribeResourceGroupsRequest {
	op := &aws.Operation{
		Name:       opDescribeResourceGroups,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DescribeResourceGroupsInput{}
	}

	output := &DescribeResourceGroupsOutput{}
	req := c.newRequest(op, input, output)
	output.responseMetadata = aws.Response{Request: req}

	return DescribeResourceGroupsRequest{Request: req, Input: input, Copy: c.DescribeResourceGroupsRequest}
}

const opDescribeRulesPackages = "DescribeRulesPackages"

// DescribeRulesPackagesRequest is a API request type for the DescribeRulesPackages API operation.
type DescribeRulesPackagesRequest struct {
	*aws.Request
	Input *DescribeRulesPackagesInput
	Copy  func(*DescribeRulesPackagesInput) DescribeRulesPackagesRequest
}

// Send marshals and sends the DescribeRulesPackages API request.
func (r DescribeRulesPackagesRequest) Send() (*DescribeRulesPackagesOutput, error) {
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	return r.Request.Data.(*DescribeRulesPackagesOutput), nil
}

// DescribeRulesPackagesRequest returns a request value for making API operation for
// Amazon Inspector.
//
// Describes the rules packages that are specified by the ARNs of the rules
// packages.
//
//    // Example sending a request using the DescribeRulesPackagesRequest method.
//    req := client.DescribeRulesPackagesRequest(params)
//    resp, err := req.Send()
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/inspector-2016-02-16/DescribeRulesPackages
func (c *Inspector) DescribeRulesPackagesRequest(input *DescribeRulesPackagesInput) DescribeRulesPackagesRequest {
	op := &aws.Operation{
		Name:       opDescribeRulesPackages,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DescribeRulesPackagesInput{}
	}

	output := &DescribeRulesPackagesOutput{}
	req := c.newRequest(op, input, output)
	output.responseMetadata = aws.Response{Request: req}

	return DescribeRulesPackagesRequest{Request: req, Input: input, Copy: c.DescribeRulesPackagesRequest}
}

const opGetAssessmentReport = "GetAssessmentReport"

// GetAssessmentReportRequest is a API request type for the GetAssessmentReport API operation.
type GetAssessmentReportRequest struct {
	*aws.Request
	Input *GetAssessmentReportInput
	Copy  func(*GetAssessmentReportInput) GetAssessmentReportRequest
}

// Send marshals and sends the GetAssessmentReport API request.
func (r GetAssessmentReportRequest) Send() (*GetAssessmentReportOutput, error) {
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	return r.Request.Data.(*GetAssessmentReportOutput), nil
}

// GetAssessmentReportRequest returns a request value for making API operation for
// Amazon Inspector.
//
// Produces an assessment report that includes detailed and comprehensive results
// of a specified assessment run.
//
//    // Example sending a request using the GetAssessmentReportRequest method.
//    req := client.GetAssessmentReportRequest(params)
//    resp, err := req.Send()
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/inspector-2016-02-16/GetAssessmentReport
func (c *Inspector) GetAssessmentReportRequest(input *GetAssessmentReportInput) GetAssessmentReportRequest {
	op := &aws.Operation{
		Name:       opGetAssessmentReport,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &GetAssessmentReportInput{}
	}

	output := &GetAssessmentReportOutput{}
	req := c.newRequest(op, input, output)
	output.responseMetadata = aws.Response{Request: req}

	return GetAssessmentReportRequest{Request: req, Input: input, Copy: c.GetAssessmentReportRequest}
}

const opGetTelemetryMetadata = "GetTelemetryMetadata"

// GetTelemetryMetadataRequest is a API request type for the GetTelemetryMetadata API operation.
type GetTelemetryMetadataRequest struct {
	*aws.Request
	Input *GetTelemetryMetadataInput
	Copy  func(*GetTelemetryMetadataInput) GetTelemetryMetadataRequest
}

// Send marshals and sends the GetTelemetryMetadata API request.
func (r GetTelemetryMetadataRequest) Send() (*GetTelemetryMetadataOutput, error) {
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	return r.Request.Data.(*GetTelemetryMetadataOutput), nil
}

// GetTelemetryMetadataRequest returns a request value for making API operation for
// Amazon Inspector.
//
// Information about the data that is collected for the specified assessment
// run.
//
//    // Example sending a request using the GetTelemetryMetadataRequest method.
//    req := client.GetTelemetryMetadataRequest(params)
//    resp, err := req.Send()
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/inspector-2016-02-16/GetTelemetryMetadata
func (c *Inspector) GetTelemetryMetadataRequest(input *GetTelemetryMetadataInput) GetTelemetryMetadataRequest {
	op := &aws.Operation{
		Name:       opGetTelemetryMetadata,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &GetTelemetryMetadataInput{}
	}

	output := &GetTelemetryMetadataOutput{}
	req := c.newRequest(op, input, output)
	output.responseMetadata = aws.Response{Request: req}

	return GetTelemetryMetadataRequest{Request: req, Input: input, Copy: c.GetTelemetryMetadataRequest}
}

const opListAssessmentRunAgents = "ListAssessmentRunAgents"

// ListAssessmentRunAgentsRequest is a API request type for the ListAssessmentRunAgents API operation.
type ListAssessmentRunAgentsRequest struct {
	*aws.Request
	Input *ListAssessmentRunAgentsInput
	Copy  func(*ListAssessmentRunAgentsInput) ListAssessmentRunAgentsRequest
}

// Send marshals and sends the ListAssessmentRunAgents API request.
func (r ListAssessmentRunAgentsRequest) Send() (*ListAssessmentRunAgentsOutput, error) {
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	return r.Request.Data.(*ListAssessmentRunAgentsOutput), nil
}

// ListAssessmentRunAgentsRequest returns a request value for making API operation for
// Amazon Inspector.
//
// Lists the agents of the assessment runs that are specified by the ARNs of
// the assessment runs.
//
//    // Example sending a request using the ListAssessmentRunAgentsRequest method.
//    req := client.ListAssessmentRunAgentsRequest(params)
//    resp, err := req.Send()
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/inspector-2016-02-16/ListAssessmentRunAgents
func (c *Inspector) ListAssessmentRunAgentsRequest(input *ListAssessmentRunAgentsInput) ListAssessmentRunAgentsRequest {
	op := &aws.Operation{
		Name:       opListAssessmentRunAgents,
		HTTPMethod: "POST",
		HTTPPath:   "/",
		Paginator: &aws.Paginator{
			InputTokens:     []string{"nextToken"},
			OutputTokens:    []string{"nextToken"},
			LimitToken:      "maxResults",
			TruncationToken: "",
		},
	}

	if input == nil {
		input = &ListAssessmentRunAgentsInput{}
	}

	output := &ListAssessmentRunAgentsOutput{}
	req := c.newRequest(op, input, output)
	output.responseMetadata = aws.Response{Request: req}

	return ListAssessmentRunAgentsRequest{Request: req, Input: input, Copy: c.ListAssessmentRunAgentsRequest}
}

// Paginate pages iterates over the pages of a ListAssessmentRunAgentsRequest operation,
// calling the Next method for each page. Using the paginators Next
// method will depict whether or not there are more pages.
//
// Note: This operation can generate multiple requests to a service.
//
//    // Example iterating over at most 3 pages of a ListAssessmentRunAgents operation.
//		req := client.ListAssessmentRunAgentsRequest(input)
//		p := req.Paginate()
//		for p.Next() {
//			page := p.CurrentPage()
//		}
//
//		if err := p.Err(); err != nil {
//			return err
//		}
//
func (p *ListAssessmentRunAgentsRequest) Paginate(opts ...aws.Option) ListAssessmentRunAgentsPager {
	return ListAssessmentRunAgentsPager{
		Pager: aws.Pager{
			NewRequest: func() (*aws.Request, error) {
				var inCpy *ListAssessmentRunAgentsInput
				if p.Input != nil {
					tmp := *p.Input
					inCpy = &tmp
				}

				req := p.Copy(inCpy)
				req.ApplyOptions(opts...)

				return req.Request, nil
			},
		},
	}
}

// ListAssessmentRunAgentsPager is used to paginate the request. This can be done by
// calling Next and CurrentPage.
type ListAssessmentRunAgentsPager struct {
	aws.Pager
}

func (p *ListAssessmentRunAgentsPager) CurrentPage() *ListAssessmentRunAgentsOutput {
	return p.Pager.CurrentPage().(*ListAssessmentRunAgentsOutput)
}

const opListAssessmentRuns = "ListAssessmentRuns"

// ListAssessmentRunsRequest is a API request type for the ListAssessmentRuns API operation.
type ListAssessmentRunsRequest struct {
	*aws.Request
	Input *ListAssessmentRunsInput
	Copy  func(*ListAssessmentRunsInput) ListAssessmentRunsRequest
}

// Send marshals and sends the ListAssessmentRuns API request.
func (r ListAssessmentRunsRequest) Send() (*ListAssessmentRunsOutput, error) {
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	return r.Request.Data.(*ListAssessmentRunsOutput), nil
}

// ListAssessmentRunsRequest returns a request value for making API operation for
// Amazon Inspector.
//
// Lists the assessment runs that correspond to the assessment templates that
// are specified by the ARNs of the assessment templates.
//
//    // Example sending a request using the ListAssessmentRunsRequest method.
//    req := client.ListAssessmentRunsRequest(params)
//    resp, err := req.Send()
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/inspector-2016-02-16/ListAssessmentRuns
func (c *Inspector) ListAssessmentRunsRequest(input *ListAssessmentRunsInput) ListAssessmentRunsRequest {
	op := &aws.Operation{
		Name:       opListAssessmentRuns,
		HTTPMethod: "POST",
		HTTPPath:   "/",
		Paginator: &aws.Paginator{
			InputTokens:     []string{"nextToken"},
			OutputTokens:    []string{"nextToken"},
			LimitToken:      "maxResults",
			TruncationToken: "",
		},
	}

	if input == nil {
		input = &ListAssessmentRunsInput{}
	}

	output := &ListAssessmentRunsOutput{}
	req := c.newRequest(op, input, output)
	output.responseMetadata = aws.Response{Request: req}

	return ListAssessmentRunsRequest{Request: req, Input: input, Copy: c.ListAssessmentRunsRequest}
}

// Paginate pages iterates over the pages of a ListAssessmentRunsRequest operation,
// calling the Next method for each page. Using the paginators Next
// method will depict whether or not there are more pages.
//
// Note: This operation can generate multiple requests to a service.
//
//    // Example iterating over at most 3 pages of a ListAssessmentRuns operation.
//		req := client.ListAssessmentRunsRequest(input)
//		p := req.Paginate()
//		for p.Next() {
//			page := p.CurrentPage()
//		}
//
//		if err := p.Err(); err != nil {
//			return err
//		}
//
func (p *ListAssessmentRunsRequest) Paginate(opts ...aws.Option) ListAssessmentRunsPager {
	return ListAssessmentRunsPager{
		Pager: aws.Pager{
			NewRequest: func() (*aws.Request, error) {
				var inCpy *ListAssessmentRunsInput
				if p.Input != nil {
					tmp := *p.Input
					inCpy = &tmp
				}

				req := p.Copy(inCpy)
				req.ApplyOptions(opts...)

				return req.Request, nil
			},
		},
	}
}

// ListAssessmentRunsPager is used to paginate the request. This can be done by
// calling Next and CurrentPage.
type ListAssessmentRunsPager struct {
	aws.Pager
}

func (p *ListAssessmentRunsPager) CurrentPage() *ListAssessmentRunsOutput {
	return p.Pager.CurrentPage().(*ListAssessmentRunsOutput)
}

const opListAssessmentTargets = "ListAssessmentTargets"

// ListAssessmentTargetsRequest is a API request type for the ListAssessmentTargets API operation.
type ListAssessmentTargetsRequest struct {
	*aws.Request
	Input *ListAssessmentTargetsInput
	Copy  func(*ListAssessmentTargetsInput) ListAssessmentTargetsRequest
}

// Send marshals and sends the ListAssessmentTargets API request.
func (r ListAssessmentTargetsRequest) Send() (*ListAssessmentTargetsOutput, error) {
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	return r.Request.Data.(*ListAssessmentTargetsOutput), nil
}

// ListAssessmentTargetsRequest returns a request value for making API operation for
// Amazon Inspector.
//
// Lists the ARNs of the assessment targets within this AWS account. For more
// information about assessment targets, see Amazon Inspector Assessment Targets
// (http://docs.aws.amazon.com/inspector/latest/userguide/inspector_applications.html).
//
//    // Example sending a request using the ListAssessmentTargetsRequest method.
//    req := client.ListAssessmentTargetsRequest(params)
//    resp, err := req.Send()
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/inspector-2016-02-16/ListAssessmentTargets
func (c *Inspector) ListAssessmentTargetsRequest(input *ListAssessmentTargetsInput) ListAssessmentTargetsRequest {
	op := &aws.Operation{
		Name:       opListAssessmentTargets,
		HTTPMethod: "POST",
		HTTPPath:   "/",
		Paginator: &aws.Paginator{
			InputTokens:     []string{"nextToken"},
			OutputTokens:    []string{"nextToken"},
			LimitToken:      "maxResults",
			TruncationToken: "",
		},
	}

	if input == nil {
		input = &ListAssessmentTargetsInput{}
	}

	output := &ListAssessmentTargetsOutput{}
	req := c.newRequest(op, input, output)
	output.responseMetadata = aws.Response{Request: req}

	return ListAssessmentTargetsRequest{Request: req, Input: input, Copy: c.ListAssessmentTargetsRequest}
}

// Paginate pages iterates over the pages of a ListAssessmentTargetsRequest operation,
// calling the Next method for each page. Using the paginators Next
// method will depict whether or not there are more pages.
//
// Note: This operation can generate multiple requests to a service.
//
//    // Example iterating over at most 3 pages of a ListAssessmentTargets operation.
//		req := client.ListAssessmentTargetsRequest(input)
//		p := req.Paginate()
//		for p.Next() {
//			page := p.CurrentPage()
//		}
//
//		if err := p.Err(); err != nil {
//			return err
//		}
//
func (p *ListAssessmentTargetsRequest) Paginate(opts ...aws.Option) ListAssessmentTargetsPager {
	return ListAssessmentTargetsPager{
		Pager: aws.Pager{
			NewRequest: func() (*aws.Request, error) {
				var inCpy *ListAssessmentTargetsInput
				if p.Input != nil {
					tmp := *p.Input
					inCpy = &tmp
				}

				req := p.Copy(inCpy)
				req.ApplyOptions(opts...)

				return req.Request, nil
			},
		},
	}
}

// ListAssessmentTargetsPager is used to paginate the request. This can be done by
// calling Next and CurrentPage.
type ListAssessmentTargetsPager struct {
	aws.Pager
}

func (p *ListAssessmentTargetsPager) CurrentPage() *ListAssessmentTargetsOutput {
	return p.Pager.CurrentPage().(*ListAssessmentTargetsOutput)
}

const opListAssessmentTemplates = "ListAssessmentTemplates"

// ListAssessmentTemplatesRequest is a API request type for the ListAssessmentTemplates API operation.
type ListAssessmentTemplatesRequest struct {
	*aws.Request
	Input *ListAssessmentTemplatesInput
	Copy  func(*ListAssessmentTemplatesInput) ListAssessmentTemplatesRequest
}

// Send marshals and sends the ListAssessmentTemplates API request.
func (r ListAssessmentTemplatesRequest) Send() (*ListAssessmentTemplatesOutput, error) {
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	return r.Request.Data.(*ListAssessmentTemplatesOutput), nil
}

// ListAssessmentTemplatesRequest returns a request value for making API operation for
// Amazon Inspector.
//
// Lists the assessment templates that correspond to the assessment targets
// that are specified by the ARNs of the assessment targets.
//
//    // Example sending a request using the ListAssessmentTemplatesRequest method.
//    req := client.ListAssessmentTemplatesRequest(params)
//    resp, err := req.Send()
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/inspector-2016-02-16/ListAssessmentTemplates
func (c *Inspector) ListAssessmentTemplatesRequest(input *ListAssessmentTemplatesInput) ListAssessmentTemplatesRequest {
	op := &aws.Operation{
		Name:       opListAssessmentTemplates,
		HTTPMethod: "POST",
		HTTPPath:   "/",
		Paginator: &aws.Paginator{
			InputTokens:     []string{"nextToken"},
			OutputTokens:    []string{"nextToken"},
			LimitToken:      "maxResults",
			TruncationToken: "",
		},
	}

	if input == nil {
		input = &ListAssessmentTemplatesInput{}
	}

	output := &ListAssessmentTemplatesOutput{}
	req := c.newRequest(op, input, output)
	output.responseMetadata = aws.Response{Request: req}

	return ListAssessmentTemplatesRequest{Request: req, Input: input, Copy: c.ListAssessmentTemplatesRequest}
}

// Paginate pages iterates over the pages of a ListAssessmentTemplatesRequest operation,
// calling the Next method for each page. Using the paginators Next
// method will depict whether or not there are more pages.
//
// Note: This operation can generate multiple requests to a service.
//
//    // Example iterating over at most 3 pages of a ListAssessmentTemplates operation.
//		req := client.ListAssessmentTemplatesRequest(input)
//		p := req.Paginate()
//		for p.Next() {
//			page := p.CurrentPage()
//		}
//
//		if err := p.Err(); err != nil {
//			return err
//		}
//
func (p *ListAssessmentTemplatesRequest) Paginate(opts ...aws.Option) ListAssessmentTemplatesPager {
	return ListAssessmentTemplatesPager{
		Pager: aws.Pager{
			NewRequest: func() (*aws.Request, error) {
				var inCpy *ListAssessmentTemplatesInput
				if p.Input != nil {
					tmp := *p.Input
					inCpy = &tmp
				}

				req := p.Copy(inCpy)
				req.ApplyOptions(opts...)

				return req.Request, nil
			},
		},
	}
}

// ListAssessmentTemplatesPager is used to paginate the request. This can be done by
// calling Next and CurrentPage.
type ListAssessmentTemplatesPager struct {
	aws.Pager
}

func (p *ListAssessmentTemplatesPager) CurrentPage() *ListAssessmentTemplatesOutput {
	return p.Pager.CurrentPage().(*ListAssessmentTemplatesOutput)
}

const opListEventSubscriptions = "ListEventSubscriptions"

// ListEventSubscriptionsRequest is a API request type for the ListEventSubscriptions API operation.
type ListEventSubscriptionsRequest struct {
	*aws.Request
	Input *ListEventSubscriptionsInput
	Copy  func(*ListEventSubscriptionsInput) ListEventSubscriptionsRequest
}

// Send marshals and sends the ListEventSubscriptions API request.
func (r ListEventSubscriptionsRequest) Send() (*ListEventSubscriptionsOutput, error) {
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	return r.Request.Data.(*ListEventSubscriptionsOutput), nil
}

// ListEventSubscriptionsRequest returns a request value for making API operation for
// Amazon Inspector.
//
// Lists all the event subscriptions for the assessment template that is specified
// by the ARN of the assessment template. For more information, see SubscribeToEvent
// and UnsubscribeFromEvent.
//
//    // Example sending a request using the ListEventSubscriptionsRequest method.
//    req := client.ListEventSubscriptionsRequest(params)
//    resp, err := req.Send()
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/inspector-2016-02-16/ListEventSubscriptions
func (c *Inspector) ListEventSubscriptionsRequest(input *ListEventSubscriptionsInput) ListEventSubscriptionsRequest {
	op := &aws.Operation{
		Name:       opListEventSubscriptions,
		HTTPMethod: "POST",
		HTTPPath:   "/",
		Paginator: &aws.Paginator{
			InputTokens:     []string{"nextToken"},
			OutputTokens:    []string{"nextToken"},
			LimitToken:      "maxResults",
			TruncationToken: "",
		},
	}

	if input == nil {
		input = &ListEventSubscriptionsInput{}
	}

	output := &ListEventSubscriptionsOutput{}
	req := c.newRequest(op, input, output)
	output.responseMetadata = aws.Response{Request: req}

	return ListEventSubscriptionsRequest{Request: req, Input: input, Copy: c.ListEventSubscriptionsRequest}
}

// Paginate pages iterates over the pages of a ListEventSubscriptionsRequest operation,
// calling the Next method for each page. Using the paginators Next
// method will depict whether or not there are more pages.
//
// Note: This operation can generate multiple requests to a service.
//
//    // Example iterating over at most 3 pages of a ListEventSubscriptions operation.
//		req := client.ListEventSubscriptionsRequest(input)
//		p := req.Paginate()
//		for p.Next() {
//			page := p.CurrentPage()
//		}
//
//		if err := p.Err(); err != nil {
//			return err
//		}
//
func (p *ListEventSubscriptionsRequest) Paginate(opts ...aws.Option) ListEventSubscriptionsPager {
	return ListEventSubscriptionsPager{
		Pager: aws.Pager{
			NewRequest: func() (*aws.Request, error) {
				var inCpy *ListEventSubscriptionsInput
				if p.Input != nil {
					tmp := *p.Input
					inCpy = &tmp
				}

				req := p.Copy(inCpy)
				req.ApplyOptions(opts...)

				return req.Request, nil
			},
		},
	}
}

// ListEventSubscriptionsPager is used to paginate the request. This can be done by
// calling Next and CurrentPage.
type ListEventSubscriptionsPager struct {
	aws.Pager
}

func (p *ListEventSubscriptionsPager) CurrentPage() *ListEventSubscriptionsOutput {
	return p.Pager.CurrentPage().(*ListEventSubscriptionsOutput)
}

const opListFindings = "ListFindings"

// ListFindingsRequest is a API request type for the ListFindings API operation.
type ListFindingsRequest struct {
	*aws.Request
	Input *ListFindingsInput
	Copy  func(*ListFindingsInput) ListFindingsRequest
}

// Send marshals and sends the ListFindings API request.
func (r ListFindingsRequest) Send() (*ListFindingsOutput, error) {
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	return r.Request.Data.(*ListFindingsOutput), nil
}

// ListFindingsRequest returns a request value for making API operation for
// Amazon Inspector.
//
// Lists findings that are generated by the assessment runs that are specified
// by the ARNs of the assessment runs.
//
//    // Example sending a request using the ListFindingsRequest method.
//    req := client.ListFindingsRequest(params)
//    resp, err := req.Send()
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/inspector-2016-02-16/ListFindings
func (c *Inspector) ListFindingsRequest(input *ListFindingsInput) ListFindingsRequest {
	op := &aws.Operation{
		Name:       opListFindings,
		HTTPMethod: "POST",
		HTTPPath:   "/",
		Paginator: &aws.Paginator{
			InputTokens:     []string{"nextToken"},
			OutputTokens:    []string{"nextToken"},
			LimitToken:      "maxResults",
			TruncationToken: "",
		},
	}

	if input == nil {
		input = &ListFindingsInput{}
	}

	output := &ListFindingsOutput{}
	req := c.newRequest(op, input, output)
	output.responseMetadata = aws.Response{Request: req}

	return ListFindingsRequest{Request: req, Input: input, Copy: c.ListFindingsRequest}
}

// Paginate pages iterates over the pages of a ListFindingsRequest operation,
// calling the Next method for each page. Using the paginators Next
// method will depict whether or not there are more pages.
//
// Note: This operation can generate multiple requests to a service.
//
//    // Example iterating over at most 3 pages of a ListFindings operation.
//		req := client.ListFindingsRequest(input)
//		p := req.Paginate()
//		for p.Next() {
//			page := p.CurrentPage()
//		}
//
//		if err := p.Err(); err != nil {
//			return err
//		}
//
func (p *ListFindingsRequest) Paginate(opts ...aws.Option) ListFindingsPager {
	return ListFindingsPager{
		Pager: aws.Pager{
			NewRequest: func() (*aws.Request, error) {
				var inCpy *ListFindingsInput
				if p.Input != nil {
					tmp := *p.Input
					inCpy = &tmp
				}

				req := p.Copy(inCpy)
				req.ApplyOptions(opts...)

				return req.Request, nil
			},
		},
	}
}

// ListFindingsPager is used to paginate the request. This can be done by
// calling Next and CurrentPage.
type ListFindingsPager struct {
	aws.Pager
}

func (p *ListFindingsPager) CurrentPage() *ListFindingsOutput {
	return p.Pager.CurrentPage().(*ListFindingsOutput)
}

const opListRulesPackages = "ListRulesPackages"

// ListRulesPackagesRequest is a API request type for the ListRulesPackages API operation.
type ListRulesPackagesRequest struct {
	*aws.Request
	Input *ListRulesPackagesInput
	Copy  func(*ListRulesPackagesInput) ListRulesPackagesRequest
}

// Send marshals and sends the ListRulesPackages API request.
func (r ListRulesPackagesRequest) Send() (*ListRulesPackagesOutput, error) {
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	return r.Request.Data.(*ListRulesPackagesOutput), nil
}

// ListRulesPackagesRequest returns a request value for making API operation for
// Amazon Inspector.
//
// Lists all available Amazon Inspector rules packages.
//
//    // Example sending a request using the ListRulesPackagesRequest method.
//    req := client.ListRulesPackagesRequest(params)
//    resp, err := req.Send()
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/inspector-2016-02-16/ListRulesPackages
func (c *Inspector) ListRulesPackagesRequest(input *ListRulesPackagesInput) ListRulesPackagesRequest {
	op := &aws.Operation{
		Name:       opListRulesPackages,
		HTTPMethod: "POST",
		HTTPPath:   "/",
		Paginator: &aws.Paginator{
			InputTokens:     []string{"nextToken"},
			OutputTokens:    []string{"nextToken"},
			LimitToken:      "maxResults",
			TruncationToken: "",
		},
	}

	if input == nil {
		input = &ListRulesPackagesInput{}
	}

	output := &ListRulesPackagesOutput{}
	req := c.newRequest(op, input, output)
	output.responseMetadata = aws.Response{Request: req}

	return ListRulesPackagesRequest{Request: req, Input: input, Copy: c.ListRulesPackagesRequest}
}

// Paginate pages iterates over the pages of a ListRulesPackagesRequest operation,
// calling the Next method for each page. Using the paginators Next
// method will depict whether or not there are more pages.
//
// Note: This operation can generate multiple requests to a service.
//
//    // Example iterating over at most 3 pages of a ListRulesPackages operation.
//		req := client.ListRulesPackagesRequest(input)
//		p := req.Paginate()
//		for p.Next() {
//			page := p.CurrentPage()
//		}
//
//		if err := p.Err(); err != nil {
//			return err
//		}
//
func (p *ListRulesPackagesRequest) Paginate(opts ...aws.Option) ListRulesPackagesPager {
	return ListRulesPackagesPager{
		Pager: aws.Pager{
			NewRequest: func() (*aws.Request, error) {
				var inCpy *ListRulesPackagesInput
				if p.Input != nil {
					tmp := *p.Input
					inCpy = &tmp
				}

				req := p.Copy(inCpy)
				req.ApplyOptions(opts...)

				return req.Request, nil
			},
		},
	}
}

// ListRulesPackagesPager is used to paginate the request. This can be done by
// calling Next and CurrentPage.
type ListRulesPackagesPager struct {
	aws.Pager
}

func (p *ListRulesPackagesPager) CurrentPage() *ListRulesPackagesOutput {
	return p.Pager.CurrentPage().(*ListRulesPackagesOutput)
}

const opListTagsForResource = "ListTagsForResource"

// ListTagsForResourceRequest is a API request type for the ListTagsForResource API operation.
type ListTagsForResourceRequest struct {
	*aws.Request
	Input *ListTagsForResourceInput
	Copy  func(*ListTagsForResourceInput) ListTagsForResourceRequest
}

// Send marshals and sends the ListTagsForResource API request.
func (r ListTagsForResourceRequest) Send() (*ListTagsForResourceOutput, error) {
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	return r.Request.Data.(*ListTagsForResourceOutput), nil
}

// ListTagsForResourceRequest returns a request value for making API operation for
// Amazon Inspector.
//
// Lists all tags associated with an assessment template.
//
//    // Example sending a request using the ListTagsForResourceRequest method.
//    req := client.ListTagsForResourceRequest(params)
//    resp, err := req.Send()
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/inspector-2016-02-16/ListTagsForResource
func (c *Inspector) ListTagsForResourceRequest(input *ListTagsForResourceInput) ListTagsForResourceRequest {
	op := &aws.Operation{
		Name:       opListTagsForResource,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &ListTagsForResourceInput{}
	}

	output := &ListTagsForResourceOutput{}
	req := c.newRequest(op, input, output)
	output.responseMetadata = aws.Response{Request: req}

	return ListTagsForResourceRequest{Request: req, Input: input, Copy: c.ListTagsForResourceRequest}
}

const opPreviewAgents = "PreviewAgents"

// PreviewAgentsRequest is a API request type for the PreviewAgents API operation.
type PreviewAgentsRequest struct {
	*aws.Request
	Input *PreviewAgentsInput
	Copy  func(*PreviewAgentsInput) PreviewAgentsRequest
}

// Send marshals and sends the PreviewAgents API request.
func (r PreviewAgentsRequest) Send() (*PreviewAgentsOutput, error) {
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	return r.Request.Data.(*PreviewAgentsOutput), nil
}

// PreviewAgentsRequest returns a request value for making API operation for
// Amazon Inspector.
//
// Previews the agents installed on the EC2 instances that are part of the specified
// assessment target.
//
//    // Example sending a request using the PreviewAgentsRequest method.
//    req := client.PreviewAgentsRequest(params)
//    resp, err := req.Send()
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/inspector-2016-02-16/PreviewAgents
func (c *Inspector) PreviewAgentsRequest(input *PreviewAgentsInput) PreviewAgentsRequest {
	op := &aws.Operation{
		Name:       opPreviewAgents,
		HTTPMethod: "POST",
		HTTPPath:   "/",
		Paginator: &aws.Paginator{
			InputTokens:     []string{"nextToken"},
			OutputTokens:    []string{"nextToken"},
			LimitToken:      "maxResults",
			TruncationToken: "",
		},
	}

	if input == nil {
		input = &PreviewAgentsInput{}
	}

	output := &PreviewAgentsOutput{}
	req := c.newRequest(op, input, output)
	output.responseMetadata = aws.Response{Request: req}

	return PreviewAgentsRequest{Request: req, Input: input, Copy: c.PreviewAgentsRequest}
}

// Paginate pages iterates over the pages of a PreviewAgentsRequest operation,
// calling the Next method for each page. Using the paginators Next
// method will depict whether or not there are more pages.
//
// Note: This operation can generate multiple requests to a service.
//
//    // Example iterating over at most 3 pages of a PreviewAgents operation.
//		req := client.PreviewAgentsRequest(input)
//		p := req.Paginate()
//		for p.Next() {
//			page := p.CurrentPage()
//		}
//
//		if err := p.Err(); err != nil {
//			return err
//		}
//
func (p *PreviewAgentsRequest) Paginate(opts ...aws.Option) PreviewAgentsPager {
	return PreviewAgentsPager{
		Pager: aws.Pager{
			NewRequest: func() (*aws.Request, error) {
				var inCpy *PreviewAgentsInput
				if p.Input != nil {
					tmp := *p.Input
					inCpy = &tmp
				}

				req := p.Copy(inCpy)
				req.ApplyOptions(opts...)

				return req.Request, nil
			},
		},
	}
}

// PreviewAgentsPager is used to paginate the request. This can be done by
// calling Next and CurrentPage.
type PreviewAgentsPager struct {
	aws.Pager
}

func (p *PreviewAgentsPager) CurrentPage() *PreviewAgentsOutput {
	return p.Pager.CurrentPage().(*PreviewAgentsOutput)
}

const opRegisterCrossAccountAccessRole = "RegisterCrossAccountAccessRole"

// RegisterCrossAccountAccessRoleRequest is a API request type for the RegisterCrossAccountAccessRole API operation.
type RegisterCrossAccountAccessRoleRequest struct {
	*aws.Request
	Input *RegisterCrossAccountAccessRoleInput
	Copy  func(*RegisterCrossAccountAccessRoleInput) RegisterCrossAccountAccessRoleRequest
}

// Send marshals and sends the RegisterCrossAccountAccessRole API request.
func (r RegisterCrossAccountAccessRoleRequest) Send() (*RegisterCrossAccountAccessRoleOutput, error) {
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	return r.Request.Data.(*RegisterCrossAccountAccessRoleOutput), nil
}

// RegisterCrossAccountAccessRoleRequest returns a request value for making API operation for
// Amazon Inspector.
//
// Registers the IAM role that grants Amazon Inspector access to AWS Services
// needed to perform security assessments.
//
//    // Example sending a request using the RegisterCrossAccountAccessRoleRequest method.
//    req := client.RegisterCrossAccountAccessRoleRequest(params)
//    resp, err := req.Send()
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/inspector-2016-02-16/RegisterCrossAccountAccessRole
func (c *Inspector) RegisterCrossAccountAccessRoleRequest(input *RegisterCrossAccountAccessRoleInput) RegisterCrossAccountAccessRoleRequest {
	op := &aws.Operation{
		Name:       opRegisterCrossAccountAccessRole,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &RegisterCrossAccountAccessRoleInput{}
	}

	output := &RegisterCrossAccountAccessRoleOutput{}
	req := c.newRequest(op, input, output)
	req.Handlers.Unmarshal.Remove(jsonrpc.UnmarshalHandler)
	req.Handlers.Unmarshal.PushBackNamed(protocol.UnmarshalDiscardBodyHandler)
	output.responseMetadata = aws.Response{Request: req}

	return RegisterCrossAccountAccessRoleRequest{Request: req, Input: input, Copy: c.RegisterCrossAccountAccessRoleRequest}
}

const opRemoveAttributesFromFindings = "RemoveAttributesFromFindings"

// RemoveAttributesFromFindingsRequest is a API request type for the RemoveAttributesFromFindings API operation.
type RemoveAttributesFromFindingsRequest struct {
	*aws.Request
	Input *RemoveAttributesFromFindingsInput
	Copy  func(*RemoveAttributesFromFindingsInput) RemoveAttributesFromFindingsRequest
}

// Send marshals and sends the RemoveAttributesFromFindings API request.
func (r RemoveAttributesFromFindingsRequest) Send() (*RemoveAttributesFromFindingsOutput, error) {
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	return r.Request.Data.(*RemoveAttributesFromFindingsOutput), nil
}

// RemoveAttributesFromFindingsRequest returns a request value for making API operation for
// Amazon Inspector.
//
// Removes entire attributes (key and value pairs) from the findings that are
// specified by the ARNs of the findings where an attribute with the specified
// key exists.
//
//    // Example sending a request using the RemoveAttributesFromFindingsRequest method.
//    req := client.RemoveAttributesFromFindingsRequest(params)
//    resp, err := req.Send()
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/inspector-2016-02-16/RemoveAttributesFromFindings
func (c *Inspector) RemoveAttributesFromFindingsRequest(input *RemoveAttributesFromFindingsInput) RemoveAttributesFromFindingsRequest {
	op := &aws.Operation{
		Name:       opRemoveAttributesFromFindings,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &RemoveAttributesFromFindingsInput{}
	}

	output := &RemoveAttributesFromFindingsOutput{}
	req := c.newRequest(op, input, output)
	output.responseMetadata = aws.Response{Request: req}

	return RemoveAttributesFromFindingsRequest{Request: req, Input: input, Copy: c.RemoveAttributesFromFindingsRequest}
}

const opSetTagsForResource = "SetTagsForResource"

// SetTagsForResourceRequest is a API request type for the SetTagsForResource API operation.
type SetTagsForResourceRequest struct {
	*aws.Request
	Input *SetTagsForResourceInput
	Copy  func(*SetTagsForResourceInput) SetTagsForResourceRequest
}

// Send marshals and sends the SetTagsForResource API request.
func (r SetTagsForResourceRequest) Send() (*SetTagsForResourceOutput, error) {
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	return r.Request.Data.(*SetTagsForResourceOutput), nil
}

// SetTagsForResourceRequest returns a request value for making API operation for
// Amazon Inspector.
//
// Sets tags (key and value pairs) to the assessment template that is specified
// by the ARN of the assessment template.
//
//    // Example sending a request using the SetTagsForResourceRequest method.
//    req := client.SetTagsForResourceRequest(params)
//    resp, err := req.Send()
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/inspector-2016-02-16/SetTagsForResource
func (c *Inspector) SetTagsForResourceRequest(input *SetTagsForResourceInput) SetTagsForResourceRequest {
	op := &aws.Operation{
		Name:       opSetTagsForResource,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &SetTagsForResourceInput{}
	}

	output := &SetTagsForResourceOutput{}
	req := c.newRequest(op, input, output)
	req.Handlers.Unmarshal.Remove(jsonrpc.UnmarshalHandler)
	req.Handlers.Unmarshal.PushBackNamed(protocol.UnmarshalDiscardBodyHandler)
	output.responseMetadata = aws.Response{Request: req}

	return SetTagsForResourceRequest{Request: req, Input: input, Copy: c.SetTagsForResourceRequest}
}

const opStartAssessmentRun = "StartAssessmentRun"

// StartAssessmentRunRequest is a API request type for the StartAssessmentRun API operation.
type StartAssessmentRunRequest struct {
	*aws.Request
	Input *StartAssessmentRunInput
	Copy  func(*StartAssessmentRunInput) StartAssessmentRunRequest
}

// Send marshals and sends the StartAssessmentRun API request.
func (r StartAssessmentRunRequest) Send() (*StartAssessmentRunOutput, error) {
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	return r.Request.Data.(*StartAssessmentRunOutput), nil
}

// StartAssessmentRunRequest returns a request value for making API operation for
// Amazon Inspector.
//
// Starts the assessment run specified by the ARN of the assessment template.
// For this API to function properly, you must not exceed the limit of running
// up to 500 concurrent agents per AWS account.
//
//    // Example sending a request using the StartAssessmentRunRequest method.
//    req := client.StartAssessmentRunRequest(params)
//    resp, err := req.Send()
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/inspector-2016-02-16/StartAssessmentRun
func (c *Inspector) StartAssessmentRunRequest(input *StartAssessmentRunInput) StartAssessmentRunRequest {
	op := &aws.Operation{
		Name:       opStartAssessmentRun,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &StartAssessmentRunInput{}
	}

	output := &StartAssessmentRunOutput{}
	req := c.newRequest(op, input, output)
	output.responseMetadata = aws.Response{Request: req}

	return StartAssessmentRunRequest{Request: req, Input: input, Copy: c.StartAssessmentRunRequest}
}

const opStopAssessmentRun = "StopAssessmentRun"

// StopAssessmentRunRequest is a API request type for the StopAssessmentRun API operation.
type StopAssessmentRunRequest struct {
	*aws.Request
	Input *StopAssessmentRunInput
	Copy  func(*StopAssessmentRunInput) StopAssessmentRunRequest
}

// Send marshals and sends the StopAssessmentRun API request.
func (r StopAssessmentRunRequest) Send() (*StopAssessmentRunOutput, error) {
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	return r.Request.Data.(*StopAssessmentRunOutput), nil
}

// StopAssessmentRunRequest returns a request value for making API operation for
// Amazon Inspector.
//
// Stops the assessment run that is specified by the ARN of the assessment run.
//
//    // Example sending a request using the StopAssessmentRunRequest method.
//    req := client.StopAssessmentRunRequest(params)
//    resp, err := req.Send()
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/inspector-2016-02-16/StopAssessmentRun
func (c *Inspector) StopAssessmentRunRequest(input *StopAssessmentRunInput) StopAssessmentRunRequest {
	op := &aws.Operation{
		Name:       opStopAssessmentRun,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &StopAssessmentRunInput{}
	}

	output := &StopAssessmentRunOutput{}
	req := c.newRequest(op, input, output)
	req.Handlers.Unmarshal.Remove(jsonrpc.UnmarshalHandler)
	req.Handlers.Unmarshal.PushBackNamed(protocol.UnmarshalDiscardBodyHandler)
	output.responseMetadata = aws.Response{Request: req}

	return StopAssessmentRunRequest{Request: req, Input: input, Copy: c.StopAssessmentRunRequest}
}

const opSubscribeToEvent = "SubscribeToEvent"

// SubscribeToEventRequest is a API request type for the SubscribeToEvent API operation.
type SubscribeToEventRequest struct {
	*aws.Request
	Input *SubscribeToEventInput
	Copy  func(*SubscribeToEventInput) SubscribeToEventRequest
}

// Send marshals and sends the SubscribeToEvent API request.
func (r SubscribeToEventRequest) Send() (*SubscribeToEventOutput, error) {
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	return r.Request.Data.(*SubscribeToEventOutput), nil
}

// SubscribeToEventRequest returns a request value for making API operation for
// Amazon Inspector.
//
// Enables the process of sending Amazon Simple Notification Service (SNS) notifications
// about a specified event to a specified SNS topic.
//
//    // Example sending a request using the SubscribeToEventRequest method.
//    req := client.SubscribeToEventRequest(params)
//    resp, err := req.Send()
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/inspector-2016-02-16/SubscribeToEvent
func (c *Inspector) SubscribeToEventRequest(input *SubscribeToEventInput) SubscribeToEventRequest {
	op := &aws.Operation{
		Name:       opSubscribeToEvent,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &SubscribeToEventInput{}
	}

	output := &SubscribeToEventOutput{}
	req := c.newRequest(op, input, output)
	req.Handlers.Unmarshal.Remove(jsonrpc.UnmarshalHandler)
	req.Handlers.Unmarshal.PushBackNamed(protocol.UnmarshalDiscardBodyHandler)
	output.responseMetadata = aws.Response{Request: req}

	return SubscribeToEventRequest{Request: req, Input: input, Copy: c.SubscribeToEventRequest}
}

const opUnsubscribeFromEvent = "UnsubscribeFromEvent"

// UnsubscribeFromEventRequest is a API request type for the UnsubscribeFromEvent API operation.
type UnsubscribeFromEventRequest struct {
	*aws.Request
	Input *UnsubscribeFromEventInput
	Copy  func(*UnsubscribeFromEventInput) UnsubscribeFromEventRequest
}

// Send marshals and sends the UnsubscribeFromEvent API request.
func (r UnsubscribeFromEventRequest) Send() (*UnsubscribeFromEventOutput, error) {
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	return r.Request.Data.(*UnsubscribeFromEventOutput), nil
}

// UnsubscribeFromEventRequest returns a request value for making API operation for
// Amazon Inspector.
//
// Disables the process of sending Amazon Simple Notification Service (SNS)
// notifications about a specified event to a specified SNS topic.
//
//    // Example sending a request using the UnsubscribeFromEventRequest method.
//    req := client.UnsubscribeFromEventRequest(params)
//    resp, err := req.Send()
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/inspector-2016-02-16/UnsubscribeFromEvent
func (c *Inspector) UnsubscribeFromEventRequest(input *UnsubscribeFromEventInput) UnsubscribeFromEventRequest {
	op := &aws.Operation{
		Name:       opUnsubscribeFromEvent,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &UnsubscribeFromEventInput{}
	}

	output := &UnsubscribeFromEventOutput{}
	req := c.newRequest(op, input, output)
	req.Handlers.Unmarshal.Remove(jsonrpc.UnmarshalHandler)
	req.Handlers.Unmarshal.PushBackNamed(protocol.UnmarshalDiscardBodyHandler)
	output.responseMetadata = aws.Response{Request: req}

	return UnsubscribeFromEventRequest{Request: req, Input: input, Copy: c.UnsubscribeFromEventRequest}
}

const opUpdateAssessmentTarget = "UpdateAssessmentTarget"

// UpdateAssessmentTargetRequest is a API request type for the UpdateAssessmentTarget API operation.
type UpdateAssessmentTargetRequest struct {
	*aws.Request
	Input *UpdateAssessmentTargetInput
	Copy  func(*UpdateAssessmentTargetInput) UpdateAssessmentTargetRequest
}

// Send marshals and sends the UpdateAssessmentTarget API request.
func (r UpdateAssessmentTargetRequest) Send() (*UpdateAssessmentTargetOutput, error) {
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	return r.Request.Data.(*UpdateAssessmentTargetOutput), nil
}

// UpdateAssessmentTargetRequest returns a request value for making API operation for
// Amazon Inspector.
//
// Updates the assessment target that is specified by the ARN of the assessment
// target.
//
//    // Example sending a request using the UpdateAssessmentTargetRequest method.
//    req := client.UpdateAssessmentTargetRequest(params)
//    resp, err := req.Send()
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/inspector-2016-02-16/UpdateAssessmentTarget
func (c *Inspector) UpdateAssessmentTargetRequest(input *UpdateAssessmentTargetInput) UpdateAssessmentTargetRequest {
	op := &aws.Operation{
		Name:       opUpdateAssessmentTarget,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &UpdateAssessmentTargetInput{}
	}

	output := &UpdateAssessmentTargetOutput{}
	req := c.newRequest(op, input, output)
	req.Handlers.Unmarshal.Remove(jsonrpc.UnmarshalHandler)
	req.Handlers.Unmarshal.PushBackNamed(protocol.UnmarshalDiscardBodyHandler)
	output.responseMetadata = aws.Response{Request: req}

	return UpdateAssessmentTargetRequest{Request: req, Input: input, Copy: c.UpdateAssessmentTargetRequest}
}

// Please also see https://docs.aws.amazon.com/goto/WebAPI/inspector-2016-02-16/AddAttributesToFindingsRequest
type AddAttributesToFindingsInput struct {
	_ struct{} `type:"structure"`

	// The array of attributes that you want to assign to specified findings.
	//
	// Attributes is a required field
	Attributes []Attribute `locationName:"attributes" type:"list" required:"true"`

	// The ARNs that specify the findings that you want to assign attributes to.
	//
	// FindingArns is a required field
	FindingArns []string `locationName:"findingArns" min:"1" type:"list" required:"true"`
}

// String returns the string representation
func (s AddAttributesToFindingsInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s AddAttributesToFindingsInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *AddAttributesToFindingsInput) Validate() error {
	invalidParams := aws.ErrInvalidParams{Context: "AddAttributesToFindingsInput"}

	if s.Attributes == nil {
		invalidParams.Add(aws.NewErrParamRequired("Attributes"))
	}

	if s.FindingArns == nil {
		invalidParams.Add(aws.NewErrParamRequired("FindingArns"))
	}
	if s.FindingArns != nil && len(s.FindingArns) < 1 {
		invalidParams.Add(aws.NewErrParamMinLen("FindingArns", 1))
	}
	if s.Attributes != nil {
		for i, v := range s.Attributes {
			if err := v.Validate(); err != nil {
				invalidParams.AddNested(fmt.Sprintf("%s[%v]", "Attributes", i), err.(aws.ErrInvalidParams))
			}
		}
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// Please also see https://docs.aws.amazon.com/goto/WebAPI/inspector-2016-02-16/AddAttributesToFindingsResponse
type AddAttributesToFindingsOutput struct {
	_ struct{} `type:"structure"`

	responseMetadata aws.Response

	// Attribute details that cannot be described. An error code is provided for
	// each failed item.
	//
	// FailedItems is a required field
	FailedItems map[string]FailedItemDetails `locationName:"failedItems" type:"map" required:"true"`
}

// String returns the string representation
func (s AddAttributesToFindingsOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s AddAttributesToFindingsOutput) GoString() string {
	return s.String()
}

// SDKResponseMetdata return sthe response metadata for the API.
func (s AddAttributesToFindingsOutput) SDKResponseMetadata() aws.Response {
	return s.responseMetadata
}

// Used in the exception error that is thrown if you start an assessment run
// for an assessment target that includes an EC2 instance that is already participating
// in another started assessment run.
// Please also see https://docs.aws.amazon.com/goto/WebAPI/inspector-2016-02-16/AgentAlreadyRunningAssessment
type AgentAlreadyRunningAssessment struct {
	_ struct{} `type:"structure"`

	// ID of the agent that is running on an EC2 instance that is already participating
	// in another started assessment run.
	//
	// AgentId is a required field
	AgentId *string `locationName:"agentId" min:"1" type:"string" required:"true"`

	// The ARN of the assessment run that has already been started.
	//
	// AssessmentRunArn is a required field
	AssessmentRunArn *string `locationName:"assessmentRunArn" min:"1" type:"string" required:"true"`
}

// String returns the string representation
func (s AgentAlreadyRunningAssessment) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s AgentAlreadyRunningAssessment) GoString() string {
	return s.String()
}

// Contains information about an Amazon Inspector agent. This data type is used
// as a request parameter in the ListAssessmentRunAgents action.
// Please also see https://docs.aws.amazon.com/goto/WebAPI/inspector-2016-02-16/AgentFilter
type AgentFilter struct {
	_ struct{} `type:"structure"`

	// The detailed health state of the agent. Values can be set to IDLE, RUNNING,
	// SHUTDOWN, UNHEALTHY, THROTTLED, and UNKNOWN.
	//
	// AgentHealthCodes is a required field
	AgentHealthCodes []AgentHealthCode `locationName:"agentHealthCodes" type:"list" required:"true"`

	// The current health state of the agent. Values can be set to HEALTHY or UNHEALTHY.
	//
	// AgentHealths is a required field
	AgentHealths []AgentHealth `locationName:"agentHealths" type:"list" required:"true"`
}

// String returns the string representation
func (s AgentFilter) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s AgentFilter) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *AgentFilter) Validate() error {
	invalidParams := aws.ErrInvalidParams{Context: "AgentFilter"}

	if s.AgentHealthCodes == nil {
		invalidParams.Add(aws.NewErrParamRequired("AgentHealthCodes"))
	}

	if s.AgentHealths == nil {
		invalidParams.Add(aws.NewErrParamRequired("AgentHealths"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// Used as a response element in the PreviewAgents action.
// Please also see https://docs.aws.amazon.com/goto/WebAPI/inspector-2016-02-16/AgentPreview
type AgentPreview struct {
	_ struct{} `type:"structure"`

	// The health status of the Amazon Inspector Agent.
	AgentHealth AgentHealth `locationName:"agentHealth" type:"string" enum:"true"`

	// The ID of the EC2 instance where the agent is installed.
	//
	// AgentId is a required field
	AgentId *string `locationName:"agentId" min:"1" type:"string" required:"true"`

	// The version of the Amazon Inspector Agent.
	AgentVersion *string `locationName:"agentVersion" min:"1" type:"string"`

	// The Auto Scaling group for the EC2 instance where the agent is installed.
	AutoScalingGroup *string `locationName:"autoScalingGroup" min:"1" type:"string"`

	// The hostname of the EC2 instance on which the Amazon Inspector Agent is installed.
	Hostname *string `locationName:"hostname" type:"string"`

	// The IP address of the EC2 instance on which the Amazon Inspector Agent is
	// installed.
	Ipv4Address *string `locationName:"ipv4Address" min:"7" type:"string"`

	// The kernel version of the operating system running on the EC2 instance on
	// which the Amazon Inspector Agent is installed.
	KernelVersion *string `locationName:"kernelVersion" min:"1" type:"string"`

	// The operating system running on the EC2 instance on which the Amazon Inspector
	// Agent is installed.
	OperatingSystem *string `locationName:"operatingSystem" min:"1" type:"string"`
}

// String returns the string representation
func (s AgentPreview) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s AgentPreview) GoString() string {
	return s.String()
}

// A snapshot of an Amazon Inspector assessment run that contains the findings
// of the assessment run .
//
// Used as the response element in the DescribeAssessmentRuns action.
// Please also see https://docs.aws.amazon.com/goto/WebAPI/inspector-2016-02-16/AssessmentRun
type AssessmentRun struct {
	_ struct{} `type:"structure"`

	// The ARN of the assessment run.
	//
	// Arn is a required field
	Arn *string `locationName:"arn" min:"1" type:"string" required:"true"`

	// The ARN of the assessment template that is associated with the assessment
	// run.
	//
	// AssessmentTemplateArn is a required field
	AssessmentTemplateArn *string `locationName:"assessmentTemplateArn" min:"1" type:"string" required:"true"`

	// The assessment run completion time that corresponds to the rules packages
	// evaluation completion time or failure.
	CompletedAt *time.Time `locationName:"completedAt" type:"timestamp" timestampFormat:"unix"`

	// The time when StartAssessmentRun was called.
	//
	// CreatedAt is a required field
	CreatedAt *time.Time `locationName:"createdAt" type:"timestamp" timestampFormat:"unix" required:"true"`

	// A Boolean value (true or false) that specifies whether the process of collecting
	// data from the agents is completed.
	//
	// DataCollected is a required field
	DataCollected *bool `locationName:"dataCollected" type:"boolean" required:"true"`

	// The duration of the assessment run.
	//
	// DurationInSeconds is a required field
	DurationInSeconds *int64 `locationName:"durationInSeconds" min:"180" type:"integer" required:"true"`

	// Provides a total count of generated findings per severity.
	//
	// FindingCounts is a required field
	FindingCounts map[string]int64 `locationName:"findingCounts" type:"map" required:"true"`

	// The auto-generated name for the assessment run.
	//
	// Name is a required field
	Name *string `locationName:"name" min:"1" type:"string" required:"true"`

	// A list of notifications for the event subscriptions. A notification about
	// a particular generated finding is added to this list only once.
	//
	// Notifications is a required field
	Notifications []AssessmentRunNotification `locationName:"notifications" type:"list" required:"true"`

	// The rules packages selected for the assessment run.
	//
	// RulesPackageArns is a required field
	RulesPackageArns []string `locationName:"rulesPackageArns" min:"1" type:"list" required:"true"`

	// The time when StartAssessmentRun was called.
	StartedAt *time.Time `locationName:"startedAt" type:"timestamp" timestampFormat:"unix"`

	// The state of the assessment run.
	//
	// State is a required field
	State AssessmentRunState `locationName:"state" type:"string" required:"true" enum:"true"`

	// The last time when the assessment run's state changed.
	//
	// StateChangedAt is a required field
	StateChangedAt *time.Time `locationName:"stateChangedAt" type:"timestamp" timestampFormat:"unix" required:"true"`

	// A list of the assessment run state changes.
	//
	// StateChanges is a required field
	StateChanges []AssessmentRunStateChange `locationName:"stateChanges" type:"list" required:"true"`

	// The user-defined attributes that are assigned to every generated finding.
	//
	// UserAttributesForFindings is a required field
	UserAttributesForFindings []Attribute `locationName:"userAttributesForFindings" type:"list" required:"true"`
}

// String returns the string representation
func (s AssessmentRun) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s AssessmentRun) GoString() string {
	return s.String()
}

// Contains information about an Amazon Inspector agent. This data type is used
// as a response element in the ListAssessmentRunAgents action.
// Please also see https://docs.aws.amazon.com/goto/WebAPI/inspector-2016-02-16/AssessmentRunAgent
type AssessmentRunAgent struct {
	_ struct{} `type:"structure"`

	// The current health state of the agent.
	//
	// AgentHealth is a required field
	AgentHealth AgentHealth `locationName:"agentHealth" type:"string" required:"true" enum:"true"`

	// The detailed health state of the agent.
	//
	// AgentHealthCode is a required field
	AgentHealthCode AgentHealthCode `locationName:"agentHealthCode" type:"string" required:"true" enum:"true"`

	// The description for the agent health code.
	AgentHealthDetails *string `locationName:"agentHealthDetails" type:"string"`

	// The AWS account of the EC2 instance where the agent is installed.
	//
	// AgentId is a required field
	AgentId *string `locationName:"agentId" min:"1" type:"string" required:"true"`

	// The ARN of the assessment run that is associated with the agent.
	//
	// AssessmentRunArn is a required field
	AssessmentRunArn *string `locationName:"assessmentRunArn" min:"1" type:"string" required:"true"`

	// The Auto Scaling group of the EC2 instance that is specified by the agent
	// ID.
	AutoScalingGroup *string `locationName:"autoScalingGroup" min:"1" type:"string"`

	// The Amazon Inspector application data metrics that are collected by the agent.
	//
	// TelemetryMetadata is a required field
	TelemetryMetadata []TelemetryMetadata `locationName:"telemetryMetadata" type:"list" required:"true"`
}

// String returns the string representation
func (s AssessmentRunAgent) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s AssessmentRunAgent) GoString() string {
	return s.String()
}

// Used as the request parameter in the ListAssessmentRuns action.
// Please also see https://docs.aws.amazon.com/goto/WebAPI/inspector-2016-02-16/AssessmentRunFilter
type AssessmentRunFilter struct {
	_ struct{} `type:"structure"`

	// For a record to match a filter, the value that is specified for this data
	// type property must inclusively match any value between the specified minimum
	// and maximum values of the completedAt property of the AssessmentRun data
	// type.
	CompletionTimeRange *TimestampRange `locationName:"completionTimeRange" type:"structure"`

	// For a record to match a filter, the value that is specified for this data
	// type property must inclusively match any value between the specified minimum
	// and maximum values of the durationInSeconds property of the AssessmentRun
	// data type.
	DurationRange *DurationRange `locationName:"durationRange" type:"structure"`

	// For a record to match a filter, an explicit value or a string containing
	// a wildcard that is specified for this data type property must match the value
	// of the assessmentRunName property of the AssessmentRun data type.
	NamePattern *string `locationName:"namePattern" min:"1" type:"string"`

	// For a record to match a filter, the value that is specified for this data
	// type property must be contained in the list of values of the rulesPackages
	// property of the AssessmentRun data type.
	RulesPackageArns []string `locationName:"rulesPackageArns" type:"list"`

	// For a record to match a filter, the value that is specified for this data
	// type property must inclusively match any value between the specified minimum
	// and maximum values of the startTime property of the AssessmentRun data type.
	StartTimeRange *TimestampRange `locationName:"startTimeRange" type:"structure"`

	// For a record to match a filter, the value that is specified for this data
	// type property must match the stateChangedAt property of the AssessmentRun
	// data type.
	StateChangeTimeRange *TimestampRange `locationName:"stateChangeTimeRange" type:"structure"`

	// For a record to match a filter, one of the values specified for this data
	// type property must be the exact match of the value of the assessmentRunState
	// property of the AssessmentRun data type.
	States []AssessmentRunState `locationName:"states" type:"list"`
}

// String returns the string representation
func (s AssessmentRunFilter) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s AssessmentRunFilter) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *AssessmentRunFilter) Validate() error {
	invalidParams := aws.ErrInvalidParams{Context: "AssessmentRunFilter"}
	if s.NamePattern != nil && len(*s.NamePattern) < 1 {
		invalidParams.Add(aws.NewErrParamMinLen("NamePattern", 1))
	}
	if s.DurationRange != nil {
		if err := s.DurationRange.Validate(); err != nil {
			invalidParams.AddNested("DurationRange", err.(aws.ErrInvalidParams))
		}
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// Used as one of the elements of the AssessmentRun data type.
// Please also see https://docs.aws.amazon.com/goto/WebAPI/inspector-2016-02-16/AssessmentRunNotification
type AssessmentRunNotification struct {
	_ struct{} `type:"structure"`

	// The date of the notification.
	//
	// Date is a required field
	Date *time.Time `locationName:"date" type:"timestamp" timestampFormat:"unix" required:"true"`

	// The Boolean value that specifies whether the notification represents an error.
	//
	// Error is a required field
	Error *bool `locationName:"error" type:"boolean" required:"true"`

	// The event for which a notification is sent.
	//
	// Event is a required field
	Event Event `locationName:"event" type:"string" required:"true" enum:"true"`

	// The message included in the notification.
	Message *string `locationName:"message" type:"string"`

	// The status code of the SNS notification.
	SnsPublishStatusCode AssessmentRunNotificationSnsStatusCode `locationName:"snsPublishStatusCode" type:"string" enum:"true"`

	// The SNS topic to which the SNS notification is sent.
	SnsTopicArn *string `locationName:"snsTopicArn" min:"1" type:"string"`
}

// String returns the string representation
func (s AssessmentRunNotification) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s AssessmentRunNotification) GoString() string {
	return s.String()
}

// Used as one of the elements of the AssessmentRun data type.
// Please also see https://docs.aws.amazon.com/goto/WebAPI/inspector-2016-02-16/AssessmentRunStateChange
type AssessmentRunStateChange struct {
	_ struct{} `type:"structure"`

	// The assessment run state.
	//
	// State is a required field
	State AssessmentRunState `locationName:"state" type:"string" required:"true" enum:"true"`

	// The last time the assessment run state changed.
	//
	// StateChangedAt is a required field
	StateChangedAt *time.Time `locationName:"stateChangedAt" type:"timestamp" timestampFormat:"unix" required:"true"`
}

// String returns the string representation
func (s AssessmentRunStateChange) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s AssessmentRunStateChange) GoString() string {
	return s.String()
}

// Contains information about an Amazon Inspector application. This data type
// is used as the response element in the DescribeAssessmentTargets action.
// Please also see https://docs.aws.amazon.com/goto/WebAPI/inspector-2016-02-16/AssessmentTarget
type AssessmentTarget struct {
	_ struct{} `type:"structure"`

	// The ARN that specifies the Amazon Inspector assessment target.
	//
	// Arn is a required field
	Arn *string `locationName:"arn" min:"1" type:"string" required:"true"`

	// The time at which the assessment target is created.
	//
	// CreatedAt is a required field
	CreatedAt *time.Time `locationName:"createdAt" type:"timestamp" timestampFormat:"unix" required:"true"`

	// The name of the Amazon Inspector assessment target.
	//
	// Name is a required field
	Name *string `locationName:"name" min:"1" type:"string" required:"true"`

	// The ARN that specifies the resource group that is associated with the assessment
	// target.
	ResourceGroupArn *string `locationName:"resourceGroupArn" min:"1" type:"string"`

	// The time at which UpdateAssessmentTarget is called.
	//
	// UpdatedAt is a required field
	UpdatedAt *time.Time `locationName:"updatedAt" type:"timestamp" timestampFormat:"unix" required:"true"`
}

// String returns the string representation
func (s AssessmentTarget) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s AssessmentTarget) GoString() string {
	return s.String()
}

// Used as the request parameter in the ListAssessmentTargets action.
// Please also see https://docs.aws.amazon.com/goto/WebAPI/inspector-2016-02-16/AssessmentTargetFilter
type AssessmentTargetFilter struct {
	_ struct{} `type:"structure"`

	// For a record to match a filter, an explicit value or a string that contains
	// a wildcard that is specified for this data type property must match the value
	// of the assessmentTargetName property of the AssessmentTarget data type.
	AssessmentTargetNamePattern *string `locationName:"assessmentTargetNamePattern" min:"1" type:"string"`
}

// String returns the string representation
func (s AssessmentTargetFilter) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s AssessmentTargetFilter) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *AssessmentTargetFilter) Validate() error {
	invalidParams := aws.ErrInvalidParams{Context: "AssessmentTargetFilter"}
	if s.AssessmentTargetNamePattern != nil && len(*s.AssessmentTargetNamePattern) < 1 {
		invalidParams.Add(aws.NewErrParamMinLen("AssessmentTargetNamePattern", 1))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// Contains information about an Amazon Inspector assessment template. This
// data type is used as the response element in the DescribeAssessmentTemplates
// action.
// Please also see https://docs.aws.amazon.com/goto/WebAPI/inspector-2016-02-16/AssessmentTemplate
type AssessmentTemplate struct {
	_ struct{} `type:"structure"`

	// The ARN of the assessment template.
	//
	// Arn is a required field
	Arn *string `locationName:"arn" min:"1" type:"string" required:"true"`

	// The number of existing assessment runs associated with this assessment template.
	// This value can be zero or a positive integer.
	//
	// AssessmentRunCount is a required field
	AssessmentRunCount *int64 `locationName:"assessmentRunCount" type:"integer" required:"true"`

	// The ARN of the assessment target that corresponds to this assessment template.
	//
	// AssessmentTargetArn is a required field
	AssessmentTargetArn *string `locationName:"assessmentTargetArn" min:"1" type:"string" required:"true"`

	// The time at which the assessment template is created.
	//
	// CreatedAt is a required field
	CreatedAt *time.Time `locationName:"createdAt" type:"timestamp" timestampFormat:"unix" required:"true"`

	// The duration in seconds specified for this assessment tempate. The default
	// value is 3600 seconds (one hour). The maximum value is 86400 seconds (one
	// day).
	//
	// DurationInSeconds is a required field
	DurationInSeconds *int64 `locationName:"durationInSeconds" min:"180" type:"integer" required:"true"`

	// The Amazon Resource Name (ARN) of the most recent assessment run associated
	// with this assessment template. This value exists only when the value of assessmentRunCount
	// is greater than zero.
	LastAssessmentRunArn *string `locationName:"lastAssessmentRunArn" min:"1" type:"string"`

	// The name of the assessment template.
	//
	// Name is a required field
	Name *string `locationName:"name" min:"1" type:"string" required:"true"`

	// The rules packages that are specified for this assessment template.
	//
	// RulesPackageArns is a required field
	RulesPackageArns []string `locationName:"rulesPackageArns" type:"list" required:"true"`

	// The user-defined attributes that are assigned to every generated finding
	// from the assessment run that uses this assessment template.
	//
	// UserAttributesForFindings is a required field
	UserAttributesForFindings []Attribute `locationName:"userAttributesForFindings" type:"list" required:"true"`
}

// String returns the string representation
func (s AssessmentTemplate) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s AssessmentTemplate) GoString() string {
	return s.String()
}

// Used as the request parameter in the ListAssessmentTemplates action.
// Please also see https://docs.aws.amazon.com/goto/WebAPI/inspector-2016-02-16/AssessmentTemplateFilter
type AssessmentTemplateFilter struct {
	_ struct{} `type:"structure"`

	// For a record to match a filter, the value specified for this data type property
	// must inclusively match any value between the specified minimum and maximum
	// values of the durationInSeconds property of the AssessmentTemplate data type.
	DurationRange *DurationRange `locationName:"durationRange" type:"structure"`

	// For a record to match a filter, an explicit value or a string that contains
	// a wildcard that is specified for this data type property must match the value
	// of the assessmentTemplateName property of the AssessmentTemplate data type.
	NamePattern *string `locationName:"namePattern" min:"1" type:"string"`

	// For a record to match a filter, the values that are specified for this data
	// type property must be contained in the list of values of the rulesPackageArns
	// property of the AssessmentTemplate data type.
	RulesPackageArns []string `locationName:"rulesPackageArns" type:"list"`
}

// String returns the string representation
func (s AssessmentTemplateFilter) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s AssessmentTemplateFilter) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *AssessmentTemplateFilter) Validate() error {
	invalidParams := aws.ErrInvalidParams{Context: "AssessmentTemplateFilter"}
	if s.NamePattern != nil && len(*s.NamePattern) < 1 {
		invalidParams.Add(aws.NewErrParamMinLen("NamePattern", 1))
	}
	if s.DurationRange != nil {
		if err := s.DurationRange.Validate(); err != nil {
			invalidParams.AddNested("DurationRange", err.(aws.ErrInvalidParams))
		}
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// A collection of attributes of the host from which the finding is generated.
// Please also see https://docs.aws.amazon.com/goto/WebAPI/inspector-2016-02-16/AssetAttributes
type AssetAttributes struct {
	_ struct{} `type:"structure"`

	// The ID of the agent that is installed on the EC2 instance where the finding
	// is generated.
	AgentId *string `locationName:"agentId" min:"1" type:"string"`

	// The ID of the Amazon Machine Image (AMI) that is installed on the EC2 instance
	// where the finding is generated.
	AmiId *string `locationName:"amiId" type:"string"`

	// The Auto Scaling group of the EC2 instance where the finding is generated.
	AutoScalingGroup *string `locationName:"autoScalingGroup" min:"1" type:"string"`

	// The hostname of the EC2 instance where the finding is generated.
	Hostname *string `locationName:"hostname" type:"string"`

	// The list of IP v4 addresses of the EC2 instance where the finding is generated.
	Ipv4Addresses []string `locationName:"ipv4Addresses" type:"list"`

	// The schema version of this data type.
	//
	// SchemaVersion is a required field
	SchemaVersion *int64 `locationName:"schemaVersion" type:"integer" required:"true"`
}

// String returns the string representation
func (s AssetAttributes) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s AssetAttributes) GoString() string {
	return s.String()
}

// This data type is used as a request parameter in the AddAttributesToFindings
// and CreateAssessmentTemplate actions.
// Please also see https://docs.aws.amazon.com/goto/WebAPI/inspector-2016-02-16/Attribute
type Attribute struct {
	_ struct{} `type:"structure"`

	// The attribute key.
	//
	// Key is a required field
	Key *string `locationName:"key" min:"1" type:"string" required:"true"`

	// The value assigned to the attribute key.
	Value *string `locationName:"value" min:"1" type:"string"`
}

// String returns the string representation
func (s Attribute) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s Attribute) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *Attribute) Validate() error {
	invalidParams := aws.ErrInvalidParams{Context: "Attribute"}

	if s.Key == nil {
		invalidParams.Add(aws.NewErrParamRequired("Key"))
	}
	if s.Key != nil && len(*s.Key) < 1 {
		invalidParams.Add(aws.NewErrParamMinLen("Key", 1))
	}
	if s.Value != nil && len(*s.Value) < 1 {
		invalidParams.Add(aws.NewErrParamMinLen("Value", 1))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// Please also see https://docs.aws.amazon.com/goto/WebAPI/inspector-2016-02-16/CreateAssessmentTargetRequest
type CreateAssessmentTargetInput struct {
	_ struct{} `type:"structure"`

	// The user-defined name that identifies the assessment target that you want
	// to create. The name must be unique within the AWS account.
	//
	// AssessmentTargetName is a required field
	AssessmentTargetName *string `locationName:"assessmentTargetName" min:"1" type:"string" required:"true"`

	// The ARN that specifies the resource group that is used to create the assessment
	// target.
	ResourceGroupArn *string `locationName:"resourceGroupArn" min:"1" type:"string"`
}

// String returns the string representation
func (s CreateAssessmentTargetInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s CreateAssessmentTargetInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *CreateAssessmentTargetInput) Validate() error {
	invalidParams := aws.ErrInvalidParams{Context: "CreateAssessmentTargetInput"}

	if s.AssessmentTargetName == nil {
		invalidParams.Add(aws.NewErrParamRequired("AssessmentTargetName"))
	}
	if s.AssessmentTargetName != nil && len(*s.AssessmentTargetName) < 1 {
		invalidParams.Add(aws.NewErrParamMinLen("AssessmentTargetName", 1))
	}
	if s.ResourceGroupArn != nil && len(*s.ResourceGroupArn) < 1 {
		invalidParams.Add(aws.NewErrParamMinLen("ResourceGroupArn", 1))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// Please also see https://docs.aws.amazon.com/goto/WebAPI/inspector-2016-02-16/CreateAssessmentTargetResponse
type CreateAssessmentTargetOutput struct {
	_ struct{} `type:"structure"`

	responseMetadata aws.Response

	// The ARN that specifies the assessment target that is created.
	//
	// AssessmentTargetArn is a required field
	AssessmentTargetArn *string `locationName:"assessmentTargetArn" min:"1" type:"string" required:"true"`
}

// String returns the string representation
func (s CreateAssessmentTargetOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s CreateAssessmentTargetOutput) GoString() string {
	return s.String()
}

// SDKResponseMetdata return sthe response metadata for the API.
func (s CreateAssessmentTargetOutput) SDKResponseMetadata() aws.Response {
	return s.responseMetadata
}

// Please also see https://docs.aws.amazon.com/goto/WebAPI/inspector-2016-02-16/CreateAssessmentTemplateRequest
type CreateAssessmentTemplateInput struct {
	_ struct{} `type:"structure"`

	// The ARN that specifies the assessment target for which you want to create
	// the assessment template.
	//
	// AssessmentTargetArn is a required field
	AssessmentTargetArn *string `locationName:"assessmentTargetArn" min:"1" type:"string" required:"true"`

	// The user-defined name that identifies the assessment template that you want
	// to create. You can create several assessment templates for an assessment
	// target. The names of the assessment templates that correspond to a particular
	// assessment target must be unique.
	//
	// AssessmentTemplateName is a required field
	AssessmentTemplateName *string `locationName:"assessmentTemplateName" min:"1" type:"string" required:"true"`

	// The duration of the assessment run in seconds. The default value is 3600
	// seconds (one hour).
	//
	// DurationInSeconds is a required field
	DurationInSeconds *int64 `locationName:"durationInSeconds" min:"180" type:"integer" required:"true"`

	// The ARNs that specify the rules packages that you want to attach to the assessment
	// template.
	//
	// RulesPackageArns is a required field
	RulesPackageArns []string `locationName:"rulesPackageArns" type:"list" required:"true"`

	// The user-defined attributes that are assigned to every finding that is generated
	// by the assessment run that uses this assessment template. An attribute is
	// a key and value pair (an Attribute object). Within an assessment template,
	// each key must be unique.
	UserAttributesForFindings []Attribute `locationName:"userAttributesForFindings" type:"list"`
}

// String returns the string representation
func (s CreateAssessmentTemplateInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s CreateAssessmentTemplateInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *CreateAssessmentTemplateInput) Validate() error {
	invalidParams := aws.ErrInvalidParams{Context: "CreateAssessmentTemplateInput"}

	if s.AssessmentTargetArn == nil {
		invalidParams.Add(aws.NewErrParamRequired("AssessmentTargetArn"))
	}
	if s.AssessmentTargetArn != nil && len(*s.AssessmentTargetArn) < 1 {
		invalidParams.Add(aws.NewErrParamMinLen("AssessmentTargetArn", 1))
	}

	if s.AssessmentTemplateName == nil {
		invalidParams.Add(aws.NewErrParamRequired("AssessmentTemplateName"))
	}
	if s.AssessmentTemplateName != nil && len(*s.AssessmentTemplateName) < 1 {
		invalidParams.Add(aws.NewErrParamMinLen("AssessmentTemplateName", 1))
	}

	if s.DurationInSeconds == nil {
		invalidParams.Add(aws.NewErrParamRequired("DurationInSeconds"))
	}
	if s.DurationInSeconds != nil && *s.DurationInSeconds < 180 {
		invalidParams.Add(aws.NewErrParamMinValue("DurationInSeconds", 180))
	}

	if s.RulesPackageArns == nil {
		invalidParams.Add(aws.NewErrParamRequired("RulesPackageArns"))
	}
	if s.UserAttributesForFindings != nil {
		for i, v := range s.UserAttributesForFindings {
			if err := v.Validate(); err != nil {
				invalidParams.AddNested(fmt.Sprintf("%s[%v]", "UserAttributesForFindings", i), err.(aws.ErrInvalidParams))
			}
		}
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// Please also see https://docs.aws.amazon.com/goto/WebAPI/inspector-2016-02-16/CreateAssessmentTemplateResponse
type CreateAssessmentTemplateOutput struct {
	_ struct{} `type:"structure"`

	responseMetadata aws.Response

	// The ARN that specifies the assessment template that is created.
	//
	// AssessmentTemplateArn is a required field
	AssessmentTemplateArn *string `locationName:"assessmentTemplateArn" min:"1" type:"string" required:"true"`
}

// String returns the string representation
func (s CreateAssessmentTemplateOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s CreateAssessmentTemplateOutput) GoString() string {
	return s.String()
}

// SDKResponseMetdata return sthe response metadata for the API.
func (s CreateAssessmentTemplateOutput) SDKResponseMetadata() aws.Response {
	return s.responseMetadata
}

// Please also see https://docs.aws.amazon.com/goto/WebAPI/inspector-2016-02-16/CreateResourceGroupRequest
type CreateResourceGroupInput struct {
	_ struct{} `type:"structure"`

	// A collection of keys and an array of possible values, '[{"key":"key1","values":["Value1","Value2"]},{"key":"Key2","values":["Value3"]}]'.
	//
	// For example,'[{"key":"Name","values":["TestEC2Instance"]}]'.
	//
	// ResourceGroupTags is a required field
	ResourceGroupTags []ResourceGroupTag `locationName:"resourceGroupTags" min:"1" type:"list" required:"true"`
}

// String returns the string representation
func (s CreateResourceGroupInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s CreateResourceGroupInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *CreateResourceGroupInput) Validate() error {
	invalidParams := aws.ErrInvalidParams{Context: "CreateResourceGroupInput"}

	if s.ResourceGroupTags == nil {
		invalidParams.Add(aws.NewErrParamRequired("ResourceGroupTags"))
	}
	if s.ResourceGroupTags != nil && len(s.ResourceGroupTags) < 1 {
		invalidParams.Add(aws.NewErrParamMinLen("ResourceGroupTags", 1))
	}
	if s.ResourceGroupTags != nil {
		for i, v := range s.ResourceGroupTags {
			if err := v.Validate(); err != nil {
				invalidParams.AddNested(fmt.Sprintf("%s[%v]", "ResourceGroupTags", i), err.(aws.ErrInvalidParams))
			}
		}
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// Please also see https://docs.aws.amazon.com/goto/WebAPI/inspector-2016-02-16/CreateResourceGroupResponse
type CreateResourceGroupOutput struct {
	_ struct{} `type:"structure"`

	responseMetadata aws.Response

	// The ARN that specifies the resource group that is created.
	//
	// ResourceGroupArn is a required field
	ResourceGroupArn *string `locationName:"resourceGroupArn" min:"1" type:"string" required:"true"`
}

// String returns the string representation
func (s CreateResourceGroupOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s CreateResourceGroupOutput) GoString() string {
	return s.String()
}

// SDKResponseMetdata return sthe response metadata for the API.
func (s CreateResourceGroupOutput) SDKResponseMetadata() aws.Response {
	return s.responseMetadata
}

// Please also see https://docs.aws.amazon.com/goto/WebAPI/inspector-2016-02-16/DeleteAssessmentRunRequest
type DeleteAssessmentRunInput struct {
	_ struct{} `type:"structure"`

	// The ARN that specifies the assessment run that you want to delete.
	//
	// AssessmentRunArn is a required field
	AssessmentRunArn *string `locationName:"assessmentRunArn" min:"1" type:"string" required:"true"`
}

// String returns the string representation
func (s DeleteAssessmentRunInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DeleteAssessmentRunInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *DeleteAssessmentRunInput) Validate() error {
	invalidParams := aws.ErrInvalidParams{Context: "DeleteAssessmentRunInput"}

	if s.AssessmentRunArn == nil {
		invalidParams.Add(aws.NewErrParamRequired("AssessmentRunArn"))
	}
	if s.AssessmentRunArn != nil && len(*s.AssessmentRunArn) < 1 {
		invalidParams.Add(aws.NewErrParamMinLen("AssessmentRunArn", 1))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// Please also see https://docs.aws.amazon.com/goto/WebAPI/inspector-2016-02-16/DeleteAssessmentRunOutput
type DeleteAssessmentRunOutput struct {
	_ struct{} `type:"structure"`

	responseMetadata aws.Response
}

// String returns the string representation
func (s DeleteAssessmentRunOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DeleteAssessmentRunOutput) GoString() string {
	return s.String()
}

// SDKResponseMetdata return sthe response metadata for the API.
func (s DeleteAssessmentRunOutput) SDKResponseMetadata() aws.Response {
	return s.responseMetadata
}

// Please also see https://docs.aws.amazon.com/goto/WebAPI/inspector-2016-02-16/DeleteAssessmentTargetRequest
type DeleteAssessmentTargetInput struct {
	_ struct{} `type:"structure"`

	// The ARN that specifies the assessment target that you want to delete.
	//
	// AssessmentTargetArn is a required field
	AssessmentTargetArn *string `locationName:"assessmentTargetArn" min:"1" type:"string" required:"true"`
}

// String returns the string representation
func (s DeleteAssessmentTargetInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DeleteAssessmentTargetInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *DeleteAssessmentTargetInput) Validate() error {
	invalidParams := aws.ErrInvalidParams{Context: "DeleteAssessmentTargetInput"}

	if s.AssessmentTargetArn == nil {
		invalidParams.Add(aws.NewErrParamRequired("AssessmentTargetArn"))
	}
	if s.AssessmentTargetArn != nil && len(*s.AssessmentTargetArn) < 1 {
		invalidParams.Add(aws.NewErrParamMinLen("AssessmentTargetArn", 1))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// Please also see https://docs.aws.amazon.com/goto/WebAPI/inspector-2016-02-16/DeleteAssessmentTargetOutput
type DeleteAssessmentTargetOutput struct {
	_ struct{} `type:"structure"`

	responseMetadata aws.Response
}

// String returns the string representation
func (s DeleteAssessmentTargetOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DeleteAssessmentTargetOutput) GoString() string {
	return s.String()
}

// SDKResponseMetdata return sthe response metadata for the API.
func (s DeleteAssessmentTargetOutput) SDKResponseMetadata() aws.Response {
	return s.responseMetadata
}

// Please also see https://docs.aws.amazon.com/goto/WebAPI/inspector-2016-02-16/DeleteAssessmentTemplateRequest
type DeleteAssessmentTemplateInput struct {
	_ struct{} `type:"structure"`

	// The ARN that specifies the assessment template that you want to delete.
	//
	// AssessmentTemplateArn is a required field
	AssessmentTemplateArn *string `locationName:"assessmentTemplateArn" min:"1" type:"string" required:"true"`
}

// String returns the string representation
func (s DeleteAssessmentTemplateInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DeleteAssessmentTemplateInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *DeleteAssessmentTemplateInput) Validate() error {
	invalidParams := aws.ErrInvalidParams{Context: "DeleteAssessmentTemplateInput"}

	if s.AssessmentTemplateArn == nil {
		invalidParams.Add(aws.NewErrParamRequired("AssessmentTemplateArn"))
	}
	if s.AssessmentTemplateArn != nil && len(*s.AssessmentTemplateArn) < 1 {
		invalidParams.Add(aws.NewErrParamMinLen("AssessmentTemplateArn", 1))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// Please also see https://docs.aws.amazon.com/goto/WebAPI/inspector-2016-02-16/DeleteAssessmentTemplateOutput
type DeleteAssessmentTemplateOutput struct {
	_ struct{} `type:"structure"`

	responseMetadata aws.Response
}

// String returns the string representation
func (s DeleteAssessmentTemplateOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DeleteAssessmentTemplateOutput) GoString() string {
	return s.String()
}

// SDKResponseMetdata return sthe response metadata for the API.
func (s DeleteAssessmentTemplateOutput) SDKResponseMetadata() aws.Response {
	return s.responseMetadata
}

// Please also see https://docs.aws.amazon.com/goto/WebAPI/inspector-2016-02-16/DescribeAssessmentRunsRequest
type DescribeAssessmentRunsInput struct {
	_ struct{} `type:"structure"`

	// The ARN that specifies the assessment run that you want to describe.
	//
	// AssessmentRunArns is a required field
	AssessmentRunArns []string `locationName:"assessmentRunArns" min:"1" type:"list" required:"true"`
}

// String returns the string representation
func (s DescribeAssessmentRunsInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeAssessmentRunsInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *DescribeAssessmentRunsInput) Validate() error {
	invalidParams := aws.ErrInvalidParams{Context: "DescribeAssessmentRunsInput"}

	if s.AssessmentRunArns == nil {
		invalidParams.Add(aws.NewErrParamRequired("AssessmentRunArns"))
	}
	if s.AssessmentRunArns != nil && len(s.AssessmentRunArns) < 1 {
		invalidParams.Add(aws.NewErrParamMinLen("AssessmentRunArns", 1))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// Please also see https://docs.aws.amazon.com/goto/WebAPI/inspector-2016-02-16/DescribeAssessmentRunsResponse
type DescribeAssessmentRunsOutput struct {
	_ struct{} `type:"structure"`

	responseMetadata aws.Response

	// Information about the assessment run.
	//
	// AssessmentRuns is a required field
	AssessmentRuns []AssessmentRun `locationName:"assessmentRuns" type:"list" required:"true"`

	// Assessment run details that cannot be described. An error code is provided
	// for each failed item.
	//
	// FailedItems is a required field
	FailedItems map[string]FailedItemDetails `locationName:"failedItems" type:"map" required:"true"`
}

// String returns the string representation
func (s DescribeAssessmentRunsOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeAssessmentRunsOutput) GoString() string {
	return s.String()
}

// SDKResponseMetdata return sthe response metadata for the API.
func (s DescribeAssessmentRunsOutput) SDKResponseMetadata() aws.Response {
	return s.responseMetadata
}

// Please also see https://docs.aws.amazon.com/goto/WebAPI/inspector-2016-02-16/DescribeAssessmentTargetsRequest
type DescribeAssessmentTargetsInput struct {
	_ struct{} `type:"structure"`

	// The ARNs that specifies the assessment targets that you want to describe.
	//
	// AssessmentTargetArns is a required field
	AssessmentTargetArns []string `locationName:"assessmentTargetArns" min:"1" type:"list" required:"true"`
}

// String returns the string representation
func (s DescribeAssessmentTargetsInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeAssessmentTargetsInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *DescribeAssessmentTargetsInput) Validate() error {
	invalidParams := aws.ErrInvalidParams{Context: "DescribeAssessmentTargetsInput"}

	if s.AssessmentTargetArns == nil {
		invalidParams.Add(aws.NewErrParamRequired("AssessmentTargetArns"))
	}
	if s.AssessmentTargetArns != nil && len(s.AssessmentTargetArns) < 1 {
		invalidParams.Add(aws.NewErrParamMinLen("AssessmentTargetArns", 1))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// Please also see https://docs.aws.amazon.com/goto/WebAPI/inspector-2016-02-16/DescribeAssessmentTargetsResponse
type DescribeAssessmentTargetsOutput struct {
	_ struct{} `type:"structure"`

	responseMetadata aws.Response

	// Information about the assessment targets.
	//
	// AssessmentTargets is a required field
	AssessmentTargets []AssessmentTarget `locationName:"assessmentTargets" type:"list" required:"true"`

	// Assessment target details that cannot be described. An error code is provided
	// for each failed item.
	//
	// FailedItems is a required field
	FailedItems map[string]FailedItemDetails `locationName:"failedItems" type:"map" required:"true"`
}

// String returns the string representation
func (s DescribeAssessmentTargetsOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeAssessmentTargetsOutput) GoString() string {
	return s.String()
}

// SDKResponseMetdata return sthe response metadata for the API.
func (s DescribeAssessmentTargetsOutput) SDKResponseMetadata() aws.Response {
	return s.responseMetadata
}

// Please also see https://docs.aws.amazon.com/goto/WebAPI/inspector-2016-02-16/DescribeAssessmentTemplatesRequest
type DescribeAssessmentTemplatesInput struct {
	_ struct{} `type:"structure"`

	// AssessmentTemplateArns is a required field
	AssessmentTemplateArns []string `locationName:"assessmentTemplateArns" min:"1" type:"list" required:"true"`
}

// String returns the string representation
func (s DescribeAssessmentTemplatesInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeAssessmentTemplatesInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *DescribeAssessmentTemplatesInput) Validate() error {
	invalidParams := aws.ErrInvalidParams{Context: "DescribeAssessmentTemplatesInput"}

	if s.AssessmentTemplateArns == nil {
		invalidParams.Add(aws.NewErrParamRequired("AssessmentTemplateArns"))
	}
	if s.AssessmentTemplateArns != nil && len(s.AssessmentTemplateArns) < 1 {
		invalidParams.Add(aws.NewErrParamMinLen("AssessmentTemplateArns", 1))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// Please also see https://docs.aws.amazon.com/goto/WebAPI/inspector-2016-02-16/DescribeAssessmentTemplatesResponse
type DescribeAssessmentTemplatesOutput struct {
	_ struct{} `type:"structure"`

	responseMetadata aws.Response

	// Information about the assessment templates.
	//
	// AssessmentTemplates is a required field
	AssessmentTemplates []AssessmentTemplate `locationName:"assessmentTemplates" type:"list" required:"true"`

	// Assessment template details that cannot be described. An error code is provided
	// for each failed item.
	//
	// FailedItems is a required field
	FailedItems map[string]FailedItemDetails `locationName:"failedItems" type:"map" required:"true"`
}

// String returns the string representation
func (s DescribeAssessmentTemplatesOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeAssessmentTemplatesOutput) GoString() string {
	return s.String()
}

// SDKResponseMetdata return sthe response metadata for the API.
func (s DescribeAssessmentTemplatesOutput) SDKResponseMetadata() aws.Response {
	return s.responseMetadata
}

// Please also see https://docs.aws.amazon.com/goto/WebAPI/inspector-2016-02-16/DescribeCrossAccountAccessRoleInput
type DescribeCrossAccountAccessRoleInput struct {
	_ struct{} `type:"structure"`
}

// String returns the string representation
func (s DescribeCrossAccountAccessRoleInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeCrossAccountAccessRoleInput) GoString() string {
	return s.String()
}

// Please also see https://docs.aws.amazon.com/goto/WebAPI/inspector-2016-02-16/DescribeCrossAccountAccessRoleResponse
type DescribeCrossAccountAccessRoleOutput struct {
	_ struct{} `type:"structure"`

	responseMetadata aws.Response

	// The date when the cross-account access role was registered.
	//
	// RegisteredAt is a required field
	RegisteredAt *time.Time `locationName:"registeredAt" type:"timestamp" timestampFormat:"unix" required:"true"`

	// The ARN that specifies the IAM role that Amazon Inspector uses to access
	// your AWS account.
	//
	// RoleArn is a required field
	RoleArn *string `locationName:"roleArn" min:"1" type:"string" required:"true"`

	// A Boolean value that specifies whether the IAM role has the necessary policies
	// attached to enable Amazon Inspector to access your AWS account.
	//
	// Valid is a required field
	Valid *bool `locationName:"valid" type:"boolean" required:"true"`
}

// String returns the string representation
func (s DescribeCrossAccountAccessRoleOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeCrossAccountAccessRoleOutput) GoString() string {
	return s.String()
}

// SDKResponseMetdata return sthe response metadata for the API.
func (s DescribeCrossAccountAccessRoleOutput) SDKResponseMetadata() aws.Response {
	return s.responseMetadata
}

// Please also see https://docs.aws.amazon.com/goto/WebAPI/inspector-2016-02-16/DescribeFindingsRequest
type DescribeFindingsInput struct {
	_ struct{} `type:"structure"`

	// The ARN that specifies the finding that you want to describe.
	//
	// FindingArns is a required field
	FindingArns []string `locationName:"findingArns" min:"1" type:"list" required:"true"`

	// The locale into which you want to translate a finding description, recommendation,
	// and the short description that identifies the finding.
	Locale Locale `locationName:"locale" type:"string" enum:"true"`
}

// String returns the string representation
func (s DescribeFindingsInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeFindingsInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *DescribeFindingsInput) Validate() error {
	invalidParams := aws.ErrInvalidParams{Context: "DescribeFindingsInput"}

	if s.FindingArns == nil {
		invalidParams.Add(aws.NewErrParamRequired("FindingArns"))
	}
	if s.FindingArns != nil && len(s.FindingArns) < 1 {
		invalidParams.Add(aws.NewErrParamMinLen("FindingArns", 1))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// Please also see https://docs.aws.amazon.com/goto/WebAPI/inspector-2016-02-16/DescribeFindingsResponse
type DescribeFindingsOutput struct {
	_ struct{} `type:"structure"`

	responseMetadata aws.Response

	// Finding details that cannot be described. An error code is provided for each
	// failed item.
	//
	// FailedItems is a required field
	FailedItems map[string]FailedItemDetails `locationName:"failedItems" type:"map" required:"true"`

	// Information about the finding.
	//
	// Findings is a required field
	Findings []Finding `locationName:"findings" type:"list" required:"true"`
}

// String returns the string representation
func (s DescribeFindingsOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeFindingsOutput) GoString() string {
	return s.String()
}

// SDKResponseMetdata return sthe response metadata for the API.
func (s DescribeFindingsOutput) SDKResponseMetadata() aws.Response {
	return s.responseMetadata
}

// Please also see https://docs.aws.amazon.com/goto/WebAPI/inspector-2016-02-16/DescribeResourceGroupsRequest
type DescribeResourceGroupsInput struct {
	_ struct{} `type:"structure"`

	// The ARN that specifies the resource group that you want to describe.
	//
	// ResourceGroupArns is a required field
	ResourceGroupArns []string `locationName:"resourceGroupArns" min:"1" type:"list" required:"true"`
}

// String returns the string representation
func (s DescribeResourceGroupsInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeResourceGroupsInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *DescribeResourceGroupsInput) Validate() error {
	invalidParams := aws.ErrInvalidParams{Context: "DescribeResourceGroupsInput"}

	if s.ResourceGroupArns == nil {
		invalidParams.Add(aws.NewErrParamRequired("ResourceGroupArns"))
	}
	if s.ResourceGroupArns != nil && len(s.ResourceGroupArns) < 1 {
		invalidParams.Add(aws.NewErrParamMinLen("ResourceGroupArns", 1))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// Please also see https://docs.aws.amazon.com/goto/WebAPI/inspector-2016-02-16/DescribeResourceGroupsResponse
type DescribeResourceGroupsOutput struct {
	_ struct{} `type:"structure"`

	responseMetadata aws.Response

	// Resource group details that cannot be described. An error code is provided
	// for each failed item.
	//
	// FailedItems is a required field
	FailedItems map[string]FailedItemDetails `locationName:"failedItems" type:"map" required:"true"`

	// Information about a resource group.
	//
	// ResourceGroups is a required field
	ResourceGroups []ResourceGroup `locationName:"resourceGroups" type:"list" required:"true"`
}

// String returns the string representation
func (s DescribeResourceGroupsOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeResourceGroupsOutput) GoString() string {
	return s.String()
}

// SDKResponseMetdata return sthe response metadata for the API.
func (s DescribeResourceGroupsOutput) SDKResponseMetadata() aws.Response {
	return s.responseMetadata
}

// Please also see https://docs.aws.amazon.com/goto/WebAPI/inspector-2016-02-16/DescribeRulesPackagesRequest
type DescribeRulesPackagesInput struct {
	_ struct{} `type:"structure"`

	// The locale that you want to translate a rules package description into.
	Locale Locale `locationName:"locale" type:"string" enum:"true"`

	// The ARN that specifies the rules package that you want to describe.
	//
	// RulesPackageArns is a required field
	RulesPackageArns []string `locationName:"rulesPackageArns" min:"1" type:"list" required:"true"`
}

// String returns the string representation
func (s DescribeRulesPackagesInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeRulesPackagesInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *DescribeRulesPackagesInput) Validate() error {
	invalidParams := aws.ErrInvalidParams{Context: "DescribeRulesPackagesInput"}

	if s.RulesPackageArns == nil {
		invalidParams.Add(aws.NewErrParamRequired("RulesPackageArns"))
	}
	if s.RulesPackageArns != nil && len(s.RulesPackageArns) < 1 {
		invalidParams.Add(aws.NewErrParamMinLen("RulesPackageArns", 1))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// Please also see https://docs.aws.amazon.com/goto/WebAPI/inspector-2016-02-16/DescribeRulesPackagesResponse
type DescribeRulesPackagesOutput struct {
	_ struct{} `type:"structure"`

	responseMetadata aws.Response

	// Rules package details that cannot be described. An error code is provided
	// for each failed item.
	//
	// FailedItems is a required field
	FailedItems map[string]FailedItemDetails `locationName:"failedItems" type:"map" required:"true"`

	// Information about the rules package.
	//
	// RulesPackages is a required field
	RulesPackages []RulesPackage `locationName:"rulesPackages" type:"list" required:"true"`
}

// String returns the string representation
func (s DescribeRulesPackagesOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeRulesPackagesOutput) GoString() string {
	return s.String()
}

// SDKResponseMetdata return sthe response metadata for the API.
func (s DescribeRulesPackagesOutput) SDKResponseMetadata() aws.Response {
	return s.responseMetadata
}

// This data type is used in the AssessmentTemplateFilter data type.
// Please also see https://docs.aws.amazon.com/goto/WebAPI/inspector-2016-02-16/DurationRange
type DurationRange struct {
	_ struct{} `type:"structure"`

	// The maximum value of the duration range. Must be less than or equal to 604800
	// seconds (1 week).
	MaxSeconds *int64 `locationName:"maxSeconds" min:"180" type:"integer"`

	// The minimum value of the duration range. Must be greater than zero.
	MinSeconds *int64 `locationName:"minSeconds" min:"180" type:"integer"`
}

// String returns the string representation
func (s DurationRange) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DurationRange) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *DurationRange) Validate() error {
	invalidParams := aws.ErrInvalidParams{Context: "DurationRange"}
	if s.MaxSeconds != nil && *s.MaxSeconds < 180 {
		invalidParams.Add(aws.NewErrParamMinValue("MaxSeconds", 180))
	}
	if s.MinSeconds != nil && *s.MinSeconds < 180 {
		invalidParams.Add(aws.NewErrParamMinValue("MinSeconds", 180))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// This data type is used in the Subscription data type.
// Please also see https://docs.aws.amazon.com/goto/WebAPI/inspector-2016-02-16/EventSubscription
type EventSubscription struct {
	_ struct{} `type:"structure"`

	// The event for which Amazon Simple Notification Service (SNS) notifications
	// are sent.
	//
	// Event is a required field
	Event Event `locationName:"event" type:"string" required:"true" enum:"true"`

	// The time at which SubscribeToEvent is called.
	//
	// SubscribedAt is a required field
	SubscribedAt *time.Time `locationName:"subscribedAt" type:"timestamp" timestampFormat:"unix" required:"true"`
}

// String returns the string representation
func (s EventSubscription) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s EventSubscription) GoString() string {
	return s.String()
}

// Includes details about the failed items.
// Please also see https://docs.aws.amazon.com/goto/WebAPI/inspector-2016-02-16/FailedItemDetails
type FailedItemDetails struct {
	_ struct{} `type:"structure"`

	// The status code of a failed item.
	//
	// FailureCode is a required field
	FailureCode FailedItemErrorCode `locationName:"failureCode" type:"string" required:"true" enum:"true"`

	// Indicates whether you can immediately retry a request for this item for a
	// specified resource.
	//
	// Retryable is a required field
	Retryable *bool `locationName:"retryable" type:"boolean" required:"true"`
}

// String returns the string representation
func (s FailedItemDetails) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s FailedItemDetails) GoString() string {
	return s.String()
}

// Contains information about an Amazon Inspector finding. This data type is
// used as the response element in the DescribeFindings action.
// Please also see https://docs.aws.amazon.com/goto/WebAPI/inspector-2016-02-16/Finding
type Finding struct {
	_ struct{} `type:"structure"`

	// The ARN that specifies the finding.
	//
	// Arn is a required field
	Arn *string `locationName:"arn" min:"1" type:"string" required:"true"`

	// A collection of attributes of the host from which the finding is generated.
	AssetAttributes *AssetAttributes `locationName:"assetAttributes" type:"structure"`

	// The type of the host from which the finding is generated.
	AssetType AssetType `locationName:"assetType" type:"string" enum:"true"`

	// The system-defined attributes for the finding.
	//
	// Attributes is a required field
	Attributes []Attribute `locationName:"attributes" type:"list" required:"true"`

	// This data element is currently not used.
	Confidence *int64 `locationName:"confidence" type:"integer"`

	// The time when the finding was generated.
	//
	// CreatedAt is a required field
	CreatedAt *time.Time `locationName:"createdAt" type:"timestamp" timestampFormat:"unix" required:"true"`

	// The description of the finding.
	Description *string `locationName:"description" type:"string"`

	// The ID of the finding.
	Id *string `locationName:"id" type:"string"`

	// This data element is currently not used.
	IndicatorOfCompromise *bool `locationName:"indicatorOfCompromise" type:"boolean"`

	// The numeric value of the finding severity.
	NumericSeverity *float64 `locationName:"numericSeverity" type:"double"`

	// The recommendation for the finding.
	Recommendation *string `locationName:"recommendation" type:"string"`

	// The schema version of this data type.
	SchemaVersion *int64 `locationName:"schemaVersion" type:"integer"`

	// The data element is set to "Inspector".
	Service *string `locationName:"service" type:"string"`

	// This data type is used in the Finding data type.
	ServiceAttributes *ServiceAttributes `locationName:"serviceAttributes" type:"structure"`

	// The finding severity. Values can be set to High, Medium, Low, and Informational.
	Severity Severity `locationName:"severity" type:"string" enum:"true"`

	// The name of the finding.
	Title *string `locationName:"title" type:"string"`

	// The time when AddAttributesToFindings is called.
	//
	// UpdatedAt is a required field
	UpdatedAt *time.Time `locationName:"updatedAt" type:"timestamp" timestampFormat:"unix" required:"true"`

	// The user-defined attributes that are assigned to the finding.
	//
	// UserAttributes is a required field
	UserAttributes []Attribute `locationName:"userAttributes" type:"list" required:"true"`
}

// String returns the string representation
func (s Finding) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s Finding) GoString() string {
	return s.String()
}

// This data type is used as a request parameter in the ListFindings action.
// Please also see https://docs.aws.amazon.com/goto/WebAPI/inspector-2016-02-16/FindingFilter
type FindingFilter struct {
	_ struct{} `type:"structure"`

	// For a record to match a filter, one of the values that is specified for this
	// data type property must be the exact match of the value of the agentId property
	// of the Finding data type.
	AgentIds []string `locationName:"agentIds" type:"list"`

	// For a record to match a filter, the list of values that are specified for
	// this data type property must be contained in the list of values of the attributes
	// property of the Finding data type.
	Attributes []Attribute `locationName:"attributes" type:"list"`

	// For a record to match a filter, one of the values that is specified for this
	// data type property must be the exact match of the value of the autoScalingGroup
	// property of the Finding data type.
	AutoScalingGroups []string `locationName:"autoScalingGroups" type:"list"`

	// The time range during which the finding is generated.
	CreationTimeRange *TimestampRange `locationName:"creationTimeRange" type:"structure"`

	// For a record to match a filter, one of the values that is specified for this
	// data type property must be the exact match of the value of the ruleName property
	// of the Finding data type.
	RuleNames []string `locationName:"ruleNames" type:"list"`

	// For a record to match a filter, one of the values that is specified for this
	// data type property must be the exact match of the value of the rulesPackageArn
	// property of the Finding data type.
	RulesPackageArns []string `locationName:"rulesPackageArns" type:"list"`

	// For a record to match a filter, one of the values that is specified for this
	// data type property must be the exact match of the value of the severity property
	// of the Finding data type.
	Severities []Severity `locationName:"severities" type:"list"`

	// For a record to match a filter, the value that is specified for this data
	// type property must be contained in the list of values of the userAttributes
	// property of the Finding data type.
	UserAttributes []Attribute `locationName:"userAttributes" type:"list"`
}

// String returns the string representation
func (s FindingFilter) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s FindingFilter) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *FindingFilter) Validate() error {
	invalidParams := aws.ErrInvalidParams{Context: "FindingFilter"}
	if s.Attributes != nil {
		for i, v := range s.Attributes {
			if err := v.Validate(); err != nil {
				invalidParams.AddNested(fmt.Sprintf("%s[%v]", "Attributes", i), err.(aws.ErrInvalidParams))
			}
		}
	}
	if s.UserAttributes != nil {
		for i, v := range s.UserAttributes {
			if err := v.Validate(); err != nil {
				invalidParams.AddNested(fmt.Sprintf("%s[%v]", "UserAttributes", i), err.(aws.ErrInvalidParams))
			}
		}
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// Please also see https://docs.aws.amazon.com/goto/WebAPI/inspector-2016-02-16/GetAssessmentReportRequest
type GetAssessmentReportInput struct {
	_ struct{} `type:"structure"`

	// The ARN that specifies the assessment run for which you want to generate
	// a report.
	//
	// AssessmentRunArn is a required field
	AssessmentRunArn *string `locationName:"assessmentRunArn" min:"1" type:"string" required:"true"`

	// Specifies the file format (html or pdf) of the assessment report that you
	// want to generate.
	//
	// ReportFileFormat is a required field
	ReportFileFormat ReportFileFormat `locationName:"reportFileFormat" type:"string" required:"true" enum:"true"`

	// Specifies the type of the assessment report that you want to generate. There
	// are two types of assessment reports: a finding report and a full report.
	// For more information, see Assessment Reports (http://docs.aws.amazon.com/inspector/latest/userguide/inspector_reports.html).
	//
	// ReportType is a required field
	ReportType ReportType `locationName:"reportType" type:"string" required:"true" enum:"true"`
}

// String returns the string representation
func (s GetAssessmentReportInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s GetAssessmentReportInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *GetAssessmentReportInput) Validate() error {
	invalidParams := aws.ErrInvalidParams{Context: "GetAssessmentReportInput"}

	if s.AssessmentRunArn == nil {
		invalidParams.Add(aws.NewErrParamRequired("AssessmentRunArn"))
	}
	if s.AssessmentRunArn != nil && len(*s.AssessmentRunArn) < 1 {
		invalidParams.Add(aws.NewErrParamMinLen("AssessmentRunArn", 1))
	}
	if len(s.ReportFileFormat) == 0 {
		invalidParams.Add(aws.NewErrParamRequired("ReportFileFormat"))
	}
	if len(s.ReportType) == 0 {
		invalidParams.Add(aws.NewErrParamRequired("ReportType"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// Please also see https://docs.aws.amazon.com/goto/WebAPI/inspector-2016-02-16/GetAssessmentReportResponse
type GetAssessmentReportOutput struct {
	_ struct{} `type:"structure"`

	responseMetadata aws.Response

	// Specifies the status of the request to generate an assessment report.
	//
	// Status is a required field
	Status ReportStatus `locationName:"status" type:"string" required:"true" enum:"true"`

	// Specifies the URL where you can find the generated assessment report. This
	// parameter is only returned if the report is successfully generated.
	Url *string `locationName:"url" type:"string"`
}

// String returns the string representation
func (s GetAssessmentReportOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s GetAssessmentReportOutput) GoString() string {
	return s.String()
}

// SDKResponseMetdata return sthe response metadata for the API.
func (s GetAssessmentReportOutput) SDKResponseMetadata() aws.Response {
	return s.responseMetadata
}

// Please also see https://docs.aws.amazon.com/goto/WebAPI/inspector-2016-02-16/GetTelemetryMetadataRequest
type GetTelemetryMetadataInput struct {
	_ struct{} `type:"structure"`

	// The ARN that specifies the assessment run that has the telemetry data that
	// you want to obtain.
	//
	// AssessmentRunArn is a required field
	AssessmentRunArn *string `locationName:"assessmentRunArn" min:"1" type:"string" required:"true"`
}

// String returns the string representation
func (s GetTelemetryMetadataInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s GetTelemetryMetadataInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *GetTelemetryMetadataInput) Validate() error {
	invalidParams := aws.ErrInvalidParams{Context: "GetTelemetryMetadataInput"}

	if s.AssessmentRunArn == nil {
		invalidParams.Add(aws.NewErrParamRequired("AssessmentRunArn"))
	}
	if s.AssessmentRunArn != nil && len(*s.AssessmentRunArn) < 1 {
		invalidParams.Add(aws.NewErrParamMinLen("AssessmentRunArn", 1))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// Please also see https://docs.aws.amazon.com/goto/WebAPI/inspector-2016-02-16/GetTelemetryMetadataResponse
type GetTelemetryMetadataOutput struct {
	_ struct{} `type:"structure"`

	responseMetadata aws.Response

	// Telemetry details.
	//
	// TelemetryMetadata is a required field
	TelemetryMetadata []TelemetryMetadata `locationName:"telemetryMetadata" type:"list" required:"true"`
}

// String returns the string representation
func (s GetTelemetryMetadataOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s GetTelemetryMetadataOutput) GoString() string {
	return s.String()
}

// SDKResponseMetdata return sthe response metadata for the API.
func (s GetTelemetryMetadataOutput) SDKResponseMetadata() aws.Response {
	return s.responseMetadata
}

// Please also see https://docs.aws.amazon.com/goto/WebAPI/inspector-2016-02-16/ListAssessmentRunAgentsRequest
type ListAssessmentRunAgentsInput struct {
	_ struct{} `type:"structure"`

	// The ARN that specifies the assessment run whose agents you want to list.
	//
	// AssessmentRunArn is a required field
	AssessmentRunArn *string `locationName:"assessmentRunArn" min:"1" type:"string" required:"true"`

	// You can use this parameter to specify a subset of data to be included in
	// the action's response.
	//
	// For a record to match a filter, all specified filter attributes must match.
	// When multiple values are specified for a filter attribute, any of the values
	// can match.
	Filter *AgentFilter `locationName:"filter" type:"structure"`

	// You can use this parameter to indicate the maximum number of items that you
	// want in the response. The default value is 10. The maximum value is 500.
	MaxResults *int64 `locationName:"maxResults" type:"integer"`

	// You can use this parameter when paginating results. Set the value of this
	// parameter to null on your first call to the ListAssessmentRunAgents action.
	// Subsequent calls to the action fill nextToken in the request with the value
	// of NextToken from the previous response to continue listing data.
	NextToken *string `locationName:"nextToken" min:"1" type:"string"`
}

// String returns the string representation
func (s ListAssessmentRunAgentsInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s ListAssessmentRunAgentsInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *ListAssessmentRunAgentsInput) Validate() error {
	invalidParams := aws.ErrInvalidParams{Context: "ListAssessmentRunAgentsInput"}

	if s.AssessmentRunArn == nil {
		invalidParams.Add(aws.NewErrParamRequired("AssessmentRunArn"))
	}
	if s.AssessmentRunArn != nil && len(*s.AssessmentRunArn) < 1 {
		invalidParams.Add(aws.NewErrParamMinLen("AssessmentRunArn", 1))
	}
	if s.NextToken != nil && len(*s.NextToken) < 1 {
		invalidParams.Add(aws.NewErrParamMinLen("NextToken", 1))
	}
	if s.Filter != nil {
		if err := s.Filter.Validate(); err != nil {
			invalidParams.AddNested("Filter", err.(aws.ErrInvalidParams))
		}
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// Please also see https://docs.aws.amazon.com/goto/WebAPI/inspector-2016-02-16/ListAssessmentRunAgentsResponse
type ListAssessmentRunAgentsOutput struct {
	_ struct{} `type:"structure"`

	responseMetadata aws.Response

	// A list of ARNs that specifies the agents returned by the action.
	//
	// AssessmentRunAgents is a required field
	AssessmentRunAgents []AssessmentRunAgent `locationName:"assessmentRunAgents" type:"list" required:"true"`

	// When a response is generated, if there is more data to be listed, this parameter
	// is present in the response and contains the value to use for the nextToken
	// parameter in a subsequent pagination request. If there is no more data to
	// be listed, this parameter is set to null.
	NextToken *string `locationName:"nextToken" min:"1" type:"string"`
}

// String returns the string representation
func (s ListAssessmentRunAgentsOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s ListAssessmentRunAgentsOutput) GoString() string {
	return s.String()
}

// SDKResponseMetdata return sthe response metadata for the API.
func (s ListAssessmentRunAgentsOutput) SDKResponseMetadata() aws.Response {
	return s.responseMetadata
}

// Please also see https://docs.aws.amazon.com/goto/WebAPI/inspector-2016-02-16/ListAssessmentRunsRequest
type ListAssessmentRunsInput struct {
	_ struct{} `type:"structure"`

	// The ARNs that specify the assessment templates whose assessment runs you
	// want to list.
	AssessmentTemplateArns []string `locationName:"assessmentTemplateArns" type:"list"`

	// You can use this parameter to specify a subset of data to be included in
	// the action's response.
	//
	// For a record to match a filter, all specified filter attributes must match.
	// When multiple values are specified for a filter attribute, any of the values
	// can match.
	Filter *AssessmentRunFilter `locationName:"filter" type:"structure"`

	// You can use this parameter to indicate the maximum number of items that you
	// want in the response. The default value is 10. The maximum value is 500.
	MaxResults *int64 `locationName:"maxResults" type:"integer"`

	// You can use this parameter when paginating results. Set the value of this
	// parameter to null on your first call to the ListAssessmentRuns action. Subsequent
	// calls to the action fill nextToken in the request with the value of NextToken
	// from the previous response to continue listing data.
	NextToken *string `locationName:"nextToken" min:"1" type:"string"`
}

// String returns the string representation
func (s ListAssessmentRunsInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s ListAssessmentRunsInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *ListAssessmentRunsInput) Validate() error {
	invalidParams := aws.ErrInvalidParams{Context: "ListAssessmentRunsInput"}
	if s.NextToken != nil && len(*s.NextToken) < 1 {
		invalidParams.Add(aws.NewErrParamMinLen("NextToken", 1))
	}
	if s.Filter != nil {
		if err := s.Filter.Validate(); err != nil {
			invalidParams.AddNested("Filter", err.(aws.ErrInvalidParams))
		}
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// Please also see https://docs.aws.amazon.com/goto/WebAPI/inspector-2016-02-16/ListAssessmentRunsResponse
type ListAssessmentRunsOutput struct {
	_ struct{} `type:"structure"`

	responseMetadata aws.Response

	// A list of ARNs that specifies the assessment runs that are returned by the
	// action.
	//
	// AssessmentRunArns is a required field
	AssessmentRunArns []string `locationName:"assessmentRunArns" type:"list" required:"true"`

	// When a response is generated, if there is more data to be listed, this parameter
	// is present in the response and contains the value to use for the nextToken
	// parameter in a subsequent pagination request. If there is no more data to
	// be listed, this parameter is set to null.
	NextToken *string `locationName:"nextToken" min:"1" type:"string"`
}

// String returns the string representation
func (s ListAssessmentRunsOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s ListAssessmentRunsOutput) GoString() string {
	return s.String()
}

// SDKResponseMetdata return sthe response metadata for the API.
func (s ListAssessmentRunsOutput) SDKResponseMetadata() aws.Response {
	return s.responseMetadata
}

// Please also see https://docs.aws.amazon.com/goto/WebAPI/inspector-2016-02-16/ListAssessmentTargetsRequest
type ListAssessmentTargetsInput struct {
	_ struct{} `type:"structure"`

	// You can use this parameter to specify a subset of data to be included in
	// the action's response.
	//
	// For a record to match a filter, all specified filter attributes must match.
	// When multiple values are specified for a filter attribute, any of the values
	// can match.
	Filter *AssessmentTargetFilter `locationName:"filter" type:"structure"`

	// You can use this parameter to indicate the maximum number of items you want
	// in the response. The default value is 10. The maximum value is 500.
	MaxResults *int64 `locationName:"maxResults" type:"integer"`

	// You can use this parameter when paginating results. Set the value of this
	// parameter to null on your first call to the ListAssessmentTargets action.
	// Subsequent calls to the action fill nextToken in the request with the value
	// of NextToken from the previous response to continue listing data.
	NextToken *string `locationName:"nextToken" min:"1" type:"string"`
}

// String returns the string representation
func (s ListAssessmentTargetsInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s ListAssessmentTargetsInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *ListAssessmentTargetsInput) Validate() error {
	invalidParams := aws.ErrInvalidParams{Context: "ListAssessmentTargetsInput"}
	if s.NextToken != nil && len(*s.NextToken) < 1 {
		invalidParams.Add(aws.NewErrParamMinLen("NextToken", 1))
	}
	if s.Filter != nil {
		if err := s.Filter.Validate(); err != nil {
			invalidParams.AddNested("Filter", err.(aws.ErrInvalidParams))
		}
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// Please also see https://docs.aws.amazon.com/goto/WebAPI/inspector-2016-02-16/ListAssessmentTargetsResponse
type ListAssessmentTargetsOutput struct {
	_ struct{} `type:"structure"`

	responseMetadata aws.Response

	// A list of ARNs that specifies the assessment targets that are returned by
	// the action.
	//
	// AssessmentTargetArns is a required field
	AssessmentTargetArns []string `locationName:"assessmentTargetArns" type:"list" required:"true"`

	// When a response is generated, if there is more data to be listed, this parameter
	// is present in the response and contains the value to use for the nextToken
	// parameter in a subsequent pagination request. If there is no more data to
	// be listed, this parameter is set to null.
	NextToken *string `locationName:"nextToken" min:"1" type:"string"`
}

// String returns the string representation
func (s ListAssessmentTargetsOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s ListAssessmentTargetsOutput) GoString() string {
	return s.String()
}

// SDKResponseMetdata return sthe response metadata for the API.
func (s ListAssessmentTargetsOutput) SDKResponseMetadata() aws.Response {
	return s.responseMetadata
}

// Please also see https://docs.aws.amazon.com/goto/WebAPI/inspector-2016-02-16/ListAssessmentTemplatesRequest
type ListAssessmentTemplatesInput struct {
	_ struct{} `type:"structure"`

	// A list of ARNs that specifies the assessment targets whose assessment templates
	// you want to list.
	AssessmentTargetArns []string `locationName:"assessmentTargetArns" type:"list"`

	// You can use this parameter to specify a subset of data to be included in
	// the action's response.
	//
	// For a record to match a filter, all specified filter attributes must match.
	// When multiple values are specified for a filter attribute, any of the values
	// can match.
	Filter *AssessmentTemplateFilter `locationName:"filter" type:"structure"`

	// You can use this parameter to indicate the maximum number of items you want
	// in the response. The default value is 10. The maximum value is 500.
	MaxResults *int64 `locationName:"maxResults" type:"integer"`

	// You can use this parameter when paginating results. Set the value of this
	// parameter to null on your first call to the ListAssessmentTemplates action.
	// Subsequent calls to the action fill nextToken in the request with the value
	// of NextToken from the previous response to continue listing data.
	NextToken *string `locationName:"nextToken" min:"1" type:"string"`
}

// String returns the string representation
func (s ListAssessmentTemplatesInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s ListAssessmentTemplatesInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *ListAssessmentTemplatesInput) Validate() error {
	invalidParams := aws.ErrInvalidParams{Context: "ListAssessmentTemplatesInput"}
	if s.NextToken != nil && len(*s.NextToken) < 1 {
		invalidParams.Add(aws.NewErrParamMinLen("NextToken", 1))
	}
	if s.Filter != nil {
		if err := s.Filter.Validate(); err != nil {
			invalidParams.AddNested("Filter", err.(aws.ErrInvalidParams))
		}
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// Please also see https://docs.aws.amazon.com/goto/WebAPI/inspector-2016-02-16/ListAssessmentTemplatesResponse
type ListAssessmentTemplatesOutput struct {
	_ struct{} `type:"structure"`

	responseMetadata aws.Response

	// A list of ARNs that specifies the assessment templates returned by the action.
	//
	// AssessmentTemplateArns is a required field
	AssessmentTemplateArns []string `locationName:"assessmentTemplateArns" type:"list" required:"true"`

	// When a response is generated, if there is more data to be listed, this parameter
	// is present in the response and contains the value to use for the nextToken
	// parameter in a subsequent pagination request. If there is no more data to
	// be listed, this parameter is set to null.
	NextToken *string `locationName:"nextToken" min:"1" type:"string"`
}

// String returns the string representation
func (s ListAssessmentTemplatesOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s ListAssessmentTemplatesOutput) GoString() string {
	return s.String()
}

// SDKResponseMetdata return sthe response metadata for the API.
func (s ListAssessmentTemplatesOutput) SDKResponseMetadata() aws.Response {
	return s.responseMetadata
}

// Please also see https://docs.aws.amazon.com/goto/WebAPI/inspector-2016-02-16/ListEventSubscriptionsRequest
type ListEventSubscriptionsInput struct {
	_ struct{} `type:"structure"`

	// You can use this parameter to indicate the maximum number of items you want
	// in the response. The default value is 10. The maximum value is 500.
	MaxResults *int64 `locationName:"maxResults" type:"integer"`

	// You can use this parameter when paginating results. Set the value of this
	// parameter to null on your first call to the ListEventSubscriptions action.
	// Subsequent calls to the action fill nextToken in the request with the value
	// of NextToken from the previous response to continue listing data.
	NextToken *string `locationName:"nextToken" min:"1" type:"string"`

	// The ARN of the assessment template for which you want to list the existing
	// event subscriptions.
	ResourceArn *string `locationName:"resourceArn" min:"1" type:"string"`
}

// String returns the string representation
func (s ListEventSubscriptionsInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s ListEventSubscriptionsInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *ListEventSubscriptionsInput) Validate() error {
	invalidParams := aws.ErrInvalidParams{Context: "ListEventSubscriptionsInput"}
	if s.NextToken != nil && len(*s.NextToken) < 1 {
		invalidParams.Add(aws.NewErrParamMinLen("NextToken", 1))
	}
	if s.ResourceArn != nil && len(*s.ResourceArn) < 1 {
		invalidParams.Add(aws.NewErrParamMinLen("ResourceArn", 1))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// Please also see https://docs.aws.amazon.com/goto/WebAPI/inspector-2016-02-16/ListEventSubscriptionsResponse
type ListEventSubscriptionsOutput struct {
	_ struct{} `type:"structure"`

	responseMetadata aws.Response

	// When a response is generated, if there is more data to be listed, this parameter
	// is present in the response and contains the value to use for the nextToken
	// parameter in a subsequent pagination request. If there is no more data to
	// be listed, this parameter is set to null.
	NextToken *string `locationName:"nextToken" min:"1" type:"string"`

	// Details of the returned event subscriptions.
	//
	// Subscriptions is a required field
	Subscriptions []Subscription `locationName:"subscriptions" type:"list" required:"true"`
}

// String returns the string representation
func (s ListEventSubscriptionsOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s ListEventSubscriptionsOutput) GoString() string {
	return s.String()
}

// SDKResponseMetdata return sthe response metadata for the API.
func (s ListEventSubscriptionsOutput) SDKResponseMetadata() aws.Response {
	return s.responseMetadata
}

// Please also see https://docs.aws.amazon.com/goto/WebAPI/inspector-2016-02-16/ListFindingsRequest
type ListFindingsInput struct {
	_ struct{} `type:"structure"`

	// The ARNs of the assessment runs that generate the findings that you want
	// to list.
	AssessmentRunArns []string `locationName:"assessmentRunArns" type:"list"`

	// You can use this parameter to specify a subset of data to be included in
	// the action's response.
	//
	// For a record to match a filter, all specified filter attributes must match.
	// When multiple values are specified for a filter attribute, any of the values
	// can match.
	Filter *FindingFilter `locationName:"filter" type:"structure"`

	// You can use this parameter to indicate the maximum number of items you want
	// in the response. The default value is 10. The maximum value is 500.
	MaxResults *int64 `locationName:"maxResults" type:"integer"`

	// You can use this parameter when paginating results. Set the value of this
	// parameter to null on your first call to the ListFindings action. Subsequent
	// calls to the action fill nextToken in the request with the value of NextToken
	// from the previous response to continue listing data.
	NextToken *string `locationName:"nextToken" min:"1" type:"string"`
}

// String returns the string representation
func (s ListFindingsInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s ListFindingsInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *ListFindingsInput) Validate() error {
	invalidParams := aws.ErrInvalidParams{Context: "ListFindingsInput"}
	if s.NextToken != nil && len(*s.NextToken) < 1 {
		invalidParams.Add(aws.NewErrParamMinLen("NextToken", 1))
	}
	if s.Filter != nil {
		if err := s.Filter.Validate(); err != nil {
			invalidParams.AddNested("Filter", err.(aws.ErrInvalidParams))
		}
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// Please also see https://docs.aws.amazon.com/goto/WebAPI/inspector-2016-02-16/ListFindingsResponse
type ListFindingsOutput struct {
	_ struct{} `type:"structure"`

	responseMetadata aws.Response

	// A list of ARNs that specifies the findings returned by the action.
	//
	// FindingArns is a required field
	FindingArns []string `locationName:"findingArns" type:"list" required:"true"`

	// When a response is generated, if there is more data to be listed, this parameter
	// is present in the response and contains the value to use for the nextToken
	// parameter in a subsequent pagination request. If there is no more data to
	// be listed, this parameter is set to null.
	NextToken *string `locationName:"nextToken" min:"1" type:"string"`
}

// String returns the string representation
func (s ListFindingsOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s ListFindingsOutput) GoString() string {
	return s.String()
}

// SDKResponseMetdata return sthe response metadata for the API.
func (s ListFindingsOutput) SDKResponseMetadata() aws.Response {
	return s.responseMetadata
}

// Please also see https://docs.aws.amazon.com/goto/WebAPI/inspector-2016-02-16/ListRulesPackagesRequest
type ListRulesPackagesInput struct {
	_ struct{} `type:"structure"`

	// You can use this parameter to indicate the maximum number of items you want
	// in the response. The default value is 10. The maximum value is 500.
	MaxResults *int64 `locationName:"maxResults" type:"integer"`

	// You can use this parameter when paginating results. Set the value of this
	// parameter to null on your first call to the ListRulesPackages action. Subsequent
	// calls to the action fill nextToken in the request with the value of NextToken
	// from the previous response to continue listing data.
	NextToken *string `locationName:"nextToken" min:"1" type:"string"`
}

// String returns the string representation
func (s ListRulesPackagesInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s ListRulesPackagesInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *ListRulesPackagesInput) Validate() error {
	invalidParams := aws.ErrInvalidParams{Context: "ListRulesPackagesInput"}
	if s.NextToken != nil && len(*s.NextToken) < 1 {
		invalidParams.Add(aws.NewErrParamMinLen("NextToken", 1))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// Please also see https://docs.aws.amazon.com/goto/WebAPI/inspector-2016-02-16/ListRulesPackagesResponse
type ListRulesPackagesOutput struct {
	_ struct{} `type:"structure"`

	responseMetadata aws.Response

	// When a response is generated, if there is more data to be listed, this parameter
	// is present in the response and contains the value to use for the nextToken
	// parameter in a subsequent pagination request. If there is no more data to
	// be listed, this parameter is set to null.
	NextToken *string `locationName:"nextToken" min:"1" type:"string"`

	// The list of ARNs that specifies the rules packages returned by the action.
	//
	// RulesPackageArns is a required field
	RulesPackageArns []string `locationName:"rulesPackageArns" type:"list" required:"true"`
}

// String returns the string representation
func (s ListRulesPackagesOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s ListRulesPackagesOutput) GoString() string {
	return s.String()
}

// SDKResponseMetdata return sthe response metadata for the API.
func (s ListRulesPackagesOutput) SDKResponseMetadata() aws.Response {
	return s.responseMetadata
}

// Please also see https://docs.aws.amazon.com/goto/WebAPI/inspector-2016-02-16/ListTagsForResourceRequest
type ListTagsForResourceInput struct {
	_ struct{} `type:"structure"`

	// The ARN that specifies the assessment template whose tags you want to list.
	//
	// ResourceArn is a required field
	ResourceArn *string `locationName:"resourceArn" min:"1" type:"string" required:"true"`
}

// String returns the string representation
func (s ListTagsForResourceInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s ListTagsForResourceInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *ListTagsForResourceInput) Validate() error {
	invalidParams := aws.ErrInvalidParams{Context: "ListTagsForResourceInput"}

	if s.ResourceArn == nil {
		invalidParams.Add(aws.NewErrParamRequired("ResourceArn"))
	}
	if s.ResourceArn != nil && len(*s.ResourceArn) < 1 {
		invalidParams.Add(aws.NewErrParamMinLen("ResourceArn", 1))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// Please also see https://docs.aws.amazon.com/goto/WebAPI/inspector-2016-02-16/ListTagsForResourceResponse
type ListTagsForResourceOutput struct {
	_ struct{} `type:"structure"`

	responseMetadata aws.Response

	// A collection of key and value pairs.
	//
	// Tags is a required field
	Tags []Tag `locationName:"tags" type:"list" required:"true"`
}

// String returns the string representation
func (s ListTagsForResourceOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s ListTagsForResourceOutput) GoString() string {
	return s.String()
}

// SDKResponseMetdata return sthe response metadata for the API.
func (s ListTagsForResourceOutput) SDKResponseMetadata() aws.Response {
	return s.responseMetadata
}

// Please also see https://docs.aws.amazon.com/goto/WebAPI/inspector-2016-02-16/PreviewAgentsRequest
type PreviewAgentsInput struct {
	_ struct{} `type:"structure"`

	// You can use this parameter to indicate the maximum number of items you want
	// in the response. The default value is 10. The maximum value is 500.
	MaxResults *int64 `locationName:"maxResults" type:"integer"`

	// You can use this parameter when paginating results. Set the value of this
	// parameter to null on your first call to the PreviewAgents action. Subsequent
	// calls to the action fill nextToken in the request with the value of NextToken
	// from the previous response to continue listing data.
	NextToken *string `locationName:"nextToken" min:"1" type:"string"`

	// The ARN of the assessment target whose agents you want to preview.
	//
	// PreviewAgentsArn is a required field
	PreviewAgentsArn *string `locationName:"previewAgentsArn" min:"1" type:"string" required:"true"`
}

// String returns the string representation
func (s PreviewAgentsInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s PreviewAgentsInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *PreviewAgentsInput) Validate() error {
	invalidParams := aws.ErrInvalidParams{Context: "PreviewAgentsInput"}
	if s.NextToken != nil && len(*s.NextToken) < 1 {
		invalidParams.Add(aws.NewErrParamMinLen("NextToken", 1))
	}

	if s.PreviewAgentsArn == nil {
		invalidParams.Add(aws.NewErrParamRequired("PreviewAgentsArn"))
	}
	if s.PreviewAgentsArn != nil && len(*s.PreviewAgentsArn) < 1 {
		invalidParams.Add(aws.NewErrParamMinLen("PreviewAgentsArn", 1))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// Please also see https://docs.aws.amazon.com/goto/WebAPI/inspector-2016-02-16/PreviewAgentsResponse
type PreviewAgentsOutput struct {
	_ struct{} `type:"structure"`

	responseMetadata aws.Response

	// The resulting list of agents.
	//
	// AgentPreviews is a required field
	AgentPreviews []AgentPreview `locationName:"agentPreviews" type:"list" required:"true"`

	// When a response is generated, if there is more data to be listed, this parameter
	// is present in the response and contains the value to use for the nextToken
	// parameter in a subsequent pagination request. If there is no more data to
	// be listed, this parameter is set to null.
	NextToken *string `locationName:"nextToken" min:"1" type:"string"`
}

// String returns the string representation
func (s PreviewAgentsOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s PreviewAgentsOutput) GoString() string {
	return s.String()
}

// SDKResponseMetdata return sthe response metadata for the API.
func (s PreviewAgentsOutput) SDKResponseMetadata() aws.Response {
	return s.responseMetadata
}

// Please also see https://docs.aws.amazon.com/goto/WebAPI/inspector-2016-02-16/RegisterCrossAccountAccessRoleRequest
type RegisterCrossAccountAccessRoleInput struct {
	_ struct{} `type:"structure"`

	// The ARN of the IAM role that grants Amazon Inspector access to AWS Services
	// needed to perform security assessments.
	//
	// RoleArn is a required field
	RoleArn *string `locationName:"roleArn" min:"1" type:"string" required:"true"`
}

// String returns the string representation
func (s RegisterCrossAccountAccessRoleInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s RegisterCrossAccountAccessRoleInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *RegisterCrossAccountAccessRoleInput) Validate() error {
	invalidParams := aws.ErrInvalidParams{Context: "RegisterCrossAccountAccessRoleInput"}

	if s.RoleArn == nil {
		invalidParams.Add(aws.NewErrParamRequired("RoleArn"))
	}
	if s.RoleArn != nil && len(*s.RoleArn) < 1 {
		invalidParams.Add(aws.NewErrParamMinLen("RoleArn", 1))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// Please also see https://docs.aws.amazon.com/goto/WebAPI/inspector-2016-02-16/RegisterCrossAccountAccessRoleOutput
type RegisterCrossAccountAccessRoleOutput struct {
	_ struct{} `type:"structure"`

	responseMetadata aws.Response
}

// String returns the string representation
func (s RegisterCrossAccountAccessRoleOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s RegisterCrossAccountAccessRoleOutput) GoString() string {
	return s.String()
}

// SDKResponseMetdata return sthe response metadata for the API.
func (s RegisterCrossAccountAccessRoleOutput) SDKResponseMetadata() aws.Response {
	return s.responseMetadata
}

// Please also see https://docs.aws.amazon.com/goto/WebAPI/inspector-2016-02-16/RemoveAttributesFromFindingsRequest
type RemoveAttributesFromFindingsInput struct {
	_ struct{} `type:"structure"`

	// The array of attribute keys that you want to remove from specified findings.
	//
	// AttributeKeys is a required field
	AttributeKeys []string `locationName:"attributeKeys" type:"list" required:"true"`

	// The ARNs that specify the findings that you want to remove attributes from.
	//
	// FindingArns is a required field
	FindingArns []string `locationName:"findingArns" min:"1" type:"list" required:"true"`
}

// String returns the string representation
func (s RemoveAttributesFromFindingsInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s RemoveAttributesFromFindingsInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *RemoveAttributesFromFindingsInput) Validate() error {
	invalidParams := aws.ErrInvalidParams{Context: "RemoveAttributesFromFindingsInput"}

	if s.AttributeKeys == nil {
		invalidParams.Add(aws.NewErrParamRequired("AttributeKeys"))
	}

	if s.FindingArns == nil {
		invalidParams.Add(aws.NewErrParamRequired("FindingArns"))
	}
	if s.FindingArns != nil && len(s.FindingArns) < 1 {
		invalidParams.Add(aws.NewErrParamMinLen("FindingArns", 1))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// Please also see https://docs.aws.amazon.com/goto/WebAPI/inspector-2016-02-16/RemoveAttributesFromFindingsResponse
type RemoveAttributesFromFindingsOutput struct {
	_ struct{} `type:"structure"`

	responseMetadata aws.Response

	// Attributes details that cannot be described. An error code is provided for
	// each failed item.
	//
	// FailedItems is a required field
	FailedItems map[string]FailedItemDetails `locationName:"failedItems" type:"map" required:"true"`
}

// String returns the string representation
func (s RemoveAttributesFromFindingsOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s RemoveAttributesFromFindingsOutput) GoString() string {
	return s.String()
}

// SDKResponseMetdata return sthe response metadata for the API.
func (s RemoveAttributesFromFindingsOutput) SDKResponseMetadata() aws.Response {
	return s.responseMetadata
}

// Contains information about a resource group. The resource group defines a
// set of tags that, when queried, identify the AWS resources that make up the
// assessment target. This data type is used as the response element in the
// DescribeResourceGroups action.
// Please also see https://docs.aws.amazon.com/goto/WebAPI/inspector-2016-02-16/ResourceGroup
type ResourceGroup struct {
	_ struct{} `type:"structure"`

	// The ARN of the resource group.
	//
	// Arn is a required field
	Arn *string `locationName:"arn" min:"1" type:"string" required:"true"`

	// The time at which resource group is created.
	//
	// CreatedAt is a required field
	CreatedAt *time.Time `locationName:"createdAt" type:"timestamp" timestampFormat:"unix" required:"true"`

	// The tags (key and value pairs) of the resource group. This data type property
	// is used in the CreateResourceGroup action.
	//
	// Tags is a required field
	Tags []ResourceGroupTag `locationName:"tags" min:"1" type:"list" required:"true"`
}

// String returns the string representation
func (s ResourceGroup) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s ResourceGroup) GoString() string {
	return s.String()
}

// This data type is used as one of the elements of the ResourceGroup data type.
// Please also see https://docs.aws.amazon.com/goto/WebAPI/inspector-2016-02-16/ResourceGroupTag
type ResourceGroupTag struct {
	_ struct{} `type:"structure"`

	// A tag key.
	//
	// Key is a required field
	Key *string `locationName:"key" min:"1" type:"string" required:"true"`

	// The value assigned to a tag key.
	Value *string `locationName:"value" min:"1" type:"string"`
}

// String returns the string representation
func (s ResourceGroupTag) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s ResourceGroupTag) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *ResourceGroupTag) Validate() error {
	invalidParams := aws.ErrInvalidParams{Context: "ResourceGroupTag"}

	if s.Key == nil {
		invalidParams.Add(aws.NewErrParamRequired("Key"))
	}
	if s.Key != nil && len(*s.Key) < 1 {
		invalidParams.Add(aws.NewErrParamMinLen("Key", 1))
	}
	if s.Value != nil && len(*s.Value) < 1 {
		invalidParams.Add(aws.NewErrParamMinLen("Value", 1))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// Contains information about an Amazon Inspector rules package. This data type
// is used as the response element in the DescribeRulesPackages action.
// Please also see https://docs.aws.amazon.com/goto/WebAPI/inspector-2016-02-16/RulesPackage
type RulesPackage struct {
	_ struct{} `type:"structure"`

	// The ARN of the rules package.
	//
	// Arn is a required field
	Arn *string `locationName:"arn" min:"1" type:"string" required:"true"`

	// The description of the rules package.
	Description *string `locationName:"description" type:"string"`

	// The name of the rules package.
	//
	// Name is a required field
	Name *string `locationName:"name" type:"string" required:"true"`

	// The provider of the rules package.
	//
	// Provider is a required field
	Provider *string `locationName:"provider" type:"string" required:"true"`

	// The version ID of the rules package.
	//
	// Version is a required field
	Version *string `locationName:"version" type:"string" required:"true"`
}

// String returns the string representation
func (s RulesPackage) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s RulesPackage) GoString() string {
	return s.String()
}

// This data type is used in the Finding data type.
// Please also see https://docs.aws.amazon.com/goto/WebAPI/inspector-2016-02-16/InspectorServiceAttributes
type ServiceAttributes struct {
	_ struct{} `type:"structure"`

	// The ARN of the assessment run during which the finding is generated.
	AssessmentRunArn *string `locationName:"assessmentRunArn" min:"1" type:"string"`

	// The ARN of the rules package that is used to generate the finding.
	RulesPackageArn *string `locationName:"rulesPackageArn" min:"1" type:"string"`

	// The schema version of this data type.
	//
	// SchemaVersion is a required field
	SchemaVersion *int64 `locationName:"schemaVersion" type:"integer" required:"true"`
}

// String returns the string representation
func (s ServiceAttributes) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s ServiceAttributes) GoString() string {
	return s.String()
}

// Please also see https://docs.aws.amazon.com/goto/WebAPI/inspector-2016-02-16/SetTagsForResourceRequest
type SetTagsForResourceInput struct {
	_ struct{} `type:"structure"`

	// The ARN of the assessment template that you want to set tags to.
	//
	// ResourceArn is a required field
	ResourceArn *string `locationName:"resourceArn" min:"1" type:"string" required:"true"`

	// A collection of key and value pairs that you want to set to the assessment
	// template.
	Tags []Tag `locationName:"tags" type:"list"`
}

// String returns the string representation
func (s SetTagsForResourceInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s SetTagsForResourceInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *SetTagsForResourceInput) Validate() error {
	invalidParams := aws.ErrInvalidParams{Context: "SetTagsForResourceInput"}

	if s.ResourceArn == nil {
		invalidParams.Add(aws.NewErrParamRequired("ResourceArn"))
	}
	if s.ResourceArn != nil && len(*s.ResourceArn) < 1 {
		invalidParams.Add(aws.NewErrParamMinLen("ResourceArn", 1))
	}
	if s.Tags != nil {
		for i, v := range s.Tags {
			if err := v.Validate(); err != nil {
				invalidParams.AddNested(fmt.Sprintf("%s[%v]", "Tags", i), err.(aws.ErrInvalidParams))
			}
		}
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// Please also see https://docs.aws.amazon.com/goto/WebAPI/inspector-2016-02-16/SetTagsForResourceOutput
type SetTagsForResourceOutput struct {
	_ struct{} `type:"structure"`

	responseMetadata aws.Response
}

// String returns the string representation
func (s SetTagsForResourceOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s SetTagsForResourceOutput) GoString() string {
	return s.String()
}

// SDKResponseMetdata return sthe response metadata for the API.
func (s SetTagsForResourceOutput) SDKResponseMetadata() aws.Response {
	return s.responseMetadata
}

// Please also see https://docs.aws.amazon.com/goto/WebAPI/inspector-2016-02-16/StartAssessmentRunRequest
type StartAssessmentRunInput struct {
	_ struct{} `type:"structure"`

	// You can specify the name for the assessment run. The name must be unique
	// for the assessment template whose ARN is used to start the assessment run.
	AssessmentRunName *string `locationName:"assessmentRunName" min:"1" type:"string"`

	// The ARN of the assessment template of the assessment run that you want to
	// start.
	//
	// AssessmentTemplateArn is a required field
	AssessmentTemplateArn *string `locationName:"assessmentTemplateArn" min:"1" type:"string" required:"true"`
}

// String returns the string representation
func (s StartAssessmentRunInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s StartAssessmentRunInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *StartAssessmentRunInput) Validate() error {
	invalidParams := aws.ErrInvalidParams{Context: "StartAssessmentRunInput"}
	if s.AssessmentRunName != nil && len(*s.AssessmentRunName) < 1 {
		invalidParams.Add(aws.NewErrParamMinLen("AssessmentRunName", 1))
	}

	if s.AssessmentTemplateArn == nil {
		invalidParams.Add(aws.NewErrParamRequired("AssessmentTemplateArn"))
	}
	if s.AssessmentTemplateArn != nil && len(*s.AssessmentTemplateArn) < 1 {
		invalidParams.Add(aws.NewErrParamMinLen("AssessmentTemplateArn", 1))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// Please also see https://docs.aws.amazon.com/goto/WebAPI/inspector-2016-02-16/StartAssessmentRunResponse
type StartAssessmentRunOutput struct {
	_ struct{} `type:"structure"`

	responseMetadata aws.Response

	// The ARN of the assessment run that has been started.
	//
	// AssessmentRunArn is a required field
	AssessmentRunArn *string `locationName:"assessmentRunArn" min:"1" type:"string" required:"true"`
}

// String returns the string representation
func (s StartAssessmentRunOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s StartAssessmentRunOutput) GoString() string {
	return s.String()
}

// SDKResponseMetdata return sthe response metadata for the API.
func (s StartAssessmentRunOutput) SDKResponseMetadata() aws.Response {
	return s.responseMetadata
}

// Please also see https://docs.aws.amazon.com/goto/WebAPI/inspector-2016-02-16/StopAssessmentRunRequest
type StopAssessmentRunInput struct {
	_ struct{} `type:"structure"`

	// The ARN of the assessment run that you want to stop.
	//
	// AssessmentRunArn is a required field
	AssessmentRunArn *string `locationName:"assessmentRunArn" min:"1" type:"string" required:"true"`

	// An input option that can be set to either START_EVALUATION or SKIP_EVALUATION.
	// START_EVALUATION (the default value), stops the AWS agent from collecting
	// data and begins the results evaluation and the findings generation process.
	// SKIP_EVALUATION cancels the assessment run immediately, after which no findings
	// are generated.
	StopAction StopAction `locationName:"stopAction" type:"string" enum:"true"`
}

// String returns the string representation
func (s StopAssessmentRunInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s StopAssessmentRunInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *StopAssessmentRunInput) Validate() error {
	invalidParams := aws.ErrInvalidParams{Context: "StopAssessmentRunInput"}

	if s.AssessmentRunArn == nil {
		invalidParams.Add(aws.NewErrParamRequired("AssessmentRunArn"))
	}
	if s.AssessmentRunArn != nil && len(*s.AssessmentRunArn) < 1 {
		invalidParams.Add(aws.NewErrParamMinLen("AssessmentRunArn", 1))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// Please also see https://docs.aws.amazon.com/goto/WebAPI/inspector-2016-02-16/StopAssessmentRunOutput
type StopAssessmentRunOutput struct {
	_ struct{} `type:"structure"`

	responseMetadata aws.Response
}

// String returns the string representation
func (s StopAssessmentRunOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s StopAssessmentRunOutput) GoString() string {
	return s.String()
}

// SDKResponseMetdata return sthe response metadata for the API.
func (s StopAssessmentRunOutput) SDKResponseMetadata() aws.Response {
	return s.responseMetadata
}

// Please also see https://docs.aws.amazon.com/goto/WebAPI/inspector-2016-02-16/SubscribeToEventRequest
type SubscribeToEventInput struct {
	_ struct{} `type:"structure"`

	// The event for which you want to receive SNS notifications.
	//
	// Event is a required field
	Event Event `locationName:"event" type:"string" required:"true" enum:"true"`

	// The ARN of the assessment template that is used during the event for which
	// you want to receive SNS notifications.
	//
	// ResourceArn is a required field
	ResourceArn *string `locationName:"resourceArn" min:"1" type:"string" required:"true"`

	// The ARN of the SNS topic to which the SNS notifications are sent.
	//
	// TopicArn is a required field
	TopicArn *string `locationName:"topicArn" min:"1" type:"string" required:"true"`
}

// String returns the string representation
func (s SubscribeToEventInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s SubscribeToEventInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *SubscribeToEventInput) Validate() error {
	invalidParams := aws.ErrInvalidParams{Context: "SubscribeToEventInput"}
	if len(s.Event) == 0 {
		invalidParams.Add(aws.NewErrParamRequired("Event"))
	}

	if s.ResourceArn == nil {
		invalidParams.Add(aws.NewErrParamRequired("ResourceArn"))
	}
	if s.ResourceArn != nil && len(*s.ResourceArn) < 1 {
		invalidParams.Add(aws.NewErrParamMinLen("ResourceArn", 1))
	}

	if s.TopicArn == nil {
		invalidParams.Add(aws.NewErrParamRequired("TopicArn"))
	}
	if s.TopicArn != nil && len(*s.TopicArn) < 1 {
		invalidParams.Add(aws.NewErrParamMinLen("TopicArn", 1))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// Please also see https://docs.aws.amazon.com/goto/WebAPI/inspector-2016-02-16/SubscribeToEventOutput
type SubscribeToEventOutput struct {
	_ struct{} `type:"structure"`

	responseMetadata aws.Response
}

// String returns the string representation
func (s SubscribeToEventOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s SubscribeToEventOutput) GoString() string {
	return s.String()
}

// SDKResponseMetdata return sthe response metadata for the API.
func (s SubscribeToEventOutput) SDKResponseMetadata() aws.Response {
	return s.responseMetadata
}

// This data type is used as a response element in the ListEventSubscriptions
// action.
// Please also see https://docs.aws.amazon.com/goto/WebAPI/inspector-2016-02-16/Subscription
type Subscription struct {
	_ struct{} `type:"structure"`

	// The list of existing event subscriptions.
	//
	// EventSubscriptions is a required field
	EventSubscriptions []EventSubscription `locationName:"eventSubscriptions" min:"1" type:"list" required:"true"`

	// The ARN of the assessment template that is used during the event for which
	// the SNS notification is sent.
	//
	// ResourceArn is a required field
	ResourceArn *string `locationName:"resourceArn" min:"1" type:"string" required:"true"`

	// The ARN of the Amazon Simple Notification Service (SNS) topic to which the
	// SNS notifications are sent.
	//
	// TopicArn is a required field
	TopicArn *string `locationName:"topicArn" min:"1" type:"string" required:"true"`
}

// String returns the string representation
func (s Subscription) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s Subscription) GoString() string {
	return s.String()
}

// A key and value pair. This data type is used as a request parameter in the
// SetTagsForResource action and a response element in the ListTagsForResource
// action.
// Please also see https://docs.aws.amazon.com/goto/WebAPI/inspector-2016-02-16/Tag
type Tag struct {
	_ struct{} `type:"structure"`

	// A tag key.
	//
	// Key is a required field
	Key *string `locationName:"key" min:"1" type:"string" required:"true"`

	// A value assigned to a tag key.
	Value *string `locationName:"value" min:"1" type:"string"`
}

// String returns the string representation
func (s Tag) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s Tag) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *Tag) Validate() error {
	invalidParams := aws.ErrInvalidParams{Context: "Tag"}

	if s.Key == nil {
		invalidParams.Add(aws.NewErrParamRequired("Key"))
	}
	if s.Key != nil && len(*s.Key) < 1 {
		invalidParams.Add(aws.NewErrParamMinLen("Key", 1))
	}
	if s.Value != nil && len(*s.Value) < 1 {
		invalidParams.Add(aws.NewErrParamMinLen("Value", 1))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// The metadata about the Amazon Inspector application data metrics collected
// by the agent. This data type is used as the response element in the GetTelemetryMetadata
// action.
// Please also see https://docs.aws.amazon.com/goto/WebAPI/inspector-2016-02-16/TelemetryMetadata
type TelemetryMetadata struct {
	_ struct{} `type:"structure"`

	// The count of messages that the agent sends to the Amazon Inspector service.
	//
	// Count is a required field
	Count *int64 `locationName:"count" type:"long" required:"true"`

	// The data size of messages that the agent sends to the Amazon Inspector service.
	DataSize *int64 `locationName:"dataSize" type:"long"`

	// A specific type of behavioral data that is collected by the agent.
	//
	// MessageType is a required field
	MessageType *string `locationName:"messageType" min:"1" type:"string" required:"true"`
}

// String returns the string representation
func (s TelemetryMetadata) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s TelemetryMetadata) GoString() string {
	return s.String()
}

// This data type is used in the AssessmentRunFilter data type.
// Please also see https://docs.aws.amazon.com/goto/WebAPI/inspector-2016-02-16/TimestampRange
type TimestampRange struct {
	_ struct{} `type:"structure"`

	// The minimum value of the timestamp range.
	BeginDate *time.Time `locationName:"beginDate" type:"timestamp" timestampFormat:"unix"`

	// The maximum value of the timestamp range.
	EndDate *time.Time `locationName:"endDate" type:"timestamp" timestampFormat:"unix"`
}

// String returns the string representation
func (s TimestampRange) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s TimestampRange) GoString() string {
	return s.String()
}

// Please also see https://docs.aws.amazon.com/goto/WebAPI/inspector-2016-02-16/UnsubscribeFromEventRequest
type UnsubscribeFromEventInput struct {
	_ struct{} `type:"structure"`

	// The event for which you want to stop receiving SNS notifications.
	//
	// Event is a required field
	Event Event `locationName:"event" type:"string" required:"true" enum:"true"`

	// The ARN of the assessment template that is used during the event for which
	// you want to stop receiving SNS notifications.
	//
	// ResourceArn is a required field
	ResourceArn *string `locationName:"resourceArn" min:"1" type:"string" required:"true"`

	// The ARN of the SNS topic to which SNS notifications are sent.
	//
	// TopicArn is a required field
	TopicArn *string `locationName:"topicArn" min:"1" type:"string" required:"true"`
}

// String returns the string representation
func (s UnsubscribeFromEventInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s UnsubscribeFromEventInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *UnsubscribeFromEventInput) Validate() error {
	invalidParams := aws.ErrInvalidParams{Context: "UnsubscribeFromEventInput"}
	if len(s.Event) == 0 {
		invalidParams.Add(aws.NewErrParamRequired("Event"))
	}

	if s.ResourceArn == nil {
		invalidParams.Add(aws.NewErrParamRequired("ResourceArn"))
	}
	if s.ResourceArn != nil && len(*s.ResourceArn) < 1 {
		invalidParams.Add(aws.NewErrParamMinLen("ResourceArn", 1))
	}

	if s.TopicArn == nil {
		invalidParams.Add(aws.NewErrParamRequired("TopicArn"))
	}
	if s.TopicArn != nil && len(*s.TopicArn) < 1 {
		invalidParams.Add(aws.NewErrParamMinLen("TopicArn", 1))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// Please also see https://docs.aws.amazon.com/goto/WebAPI/inspector-2016-02-16/UnsubscribeFromEventOutput
type UnsubscribeFromEventOutput struct {
	_ struct{} `type:"structure"`

	responseMetadata aws.Response
}

// String returns the string representation
func (s UnsubscribeFromEventOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s UnsubscribeFromEventOutput) GoString() string {
	return s.String()
}

// SDKResponseMetdata return sthe response metadata for the API.
func (s UnsubscribeFromEventOutput) SDKResponseMetadata() aws.Response {
	return s.responseMetadata
}

// Please also see https://docs.aws.amazon.com/goto/WebAPI/inspector-2016-02-16/UpdateAssessmentTargetRequest
type UpdateAssessmentTargetInput struct {
	_ struct{} `type:"structure"`

	// The ARN of the assessment target that you want to update.
	//
	// AssessmentTargetArn is a required field
	AssessmentTargetArn *string `locationName:"assessmentTargetArn" min:"1" type:"string" required:"true"`

	// The name of the assessment target that you want to update.
	//
	// AssessmentTargetName is a required field
	AssessmentTargetName *string `locationName:"assessmentTargetName" min:"1" type:"string" required:"true"`

	// The ARN of the resource group that is used to specify the new resource group
	// to associate with the assessment target.
	ResourceGroupArn *string `locationName:"resourceGroupArn" min:"1" type:"string"`
}

// String returns the string representation
func (s UpdateAssessmentTargetInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s UpdateAssessmentTargetInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *UpdateAssessmentTargetInput) Validate() error {
	invalidParams := aws.ErrInvalidParams{Context: "UpdateAssessmentTargetInput"}

	if s.AssessmentTargetArn == nil {
		invalidParams.Add(aws.NewErrParamRequired("AssessmentTargetArn"))
	}
	if s.AssessmentTargetArn != nil && len(*s.AssessmentTargetArn) < 1 {
		invalidParams.Add(aws.NewErrParamMinLen("AssessmentTargetArn", 1))
	}

	if s.AssessmentTargetName == nil {
		invalidParams.Add(aws.NewErrParamRequired("AssessmentTargetName"))
	}
	if s.AssessmentTargetName != nil && len(*s.AssessmentTargetName) < 1 {
		invalidParams.Add(aws.NewErrParamMinLen("AssessmentTargetName", 1))
	}
	if s.ResourceGroupArn != nil && len(*s.ResourceGroupArn) < 1 {
		invalidParams.Add(aws.NewErrParamMinLen("ResourceGroupArn", 1))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// Please also see https://docs.aws.amazon.com/goto/WebAPI/inspector-2016-02-16/UpdateAssessmentTargetOutput
type UpdateAssessmentTargetOutput struct {
	_ struct{} `type:"structure"`

	responseMetadata aws.Response
}

// String returns the string representation
func (s UpdateAssessmentTargetOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s UpdateAssessmentTargetOutput) GoString() string {
	return s.String()
}

// SDKResponseMetdata return sthe response metadata for the API.
func (s UpdateAssessmentTargetOutput) SDKResponseMetadata() aws.Response {
	return s.responseMetadata
}

type AccessDeniedErrorCode string

// Enum values for AccessDeniedErrorCode
const (
	AccessDeniedErrorCodeAccessDeniedToAssessmentTarget   AccessDeniedErrorCode = "ACCESS_DENIED_TO_ASSESSMENT_TARGET"
	AccessDeniedErrorCodeAccessDeniedToAssessmentTemplate AccessDeniedErrorCode = "ACCESS_DENIED_TO_ASSESSMENT_TEMPLATE"
	AccessDeniedErrorCodeAccessDeniedToAssessmentRun      AccessDeniedErrorCode = "ACCESS_DENIED_TO_ASSESSMENT_RUN"
	AccessDeniedErrorCodeAccessDeniedToFinding            AccessDeniedErrorCode = "ACCESS_DENIED_TO_FINDING"
	AccessDeniedErrorCodeAccessDeniedToResourceGroup      AccessDeniedErrorCode = "ACCESS_DENIED_TO_RESOURCE_GROUP"
	AccessDeniedErrorCodeAccessDeniedToRulesPackage       AccessDeniedErrorCode = "ACCESS_DENIED_TO_RULES_PACKAGE"
	AccessDeniedErrorCodeAccessDeniedToSnsTopic           AccessDeniedErrorCode = "ACCESS_DENIED_TO_SNS_TOPIC"
	AccessDeniedErrorCodeAccessDeniedToIamRole            AccessDeniedErrorCode = "ACCESS_DENIED_TO_IAM_ROLE"
)

func (enum AccessDeniedErrorCode) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum AccessDeniedErrorCode) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type AgentHealth string

// Enum values for AgentHealth
const (
	AgentHealthHealthy   AgentHealth = "HEALTHY"
	AgentHealthUnhealthy AgentHealth = "UNHEALTHY"
	AgentHealthUnknown   AgentHealth = "UNKNOWN"
)

func (enum AgentHealth) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum AgentHealth) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type AgentHealthCode string

// Enum values for AgentHealthCode
const (
	AgentHealthCodeIdle      AgentHealthCode = "IDLE"
	AgentHealthCodeRunning   AgentHealthCode = "RUNNING"
	AgentHealthCodeShutdown  AgentHealthCode = "SHUTDOWN"
	AgentHealthCodeUnhealthy AgentHealthCode = "UNHEALTHY"
	AgentHealthCodeThrottled AgentHealthCode = "THROTTLED"
	AgentHealthCodeUnknown   AgentHealthCode = "UNKNOWN"
)

func (enum AgentHealthCode) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum AgentHealthCode) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type AssessmentRunNotificationSnsStatusCode string

// Enum values for AssessmentRunNotificationSnsStatusCode
const (
	AssessmentRunNotificationSnsStatusCodeSuccess           AssessmentRunNotificationSnsStatusCode = "SUCCESS"
	AssessmentRunNotificationSnsStatusCodeTopicDoesNotExist AssessmentRunNotificationSnsStatusCode = "TOPIC_DOES_NOT_EXIST"
	AssessmentRunNotificationSnsStatusCodeAccessDenied      AssessmentRunNotificationSnsStatusCode = "ACCESS_DENIED"
	AssessmentRunNotificationSnsStatusCodeInternalError     AssessmentRunNotificationSnsStatusCode = "INTERNAL_ERROR"
)

func (enum AssessmentRunNotificationSnsStatusCode) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum AssessmentRunNotificationSnsStatusCode) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type AssessmentRunState string

// Enum values for AssessmentRunState
const (
	AssessmentRunStateCreated                       AssessmentRunState = "CREATED"
	AssessmentRunStateStartDataCollectionPending    AssessmentRunState = "START_DATA_COLLECTION_PENDING"
	AssessmentRunStateStartDataCollectionInProgress AssessmentRunState = "START_DATA_COLLECTION_IN_PROGRESS"
	AssessmentRunStateCollectingData                AssessmentRunState = "COLLECTING_DATA"
	AssessmentRunStateStopDataCollectionPending     AssessmentRunState = "STOP_DATA_COLLECTION_PENDING"
	AssessmentRunStateDataCollected                 AssessmentRunState = "DATA_COLLECTED"
	AssessmentRunStateStartEvaluatingRulesPending   AssessmentRunState = "START_EVALUATING_RULES_PENDING"
	AssessmentRunStateEvaluatingRules               AssessmentRunState = "EVALUATING_RULES"
	AssessmentRunStateFailed                        AssessmentRunState = "FAILED"
	AssessmentRunStateError                         AssessmentRunState = "ERROR"
	AssessmentRunStateCompleted                     AssessmentRunState = "COMPLETED"
	AssessmentRunStateCompletedWithErrors           AssessmentRunState = "COMPLETED_WITH_ERRORS"
	AssessmentRunStateCanceled                      AssessmentRunState = "CANCELED"
)

func (enum AssessmentRunState) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum AssessmentRunState) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type AssetType string

// Enum values for AssetType
const (
	AssetTypeEc2Instance AssetType = "ec2-instance"
)

func (enum AssetType) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum AssetType) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type Event string

// Enum values for Event
const (
	EventAssessmentRunStarted      Event = "ASSESSMENT_RUN_STARTED"
	EventAssessmentRunCompleted    Event = "ASSESSMENT_RUN_COMPLETED"
	EventAssessmentRunStateChanged Event = "ASSESSMENT_RUN_STATE_CHANGED"
	EventFindingReported           Event = "FINDING_REPORTED"
	EventOther                     Event = "OTHER"
)

func (enum Event) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum Event) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type FailedItemErrorCode string

// Enum values for FailedItemErrorCode
const (
	FailedItemErrorCodeInvalidArn       FailedItemErrorCode = "INVALID_ARN"
	FailedItemErrorCodeDuplicateArn     FailedItemErrorCode = "DUPLICATE_ARN"
	FailedItemErrorCodeItemDoesNotExist FailedItemErrorCode = "ITEM_DOES_NOT_EXIST"
	FailedItemErrorCodeAccessDenied     FailedItemErrorCode = "ACCESS_DENIED"
	FailedItemErrorCodeLimitExceeded    FailedItemErrorCode = "LIMIT_EXCEEDED"
	FailedItemErrorCodeInternalError    FailedItemErrorCode = "INTERNAL_ERROR"
)

func (enum FailedItemErrorCode) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum FailedItemErrorCode) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type InvalidCrossAccountRoleErrorCode string

// Enum values for InvalidCrossAccountRoleErrorCode
const (
	InvalidCrossAccountRoleErrorCodeRoleDoesNotExistOrInvalidTrustRelationship InvalidCrossAccountRoleErrorCode = "ROLE_DOES_NOT_EXIST_OR_INVALID_TRUST_RELATIONSHIP"
	InvalidCrossAccountRoleErrorCodeRoleDoesNotHaveCorrectPolicy               InvalidCrossAccountRoleErrorCode = "ROLE_DOES_NOT_HAVE_CORRECT_POLICY"
)

func (enum InvalidCrossAccountRoleErrorCode) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum InvalidCrossAccountRoleErrorCode) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type InvalidInputErrorCode string

// Enum values for InvalidInputErrorCode
const (
	InvalidInputErrorCodeInvalidAssessmentTargetArn               InvalidInputErrorCode = "INVALID_ASSESSMENT_TARGET_ARN"
	InvalidInputErrorCodeInvalidAssessmentTemplateArn             InvalidInputErrorCode = "INVALID_ASSESSMENT_TEMPLATE_ARN"
	InvalidInputErrorCodeInvalidAssessmentRunArn                  InvalidInputErrorCode = "INVALID_ASSESSMENT_RUN_ARN"
	InvalidInputErrorCodeInvalidFindingArn                        InvalidInputErrorCode = "INVALID_FINDING_ARN"
	InvalidInputErrorCodeInvalidResourceGroupArn                  InvalidInputErrorCode = "INVALID_RESOURCE_GROUP_ARN"
	InvalidInputErrorCodeInvalidRulesPackageArn                   InvalidInputErrorCode = "INVALID_RULES_PACKAGE_ARN"
	InvalidInputErrorCodeInvalidResourceArn                       InvalidInputErrorCode = "INVALID_RESOURCE_ARN"
	InvalidInputErrorCodeInvalidSnsTopicArn                       InvalidInputErrorCode = "INVALID_SNS_TOPIC_ARN"
	InvalidInputErrorCodeInvalidIamRoleArn                        InvalidInputErrorCode = "INVALID_IAM_ROLE_ARN"
	InvalidInputErrorCodeInvalidAssessmentTargetName              InvalidInputErrorCode = "INVALID_ASSESSMENT_TARGET_NAME"
	InvalidInputErrorCodeInvalidAssessmentTargetNamePattern       InvalidInputErrorCode = "INVALID_ASSESSMENT_TARGET_NAME_PATTERN"
	InvalidInputErrorCodeInvalidAssessmentTemplateName            InvalidInputErrorCode = "INVALID_ASSESSMENT_TEMPLATE_NAME"
	InvalidInputErrorCodeInvalidAssessmentTemplateNamePattern     InvalidInputErrorCode = "INVALID_ASSESSMENT_TEMPLATE_NAME_PATTERN"
	InvalidInputErrorCodeInvalidAssessmentTemplateDuration        InvalidInputErrorCode = "INVALID_ASSESSMENT_TEMPLATE_DURATION"
	InvalidInputErrorCodeInvalidAssessmentTemplateDurationRange   InvalidInputErrorCode = "INVALID_ASSESSMENT_TEMPLATE_DURATION_RANGE"
	InvalidInputErrorCodeInvalidAssessmentRunDurationRange        InvalidInputErrorCode = "INVALID_ASSESSMENT_RUN_DURATION_RANGE"
	InvalidInputErrorCodeInvalidAssessmentRunStartTimeRange       InvalidInputErrorCode = "INVALID_ASSESSMENT_RUN_START_TIME_RANGE"
	InvalidInputErrorCodeInvalidAssessmentRunCompletionTimeRange  InvalidInputErrorCode = "INVALID_ASSESSMENT_RUN_COMPLETION_TIME_RANGE"
	InvalidInputErrorCodeInvalidAssessmentRunStateChangeTimeRange InvalidInputErrorCode = "INVALID_ASSESSMENT_RUN_STATE_CHANGE_TIME_RANGE"
	InvalidInputErrorCodeInvalidAssessmentRunState                InvalidInputErrorCode = "INVALID_ASSESSMENT_RUN_STATE"
	InvalidInputErrorCodeInvalidTag                               InvalidInputErrorCode = "INVALID_TAG"
	InvalidInputErrorCodeInvalidTagKey                            InvalidInputErrorCode = "INVALID_TAG_KEY"
	InvalidInputErrorCodeInvalidTagValue                          InvalidInputErrorCode = "INVALID_TAG_VALUE"
	InvalidInputErrorCodeInvalidResourceGroupTagKey               InvalidInputErrorCode = "INVALID_RESOURCE_GROUP_TAG_KEY"
	InvalidInputErrorCodeInvalidResourceGroupTagValue             InvalidInputErrorCode = "INVALID_RESOURCE_GROUP_TAG_VALUE"
	InvalidInputErrorCodeInvalidAttribute                         InvalidInputErrorCode = "INVALID_ATTRIBUTE"
	InvalidInputErrorCodeInvalidUserAttribute                     InvalidInputErrorCode = "INVALID_USER_ATTRIBUTE"
	InvalidInputErrorCodeInvalidUserAttributeKey                  InvalidInputErrorCode = "INVALID_USER_ATTRIBUTE_KEY"
	InvalidInputErrorCodeInvalidUserAttributeValue                InvalidInputErrorCode = "INVALID_USER_ATTRIBUTE_VALUE"
	InvalidInputErrorCodeInvalidPaginationToken                   InvalidInputErrorCode = "INVALID_PAGINATION_TOKEN"
	InvalidInputErrorCodeInvalidMaxResults                        InvalidInputErrorCode = "INVALID_MAX_RESULTS"
	InvalidInputErrorCodeInvalidAgentId                           InvalidInputErrorCode = "INVALID_AGENT_ID"
	InvalidInputErrorCodeInvalidAutoScalingGroup                  InvalidInputErrorCode = "INVALID_AUTO_SCALING_GROUP"
	InvalidInputErrorCodeInvalidRuleName                          InvalidInputErrorCode = "INVALID_RULE_NAME"
	InvalidInputErrorCodeInvalidSeverity                          InvalidInputErrorCode = "INVALID_SEVERITY"
	InvalidInputErrorCodeInvalidLocale                            InvalidInputErrorCode = "INVALID_LOCALE"
	InvalidInputErrorCodeInvalidEvent                             InvalidInputErrorCode = "INVALID_EVENT"
	InvalidInputErrorCodeAssessmentTargetNameAlreadyTaken         InvalidInputErrorCode = "ASSESSMENT_TARGET_NAME_ALREADY_TAKEN"
	InvalidInputErrorCodeAssessmentTemplateNameAlreadyTaken       InvalidInputErrorCode = "ASSESSMENT_TEMPLATE_NAME_ALREADY_TAKEN"
	InvalidInputErrorCodeInvalidNumberOfAssessmentTargetArns      InvalidInputErrorCode = "INVALID_NUMBER_OF_ASSESSMENT_TARGET_ARNS"
	InvalidInputErrorCodeInvalidNumberOfAssessmentTemplateArns    InvalidInputErrorCode = "INVALID_NUMBER_OF_ASSESSMENT_TEMPLATE_ARNS"
	InvalidInputErrorCodeInvalidNumberOfAssessmentRunArns         InvalidInputErrorCode = "INVALID_NUMBER_OF_ASSESSMENT_RUN_ARNS"
	InvalidInputErrorCodeInvalidNumberOfFindingArns               InvalidInputErrorCode = "INVALID_NUMBER_OF_FINDING_ARNS"
	InvalidInputErrorCodeInvalidNumberOfResourceGroupArns         InvalidInputErrorCode = "INVALID_NUMBER_OF_RESOURCE_GROUP_ARNS"
	InvalidInputErrorCodeInvalidNumberOfRulesPackageArns          InvalidInputErrorCode = "INVALID_NUMBER_OF_RULES_PACKAGE_ARNS"
	InvalidInputErrorCodeInvalidNumberOfAssessmentRunStates       InvalidInputErrorCode = "INVALID_NUMBER_OF_ASSESSMENT_RUN_STATES"
	InvalidInputErrorCodeInvalidNumberOfTags                      InvalidInputErrorCode = "INVALID_NUMBER_OF_TAGS"
	InvalidInputErrorCodeInvalidNumberOfResourceGroupTags         InvalidInputErrorCode = "INVALID_NUMBER_OF_RESOURCE_GROUP_TAGS"
	InvalidInputErrorCodeInvalidNumberOfAttributes                InvalidInputErrorCode = "INVALID_NUMBER_OF_ATTRIBUTES"
	InvalidInputErrorCodeInvalidNumberOfUserAttributes            InvalidInputErrorCode = "INVALID_NUMBER_OF_USER_ATTRIBUTES"
	InvalidInputErrorCodeInvalidNumberOfAgentIds                  InvalidInputErrorCode = "INVALID_NUMBER_OF_AGENT_IDS"
	InvalidInputErrorCodeInvalidNumberOfAutoScalingGroups         InvalidInputErrorCode = "INVALID_NUMBER_OF_AUTO_SCALING_GROUPS"
	InvalidInputErrorCodeInvalidNumberOfRuleNames                 InvalidInputErrorCode = "INVALID_NUMBER_OF_RULE_NAMES"
	InvalidInputErrorCodeInvalidNumberOfSeverities                InvalidInputErrorCode = "INVALID_NUMBER_OF_SEVERITIES"
)

func (enum InvalidInputErrorCode) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum InvalidInputErrorCode) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type LimitExceededErrorCode string

// Enum values for LimitExceededErrorCode
const (
	LimitExceededErrorCodeAssessmentTargetLimitExceeded   LimitExceededErrorCode = "ASSESSMENT_TARGET_LIMIT_EXCEEDED"
	LimitExceededErrorCodeAssessmentTemplateLimitExceeded LimitExceededErrorCode = "ASSESSMENT_TEMPLATE_LIMIT_EXCEEDED"
	LimitExceededErrorCodeAssessmentRunLimitExceeded      LimitExceededErrorCode = "ASSESSMENT_RUN_LIMIT_EXCEEDED"
	LimitExceededErrorCodeResourceGroupLimitExceeded      LimitExceededErrorCode = "RESOURCE_GROUP_LIMIT_EXCEEDED"
	LimitExceededErrorCodeEventSubscriptionLimitExceeded  LimitExceededErrorCode = "EVENT_SUBSCRIPTION_LIMIT_EXCEEDED"
)

func (enum LimitExceededErrorCode) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum LimitExceededErrorCode) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type Locale string

// Enum values for Locale
const (
	LocaleEnUs Locale = "EN_US"
)

func (enum Locale) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum Locale) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type NoSuchEntityErrorCode string

// Enum values for NoSuchEntityErrorCode
const (
	NoSuchEntityErrorCodeAssessmentTargetDoesNotExist   NoSuchEntityErrorCode = "ASSESSMENT_TARGET_DOES_NOT_EXIST"
	NoSuchEntityErrorCodeAssessmentTemplateDoesNotExist NoSuchEntityErrorCode = "ASSESSMENT_TEMPLATE_DOES_NOT_EXIST"
	NoSuchEntityErrorCodeAssessmentRunDoesNotExist      NoSuchEntityErrorCode = "ASSESSMENT_RUN_DOES_NOT_EXIST"
	NoSuchEntityErrorCodeFindingDoesNotExist            NoSuchEntityErrorCode = "FINDING_DOES_NOT_EXIST"
	NoSuchEntityErrorCodeResourceGroupDoesNotExist      NoSuchEntityErrorCode = "RESOURCE_GROUP_DOES_NOT_EXIST"
	NoSuchEntityErrorCodeRulesPackageDoesNotExist       NoSuchEntityErrorCode = "RULES_PACKAGE_DOES_NOT_EXIST"
	NoSuchEntityErrorCodeSnsTopicDoesNotExist           NoSuchEntityErrorCode = "SNS_TOPIC_DOES_NOT_EXIST"
	NoSuchEntityErrorCodeIamRoleDoesNotExist            NoSuchEntityErrorCode = "IAM_ROLE_DOES_NOT_EXIST"
)

func (enum NoSuchEntityErrorCode) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum NoSuchEntityErrorCode) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type ReportFileFormat string

// Enum values for ReportFileFormat
const (
	ReportFileFormatHtml ReportFileFormat = "HTML"
	ReportFileFormatPdf  ReportFileFormat = "PDF"
)

func (enum ReportFileFormat) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum ReportFileFormat) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type ReportStatus string

// Enum values for ReportStatus
const (
	ReportStatusWorkInProgress ReportStatus = "WORK_IN_PROGRESS"
	ReportStatusFailed         ReportStatus = "FAILED"
	ReportStatusCompleted      ReportStatus = "COMPLETED"
)

func (enum ReportStatus) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum ReportStatus) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type ReportType string

// Enum values for ReportType
const (
	ReportTypeFinding ReportType = "FINDING"
	ReportTypeFull    ReportType = "FULL"
)

func (enum ReportType) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum ReportType) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type Severity string

// Enum values for Severity
const (
	SeverityLow           Severity = "Low"
	SeverityMedium        Severity = "Medium"
	SeverityHigh          Severity = "High"
	SeverityInformational Severity = "Informational"
	SeverityUndefined     Severity = "Undefined"
)

func (enum Severity) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum Severity) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type StopAction string

// Enum values for StopAction
const (
	StopActionStartEvaluation StopAction = "START_EVALUATION"
	StopActionSkipEvaluation  StopAction = "SKIP_EVALUATION"
)

func (enum StopAction) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum StopAction) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}
