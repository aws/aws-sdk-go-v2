// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package inspector

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/private/protocol"
	"github.com/aws/aws-sdk-go-v2/private/protocol/jsonrpc"
	"github.com/aws/aws-sdk-go-v2/service/inspector/types"
)

const opUpdateAssessmentTarget = "UpdateAssessmentTarget"

// UpdateAssessmentTargetRequest returns a request value for making API operation for
// Amazon Inspector.
//
// Updates the assessment target that is specified by the ARN of the assessment
// target.
//
// If resourceGroupArn is not specified, all EC2 instances in the current AWS
// account and region are included in the assessment target.
//
//    // Example sending a request using UpdateAssessmentTargetRequest.
//    req := client.UpdateAssessmentTargetRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/inspector-2016-02-16/UpdateAssessmentTarget
func (c *Client) UpdateAssessmentTargetRequest(input *types.UpdateAssessmentTargetInput) UpdateAssessmentTargetRequest {
	op := &aws.Operation{
		Name:       opUpdateAssessmentTarget,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &types.UpdateAssessmentTargetInput{}
	}

	req := c.newRequest(op, input, &types.UpdateAssessmentTargetOutput{})
	req.Handlers.Unmarshal.Remove(jsonrpc.UnmarshalHandler)
	req.Handlers.Unmarshal.PushBackNamed(protocol.UnmarshalDiscardBodyHandler)
	return UpdateAssessmentTargetRequest{Request: req, Input: input, Copy: c.UpdateAssessmentTargetRequest}
}

// UpdateAssessmentTargetRequest is the request type for the
// UpdateAssessmentTarget API operation.
type UpdateAssessmentTargetRequest struct {
	*aws.Request
	Input *types.UpdateAssessmentTargetInput
	Copy  func(*types.UpdateAssessmentTargetInput) UpdateAssessmentTargetRequest
}

// Send marshals and sends the UpdateAssessmentTarget API request.
func (r UpdateAssessmentTargetRequest) Send(ctx context.Context) (*UpdateAssessmentTargetResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &UpdateAssessmentTargetResponse{
		UpdateAssessmentTargetOutput: r.Request.Data.(*types.UpdateAssessmentTargetOutput),
		response:                     &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// UpdateAssessmentTargetResponse is the response type for the
// UpdateAssessmentTarget API operation.
type UpdateAssessmentTargetResponse struct {
	*types.UpdateAssessmentTargetOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// UpdateAssessmentTarget request.
func (r *UpdateAssessmentTargetResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
