// Code generated by smithy-go-codegen DO NOT EDIT.

package types

type AccessDeniedExceptionReason string

// Enum values for AccessDeniedExceptionReason
const (
	AccessDeniedExceptionReasonInsufficientAccountReputation AccessDeniedExceptionReason = "INSUFFICIENT_ACCOUNT_REPUTATION"
	AccessDeniedExceptionReasonAccountDisabled               AccessDeniedExceptionReason = "ACCOUNT_DISABLED"
)

// Values returns all known values for AccessDeniedExceptionReason. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
// The ordering of this slice is not guaranteed to be stable across updates.
func (AccessDeniedExceptionReason) Values() []AccessDeniedExceptionReason {
	return []AccessDeniedExceptionReason{
		"INSUFFICIENT_ACCOUNT_REPUTATION",
		"ACCOUNT_DISABLED",
	}
}

type AccountAttributeName string

// Enum values for AccountAttributeName
const (
	AccountAttributeNameAccountTier AccountAttributeName = "ACCOUNT_TIER"
)

// Values returns all known values for AccountAttributeName. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (AccountAttributeName) Values() []AccountAttributeName {
	return []AccountAttributeName{
		"ACCOUNT_TIER",
	}
}

type AccountLimitName string

// Enum values for AccountLimitName
const (
	AccountLimitNamePhoneNumbers      AccountLimitName = "PHONE_NUMBERS"
	AccountLimitNamePools             AccountLimitName = "POOLS"
	AccountLimitNameConfigurationSets AccountLimitName = "CONFIGURATION_SETS"
	AccountLimitNameOptOutLists       AccountLimitName = "OPT_OUT_LISTS"
)

// Values returns all known values for AccountLimitName. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (AccountLimitName) Values() []AccountLimitName {
	return []AccountLimitName{
		"PHONE_NUMBERS",
		"POOLS",
		"CONFIGURATION_SETS",
		"OPT_OUT_LISTS",
	}
}

type ConfigurationSetFilterName string

// Enum values for ConfigurationSetFilterName
const (
	ConfigurationSetFilterNameEventDestinationName ConfigurationSetFilterName = "event-destination-name"
	ConfigurationSetFilterNameMatchingEventTypes   ConfigurationSetFilterName = "matching-event-types"
	ConfigurationSetFilterNameDefaultMessageType   ConfigurationSetFilterName = "default-message-type"
	ConfigurationSetFilterNameDefaultSenderId      ConfigurationSetFilterName = "default-sender-id"
)

// Values returns all known values for ConfigurationSetFilterName. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
// The ordering of this slice is not guaranteed to be stable across updates.
func (ConfigurationSetFilterName) Values() []ConfigurationSetFilterName {
	return []ConfigurationSetFilterName{
		"event-destination-name",
		"matching-event-types",
		"default-message-type",
		"default-sender-id",
	}
}

type ConflictExceptionReason string

// Enum values for ConflictExceptionReason
const (
	ConflictExceptionReasonDeletionProtectionEnabled          ConflictExceptionReason = "DELETION_PROTECTION_ENABLED"
	ConflictExceptionReasonDestinationPhoneNumberNotVerified  ConflictExceptionReason = "DESTINATION_PHONE_NUMBER_NOT_VERIFIED"
	ConflictExceptionReasonDestinationPhoneNumberOptedOut     ConflictExceptionReason = "DESTINATION_PHONE_NUMBER_OPTED_OUT"
	ConflictExceptionReasonEventDestinationMismatch           ConflictExceptionReason = "EVENT_DESTINATION_MISMATCH"
	ConflictExceptionReasonKeywordMismatch                    ConflictExceptionReason = "KEYWORD_MISMATCH"
	ConflictExceptionReasonLastPhoneNumber                    ConflictExceptionReason = "LAST_PHONE_NUMBER"
	ConflictExceptionReasonSelfManagedOptOutsMismatch         ConflictExceptionReason = "SELF_MANAGED_OPT_OUTS_MISMATCH"
	ConflictExceptionReasonMessageTypeMismatch                ConflictExceptionReason = "MESSAGE_TYPE_MISMATCH"
	ConflictExceptionReasonNoOriginationIdentitiesFound       ConflictExceptionReason = "NO_ORIGINATION_IDENTITIES_FOUND"
	ConflictExceptionReasonOptOutListMismatch                 ConflictExceptionReason = "OPT_OUT_LIST_MISMATCH"
	ConflictExceptionReasonPhoneNumberAssociatedToPool        ConflictExceptionReason = "PHONE_NUMBER_ASSOCIATED_TO_POOL"
	ConflictExceptionReasonPhoneNumberNotAssociatedToPool     ConflictExceptionReason = "PHONE_NUMBER_NOT_ASSOCIATED_TO_POOL"
	ConflictExceptionReasonPhoneNumberNotInRegistrationRegion ConflictExceptionReason = "PHONE_NUMBER_NOT_IN_REGISTRATION_REGION"
	ConflictExceptionReasonResourceAlreadyExists              ConflictExceptionReason = "RESOURCE_ALREADY_EXISTS"
	ConflictExceptionReasonResourceDeletionNotAllowed         ConflictExceptionReason = "RESOURCE_DELETION_NOT_ALLOWED"
	ConflictExceptionReasonResourceModificationNotAllowed     ConflictExceptionReason = "RESOURCE_MODIFICATION_NOT_ALLOWED"
	ConflictExceptionReasonResourceNotActive                  ConflictExceptionReason = "RESOURCE_NOT_ACTIVE"
	ConflictExceptionReasonResourceNotEmpty                   ConflictExceptionReason = "RESOURCE_NOT_EMPTY"
	ConflictExceptionReasonTwoWayConfigMismatch               ConflictExceptionReason = "TWO_WAY_CONFIG_MISMATCH"
)

// Values returns all known values for ConflictExceptionReason. Note that this can
// be expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (ConflictExceptionReason) Values() []ConflictExceptionReason {
	return []ConflictExceptionReason{
		"DELETION_PROTECTION_ENABLED",
		"DESTINATION_PHONE_NUMBER_NOT_VERIFIED",
		"DESTINATION_PHONE_NUMBER_OPTED_OUT",
		"EVENT_DESTINATION_MISMATCH",
		"KEYWORD_MISMATCH",
		"LAST_PHONE_NUMBER",
		"SELF_MANAGED_OPT_OUTS_MISMATCH",
		"MESSAGE_TYPE_MISMATCH",
		"NO_ORIGINATION_IDENTITIES_FOUND",
		"OPT_OUT_LIST_MISMATCH",
		"PHONE_NUMBER_ASSOCIATED_TO_POOL",
		"PHONE_NUMBER_NOT_ASSOCIATED_TO_POOL",
		"PHONE_NUMBER_NOT_IN_REGISTRATION_REGION",
		"RESOURCE_ALREADY_EXISTS",
		"RESOURCE_DELETION_NOT_ALLOWED",
		"RESOURCE_MODIFICATION_NOT_ALLOWED",
		"RESOURCE_NOT_ACTIVE",
		"RESOURCE_NOT_EMPTY",
		"TWO_WAY_CONFIG_MISMATCH",
	}
}

type DestinationCountryParameterKey string

// Enum values for DestinationCountryParameterKey
const (
	DestinationCountryParameterKeyInTemplateId DestinationCountryParameterKey = "IN_TEMPLATE_ID"
	DestinationCountryParameterKeyInEntityId   DestinationCountryParameterKey = "IN_ENTITY_ID"
)

// Values returns all known values for DestinationCountryParameterKey. Note that
// this can be expanded in the future, and so it is only as up to date as the
// client. The ordering of this slice is not guaranteed to be stable across
// updates.
func (DestinationCountryParameterKey) Values() []DestinationCountryParameterKey {
	return []DestinationCountryParameterKey{
		"IN_TEMPLATE_ID",
		"IN_ENTITY_ID",
	}
}

type EventType string

// Enum values for EventType
const (
	EventTypeAll                    EventType = "ALL"
	EventTypeTextAll                EventType = "TEXT_ALL"
	EventTypeTextSent               EventType = "TEXT_SENT"
	EventTypeTextPending            EventType = "TEXT_PENDING"
	EventTypeTextQueued             EventType = "TEXT_QUEUED"
	EventTypeTextSuccessful         EventType = "TEXT_SUCCESSFUL"
	EventTypeTextDelivered          EventType = "TEXT_DELIVERED"
	EventTypeTextInvalid            EventType = "TEXT_INVALID"
	EventTypeTextInvalidMessage     EventType = "TEXT_INVALID_MESSAGE"
	EventTypeTextUnreachable        EventType = "TEXT_UNREACHABLE"
	EventTypeTextCarrierUnreachable EventType = "TEXT_CARRIER_UNREACHABLE"
	EventTypeTextBlocked            EventType = "TEXT_BLOCKED"
	EventTypeTextCarrierBlocked     EventType = "TEXT_CARRIER_BLOCKED"
	EventTypeTextSpam               EventType = "TEXT_SPAM"
	EventTypeTextUnknown            EventType = "TEXT_UNKNOWN"
	EventTypeTextTtlExpired         EventType = "TEXT_TTL_EXPIRED"
	EventTypeVoiceAll               EventType = "VOICE_ALL"
	EventTypeVoiceInitiated         EventType = "VOICE_INITIATED"
	EventTypeVoiceRinging           EventType = "VOICE_RINGING"
	EventTypeVoiceAnswered          EventType = "VOICE_ANSWERED"
	EventTypeVoiceCompleted         EventType = "VOICE_COMPLETED"
	EventTypeVoiceBusy              EventType = "VOICE_BUSY"
	EventTypeVoiceNoAnswer          EventType = "VOICE_NO_ANSWER"
	EventTypeVoiceFailed            EventType = "VOICE_FAILED"
	EventTypeVoiceTtlExpired        EventType = "VOICE_TTL_EXPIRED"
)

// Values returns all known values for EventType. Note that this can be expanded
// in the future, and so it is only as up to date as the client. The ordering of
// this slice is not guaranteed to be stable across updates.
func (EventType) Values() []EventType {
	return []EventType{
		"ALL",
		"TEXT_ALL",
		"TEXT_SENT",
		"TEXT_PENDING",
		"TEXT_QUEUED",
		"TEXT_SUCCESSFUL",
		"TEXT_DELIVERED",
		"TEXT_INVALID",
		"TEXT_INVALID_MESSAGE",
		"TEXT_UNREACHABLE",
		"TEXT_CARRIER_UNREACHABLE",
		"TEXT_BLOCKED",
		"TEXT_CARRIER_BLOCKED",
		"TEXT_SPAM",
		"TEXT_UNKNOWN",
		"TEXT_TTL_EXPIRED",
		"VOICE_ALL",
		"VOICE_INITIATED",
		"VOICE_RINGING",
		"VOICE_ANSWERED",
		"VOICE_COMPLETED",
		"VOICE_BUSY",
		"VOICE_NO_ANSWER",
		"VOICE_FAILED",
		"VOICE_TTL_EXPIRED",
	}
}

type KeywordAction string

// Enum values for KeywordAction
const (
	KeywordActionAutomaticResponse KeywordAction = "AUTOMATIC_RESPONSE"
	KeywordActionOptOut            KeywordAction = "OPT_OUT"
	KeywordActionOptIn             KeywordAction = "OPT_IN"
)

// Values returns all known values for KeywordAction. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (KeywordAction) Values() []KeywordAction {
	return []KeywordAction{
		"AUTOMATIC_RESPONSE",
		"OPT_OUT",
		"OPT_IN",
	}
}

type KeywordFilterName string

// Enum values for KeywordFilterName
const (
	KeywordFilterNameKeywordAction KeywordFilterName = "keyword-action"
)

// Values returns all known values for KeywordFilterName. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (KeywordFilterName) Values() []KeywordFilterName {
	return []KeywordFilterName{
		"keyword-action",
	}
}

type MessageType string

// Enum values for MessageType
const (
	MessageTypeTransactional MessageType = "TRANSACTIONAL"
	MessageTypePromotional   MessageType = "PROMOTIONAL"
)

// Values returns all known values for MessageType. Note that this can be expanded
// in the future, and so it is only as up to date as the client. The ordering of
// this slice is not guaranteed to be stable across updates.
func (MessageType) Values() []MessageType {
	return []MessageType{
		"TRANSACTIONAL",
		"PROMOTIONAL",
	}
}

type NumberCapability string

// Enum values for NumberCapability
const (
	NumberCapabilitySms   NumberCapability = "SMS"
	NumberCapabilityVoice NumberCapability = "VOICE"
)

// Values returns all known values for NumberCapability. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (NumberCapability) Values() []NumberCapability {
	return []NumberCapability{
		"SMS",
		"VOICE",
	}
}

type NumberStatus string

// Enum values for NumberStatus
const (
	NumberStatusPending        NumberStatus = "PENDING"
	NumberStatusActive         NumberStatus = "ACTIVE"
	NumberStatusAssociating    NumberStatus = "ASSOCIATING"
	NumberStatusDisassociating NumberStatus = "DISASSOCIATING"
	NumberStatusDeleted        NumberStatus = "DELETED"
)

// Values returns all known values for NumberStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (NumberStatus) Values() []NumberStatus {
	return []NumberStatus{
		"PENDING",
		"ACTIVE",
		"ASSOCIATING",
		"DISASSOCIATING",
		"DELETED",
	}
}

type NumberType string

// Enum values for NumberType
const (
	NumberTypeShortCode NumberType = "SHORT_CODE"
	NumberTypeLongCode  NumberType = "LONG_CODE"
	NumberTypeTollFree  NumberType = "TOLL_FREE"
	NumberTypeTenDlc    NumberType = "TEN_DLC"
)

// Values returns all known values for NumberType. Note that this can be expanded
// in the future, and so it is only as up to date as the client. The ordering of
// this slice is not guaranteed to be stable across updates.
func (NumberType) Values() []NumberType {
	return []NumberType{
		"SHORT_CODE",
		"LONG_CODE",
		"TOLL_FREE",
		"TEN_DLC",
	}
}

type OptedOutFilterName string

// Enum values for OptedOutFilterName
const (
	OptedOutFilterNameEndUserOptedOut OptedOutFilterName = "end-user-opted-out"
)

// Values returns all known values for OptedOutFilterName. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (OptedOutFilterName) Values() []OptedOutFilterName {
	return []OptedOutFilterName{
		"end-user-opted-out",
	}
}

type PhoneNumberFilterName string

// Enum values for PhoneNumberFilterName
const (
	PhoneNumberFilterNameStatus                    PhoneNumberFilterName = "status"
	PhoneNumberFilterNameIsoCountryCode            PhoneNumberFilterName = "iso-country-code"
	PhoneNumberFilterNameMessageType               PhoneNumberFilterName = "message-type"
	PhoneNumberFilterNameNumberCapability          PhoneNumberFilterName = "number-capability"
	PhoneNumberFilterNameNumberType                PhoneNumberFilterName = "number-type"
	PhoneNumberFilterNameTwoWayEnabled             PhoneNumberFilterName = "two-way-enabled"
	PhoneNumberFilterNameSelfManagedOptOutsEnabled PhoneNumberFilterName = "self-managed-opt-outs-enabled"
	PhoneNumberFilterNameOptOutListName            PhoneNumberFilterName = "opt-out-list-name"
	PhoneNumberFilterNameDeletionProtectionEnabled PhoneNumberFilterName = "deletion-protection-enabled"
)

// Values returns all known values for PhoneNumberFilterName. Note that this can
// be expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (PhoneNumberFilterName) Values() []PhoneNumberFilterName {
	return []PhoneNumberFilterName{
		"status",
		"iso-country-code",
		"message-type",
		"number-capability",
		"number-type",
		"two-way-enabled",
		"self-managed-opt-outs-enabled",
		"opt-out-list-name",
		"deletion-protection-enabled",
	}
}

type PoolFilterName string

// Enum values for PoolFilterName
const (
	PoolFilterNameStatus                    PoolFilterName = "status"
	PoolFilterNameMessageType               PoolFilterName = "message-type"
	PoolFilterNameTwoWayEnabled             PoolFilterName = "two-way-enabled"
	PoolFilterNameSelfManagedOptOutsEnabled PoolFilterName = "self-managed-opt-outs-enabled"
	PoolFilterNameOptOutListName            PoolFilterName = "opt-out-list-name"
	PoolFilterNameSharedRoutesEnabled       PoolFilterName = "shared-routes-enabled"
	PoolFilterNameDeletionProtectionEnabled PoolFilterName = "deletion-protection-enabled"
)

// Values returns all known values for PoolFilterName. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (PoolFilterName) Values() []PoolFilterName {
	return []PoolFilterName{
		"status",
		"message-type",
		"two-way-enabled",
		"self-managed-opt-outs-enabled",
		"opt-out-list-name",
		"shared-routes-enabled",
		"deletion-protection-enabled",
	}
}

type PoolOriginationIdentitiesFilterName string

// Enum values for PoolOriginationIdentitiesFilterName
const (
	PoolOriginationIdentitiesFilterNameIsoCountryCode   PoolOriginationIdentitiesFilterName = "iso-country-code"
	PoolOriginationIdentitiesFilterNameNumberCapability PoolOriginationIdentitiesFilterName = "number-capability"
)

// Values returns all known values for PoolOriginationIdentitiesFilterName. Note
// that this can be expanded in the future, and so it is only as up to date as the
// client. The ordering of this slice is not guaranteed to be stable across
// updates.
func (PoolOriginationIdentitiesFilterName) Values() []PoolOriginationIdentitiesFilterName {
	return []PoolOriginationIdentitiesFilterName{
		"iso-country-code",
		"number-capability",
	}
}

type PoolStatus string

// Enum values for PoolStatus
const (
	PoolStatusCreating PoolStatus = "CREATING"
	PoolStatusActive   PoolStatus = "ACTIVE"
	PoolStatusDeleting PoolStatus = "DELETING"
)

// Values returns all known values for PoolStatus. Note that this can be expanded
// in the future, and so it is only as up to date as the client. The ordering of
// this slice is not guaranteed to be stable across updates.
func (PoolStatus) Values() []PoolStatus {
	return []PoolStatus{
		"CREATING",
		"ACTIVE",
		"DELETING",
	}
}

type RequestableNumberType string

// Enum values for RequestableNumberType
const (
	RequestableNumberTypeLongCode RequestableNumberType = "LONG_CODE"
	RequestableNumberTypeTollFree RequestableNumberType = "TOLL_FREE"
	RequestableNumberTypeTenDlc   RequestableNumberType = "TEN_DLC"
)

// Values returns all known values for RequestableNumberType. Note that this can
// be expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (RequestableNumberType) Values() []RequestableNumberType {
	return []RequestableNumberType{
		"LONG_CODE",
		"TOLL_FREE",
		"TEN_DLC",
	}
}

type ResourceType string

// Enum values for ResourceType
const (
	ResourceTypeAccount          ResourceType = "account"
	ResourceTypePhoneNumber      ResourceType = "phone-number"
	ResourceTypeSenderId         ResourceType = "sender-id"
	ResourceTypePool             ResourceType = "pool"
	ResourceTypeConfigurationSet ResourceType = "configuration-set"
	ResourceTypeOptOutList       ResourceType = "opt-out-list"
	ResourceTypeEventDestination ResourceType = "event-destination"
	ResourceTypeKeyword          ResourceType = "keyword"
	ResourceTypeOptedOutNumber   ResourceType = "opted-out-number"
	ResourceTypeRegistration     ResourceType = "registration"
)

// Values returns all known values for ResourceType. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (ResourceType) Values() []ResourceType {
	return []ResourceType{
		"account",
		"phone-number",
		"sender-id",
		"pool",
		"configuration-set",
		"opt-out-list",
		"event-destination",
		"keyword",
		"opted-out-number",
		"registration",
	}
}

type SenderIdFilterName string

// Enum values for SenderIdFilterName
const (
	SenderIdFilterNameSenderId       SenderIdFilterName = "sender-id"
	SenderIdFilterNameIsoCountryCode SenderIdFilterName = "iso-country-code"
	SenderIdFilterNameMessageType    SenderIdFilterName = "message-type"
)

// Values returns all known values for SenderIdFilterName. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (SenderIdFilterName) Values() []SenderIdFilterName {
	return []SenderIdFilterName{
		"sender-id",
		"iso-country-code",
		"message-type",
	}
}

type ServiceQuotaExceededExceptionReason string

// Enum values for ServiceQuotaExceededExceptionReason
const (
	ServiceQuotaExceededExceptionReasonConfigurationSetsPerAccount          ServiceQuotaExceededExceptionReason = "CONFIGURATION_SETS_PER_ACCOUNT"
	ServiceQuotaExceededExceptionReasonDailyDestinationCallLimit            ServiceQuotaExceededExceptionReason = "DAILY_DESTINATION_CALL_LIMIT"
	ServiceQuotaExceededExceptionReasonEventDestinationsPerConfigurationSet ServiceQuotaExceededExceptionReason = "EVENT_DESTINATIONS_PER_CONFIGURATION_SET"
	ServiceQuotaExceededExceptionReasonKeywordsPerPhoneNumber               ServiceQuotaExceededExceptionReason = "KEYWORDS_PER_PHONE_NUMBER"
	ServiceQuotaExceededExceptionReasonKeywordsPerPool                      ServiceQuotaExceededExceptionReason = "KEYWORDS_PER_POOL"
	ServiceQuotaExceededExceptionReasonMonthlySpendLimitReachedForText      ServiceQuotaExceededExceptionReason = "MONTHLY_SPEND_LIMIT_REACHED_FOR_TEXT"
	ServiceQuotaExceededExceptionReasonMonthlySpendLimitReachedForVoice     ServiceQuotaExceededExceptionReason = "MONTHLY_SPEND_LIMIT_REACHED_FOR_VOICE"
	ServiceQuotaExceededExceptionReasonOptOutListsPerAccount                ServiceQuotaExceededExceptionReason = "OPT_OUT_LISTS_PER_ACCOUNT"
	ServiceQuotaExceededExceptionReasonOriginationIdentitiesPerPool         ServiceQuotaExceededExceptionReason = "ORIGINATION_IDENTITIES_PER_POOL"
	ServiceQuotaExceededExceptionReasonPhoneNumbersPerAccount               ServiceQuotaExceededExceptionReason = "PHONE_NUMBERS_PER_ACCOUNT"
	ServiceQuotaExceededExceptionReasonPhoneNumbersPerRegistration          ServiceQuotaExceededExceptionReason = "PHONE_NUMBERS_PER_REGISTRATION"
	ServiceQuotaExceededExceptionReasonPoolsPerAccount                      ServiceQuotaExceededExceptionReason = "POOLS_PER_ACCOUNT"
	ServiceQuotaExceededExceptionReasonTagsPerResource                      ServiceQuotaExceededExceptionReason = "TAGS_PER_RESOURCE"
)

// Values returns all known values for ServiceQuotaExceededExceptionReason. Note
// that this can be expanded in the future, and so it is only as up to date as the
// client. The ordering of this slice is not guaranteed to be stable across
// updates.
func (ServiceQuotaExceededExceptionReason) Values() []ServiceQuotaExceededExceptionReason {
	return []ServiceQuotaExceededExceptionReason{
		"CONFIGURATION_SETS_PER_ACCOUNT",
		"DAILY_DESTINATION_CALL_LIMIT",
		"EVENT_DESTINATIONS_PER_CONFIGURATION_SET",
		"KEYWORDS_PER_PHONE_NUMBER",
		"KEYWORDS_PER_POOL",
		"MONTHLY_SPEND_LIMIT_REACHED_FOR_TEXT",
		"MONTHLY_SPEND_LIMIT_REACHED_FOR_VOICE",
		"OPT_OUT_LISTS_PER_ACCOUNT",
		"ORIGINATION_IDENTITIES_PER_POOL",
		"PHONE_NUMBERS_PER_ACCOUNT",
		"PHONE_NUMBERS_PER_REGISTRATION",
		"POOLS_PER_ACCOUNT",
		"TAGS_PER_RESOURCE",
	}
}

type SpendLimitName string

// Enum values for SpendLimitName
const (
	SpendLimitNameTextMessageMonthlySpendLimit  SpendLimitName = "TEXT_MESSAGE_MONTHLY_SPEND_LIMIT"
	SpendLimitNameVoiceMessageMonthlySpendLimit SpendLimitName = "VOICE_MESSAGE_MONTHLY_SPEND_LIMIT"
)

// Values returns all known values for SpendLimitName. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (SpendLimitName) Values() []SpendLimitName {
	return []SpendLimitName{
		"TEXT_MESSAGE_MONTHLY_SPEND_LIMIT",
		"VOICE_MESSAGE_MONTHLY_SPEND_LIMIT",
	}
}

type ValidationExceptionReason string

// Enum values for ValidationExceptionReason
const (
	ValidationExceptionReasonUnknownOperation                          ValidationExceptionReason = "UNKNOWN_OPERATION"
	ValidationExceptionReasonCannotParse                               ValidationExceptionReason = "CANNOT_PARSE"
	ValidationExceptionReasonFieldValidationFailed                     ValidationExceptionReason = "FIELD_VALIDATION_FAILED"
	ValidationExceptionReasonOther                                     ValidationExceptionReason = "OTHER"
	ValidationExceptionReasonInvalidParameter                          ValidationExceptionReason = "INVALID_PARAMETER"
	ValidationExceptionReasonInvalidArn                                ValidationExceptionReason = "INVALID_ARN"
	ValidationExceptionReasonInvalidIdentityForDestinationCountry      ValidationExceptionReason = "INVALID_IDENTITY_FOR_DESTINATION_COUNTRY"
	ValidationExceptionReasonDestinationCountryBlocked                 ValidationExceptionReason = "DESTINATION_COUNTRY_BLOCKED"
	ValidationExceptionReasonCannotAddOptedOutNumber                   ValidationExceptionReason = "CANNOT_ADD_OPTED_OUT_NUMBER"
	ValidationExceptionReasonCountryCodeMismatch                       ValidationExceptionReason = "COUNTRY_CODE_MISMATCH"
	ValidationExceptionReasonInvalidFilterValues                       ValidationExceptionReason = "INVALID_FILTER_VALUES"
	ValidationExceptionReasonInvalidNextToken                          ValidationExceptionReason = "INVALID_NEXT_TOKEN"
	ValidationExceptionReasonMissingParameter                          ValidationExceptionReason = "MISSING_PARAMETER"
	ValidationExceptionReasonParametersCannotBeUsedTogether            ValidationExceptionReason = "PARAMETERS_CANNOT_BE_USED_TOGETHER"
	ValidationExceptionReasonPhoneNumberCannotBeOptedIn                ValidationExceptionReason = "PHONE_NUMBER_CANNOT_BE_OPTED_IN"
	ValidationExceptionReasonPhoneNumberCannotBeReleased               ValidationExceptionReason = "PHONE_NUMBER_CANNOT_BE_RELEASED"
	ValidationExceptionReasonPriceOverThreshold                        ValidationExceptionReason = "PRICE_OVER_THRESHOLD"
	ValidationExceptionReasonRequestedSpendLimitHigherThanServiceLimit ValidationExceptionReason = "REQUESTED_SPEND_LIMIT_HIGHER_THAN_SERVICE_LIMIT"
	ValidationExceptionReasonSenderIdNotRegistered                     ValidationExceptionReason = "SENDER_ID_NOT_REGISTERED"
	ValidationExceptionReasonSenderIdNotSupported                      ValidationExceptionReason = "SENDER_ID_NOT_SUPPORTED"
	ValidationExceptionReasonTwoWayNotEnabled                          ValidationExceptionReason = "TWO_WAY_NOT_ENABLED"
	ValidationExceptionReasonTwoWayNotSupportedInCountry               ValidationExceptionReason = "TWO_WAY_NOT_SUPPORTED_IN_COUNTRY"
	ValidationExceptionReasonTwoWayNotSupportedInRegion                ValidationExceptionReason = "TWO_WAY_NOT_SUPPORTED_IN_REGION"
	ValidationExceptionReasonTwoWayTopicNotPresent                     ValidationExceptionReason = "TWO_WAY_TOPIC_NOT_PRESENT"
)

// Values returns all known values for ValidationExceptionReason. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
// The ordering of this slice is not guaranteed to be stable across updates.
func (ValidationExceptionReason) Values() []ValidationExceptionReason {
	return []ValidationExceptionReason{
		"UNKNOWN_OPERATION",
		"CANNOT_PARSE",
		"FIELD_VALIDATION_FAILED",
		"OTHER",
		"INVALID_PARAMETER",
		"INVALID_ARN",
		"INVALID_IDENTITY_FOR_DESTINATION_COUNTRY",
		"DESTINATION_COUNTRY_BLOCKED",
		"CANNOT_ADD_OPTED_OUT_NUMBER",
		"COUNTRY_CODE_MISMATCH",
		"INVALID_FILTER_VALUES",
		"INVALID_NEXT_TOKEN",
		"MISSING_PARAMETER",
		"PARAMETERS_CANNOT_BE_USED_TOGETHER",
		"PHONE_NUMBER_CANNOT_BE_OPTED_IN",
		"PHONE_NUMBER_CANNOT_BE_RELEASED",
		"PRICE_OVER_THRESHOLD",
		"REQUESTED_SPEND_LIMIT_HIGHER_THAN_SERVICE_LIMIT",
		"SENDER_ID_NOT_REGISTERED",
		"SENDER_ID_NOT_SUPPORTED",
		"TWO_WAY_NOT_ENABLED",
		"TWO_WAY_NOT_SUPPORTED_IN_COUNTRY",
		"TWO_WAY_NOT_SUPPORTED_IN_REGION",
		"TWO_WAY_TOPIC_NOT_PRESENT",
	}
}

type VoiceId string

// Enum values for VoiceId
const (
	VoiceIdAmy       VoiceId = "AMY"
	VoiceIdAstrid    VoiceId = "ASTRID"
	VoiceIdBianca    VoiceId = "BIANCA"
	VoiceIdBrian     VoiceId = "BRIAN"
	VoiceIdCamila    VoiceId = "CAMILA"
	VoiceIdCarla     VoiceId = "CARLA"
	VoiceIdCarmen    VoiceId = "CARMEN"
	VoiceIdCeline    VoiceId = "CELINE"
	VoiceIdChantal   VoiceId = "CHANTAL"
	VoiceIdConchita  VoiceId = "CONCHITA"
	VoiceIdCristiano VoiceId = "CRISTIANO"
	VoiceIdDora      VoiceId = "DORA"
	VoiceIdEmma      VoiceId = "EMMA"
	VoiceIdEnrique   VoiceId = "ENRIQUE"
	VoiceIdEwa       VoiceId = "EWA"
	VoiceIdFiliz     VoiceId = "FILIZ"
	VoiceIdGeraint   VoiceId = "GERAINT"
	VoiceIdGiorgio   VoiceId = "GIORGIO"
	VoiceIdGwyneth   VoiceId = "GWYNETH"
	VoiceIdHans      VoiceId = "HANS"
	VoiceIdInes      VoiceId = "INES"
	VoiceIdIvy       VoiceId = "IVY"
	VoiceIdJacek     VoiceId = "JACEK"
	VoiceIdJan       VoiceId = "JAN"
	VoiceIdJoanna    VoiceId = "JOANNA"
	VoiceIdJoey      VoiceId = "JOEY"
	VoiceIdJustin    VoiceId = "JUSTIN"
	VoiceIdKarl      VoiceId = "KARL"
	VoiceIdKendra    VoiceId = "KENDRA"
	VoiceIdKimberly  VoiceId = "KIMBERLY"
	VoiceIdLea       VoiceId = "LEA"
	VoiceIdLiv       VoiceId = "LIV"
	VoiceIdLotte     VoiceId = "LOTTE"
	VoiceIdLucia     VoiceId = "LUCIA"
	VoiceIdLupe      VoiceId = "LUPE"
	VoiceIdMads      VoiceId = "MADS"
	VoiceIdMaja      VoiceId = "MAJA"
	VoiceIdMarlene   VoiceId = "MARLENE"
	VoiceIdMathieu   VoiceId = "MATHIEU"
	VoiceIdMatthew   VoiceId = "MATTHEW"
	VoiceIdMaxim     VoiceId = "MAXIM"
	VoiceIdMia       VoiceId = "MIA"
	VoiceIdMiguel    VoiceId = "MIGUEL"
	VoiceIdMizuki    VoiceId = "MIZUKI"
	VoiceIdNaja      VoiceId = "NAJA"
	VoiceIdNicole    VoiceId = "NICOLE"
	VoiceIdPenelope  VoiceId = "PENELOPE"
	VoiceIdRaveena   VoiceId = "RAVEENA"
	VoiceIdRicardo   VoiceId = "RICARDO"
	VoiceIdRuben     VoiceId = "RUBEN"
	VoiceIdRussell   VoiceId = "RUSSELL"
	VoiceIdSalli     VoiceId = "SALLI"
	VoiceIdSeoyeon   VoiceId = "SEOYEON"
	VoiceIdTakumi    VoiceId = "TAKUMI"
	VoiceIdTatyana   VoiceId = "TATYANA"
	VoiceIdVicki     VoiceId = "VICKI"
	VoiceIdVitoria   VoiceId = "VITORIA"
	VoiceIdZeina     VoiceId = "ZEINA"
	VoiceIdZhiyu     VoiceId = "ZHIYU"
)

// Values returns all known values for VoiceId. Note that this can be expanded in
// the future, and so it is only as up to date as the client. The ordering of this
// slice is not guaranteed to be stable across updates.
func (VoiceId) Values() []VoiceId {
	return []VoiceId{
		"AMY",
		"ASTRID",
		"BIANCA",
		"BRIAN",
		"CAMILA",
		"CARLA",
		"CARMEN",
		"CELINE",
		"CHANTAL",
		"CONCHITA",
		"CRISTIANO",
		"DORA",
		"EMMA",
		"ENRIQUE",
		"EWA",
		"FILIZ",
		"GERAINT",
		"GIORGIO",
		"GWYNETH",
		"HANS",
		"INES",
		"IVY",
		"JACEK",
		"JAN",
		"JOANNA",
		"JOEY",
		"JUSTIN",
		"KARL",
		"KENDRA",
		"KIMBERLY",
		"LEA",
		"LIV",
		"LOTTE",
		"LUCIA",
		"LUPE",
		"MADS",
		"MAJA",
		"MARLENE",
		"MATHIEU",
		"MATTHEW",
		"MAXIM",
		"MIA",
		"MIGUEL",
		"MIZUKI",
		"NAJA",
		"NICOLE",
		"PENELOPE",
		"RAVEENA",
		"RICARDO",
		"RUBEN",
		"RUSSELL",
		"SALLI",
		"SEOYEON",
		"TAKUMI",
		"TATYANA",
		"VICKI",
		"VITORIA",
		"ZEINA",
		"ZHIYU",
	}
}

type VoiceMessageBodyTextType string

// Enum values for VoiceMessageBodyTextType
const (
	VoiceMessageBodyTextTypeText VoiceMessageBodyTextType = "TEXT"
	VoiceMessageBodyTextTypeSsml VoiceMessageBodyTextType = "SSML"
)

// Values returns all known values for VoiceMessageBodyTextType. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
// The ordering of this slice is not guaranteed to be stable across updates.
func (VoiceMessageBodyTextType) Values() []VoiceMessageBodyTextType {
	return []VoiceMessageBodyTextType{
		"TEXT",
		"SSML",
	}
}
