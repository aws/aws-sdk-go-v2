// Code generated by smithy-go-codegen DO NOT EDIT.

package codebuild

import (
	"context"
	awsmiddleware "github.com/aws/aws-sdk-go-v2/aws/middleware"
	"github.com/aws/aws-sdk-go-v2/aws/retry"
	"github.com/aws/aws-sdk-go-v2/aws/signer/v4"
	"github.com/aws/aws-sdk-go-v2/service/codebuild/types"
	smithy "github.com/awslabs/smithy-go"
	"github.com/awslabs/smithy-go/middleware"
	smithyhttp "github.com/awslabs/smithy-go/transport/http"
)

// Retrieves one or more code coverage reports.
func (c *Client) DescribeCodeCoverages(ctx context.Context, params *DescribeCodeCoveragesInput, optFns ...func(*Options)) (*DescribeCodeCoveragesOutput, error) {
	stack := middleware.NewStack("DescribeCodeCoverages", smithyhttp.NewStackRequest)
	options := c.options.Copy()
	for _, fn := range optFns {
		fn(&options)
	}
	addawsAwsjson11_serdeOpDescribeCodeCoveragesMiddlewares(stack)
	awsmiddleware.AddRequestInvocationIDMiddleware(stack)
	smithyhttp.AddContentLengthMiddleware(stack)
	AddResolveEndpointMiddleware(stack, options)
	v4.AddComputePayloadSHA256Middleware(stack)
	retry.AddRetryMiddlewares(stack, options)
	addHTTPSignerV4Middleware(stack, options)
	awsmiddleware.AddAttemptClockSkewMiddleware(stack)
	addClientUserAgent(stack)
	smithyhttp.AddErrorCloseResponseBodyMiddleware(stack)
	smithyhttp.AddCloseResponseBodyMiddleware(stack)
	addOpDescribeCodeCoveragesValidationMiddleware(stack)
	stack.Initialize.Add(newServiceMetadataMiddleware_opDescribeCodeCoverages(options.Region), middleware.Before)

	for _, fn := range options.APIOptions {
		if err := fn(stack); err != nil {
			return nil, err
		}
	}
	handler := middleware.DecorateHandler(smithyhttp.NewClientHandler(options.HTTPClient), stack)
	result, metadata, err := handler.Handle(ctx, params)
	if err != nil {
		return nil, &smithy.OperationError{
			ServiceID:     ServiceID,
			OperationName: "DescribeCodeCoverages",
			Err:           err,
		}
	}
	out := result.(*DescribeCodeCoveragesOutput)
	out.ResultMetadata = metadata
	return out, nil
}

type DescribeCodeCoveragesInput struct {
	// The minimum line coverage percentage to report.
	MinLineCoveragePercentage *float64
	// The maximum number of results to return.
	MaxResults *int32
	// The maximum line coverage percentage to report.
	MaxLineCoveragePercentage *float64
	// The ARN of the report for which test cases are returned.
	ReportArn *string
	// Specifies if the results are sorted in ascending or descending order.
	SortOrder types.SortOrderType
	// Specifies how the results are sorted. Possible values are: FILE_PATH The results
	// are sorted by file path. LINE_COVERAGE_PERCENTAGE The results are sorted by the
	// percentage of lines that are covered.
	SortBy types.ReportCodeCoverageSortByType
	// The nextToken value returned from a previous call to DescribeCodeCoverages. This
	// specifies the next item to return. To return the beginning of the list, exclude
	// this parameter.
	NextToken *string
}

type DescribeCodeCoveragesOutput struct {
	// An array of CodeCoverage objects that contain the results.
	CodeCoverages []*types.CodeCoverage
	// If there are more items to return, this contains a token that is passed to a
	// subsequent call to DescribeCodeCoverages to retrieve the next set of items.
	NextToken *string

	// Metadata pertaining to the operation's result.
	ResultMetadata middleware.Metadata
}

func addawsAwsjson11_serdeOpDescribeCodeCoveragesMiddlewares(stack *middleware.Stack) {
	stack.Serialize.Add(&awsAwsjson11_serializeOpDescribeCodeCoverages{}, middleware.After)
	stack.Deserialize.Add(&awsAwsjson11_deserializeOpDescribeCodeCoverages{}, middleware.After)
}

func newServiceMetadataMiddleware_opDescribeCodeCoverages(region string) awsmiddleware.RegisterServiceMetadata {
	return awsmiddleware.RegisterServiceMetadata{
		Region:        region,
		ServiceID:     ServiceID,
		SigningName:   "codebuild",
		OperationName: "DescribeCodeCoverages",
	}
}
