// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package codebuild

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/codebuild/types"
)

const opListBuilds = "ListBuilds"

// ListBuildsRequest returns a request value for making API operation for
// AWS CodeBuild.
//
// Gets a list of build IDs, with each build ID representing a single build.
//
//    // Example sending a request using ListBuildsRequest.
//    req := client.ListBuildsRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/codebuild-2016-10-06/ListBuilds
func (c *Client) ListBuildsRequest(input *types.ListBuildsInput) ListBuildsRequest {
	op := &aws.Operation{
		Name:       opListBuilds,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &types.ListBuildsInput{}
	}

	req := c.newRequest(op, input, &types.ListBuildsOutput{})
	return ListBuildsRequest{Request: req, Input: input, Copy: c.ListBuildsRequest}
}

// ListBuildsRequest is the request type for the
// ListBuilds API operation.
type ListBuildsRequest struct {
	*aws.Request
	Input *types.ListBuildsInput
	Copy  func(*types.ListBuildsInput) ListBuildsRequest
}

// Send marshals and sends the ListBuilds API request.
func (r ListBuildsRequest) Send(ctx context.Context) (*ListBuildsResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &ListBuildsResponse{
		ListBuildsOutput: r.Request.Data.(*types.ListBuildsOutput),
		response:         &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// ListBuildsResponse is the response type for the
// ListBuilds API operation.
type ListBuildsResponse struct {
	*types.ListBuildsOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// ListBuilds request.
func (r *ListBuildsResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
