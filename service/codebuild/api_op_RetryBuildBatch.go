// Code generated by smithy-go-codegen DO NOT EDIT.

package codebuild

import (
	"context"
	awsmiddleware "github.com/aws/aws-sdk-go-v2/aws/middleware"
	"github.com/aws/aws-sdk-go-v2/aws/signer/v4"
	"github.com/aws/aws-sdk-go-v2/service/codebuild/types"
	"github.com/awslabs/smithy-go/middleware"
	smithyhttp "github.com/awslabs/smithy-go/transport/http"
)

// Restarts a batch build.
func (c *Client) RetryBuildBatch(ctx context.Context, params *RetryBuildBatchInput, optFns ...func(*Options)) (*RetryBuildBatchOutput, error) {
	if params == nil {
		params = &RetryBuildBatchInput{}
	}

	result, metadata, err := c.invokeOperation(ctx, "RetryBuildBatch", params, optFns, addOperationRetryBuildBatchMiddlewares)
	if err != nil {
		return nil, err
	}

	out := result.(*RetryBuildBatchOutput)
	out.ResultMetadata = metadata
	return out, nil
}

type RetryBuildBatchInput struct {

	// Specifies the identifier of the batch build to restart.
	Id *string

	// A unique, case sensitive identifier you provide to ensure the idempotency of the
	// RetryBuildBatch request. The token is included in the RetryBuildBatch request
	// and is valid for five minutes. If you repeat the RetryBuildBatch request with
	// the same token, but change a parameter, AWS CodeBuild returns a parameter
	// mismatch error.
	IdempotencyToken *string

	// Specifies the type of retry to perform.
	RetryType types.RetryBuildBatchType
}

type RetryBuildBatchOutput struct {

	// Contains information about a batch build.
	BuildBatch *types.BuildBatch

	// Metadata pertaining to the operation's result.
	ResultMetadata middleware.Metadata
}

func addOperationRetryBuildBatchMiddlewares(stack *middleware.Stack, options Options) (err error) {
	err = stack.Serialize.Add(&awsAwsjson11_serializeOpRetryBuildBatch{}, middleware.After)
	if err != nil {
		return err
	}
	err = stack.Deserialize.Add(&awsAwsjson11_deserializeOpRetryBuildBatch{}, middleware.After)
	if err != nil {
		return err
	}
	awsmiddleware.AddRequestInvocationIDMiddleware(stack)
	smithyhttp.AddContentLengthMiddleware(stack)
	addResolveEndpointMiddleware(stack, options)
	v4.AddComputePayloadSHA256Middleware(stack)
	addRetryMiddlewares(stack, options)
	addHTTPSignerV4Middleware(stack, options)
	awsmiddleware.AddAttemptClockSkewMiddleware(stack)
	addClientUserAgent(stack)
	smithyhttp.AddErrorCloseResponseBodyMiddleware(stack)
	smithyhttp.AddCloseResponseBodyMiddleware(stack)
	stack.Initialize.Add(newServiceMetadataMiddleware_opRetryBuildBatch(options.Region), middleware.Before)
	addRequestIDRetrieverMiddleware(stack)
	addResponseErrorMiddleware(stack)
	return nil
}

func newServiceMetadataMiddleware_opRetryBuildBatch(region string) awsmiddleware.RegisterServiceMetadata {
	return awsmiddleware.RegisterServiceMetadata{
		Region:        region,
		ServiceID:     ServiceID,
		SigningName:   "codebuild",
		OperationName: "RetryBuildBatch",
	}
}
