// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package transcribe

type LanguageCode string

// Enum values for LanguageCode
const (
	LanguageCodeEnUs LanguageCode = "en-US"
	LanguageCodeEsUs LanguageCode = "es-US"
	LanguageCodeEnAu LanguageCode = "en-AU"
	LanguageCodeFrCa LanguageCode = "fr-CA"
	LanguageCodeEnGb LanguageCode = "en-GB"
	LanguageCodeDeDe LanguageCode = "de-DE"
	LanguageCodePtBr LanguageCode = "pt-BR"
	LanguageCodeFrFr LanguageCode = "fr-FR"
	LanguageCodeItIt LanguageCode = "it-IT"
	LanguageCodeKoKr LanguageCode = "ko-KR"
	LanguageCodeEsEs LanguageCode = "es-ES"
	LanguageCodeEnIn LanguageCode = "en-IN"
	LanguageCodeHiIn LanguageCode = "hi-IN"
	LanguageCodeArSa LanguageCode = "ar-SA"
	LanguageCodeRuRu LanguageCode = "ru-RU"
	LanguageCodeZhCn LanguageCode = "zh-CN"
	LanguageCodeNlNl LanguageCode = "nl-NL"
	LanguageCodeIdId LanguageCode = "id-ID"
	LanguageCodeTaIn LanguageCode = "ta-IN"
	LanguageCodeFaIr LanguageCode = "fa-IR"
	LanguageCodeEnIe LanguageCode = "en-IE"
	LanguageCodeEnAb LanguageCode = "en-AB"
	LanguageCodeEnWl LanguageCode = "en-WL"
	LanguageCodePtPt LanguageCode = "pt-PT"
	LanguageCodeTeIn LanguageCode = "te-IN"
	LanguageCodeTrTr LanguageCode = "tr-TR"
	LanguageCodeDeCh LanguageCode = "de-CH"
	LanguageCodeHeIl LanguageCode = "he-IL"
	LanguageCodeMsMy LanguageCode = "ms-MY"
	LanguageCodeJaJp LanguageCode = "ja-JP"
	LanguageCodeArAe LanguageCode = "ar-AE"
)

func (enum LanguageCode) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum LanguageCode) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type MediaFormat string

// Enum values for MediaFormat
const (
	MediaFormatMp3  MediaFormat = "mp3"
	MediaFormatMp4  MediaFormat = "mp4"
	MediaFormatWav  MediaFormat = "wav"
	MediaFormatFlac MediaFormat = "flac"
)

func (enum MediaFormat) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum MediaFormat) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type OutputLocationType string

// Enum values for OutputLocationType
const (
	OutputLocationTypeCustomerBucket OutputLocationType = "CUSTOMER_BUCKET"
	OutputLocationTypeServiceBucket  OutputLocationType = "SERVICE_BUCKET"
)

func (enum OutputLocationType) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum OutputLocationType) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type TranscriptionJobStatus string

// Enum values for TranscriptionJobStatus
const (
	TranscriptionJobStatusQueued     TranscriptionJobStatus = "QUEUED"
	TranscriptionJobStatusInProgress TranscriptionJobStatus = "IN_PROGRESS"
	TranscriptionJobStatusFailed     TranscriptionJobStatus = "FAILED"
	TranscriptionJobStatusCompleted  TranscriptionJobStatus = "COMPLETED"
)

func (enum TranscriptionJobStatus) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum TranscriptionJobStatus) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type VocabularyFilterMethod string

// Enum values for VocabularyFilterMethod
const (
	VocabularyFilterMethodRemove VocabularyFilterMethod = "remove"
	VocabularyFilterMethodMask   VocabularyFilterMethod = "mask"
)

func (enum VocabularyFilterMethod) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum VocabularyFilterMethod) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type VocabularyState string

// Enum values for VocabularyState
const (
	VocabularyStatePending VocabularyState = "PENDING"
	VocabularyStateReady   VocabularyState = "READY"
	VocabularyStateFailed  VocabularyState = "FAILED"
)

func (enum VocabularyState) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum VocabularyState) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}
