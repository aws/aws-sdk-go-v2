// Code generated by smithy-go-codegen DO NOT EDIT.

package support

import (
	"context"
	awsmiddleware "github.com/aws/aws-sdk-go-v2/aws/middleware"
	"github.com/aws/aws-sdk-go-v2/aws/retry"
	"github.com/aws/aws-sdk-go-v2/aws/signer/v4"
	smithy "github.com/awslabs/smithy-go"
	"github.com/awslabs/smithy-go/middleware"
	smithyhttp "github.com/awslabs/smithy-go/transport/http"
)

// Creates a case in the AWS Support Center. This operation is similar to how you
// create a case in the AWS Support Center Create Case
// (https://console.aws.amazon.com/support/home#/case/create) page. The AWS Support
// API doesn't support requesting service limit increases. You can submit a service
// limit increase in the following ways:
//
//     * Submit a request from the AWS
// Support Center Create Case
// (https://console.aws.amazon.com/support/home#/case/create) page.
//
//     * Use the
// Service Quotas RequestServiceQuotaIncrease
// (https://docs.aws.amazon.com/servicequotas/2019-06-24/apireference/API_RequestServiceQuotaIncrease.html)
// operation.
//
// A successful CreateCase request returns an AWS Support case number.
// You can use the DescribeCases () operation and specify the case number to get
// existing AWS Support cases. After you create a case, use the
// AddCommunicationToCase () operation to add additional communication or
// attachments to an existing case. The caseId is separate from the displayId that
// appears in the AWS Support Center (https://console.aws.amazon.com/support). Use
// the DescribeCases () operation to get the displayId.
//
//     * You must have a
// Business or Enterprise support plan to use the AWS Support API.
//
//     * If you
// call the AWS Support API from an account that does not have a Business or
// Enterprise support plan, the SubscriptionRequiredException error message
// appears. For information about changing your support plan, see AWS Support
// (http://aws.amazon.com/premiumsupport/).
func (c *Client) CreateCase(ctx context.Context, params *CreateCaseInput, optFns ...func(*Options)) (*CreateCaseOutput, error) {
	stack := middleware.NewStack("CreateCase", smithyhttp.NewStackRequest)
	options := c.options.Copy()
	for _, fn := range optFns {
		fn(&options)
	}
	addawsAwsjson11_serdeOpCreateCaseMiddlewares(stack)
	awsmiddleware.AddRequestInvocationIDMiddleware(stack)
	smithyhttp.AddContentLengthMiddleware(stack)
	AddResolveEndpointMiddleware(stack, options)
	v4.AddComputePayloadSHA256Middleware(stack)
	retry.AddRetryMiddlewares(stack, options)
	addHTTPSignerV4Middleware(stack, options)
	awsmiddleware.AddAttemptClockSkewMiddleware(stack)
	addClientUserAgent(stack)
	smithyhttp.AddErrorCloseResponseBodyMiddleware(stack)
	smithyhttp.AddCloseResponseBodyMiddleware(stack)
	addOpCreateCaseValidationMiddleware(stack)
	stack.Initialize.Add(newServiceMetadataMiddleware_opCreateCase(options.Region), middleware.Before)

	for _, fn := range options.APIOptions {
		if err := fn(stack); err != nil {
			return nil, err
		}
	}
	handler := middleware.DecorateHandler(smithyhttp.NewClientHandler(options.HTTPClient), stack)
	result, metadata, err := handler.Handle(ctx, params)
	if err != nil {
		return nil, &smithy.OperationError{
			ServiceID:     ServiceID,
			OperationName: "CreateCase",
			Err:           err,
		}
	}
	out := result.(*CreateCaseOutput)
	out.ResultMetadata = metadata
	return out, nil
}

type CreateCaseInput struct {
	// A value that indicates the urgency of the case. This value determines the
	// response time according to your service level agreement with AWS Support. You
	// can use the DescribeSeverityLevels () operation to get the possible values for
	// severityCode. For more information, see SeverityLevel () and Choosing a Severity
	// (https://docs.aws.amazon.com/awssupport/latest/user/getting-started.html#choosing-severity)
	// in the AWS Support User Guide. The availability of severity levels depends on
	// the support plan for the AWS account.
	SeverityCode *string
	// The category of problem for the AWS Support case. You also use the
	// DescribeServices () operation to get the category code for a service. Each AWS
	// service defines its own set of category codes.
	CategoryCode *string
	// The code for the AWS service. You can use the DescribeServices () operation to
	// get the possible serviceCode values.
	ServiceCode *string
	// The type of issue for the case. You can specify customer-service or technical.
	// If you don't specify a value, the default is technical.
	IssueType *string
	// A list of email addresses that AWS Support copies on case correspondence. AWS
	// Support identifies the account that creates the case when you specify your AWS
	// credentials in an HTTP POST method or use the AWS SDKs
	// (http://aws.amazon.com/tools/).
	CcEmailAddresses []*string
	// The title of the AWS Support case. The title appears in the Subject field on the
	// AWS Support Center Create Case
	// (https://console.aws.amazon.com/support/home#/case/create) page.
	Subject *string
	// The communication body text that describes the issue. This text appears in the
	// Description field on the AWS Support Center Create Case
	// (https://console.aws.amazon.com/support/home#/case/create) page.
	CommunicationBody *string
	// The language in which AWS Support handles the case. You must specify the ISO
	// 639-1 code for the language parameter if you want support in that language.
	// Currently, English ("en") and Japanese ("ja") are supported.
	Language *string
	// The ID of a set of one or more attachments for the case. Create the set by using
	// the AddAttachmentsToSet () operation.
	AttachmentSetId *string
}

// The AWS Support case ID returned by a successful completion of the CreateCase ()
// operation.
type CreateCaseOutput struct {
	// The AWS Support case ID requested or returned in the call. The case ID is an
	// alphanumeric string in the following format:
	// case-12345678910-2013-c4c1d2bf33c5cf47
	CaseId *string

	// Metadata pertaining to the operation's result.
	ResultMetadata middleware.Metadata
}

func addawsAwsjson11_serdeOpCreateCaseMiddlewares(stack *middleware.Stack) {
	stack.Serialize.Add(&awsAwsjson11_serializeOpCreateCase{}, middleware.After)
	stack.Deserialize.Add(&awsAwsjson11_deserializeOpCreateCase{}, middleware.After)
}

func newServiceMetadataMiddleware_opCreateCase(region string) awsmiddleware.RegisterServiceMetadata {
	return awsmiddleware.RegisterServiceMetadata{
		Region:        region,
		ServiceID:     ServiceID,
		SigningName:   "support",
		OperationName: "CreateCase",
	}
}
