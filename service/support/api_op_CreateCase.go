// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package support

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/support/types"
)

const opCreateCase = "CreateCase"

// CreateCaseRequest returns a request value for making API operation for
// AWS Support.
//
// Creates a new case in the AWS Support Center. This operation is modeled on
// the behavior of the AWS Support Center Create Case (https://console.aws.amazon.com/support/home#/case/create)
// page. Its parameters require you to specify the following information:
//
//    * issueType. The type of issue for the case. You can specify either "customer-service"
//    or "technical." If you do not indicate a value, the default is "technical."
//    Service limit increases are not supported by the Support API; you must
//    submit service limit increase requests in Support Center (https://console.aws.amazon.com/support).
//    The caseId is not the displayId that appears in Support Center (https://console.aws.amazon.com/support).
//    You can use the DescribeCases API to get the displayId.
//
//    * serviceCode. The code for an AWS service. You can get the possible serviceCode
//    values by calling DescribeServices.
//
//    * categoryCode. The category for the service defined for the serviceCode
//    value. You also get the category code for a service by calling DescribeServices.
//    Each AWS service defines its own set of category codes.
//
//    * severityCode. A value that indicates the urgency of the case, which
//    in turn determines the response time according to your service level agreement
//    with AWS Support. You can get the possible severityCode values by calling
//    DescribeSeverityLevels. For more information about the meaning of the
//    codes, see SeverityLevel and Choosing a Severity (https://docs.aws.amazon.com/awssupport/latest/user/getting-started.html#choosing-severity).
//
//    * subject. The Subject field on the AWS Support Center Create Case (https://console.aws.amazon.com/support/home#/case/create)
//    page.
//
//    * communicationBody. The Description field on the AWS Support Center Create
//    Case (https://console.aws.amazon.com/support/home#/case/create) page.
//
//    * attachmentSetId. The ID of a set of attachments that has been created
//    by using AddAttachmentsToSet.
//
//    * language. The human language in which AWS Support handles the case.
//    English and Japanese are currently supported.
//
//    * ccEmailAddresses. The AWS Support Center CC field on the Create Case
//    (https://console.aws.amazon.com/support/home#/case/create) page. You can
//    list email addresses to be copied on any correspondence about the case.
//    The account that opens the case is already identified by passing the AWS
//    Credentials in the HTTP POST method or in a method or function call from
//    one of the programming languages supported by an AWS SDK (http://aws.amazon.com/tools/).
//
// To add additional communication or attachments to an existing case, use AddCommunicationToCase.
//
// A successful CreateCase request returns an AWS Support case number. Case
// numbers are used by the DescribeCases operation to retrieve existing AWS
// Support cases.
//
//    // Example sending a request using CreateCaseRequest.
//    req := client.CreateCaseRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/support-2013-04-15/CreateCase
func (c *Client) CreateCaseRequest(input *types.CreateCaseInput) CreateCaseRequest {
	op := &aws.Operation{
		Name:       opCreateCase,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &types.CreateCaseInput{}
	}

	req := c.newRequest(op, input, &types.CreateCaseOutput{})
	return CreateCaseRequest{Request: req, Input: input, Copy: c.CreateCaseRequest}
}

// CreateCaseRequest is the request type for the
// CreateCase API operation.
type CreateCaseRequest struct {
	*aws.Request
	Input *types.CreateCaseInput
	Copy  func(*types.CreateCaseInput) CreateCaseRequest
}

// Send marshals and sends the CreateCase API request.
func (r CreateCaseRequest) Send(ctx context.Context) (*CreateCaseResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &CreateCaseResponse{
		CreateCaseOutput: r.Request.Data.(*types.CreateCaseOutput),
		response:         &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// CreateCaseResponse is the response type for the
// CreateCase API operation.
type CreateCaseResponse struct {
	*types.CreateCaseOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// CreateCase request.
func (r *CreateCaseResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
