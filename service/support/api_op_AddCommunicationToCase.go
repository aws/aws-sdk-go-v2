// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package support

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/support/types"
)

const opAddCommunicationToCase = "AddCommunicationToCase"

// AddCommunicationToCaseRequest returns a request value for making API operation for
// AWS Support.
//
// Adds additional customer communication to an AWS Support case. You use the
// caseId value to identify the case to add communication to. You can list a
// set of email addresses to copy on the communication using the ccEmailAddresses
// value. The communicationBody value contains the text of the communication.
//
// The response indicates the success or failure of the request.
//
// This operation implements a subset of the features of the AWS Support Center.
//
//    // Example sending a request using AddCommunicationToCaseRequest.
//    req := client.AddCommunicationToCaseRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/support-2013-04-15/AddCommunicationToCase
func (c *Client) AddCommunicationToCaseRequest(input *types.AddCommunicationToCaseInput) AddCommunicationToCaseRequest {
	op := &aws.Operation{
		Name:       opAddCommunicationToCase,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &types.AddCommunicationToCaseInput{}
	}

	req := c.newRequest(op, input, &types.AddCommunicationToCaseOutput{})
	return AddCommunicationToCaseRequest{Request: req, Input: input, Copy: c.AddCommunicationToCaseRequest}
}

// AddCommunicationToCaseRequest is the request type for the
// AddCommunicationToCase API operation.
type AddCommunicationToCaseRequest struct {
	*aws.Request
	Input *types.AddCommunicationToCaseInput
	Copy  func(*types.AddCommunicationToCaseInput) AddCommunicationToCaseRequest
}

// Send marshals and sends the AddCommunicationToCase API request.
func (r AddCommunicationToCaseRequest) Send(ctx context.Context) (*AddCommunicationToCaseResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &AddCommunicationToCaseResponse{
		AddCommunicationToCaseOutput: r.Request.Data.(*types.AddCommunicationToCaseOutput),
		response:                     &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// AddCommunicationToCaseResponse is the response type for the
// AddCommunicationToCase API operation.
type AddCommunicationToCaseResponse struct {
	*types.AddCommunicationToCaseOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// AddCommunicationToCase request.
func (r *AddCommunicationToCaseResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
