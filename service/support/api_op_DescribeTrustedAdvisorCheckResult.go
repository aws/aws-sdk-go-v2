// Code generated by smithy-go-codegen DO NOT EDIT.

package support

import (
	"context"
	awsmiddleware "github.com/aws/aws-sdk-go-v2/aws/middleware"
	"github.com/aws/aws-sdk-go-v2/aws/retry"
	"github.com/aws/aws-sdk-go-v2/aws/signer/v4"
	"github.com/aws/aws-sdk-go-v2/service/support/types"
	smithy "github.com/awslabs/smithy-go"
	"github.com/awslabs/smithy-go/middleware"
	smithyhttp "github.com/awslabs/smithy-go/transport/http"
)

// Returns the results of the AWS Trusted Advisor check that has the specified
// check ID. You can get the check IDs by calling the DescribeTrustedAdvisorChecks
// () operation. The response contains a TrustedAdvisorCheckResult () object, which
// contains these three objects:
//
//     * TrustedAdvisorCategorySpecificSummary ()
//
//
// * TrustedAdvisorResourceDetail ()
//
//     * TrustedAdvisorResourcesSummary ()
//
// In
// addition, the response contains these fields:
//
//     * status - The alert status
// of the check: "ok" (green), "warning" (yellow), "error" (red), or
// "not_available".
//
//     * timestamp - The time of the last refresh of the check.
//
//
// * checkId - The unique identifier for the check.
//
//     <note> <ul> <li> <p>You
// must have a Business or Enterprise support plan to use the AWS Support API. </p>
// </li> <li> <p>If you call the AWS Support API from an account that does not have
// a Business or Enterprise support plan, the
// <code>SubscriptionRequiredException</code> error message appears. For
// information about changing your support plan, see <a
// href="http://aws.amazon.com/premiumsupport/">AWS Support</a>.</p> </li> </ul>
// </note>
func (c *Client) DescribeTrustedAdvisorCheckResult(ctx context.Context, params *DescribeTrustedAdvisorCheckResultInput, optFns ...func(*Options)) (*DescribeTrustedAdvisorCheckResultOutput, error) {
	stack := middleware.NewStack("DescribeTrustedAdvisorCheckResult", smithyhttp.NewStackRequest)
	options := c.options.Copy()
	for _, fn := range optFns {
		fn(&options)
	}
	addawsAwsjson11_serdeOpDescribeTrustedAdvisorCheckResultMiddlewares(stack)
	awsmiddleware.AddRequestInvocationIDMiddleware(stack)
	smithyhttp.AddContentLengthMiddleware(stack)
	AddResolveEndpointMiddleware(stack, options)
	v4.AddComputePayloadSHA256Middleware(stack)
	retry.AddRetryMiddlewares(stack, options)
	addHTTPSignerV4Middleware(stack, options)
	awsmiddleware.AddAttemptClockSkewMiddleware(stack)
	addClientUserAgent(stack)
	smithyhttp.AddErrorCloseResponseBodyMiddleware(stack)
	smithyhttp.AddCloseResponseBodyMiddleware(stack)
	addOpDescribeTrustedAdvisorCheckResultValidationMiddleware(stack)
	stack.Initialize.Add(newServiceMetadataMiddleware_opDescribeTrustedAdvisorCheckResult(options.Region), middleware.Before)

	for _, fn := range options.APIOptions {
		if err := fn(stack); err != nil {
			return nil, err
		}
	}
	handler := middleware.DecorateHandler(smithyhttp.NewClientHandler(options.HTTPClient), stack)
	result, metadata, err := handler.Handle(ctx, params)
	if err != nil {
		return nil, &smithy.OperationError{
			ServiceID:     ServiceID,
			OperationName: "DescribeTrustedAdvisorCheckResult",
			Err:           err,
		}
	}
	out := result.(*DescribeTrustedAdvisorCheckResultOutput)
	out.ResultMetadata = metadata
	return out, nil
}

//
type DescribeTrustedAdvisorCheckResultInput struct {
	// The unique identifier for the Trusted Advisor check.
	CheckId *string
	// The ISO 639-1 code for the language in which AWS provides support. AWS Support
	// currently supports English ("en") and Japanese ("ja"). Language parameters must
	// be passed explicitly for operations that take them.
	Language *string
}

// The result of the Trusted Advisor check returned by the
// DescribeTrustedAdvisorCheckResult () operation.
type DescribeTrustedAdvisorCheckResultOutput struct {
	// The detailed results of the Trusted Advisor check.
	Result *types.TrustedAdvisorCheckResult

	// Metadata pertaining to the operation's result.
	ResultMetadata middleware.Metadata
}

func addawsAwsjson11_serdeOpDescribeTrustedAdvisorCheckResultMiddlewares(stack *middleware.Stack) {
	stack.Serialize.Add(&awsAwsjson11_serializeOpDescribeTrustedAdvisorCheckResult{}, middleware.After)
	stack.Deserialize.Add(&awsAwsjson11_deserializeOpDescribeTrustedAdvisorCheckResult{}, middleware.After)
}

func newServiceMetadataMiddleware_opDescribeTrustedAdvisorCheckResult(region string) awsmiddleware.RegisterServiceMetadata {
	return awsmiddleware.RegisterServiceMetadata{
		Region:        region,
		ServiceID:     ServiceID,
		SigningName:   "support",
		OperationName: "DescribeTrustedAdvisorCheckResult",
	}
}
