// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package ec2

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/ec2/types"
)

const opMonitorInstances = "MonitorInstances"

// MonitorInstancesRequest returns a request value for making API operation for
// Amazon Elastic Compute Cloud.
//
// Enables detailed monitoring for a running instance. Otherwise, basic monitoring
// is enabled. For more information, see Monitoring Your Instances and Volumes
// (https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-cloudwatch.html)
// in the Amazon Elastic Compute Cloud User Guide.
//
// To disable detailed monitoring, see .
//
//    // Example sending a request using MonitorInstancesRequest.
//    req := client.MonitorInstancesRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/ec2-2016-11-15/MonitorInstances
func (c *Client) MonitorInstancesRequest(input *types.MonitorInstancesInput) MonitorInstancesRequest {
	op := &aws.Operation{
		Name:       opMonitorInstances,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &types.MonitorInstancesInput{}
	}

	req := c.newRequest(op, input, &types.MonitorInstancesOutput{})
	return MonitorInstancesRequest{Request: req, Input: input, Copy: c.MonitorInstancesRequest}
}

// MonitorInstancesRequest is the request type for the
// MonitorInstances API operation.
type MonitorInstancesRequest struct {
	*aws.Request
	Input *types.MonitorInstancesInput
	Copy  func(*types.MonitorInstancesInput) MonitorInstancesRequest
}

// Send marshals and sends the MonitorInstances API request.
func (r MonitorInstancesRequest) Send(ctx context.Context) (*MonitorInstancesResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &MonitorInstancesResponse{
		MonitorInstancesOutput: r.Request.Data.(*types.MonitorInstancesOutput),
		response:               &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// MonitorInstancesResponse is the response type for the
// MonitorInstances API operation.
type MonitorInstancesResponse struct {
	*types.MonitorInstancesOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// MonitorInstances request.
func (r *MonitorInstancesResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
