// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package ec2

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/ec2/types"
)

const opReplaceNetworkAclAssociation = "ReplaceNetworkAclAssociation"

// ReplaceNetworkAclAssociationRequest returns a request value for making API operation for
// Amazon Elastic Compute Cloud.
//
// Changes which network ACL a subnet is associated with. By default when you
// create a subnet, it's automatically associated with the default network ACL.
// For more information, see Network ACLs (https://docs.aws.amazon.com/vpc/latest/userguide/VPC_ACLs.html)
// in the Amazon Virtual Private Cloud User Guide.
//
// This is an idempotent operation.
//
//    // Example sending a request using ReplaceNetworkAclAssociationRequest.
//    req := client.ReplaceNetworkAclAssociationRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/ec2-2016-11-15/ReplaceNetworkAclAssociation
func (c *Client) ReplaceNetworkAclAssociationRequest(input *types.ReplaceNetworkAclAssociationInput) ReplaceNetworkAclAssociationRequest {
	op := &aws.Operation{
		Name:       opReplaceNetworkAclAssociation,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &types.ReplaceNetworkAclAssociationInput{}
	}

	req := c.newRequest(op, input, &types.ReplaceNetworkAclAssociationOutput{})
	return ReplaceNetworkAclAssociationRequest{Request: req, Input: input, Copy: c.ReplaceNetworkAclAssociationRequest}
}

// ReplaceNetworkAclAssociationRequest is the request type for the
// ReplaceNetworkAclAssociation API operation.
type ReplaceNetworkAclAssociationRequest struct {
	*aws.Request
	Input *types.ReplaceNetworkAclAssociationInput
	Copy  func(*types.ReplaceNetworkAclAssociationInput) ReplaceNetworkAclAssociationRequest
}

// Send marshals and sends the ReplaceNetworkAclAssociation API request.
func (r ReplaceNetworkAclAssociationRequest) Send(ctx context.Context) (*ReplaceNetworkAclAssociationResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &ReplaceNetworkAclAssociationResponse{
		ReplaceNetworkAclAssociationOutput: r.Request.Data.(*types.ReplaceNetworkAclAssociationOutput),
		response:                           &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// ReplaceNetworkAclAssociationResponse is the response type for the
// ReplaceNetworkAclAssociation API operation.
type ReplaceNetworkAclAssociationResponse struct {
	*types.ReplaceNetworkAclAssociationOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// ReplaceNetworkAclAssociation request.
func (r *ReplaceNetworkAclAssociationResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
