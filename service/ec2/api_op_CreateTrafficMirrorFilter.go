// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package ec2

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/ec2/types"
)

const opCreateTrafficMirrorFilter = "CreateTrafficMirrorFilter"

// CreateTrafficMirrorFilterRequest returns a request value for making API operation for
// Amazon Elastic Compute Cloud.
//
// Creates a Traffic Mirror filter.
//
// A Traffic Mirror filter is a set of rules that defines the traffic to mirror.
//
// By default, no traffic is mirrored. To mirror traffic, use CreateTrafficMirrorFilterRule
// (https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateTrafficMirrorFilterRule.htm)
// to add Traffic Mirror rules to the filter. The rules you add define what
// traffic gets mirrored. You can also use ModifyTrafficMirrorFilterNetworkServices
// (https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyTrafficMirrorFilterNetworkServices.html)
// to mirror supported network services.
//
//    // Example sending a request using CreateTrafficMirrorFilterRequest.
//    req := client.CreateTrafficMirrorFilterRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/ec2-2016-11-15/CreateTrafficMirrorFilter
func (c *Client) CreateTrafficMirrorFilterRequest(input *types.CreateTrafficMirrorFilterInput) CreateTrafficMirrorFilterRequest {
	op := &aws.Operation{
		Name:       opCreateTrafficMirrorFilter,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &types.CreateTrafficMirrorFilterInput{}
	}

	req := c.newRequest(op, input, &types.CreateTrafficMirrorFilterOutput{})
	return CreateTrafficMirrorFilterRequest{Request: req, Input: input, Copy: c.CreateTrafficMirrorFilterRequest}
}

// CreateTrafficMirrorFilterRequest is the request type for the
// CreateTrafficMirrorFilter API operation.
type CreateTrafficMirrorFilterRequest struct {
	*aws.Request
	Input *types.CreateTrafficMirrorFilterInput
	Copy  func(*types.CreateTrafficMirrorFilterInput) CreateTrafficMirrorFilterRequest
}

// Send marshals and sends the CreateTrafficMirrorFilter API request.
func (r CreateTrafficMirrorFilterRequest) Send(ctx context.Context) (*CreateTrafficMirrorFilterResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &CreateTrafficMirrorFilterResponse{
		CreateTrafficMirrorFilterOutput: r.Request.Data.(*types.CreateTrafficMirrorFilterOutput),
		response:                        &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// CreateTrafficMirrorFilterResponse is the response type for the
// CreateTrafficMirrorFilter API operation.
type CreateTrafficMirrorFilterResponse struct {
	*types.CreateTrafficMirrorFilterOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// CreateTrafficMirrorFilter request.
func (r *CreateTrafficMirrorFilterResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
