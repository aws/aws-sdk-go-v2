// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package ec2

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/ec2/types"
)

const opCreateImage = "CreateImage"

// CreateImageRequest returns a request value for making API operation for
// Amazon Elastic Compute Cloud.
//
// Creates an Amazon EBS-backed AMI from an Amazon EBS-backed instance that
// is either running or stopped.
//
// If you customized your instance with instance store volumes or EBS volumes
// in addition to the root device volume, the new AMI contains block device
// mapping information for those volumes. When you launch an instance from this
// new AMI, the instance automatically launches with those additional volumes.
//
// For more information, see Creating Amazon EBS-Backed Linux AMIs (https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/creating-an-ami-ebs.html)
// in the Amazon Elastic Compute Cloud User Guide.
//
//    // Example sending a request using CreateImageRequest.
//    req := client.CreateImageRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/ec2-2016-11-15/CreateImage
func (c *Client) CreateImageRequest(input *types.CreateImageInput) CreateImageRequest {
	op := &aws.Operation{
		Name:       opCreateImage,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &types.CreateImageInput{}
	}

	req := c.newRequest(op, input, &types.CreateImageOutput{})
	return CreateImageRequest{Request: req, Input: input, Copy: c.CreateImageRequest}
}

// CreateImageRequest is the request type for the
// CreateImage API operation.
type CreateImageRequest struct {
	*aws.Request
	Input *types.CreateImageInput
	Copy  func(*types.CreateImageInput) CreateImageRequest
}

// Send marshals and sends the CreateImage API request.
func (r CreateImageRequest) Send(ctx context.Context) (*CreateImageResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &CreateImageResponse{
		CreateImageOutput: r.Request.Data.(*types.CreateImageOutput),
		response:          &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// CreateImageResponse is the response type for the
// CreateImage API operation.
type CreateImageResponse struct {
	*types.CreateImageOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// CreateImage request.
func (r *CreateImageResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
