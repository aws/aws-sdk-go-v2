// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package ec2

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/private/protocol"
	"github.com/aws/aws-sdk-go-v2/private/protocol/ec2query"
	"github.com/aws/aws-sdk-go-v2/service/ec2/types"
)

const opDetachNetworkInterface = "DetachNetworkInterface"

// DetachNetworkInterfaceRequest returns a request value for making API operation for
// Amazon Elastic Compute Cloud.
//
// Detaches a network interface from an instance.
//
//    // Example sending a request using DetachNetworkInterfaceRequest.
//    req := client.DetachNetworkInterfaceRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/ec2-2016-11-15/DetachNetworkInterface
func (c *Client) DetachNetworkInterfaceRequest(input *types.DetachNetworkInterfaceInput) DetachNetworkInterfaceRequest {
	op := &aws.Operation{
		Name:       opDetachNetworkInterface,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &types.DetachNetworkInterfaceInput{}
	}

	req := c.newRequest(op, input, &types.DetachNetworkInterfaceOutput{})
	req.Handlers.Unmarshal.Remove(ec2query.UnmarshalHandler)
	req.Handlers.Unmarshal.PushBackNamed(protocol.UnmarshalDiscardBodyHandler)
	return DetachNetworkInterfaceRequest{Request: req, Input: input, Copy: c.DetachNetworkInterfaceRequest}
}

// DetachNetworkInterfaceRequest is the request type for the
// DetachNetworkInterface API operation.
type DetachNetworkInterfaceRequest struct {
	*aws.Request
	Input *types.DetachNetworkInterfaceInput
	Copy  func(*types.DetachNetworkInterfaceInput) DetachNetworkInterfaceRequest
}

// Send marshals and sends the DetachNetworkInterface API request.
func (r DetachNetworkInterfaceRequest) Send(ctx context.Context) (*DetachNetworkInterfaceResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &DetachNetworkInterfaceResponse{
		DetachNetworkInterfaceOutput: r.Request.Data.(*types.DetachNetworkInterfaceOutput),
		response:                     &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// DetachNetworkInterfaceResponse is the response type for the
// DetachNetworkInterface API operation.
type DetachNetworkInterfaceResponse struct {
	*types.DetachNetworkInterfaceOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// DetachNetworkInterface request.
func (r *DetachNetworkInterfaceResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
