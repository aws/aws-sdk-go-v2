// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package ec2

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/ec2/types"
)

const opCreateEgressOnlyInternetGateway = "CreateEgressOnlyInternetGateway"

// CreateEgressOnlyInternetGatewayRequest returns a request value for making API operation for
// Amazon Elastic Compute Cloud.
//
// [IPv6 only] Creates an egress-only internet gateway for your VPC. An egress-only
// internet gateway is used to enable outbound communication over IPv6 from
// instances in your VPC to the internet, and prevents hosts outside of your
// VPC from initiating an IPv6 connection with your instance.
//
//    // Example sending a request using CreateEgressOnlyInternetGatewayRequest.
//    req := client.CreateEgressOnlyInternetGatewayRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/ec2-2016-11-15/CreateEgressOnlyInternetGateway
func (c *Client) CreateEgressOnlyInternetGatewayRequest(input *types.CreateEgressOnlyInternetGatewayInput) CreateEgressOnlyInternetGatewayRequest {
	op := &aws.Operation{
		Name:       opCreateEgressOnlyInternetGateway,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &types.CreateEgressOnlyInternetGatewayInput{}
	}

	req := c.newRequest(op, input, &types.CreateEgressOnlyInternetGatewayOutput{})
	return CreateEgressOnlyInternetGatewayRequest{Request: req, Input: input, Copy: c.CreateEgressOnlyInternetGatewayRequest}
}

// CreateEgressOnlyInternetGatewayRequest is the request type for the
// CreateEgressOnlyInternetGateway API operation.
type CreateEgressOnlyInternetGatewayRequest struct {
	*aws.Request
	Input *types.CreateEgressOnlyInternetGatewayInput
	Copy  func(*types.CreateEgressOnlyInternetGatewayInput) CreateEgressOnlyInternetGatewayRequest
}

// Send marshals and sends the CreateEgressOnlyInternetGateway API request.
func (r CreateEgressOnlyInternetGatewayRequest) Send(ctx context.Context) (*CreateEgressOnlyInternetGatewayResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &CreateEgressOnlyInternetGatewayResponse{
		CreateEgressOnlyInternetGatewayOutput: r.Request.Data.(*types.CreateEgressOnlyInternetGatewayOutput),
		response:                              &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// CreateEgressOnlyInternetGatewayResponse is the response type for the
// CreateEgressOnlyInternetGateway API operation.
type CreateEgressOnlyInternetGatewayResponse struct {
	*types.CreateEgressOnlyInternetGatewayOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// CreateEgressOnlyInternetGateway request.
func (r *CreateEgressOnlyInternetGatewayResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
