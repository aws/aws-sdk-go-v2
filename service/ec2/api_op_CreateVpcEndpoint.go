// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package ec2

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/ec2/types"
)

const opCreateVpcEndpoint = "CreateVpcEndpoint"

// CreateVpcEndpointRequest returns a request value for making API operation for
// Amazon Elastic Compute Cloud.
//
// Creates a VPC endpoint for a specified service. An endpoint enables you to
// create a private connection between your VPC and the service. The service
// may be provided by AWS, an AWS Marketplace partner, or another AWS account.
// For more information, see VPC Endpoints (https://docs.aws.amazon.com/vpc/latest/userguide/vpc-endpoints.html)
// in the Amazon Virtual Private Cloud User Guide.
//
// A gateway endpoint serves as a target for a route in your route table for
// traffic destined for the AWS service. You can specify an endpoint policy
// to attach to the endpoint that will control access to the service from your
// VPC. You can also specify the VPC route tables that use the endpoint.
//
// An interface endpoint is a network interface in your subnet that serves as
// an endpoint for communicating with the specified service. You can specify
// the subnets in which to create an endpoint, and the security groups to associate
// with the endpoint network interface.
//
// Use DescribeVpcEndpointServices to get a list of supported services.
//
//    // Example sending a request using CreateVpcEndpointRequest.
//    req := client.CreateVpcEndpointRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/ec2-2016-11-15/CreateVpcEndpoint
func (c *Client) CreateVpcEndpointRequest(input *types.CreateVpcEndpointInput) CreateVpcEndpointRequest {
	op := &aws.Operation{
		Name:       opCreateVpcEndpoint,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &types.CreateVpcEndpointInput{}
	}

	req := c.newRequest(op, input, &types.CreateVpcEndpointOutput{})
	return CreateVpcEndpointRequest{Request: req, Input: input, Copy: c.CreateVpcEndpointRequest}
}

// CreateVpcEndpointRequest is the request type for the
// CreateVpcEndpoint API operation.
type CreateVpcEndpointRequest struct {
	*aws.Request
	Input *types.CreateVpcEndpointInput
	Copy  func(*types.CreateVpcEndpointInput) CreateVpcEndpointRequest
}

// Send marshals and sends the CreateVpcEndpoint API request.
func (r CreateVpcEndpointRequest) Send(ctx context.Context) (*CreateVpcEndpointResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &CreateVpcEndpointResponse{
		CreateVpcEndpointOutput: r.Request.Data.(*types.CreateVpcEndpointOutput),
		response:                &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// CreateVpcEndpointResponse is the response type for the
// CreateVpcEndpoint API operation.
type CreateVpcEndpointResponse struct {
	*types.CreateVpcEndpointOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// CreateVpcEndpoint request.
func (r *CreateVpcEndpointResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
