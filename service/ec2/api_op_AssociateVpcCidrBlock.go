// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package ec2

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/ec2/types"
)

const opAssociateVpcCidrBlock = "AssociateVpcCidrBlock"

// AssociateVpcCidrBlockRequest returns a request value for making API operation for
// Amazon Elastic Compute Cloud.
//
// Associates a CIDR block with your VPC. You can associate a secondary IPv4
// CIDR block, or you can associate an Amazon-provided IPv6 CIDR block. The
// IPv6 CIDR block size is fixed at /56.
//
// For more information about associating CIDR blocks with your VPC and applicable
// restrictions, see VPC and Subnet Sizing (https://docs.aws.amazon.com/vpc/latest/userguide/VPC_Subnets.html#VPC_Sizing)
// in the Amazon Virtual Private Cloud User Guide.
//
//    // Example sending a request using AssociateVpcCidrBlockRequest.
//    req := client.AssociateVpcCidrBlockRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/ec2-2016-11-15/AssociateVpcCidrBlock
func (c *Client) AssociateVpcCidrBlockRequest(input *types.AssociateVpcCidrBlockInput) AssociateVpcCidrBlockRequest {
	op := &aws.Operation{
		Name:       opAssociateVpcCidrBlock,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &types.AssociateVpcCidrBlockInput{}
	}

	req := c.newRequest(op, input, &types.AssociateVpcCidrBlockOutput{})
	return AssociateVpcCidrBlockRequest{Request: req, Input: input, Copy: c.AssociateVpcCidrBlockRequest}
}

// AssociateVpcCidrBlockRequest is the request type for the
// AssociateVpcCidrBlock API operation.
type AssociateVpcCidrBlockRequest struct {
	*aws.Request
	Input *types.AssociateVpcCidrBlockInput
	Copy  func(*types.AssociateVpcCidrBlockInput) AssociateVpcCidrBlockRequest
}

// Send marshals and sends the AssociateVpcCidrBlock API request.
func (r AssociateVpcCidrBlockRequest) Send(ctx context.Context) (*AssociateVpcCidrBlockResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &AssociateVpcCidrBlockResponse{
		AssociateVpcCidrBlockOutput: r.Request.Data.(*types.AssociateVpcCidrBlockOutput),
		response:                    &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// AssociateVpcCidrBlockResponse is the response type for the
// AssociateVpcCidrBlock API operation.
type AssociateVpcCidrBlockResponse struct {
	*types.AssociateVpcCidrBlockOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// AssociateVpcCidrBlock request.
func (r *AssociateVpcCidrBlockResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
