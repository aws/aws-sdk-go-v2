// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package ec2

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/ec2/types"
)

const opAssociateClientVpnTargetNetwork = "AssociateClientVpnTargetNetwork"

// AssociateClientVpnTargetNetworkRequest returns a request value for making API operation for
// Amazon Elastic Compute Cloud.
//
// Associates a target network with a Client VPN endpoint. A target network
// is a subnet in a VPC. You can associate multiple subnets from the same VPC
// with a Client VPN endpoint. You can associate only one subnet in each Availability
// Zone. We recommend that you associate at least two subnets to provide Availability
// Zone redundancy.
//
//    // Example sending a request using AssociateClientVpnTargetNetworkRequest.
//    req := client.AssociateClientVpnTargetNetworkRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/ec2-2016-11-15/AssociateClientVpnTargetNetwork
func (c *Client) AssociateClientVpnTargetNetworkRequest(input *types.AssociateClientVpnTargetNetworkInput) AssociateClientVpnTargetNetworkRequest {
	op := &aws.Operation{
		Name:       opAssociateClientVpnTargetNetwork,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &types.AssociateClientVpnTargetNetworkInput{}
	}

	req := c.newRequest(op, input, &types.AssociateClientVpnTargetNetworkOutput{})
	return AssociateClientVpnTargetNetworkRequest{Request: req, Input: input, Copy: c.AssociateClientVpnTargetNetworkRequest}
}

// AssociateClientVpnTargetNetworkRequest is the request type for the
// AssociateClientVpnTargetNetwork API operation.
type AssociateClientVpnTargetNetworkRequest struct {
	*aws.Request
	Input *types.AssociateClientVpnTargetNetworkInput
	Copy  func(*types.AssociateClientVpnTargetNetworkInput) AssociateClientVpnTargetNetworkRequest
}

// Send marshals and sends the AssociateClientVpnTargetNetwork API request.
func (r AssociateClientVpnTargetNetworkRequest) Send(ctx context.Context) (*AssociateClientVpnTargetNetworkResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &AssociateClientVpnTargetNetworkResponse{
		AssociateClientVpnTargetNetworkOutput: r.Request.Data.(*types.AssociateClientVpnTargetNetworkOutput),
		response:                              &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// AssociateClientVpnTargetNetworkResponse is the response type for the
// AssociateClientVpnTargetNetwork API operation.
type AssociateClientVpnTargetNetworkResponse struct {
	*types.AssociateClientVpnTargetNetworkOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// AssociateClientVpnTargetNetwork request.
func (r *AssociateClientVpnTargetNetworkResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
