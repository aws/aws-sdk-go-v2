// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package ec2

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/ec2/types"
)

const opAdvertiseByoipCidr = "AdvertiseByoipCidr"

// AdvertiseByoipCidrRequest returns a request value for making API operation for
// Amazon Elastic Compute Cloud.
//
// Advertises an IPv4 address range that is provisioned for use with your AWS
// resources through bring your own IP addresses (BYOIP).
//
// You can perform this operation at most once every 10 seconds, even if you
// specify different address ranges each time.
//
// We recommend that you stop advertising the BYOIP CIDR from other locations
// when you advertise it from AWS. To minimize down time, you can configure
// your AWS resources to use an address from a BYOIP CIDR before it is advertised,
// and then simultaneously stop advertising it from the current location and
// start advertising it through AWS.
//
// It can take a few minutes before traffic to the specified addresses starts
// routing to AWS because of BGP propagation delays.
//
// To stop advertising the BYOIP CIDR, use WithdrawByoipCidr.
//
//    // Example sending a request using AdvertiseByoipCidrRequest.
//    req := client.AdvertiseByoipCidrRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/ec2-2016-11-15/AdvertiseByoipCidr
func (c *Client) AdvertiseByoipCidrRequest(input *types.AdvertiseByoipCidrInput) AdvertiseByoipCidrRequest {
	op := &aws.Operation{
		Name:       opAdvertiseByoipCidr,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &types.AdvertiseByoipCidrInput{}
	}

	req := c.newRequest(op, input, &types.AdvertiseByoipCidrOutput{})
	return AdvertiseByoipCidrRequest{Request: req, Input: input, Copy: c.AdvertiseByoipCidrRequest}
}

// AdvertiseByoipCidrRequest is the request type for the
// AdvertiseByoipCidr API operation.
type AdvertiseByoipCidrRequest struct {
	*aws.Request
	Input *types.AdvertiseByoipCidrInput
	Copy  func(*types.AdvertiseByoipCidrInput) AdvertiseByoipCidrRequest
}

// Send marshals and sends the AdvertiseByoipCidr API request.
func (r AdvertiseByoipCidrRequest) Send(ctx context.Context) (*AdvertiseByoipCidrResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &AdvertiseByoipCidrResponse{
		AdvertiseByoipCidrOutput: r.Request.Data.(*types.AdvertiseByoipCidrOutput),
		response:                 &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// AdvertiseByoipCidrResponse is the response type for the
// AdvertiseByoipCidr API operation.
type AdvertiseByoipCidrResponse struct {
	*types.AdvertiseByoipCidrOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// AdvertiseByoipCidr request.
func (r *AdvertiseByoipCidrResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
