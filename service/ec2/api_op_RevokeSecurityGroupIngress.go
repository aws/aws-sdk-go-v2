// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package ec2

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/private/protocol"
	"github.com/aws/aws-sdk-go-v2/private/protocol/ec2query"
	"github.com/aws/aws-sdk-go-v2/service/ec2/types"
)

const opRevokeSecurityGroupIngress = "RevokeSecurityGroupIngress"

// RevokeSecurityGroupIngressRequest returns a request value for making API operation for
// Amazon Elastic Compute Cloud.
//
// Removes the specified ingress rules from a security group. To remove a rule,
// the values that you specify (for example, ports) must match the existing
// rule's values exactly.
//
// [EC2-Classic only] If the values you specify do not match the existing rule's
// values, no error is returned. Use DescribeSecurityGroups to verify that the
// rule has been removed.
//
// Each rule consists of the protocol and the CIDR range or source security
// group. For the TCP and UDP protocols, you must also specify the destination
// port or range of ports. For the ICMP protocol, you must also specify the
// ICMP type and code. If the security group rule has a description, you do
// not have to specify the description to revoke the rule.
//
// Rule changes are propagated to instances within the security group as quickly
// as possible. However, a small delay might occur.
//
//    // Example sending a request using RevokeSecurityGroupIngressRequest.
//    req := client.RevokeSecurityGroupIngressRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/ec2-2016-11-15/RevokeSecurityGroupIngress
func (c *Client) RevokeSecurityGroupIngressRequest(input *types.RevokeSecurityGroupIngressInput) RevokeSecurityGroupIngressRequest {
	op := &aws.Operation{
		Name:       opRevokeSecurityGroupIngress,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &types.RevokeSecurityGroupIngressInput{}
	}

	req := c.newRequest(op, input, &types.RevokeSecurityGroupIngressOutput{})
	req.Handlers.Unmarshal.Remove(ec2query.UnmarshalHandler)
	req.Handlers.Unmarshal.PushBackNamed(protocol.UnmarshalDiscardBodyHandler)
	return RevokeSecurityGroupIngressRequest{Request: req, Input: input, Copy: c.RevokeSecurityGroupIngressRequest}
}

// RevokeSecurityGroupIngressRequest is the request type for the
// RevokeSecurityGroupIngress API operation.
type RevokeSecurityGroupIngressRequest struct {
	*aws.Request
	Input *types.RevokeSecurityGroupIngressInput
	Copy  func(*types.RevokeSecurityGroupIngressInput) RevokeSecurityGroupIngressRequest
}

// Send marshals and sends the RevokeSecurityGroupIngress API request.
func (r RevokeSecurityGroupIngressRequest) Send(ctx context.Context) (*RevokeSecurityGroupIngressResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &RevokeSecurityGroupIngressResponse{
		RevokeSecurityGroupIngressOutput: r.Request.Data.(*types.RevokeSecurityGroupIngressOutput),
		response:                         &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// RevokeSecurityGroupIngressResponse is the response type for the
// RevokeSecurityGroupIngress API operation.
type RevokeSecurityGroupIngressResponse struct {
	*types.RevokeSecurityGroupIngressOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// RevokeSecurityGroupIngress request.
func (r *RevokeSecurityGroupIngressResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
