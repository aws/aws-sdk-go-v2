// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package ec2

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/ec2/types"
)

const opCreateLaunchTemplateVersion = "CreateLaunchTemplateVersion"

// CreateLaunchTemplateVersionRequest returns a request value for making API operation for
// Amazon Elastic Compute Cloud.
//
// Creates a new version for a launch template. You can specify an existing
// version of launch template from which to base the new version.
//
// Launch template versions are numbered in the order in which they are created.
// You cannot specify, change, or replace the numbering of launch template versions.
//
//    // Example sending a request using CreateLaunchTemplateVersionRequest.
//    req := client.CreateLaunchTemplateVersionRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/ec2-2016-11-15/CreateLaunchTemplateVersion
func (c *Client) CreateLaunchTemplateVersionRequest(input *types.CreateLaunchTemplateVersionInput) CreateLaunchTemplateVersionRequest {
	op := &aws.Operation{
		Name:       opCreateLaunchTemplateVersion,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &types.CreateLaunchTemplateVersionInput{}
	}

	req := c.newRequest(op, input, &types.CreateLaunchTemplateVersionOutput{})
	return CreateLaunchTemplateVersionRequest{Request: req, Input: input, Copy: c.CreateLaunchTemplateVersionRequest}
}

// CreateLaunchTemplateVersionRequest is the request type for the
// CreateLaunchTemplateVersion API operation.
type CreateLaunchTemplateVersionRequest struct {
	*aws.Request
	Input *types.CreateLaunchTemplateVersionInput
	Copy  func(*types.CreateLaunchTemplateVersionInput) CreateLaunchTemplateVersionRequest
}

// Send marshals and sends the CreateLaunchTemplateVersion API request.
func (r CreateLaunchTemplateVersionRequest) Send(ctx context.Context) (*CreateLaunchTemplateVersionResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &CreateLaunchTemplateVersionResponse{
		CreateLaunchTemplateVersionOutput: r.Request.Data.(*types.CreateLaunchTemplateVersionOutput),
		response:                          &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// CreateLaunchTemplateVersionResponse is the response type for the
// CreateLaunchTemplateVersion API operation.
type CreateLaunchTemplateVersionResponse struct {
	*types.CreateLaunchTemplateVersionOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// CreateLaunchTemplateVersion request.
func (r *CreateLaunchTemplateVersionResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
