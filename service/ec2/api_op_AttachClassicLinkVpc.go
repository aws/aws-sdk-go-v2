// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package ec2

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/ec2/types"
)

const opAttachClassicLinkVpc = "AttachClassicLinkVpc"

// AttachClassicLinkVpcRequest returns a request value for making API operation for
// Amazon Elastic Compute Cloud.
//
// Links an EC2-Classic instance to a ClassicLink-enabled VPC through one or
// more of the VPC's security groups. You cannot link an EC2-Classic instance
// to more than one VPC at a time. You can only link an instance that's in the
// running state. An instance is automatically unlinked from a VPC when it's
// stopped - you can link it to the VPC again when you restart it.
//
// After you've linked an instance, you cannot change the VPC security groups
// that are associated with it. To change the security groups, you must first
// unlink the instance, and then link it again.
//
// Linking your instance to a VPC is sometimes referred to as attaching your
// instance.
//
//    // Example sending a request using AttachClassicLinkVpcRequest.
//    req := client.AttachClassicLinkVpcRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/ec2-2016-11-15/AttachClassicLinkVpc
func (c *Client) AttachClassicLinkVpcRequest(input *types.AttachClassicLinkVpcInput) AttachClassicLinkVpcRequest {
	op := &aws.Operation{
		Name:       opAttachClassicLinkVpc,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &types.AttachClassicLinkVpcInput{}
	}

	req := c.newRequest(op, input, &types.AttachClassicLinkVpcOutput{})
	return AttachClassicLinkVpcRequest{Request: req, Input: input, Copy: c.AttachClassicLinkVpcRequest}
}

// AttachClassicLinkVpcRequest is the request type for the
// AttachClassicLinkVpc API operation.
type AttachClassicLinkVpcRequest struct {
	*aws.Request
	Input *types.AttachClassicLinkVpcInput
	Copy  func(*types.AttachClassicLinkVpcInput) AttachClassicLinkVpcRequest
}

// Send marshals and sends the AttachClassicLinkVpc API request.
func (r AttachClassicLinkVpcRequest) Send(ctx context.Context) (*AttachClassicLinkVpcResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &AttachClassicLinkVpcResponse{
		AttachClassicLinkVpcOutput: r.Request.Data.(*types.AttachClassicLinkVpcOutput),
		response:                   &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// AttachClassicLinkVpcResponse is the response type for the
// AttachClassicLinkVpc API operation.
type AttachClassicLinkVpcResponse struct {
	*types.AttachClassicLinkVpcOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// AttachClassicLinkVpc request.
func (r *AttachClassicLinkVpcResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
