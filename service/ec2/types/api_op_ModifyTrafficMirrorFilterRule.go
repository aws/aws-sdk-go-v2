// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package types

import (
	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/internal/awsutil"
	"github.com/aws/aws-sdk-go-v2/service/ec2/enums"
)

type ModifyTrafficMirrorFilterRuleInput struct {
	_ struct{} `type:"structure"`

	// The description to assign to the Traffic Mirror rule.
	Description *string `type:"string"`

	// The destination CIDR block to assign to the Traffic Mirror rule.
	DestinationCidrBlock *string `type:"string"`

	// The destination ports that are associated with the Traffic Mirror rule.
	DestinationPortRange *TrafficMirrorPortRangeRequest `type:"structure"`

	// Checks whether you have the required permissions for the action, without
	// actually making the request, and provides an error response. If you have
	// the required permissions, the error response is DryRunOperation. Otherwise,
	// it is UnauthorizedOperation.
	DryRun *bool `type:"boolean"`

	// The protocol, for example TCP, to assign to the Traffic Mirror rule.
	Protocol *int64 `type:"integer"`

	// The properties that you want to remove from the Traffic Mirror filter rule.
	//
	// When you remove a property from a Traffic Mirror filter rule, the property
	// is set to the default.
	RemoveFields []enums.TrafficMirrorFilterRuleField `locationName:"RemoveField" type:"list"`

	// The action to assign to the rule.
	RuleAction enums.TrafficMirrorRuleAction `type:"string" enum:"true"`

	// The number of the Traffic Mirror rule. This number must be unique for each
	// Traffic Mirror rule in a given direction. The rules are processed in ascending
	// order by rule number.
	RuleNumber *int64 `type:"integer"`

	// The source CIDR block to assign to the Traffic Mirror rule.
	SourceCidrBlock *string `type:"string"`

	// The port range to assign to the Traffic Mirror rule.
	SourcePortRange *TrafficMirrorPortRangeRequest `type:"structure"`

	// The type of traffic (ingress | egress) to assign to the rule.
	TrafficDirection enums.TrafficDirection `type:"string" enum:"true"`

	// The ID of the Traffic Mirror rule.
	//
	// TrafficMirrorFilterRuleId is a required field
	TrafficMirrorFilterRuleId *string `type:"string" required:"true"`
}

// String returns the string representation
func (s ModifyTrafficMirrorFilterRuleInput) String() string {
	return awsutil.Prettify(s)
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *ModifyTrafficMirrorFilterRuleInput) Validate() error {
	invalidParams := aws.ErrInvalidParams{Context: "ModifyTrafficMirrorFilterRuleInput"}

	if s.TrafficMirrorFilterRuleId == nil {
		invalidParams.Add(aws.NewErrParamRequired("TrafficMirrorFilterRuleId"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

type ModifyTrafficMirrorFilterRuleOutput struct {
	_ struct{} `type:"structure"`

	// Modifies a Traffic Mirror rule.
	TrafficMirrorFilterRule *TrafficMirrorFilterRule `locationName:"trafficMirrorFilterRule" type:"structure"`
}

// String returns the string representation
func (s ModifyTrafficMirrorFilterRuleOutput) String() string {
	return awsutil.Prettify(s)
}
