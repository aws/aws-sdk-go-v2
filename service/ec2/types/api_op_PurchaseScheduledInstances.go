// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package types

import (
	"fmt"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/internal/awsutil"
)

// Contains the parameters for PurchaseScheduledInstances.
type PurchaseScheduledInstancesInput struct {
	_ struct{} `type:"structure"`

	// Unique, case-sensitive identifier that ensures the idempotency of the request.
	// For more information, see Ensuring Idempotency (https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html).
	ClientToken *string `type:"string" idempotencyToken:"true"`

	// Checks whether you have the required permissions for the action, without
	// actually making the request, and provides an error response. If you have
	// the required permissions, the error response is DryRunOperation. Otherwise,
	// it is UnauthorizedOperation.
	DryRun *bool `type:"boolean"`

	// The purchase requests.
	//
	// PurchaseRequests is a required field
	PurchaseRequests []PurchaseRequest `locationName:"PurchaseRequest" locationNameList:"PurchaseRequest" min:"1" type:"list" required:"true"`
}

// String returns the string representation
func (s PurchaseScheduledInstancesInput) String() string {
	return awsutil.Prettify(s)
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *PurchaseScheduledInstancesInput) Validate() error {
	invalidParams := aws.ErrInvalidParams{Context: "PurchaseScheduledInstancesInput"}

	if s.PurchaseRequests == nil {
		invalidParams.Add(aws.NewErrParamRequired("PurchaseRequests"))
	}
	if s.PurchaseRequests != nil && len(s.PurchaseRequests) < 1 {
		invalidParams.Add(aws.NewErrParamMinLen("PurchaseRequests", 1))
	}
	if s.PurchaseRequests != nil {
		for i, v := range s.PurchaseRequests {
			if err := v.Validate(); err != nil {
				invalidParams.AddNested(fmt.Sprintf("%s[%v]", "PurchaseRequests", i), err.(aws.ErrInvalidParams))
			}
		}
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// Contains the output of PurchaseScheduledInstances.
type PurchaseScheduledInstancesOutput struct {
	_ struct{} `type:"structure"`

	// Information about the Scheduled Instances.
	ScheduledInstanceSet []ScheduledInstance `locationName:"scheduledInstanceSet" locationNameList:"item" type:"list"`
}

// String returns the string representation
func (s PurchaseScheduledInstancesOutput) String() string {
	return awsutil.Prettify(s)
}
