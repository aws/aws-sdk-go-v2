// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package ec2

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/ec2/types"
)

const opTerminateClientVpnConnections = "TerminateClientVpnConnections"

// TerminateClientVpnConnectionsRequest returns a request value for making API operation for
// Amazon Elastic Compute Cloud.
//
// Terminates active Client VPN endpoint connections. This action can be used
// to terminate a specific client connection, or up to five connections established
// by a specific user.
//
//    // Example sending a request using TerminateClientVpnConnectionsRequest.
//    req := client.TerminateClientVpnConnectionsRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/ec2-2016-11-15/TerminateClientVpnConnections
func (c *Client) TerminateClientVpnConnectionsRequest(input *types.TerminateClientVpnConnectionsInput) TerminateClientVpnConnectionsRequest {
	op := &aws.Operation{
		Name:       opTerminateClientVpnConnections,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &types.TerminateClientVpnConnectionsInput{}
	}

	req := c.newRequest(op, input, &types.TerminateClientVpnConnectionsOutput{})
	return TerminateClientVpnConnectionsRequest{Request: req, Input: input, Copy: c.TerminateClientVpnConnectionsRequest}
}

// TerminateClientVpnConnectionsRequest is the request type for the
// TerminateClientVpnConnections API operation.
type TerminateClientVpnConnectionsRequest struct {
	*aws.Request
	Input *types.TerminateClientVpnConnectionsInput
	Copy  func(*types.TerminateClientVpnConnectionsInput) TerminateClientVpnConnectionsRequest
}

// Send marshals and sends the TerminateClientVpnConnections API request.
func (r TerminateClientVpnConnectionsRequest) Send(ctx context.Context) (*TerminateClientVpnConnectionsResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &TerminateClientVpnConnectionsResponse{
		TerminateClientVpnConnectionsOutput: r.Request.Data.(*types.TerminateClientVpnConnectionsOutput),
		response:                            &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// TerminateClientVpnConnectionsResponse is the response type for the
// TerminateClientVpnConnections API operation.
type TerminateClientVpnConnectionsResponse struct {
	*types.TerminateClientVpnConnectionsOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// TerminateClientVpnConnections request.
func (r *TerminateClientVpnConnectionsResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
