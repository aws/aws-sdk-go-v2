// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package ec2

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/ec2/types"
)

const opAssociateSubnetCidrBlock = "AssociateSubnetCidrBlock"

// AssociateSubnetCidrBlockRequest returns a request value for making API operation for
// Amazon Elastic Compute Cloud.
//
// Associates a CIDR block with your subnet. You can only associate a single
// IPv6 CIDR block with your subnet. An IPv6 CIDR block must have a prefix length
// of /64.
//
//    // Example sending a request using AssociateSubnetCidrBlockRequest.
//    req := client.AssociateSubnetCidrBlockRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/ec2-2016-11-15/AssociateSubnetCidrBlock
func (c *Client) AssociateSubnetCidrBlockRequest(input *types.AssociateSubnetCidrBlockInput) AssociateSubnetCidrBlockRequest {
	op := &aws.Operation{
		Name:       opAssociateSubnetCidrBlock,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &types.AssociateSubnetCidrBlockInput{}
	}

	req := c.newRequest(op, input, &types.AssociateSubnetCidrBlockOutput{})
	return AssociateSubnetCidrBlockRequest{Request: req, Input: input, Copy: c.AssociateSubnetCidrBlockRequest}
}

// AssociateSubnetCidrBlockRequest is the request type for the
// AssociateSubnetCidrBlock API operation.
type AssociateSubnetCidrBlockRequest struct {
	*aws.Request
	Input *types.AssociateSubnetCidrBlockInput
	Copy  func(*types.AssociateSubnetCidrBlockInput) AssociateSubnetCidrBlockRequest
}

// Send marshals and sends the AssociateSubnetCidrBlock API request.
func (r AssociateSubnetCidrBlockRequest) Send(ctx context.Context) (*AssociateSubnetCidrBlockResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &AssociateSubnetCidrBlockResponse{
		AssociateSubnetCidrBlockOutput: r.Request.Data.(*types.AssociateSubnetCidrBlockOutput),
		response:                       &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// AssociateSubnetCidrBlockResponse is the response type for the
// AssociateSubnetCidrBlock API operation.
type AssociateSubnetCidrBlockResponse struct {
	*types.AssociateSubnetCidrBlockOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// AssociateSubnetCidrBlock request.
func (r *AssociateSubnetCidrBlockResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
