// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package budgets

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/budgets/types"
)

const opUpdateBudget = "UpdateBudget"

// UpdateBudgetRequest returns a request value for making API operation for
// AWS Budgets.
//
// Updates a budget. You can change every part of a budget except for the budgetName
// and the calculatedSpend. When you modify a budget, the calculatedSpend drops
// to zero until AWS has new usage data to use for forecasting.
//
// Only one of BudgetLimit or PlannedBudgetLimits can be present in the syntax
// at one time. Use the syntax that matches your case. The Request Syntax section
// shows the BudgetLimit syntax. For PlannedBudgetLimits, see the Examples (https://docs.aws.amazon.com/aws-cost-management/latest/APIReference/API_budgets_UpdateBudget.html#API_UpdateBudget_Examples)
// section.
//
//    // Example sending a request using UpdateBudgetRequest.
//    req := client.UpdateBudgetRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
func (c *Client) UpdateBudgetRequest(input *types.UpdateBudgetInput) UpdateBudgetRequest {
	op := &aws.Operation{
		Name:       opUpdateBudget,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &types.UpdateBudgetInput{}
	}

	req := c.newRequest(op, input, &types.UpdateBudgetOutput{})
	return UpdateBudgetRequest{Request: req, Input: input, Copy: c.UpdateBudgetRequest}
}

// UpdateBudgetRequest is the request type for the
// UpdateBudget API operation.
type UpdateBudgetRequest struct {
	*aws.Request
	Input *types.UpdateBudgetInput
	Copy  func(*types.UpdateBudgetInput) UpdateBudgetRequest
}

// Send marshals and sends the UpdateBudget API request.
func (r UpdateBudgetRequest) Send(ctx context.Context) (*UpdateBudgetResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &UpdateBudgetResponse{
		UpdateBudgetOutput: r.Request.Data.(*types.UpdateBudgetOutput),
		response:           &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// UpdateBudgetResponse is the response type for the
// UpdateBudget API operation.
type UpdateBudgetResponse struct {
	*types.UpdateBudgetOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// UpdateBudget request.
func (r *UpdateBudgetResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
