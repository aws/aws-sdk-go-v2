// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package costexplorer

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/costexplorer/types"
)

const opGetCostAndUsage = "GetCostAndUsage"

// GetCostAndUsageRequest returns a request value for making API operation for
// AWS Cost Explorer Service.
//
// Retrieves cost and usage metrics for your account. You can specify which
// cost and usage-related metric, such as BlendedCosts or UsageQuantity, that
// you want the request to return. You can also filter and group your data by
// various dimensions, such as SERVICE or AZ, in a specific time range. For
// a complete list of valid dimensions, see the GetDimensionValues (http://docs.aws.amazon.com/aws-cost-management/latest/APIReference/API_GetDimensionValues.html)
// operation. Master accounts in an organization in AWS Organizations have access
// to all member accounts.
//
//    // Example sending a request using GetCostAndUsageRequest.
//    req := client.GetCostAndUsageRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/ce-2017-10-25/GetCostAndUsage
func (c *Client) GetCostAndUsageRequest(input *types.GetCostAndUsageInput) GetCostAndUsageRequest {
	op := &aws.Operation{
		Name:       opGetCostAndUsage,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &types.GetCostAndUsageInput{}
	}

	req := c.newRequest(op, input, &types.GetCostAndUsageOutput{})
	return GetCostAndUsageRequest{Request: req, Input: input, Copy: c.GetCostAndUsageRequest}
}

// GetCostAndUsageRequest is the request type for the
// GetCostAndUsage API operation.
type GetCostAndUsageRequest struct {
	*aws.Request
	Input *types.GetCostAndUsageInput
	Copy  func(*types.GetCostAndUsageInput) GetCostAndUsageRequest
}

// Send marshals and sends the GetCostAndUsage API request.
func (r GetCostAndUsageRequest) Send(ctx context.Context) (*GetCostAndUsageResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &GetCostAndUsageResponse{
		GetCostAndUsageOutput: r.Request.Data.(*types.GetCostAndUsageOutput),
		response:              &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// GetCostAndUsageResponse is the response type for the
// GetCostAndUsage API operation.
type GetCostAndUsageResponse struct {
	*types.GetCostAndUsageOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// GetCostAndUsage request.
func (r *GetCostAndUsageResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
