// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package costexplorer

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/costexplorer/types"
)

const opGetSavingsPlansCoverage = "GetSavingsPlansCoverage"

// GetSavingsPlansCoverageRequest returns a request value for making API operation for
// AWS Cost Explorer Service.
//
// Retrieves the Savings Plans covered for your account. This enables you to
// see how much of your cost is covered by a Savings Plan. An organizationâ€™s
// master account can see the coverage of the associated member accounts. For
// any time period, you can filter data for Savings Plans usage with the following
// dimensions:
//
//    * LINKED_ACCOUNT
//
//    * REGION
//
//    * SERVICE
//
//    * INSTANCE_FAMILY
//
// To determine valid values for a dimension, use the GetDimensionValues operation.
//
//    // Example sending a request using GetSavingsPlansCoverageRequest.
//    req := client.GetSavingsPlansCoverageRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/ce-2017-10-25/GetSavingsPlansCoverage
func (c *Client) GetSavingsPlansCoverageRequest(input *types.GetSavingsPlansCoverageInput) GetSavingsPlansCoverageRequest {
	op := &aws.Operation{
		Name:       opGetSavingsPlansCoverage,
		HTTPMethod: "POST",
		HTTPPath:   "/",
		Paginator: &aws.Paginator{
			InputTokens:     []string{"NextToken"},
			OutputTokens:    []string{"NextToken"},
			LimitToken:      "MaxResults",
			TruncationToken: "",
		},
	}

	if input == nil {
		input = &types.GetSavingsPlansCoverageInput{}
	}

	req := c.newRequest(op, input, &types.GetSavingsPlansCoverageOutput{})
	return GetSavingsPlansCoverageRequest{Request: req, Input: input, Copy: c.GetSavingsPlansCoverageRequest}
}

// GetSavingsPlansCoverageRequest is the request type for the
// GetSavingsPlansCoverage API operation.
type GetSavingsPlansCoverageRequest struct {
	*aws.Request
	Input *types.GetSavingsPlansCoverageInput
	Copy  func(*types.GetSavingsPlansCoverageInput) GetSavingsPlansCoverageRequest
}

// Send marshals and sends the GetSavingsPlansCoverage API request.
func (r GetSavingsPlansCoverageRequest) Send(ctx context.Context) (*GetSavingsPlansCoverageResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &GetSavingsPlansCoverageResponse{
		GetSavingsPlansCoverageOutput: r.Request.Data.(*types.GetSavingsPlansCoverageOutput),
		response:                      &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// NewGetSavingsPlansCoverageRequestPaginator returns a paginator for GetSavingsPlansCoverage.
// Use Next method to get the next page, and CurrentPage to get the current
// response page from the paginator. Next will return false, if there are
// no more pages, or an error was encountered.
//
// Note: This operation can generate multiple requests to a service.
//
//   // Example iterating over pages.
//   req := client.GetSavingsPlansCoverageRequest(input)
//   p := costexplorer.NewGetSavingsPlansCoverageRequestPaginator(req)
//
//   for p.Next(context.TODO()) {
//       page := p.CurrentPage()
//   }
//
//   if err := p.Err(); err != nil {
//       return err
//   }
//
func NewGetSavingsPlansCoveragePaginator(req GetSavingsPlansCoverageRequest) GetSavingsPlansCoveragePaginator {
	return GetSavingsPlansCoveragePaginator{
		Pager: aws.Pager{
			NewRequest: func(ctx context.Context) (*aws.Request, error) {
				var inCpy *types.GetSavingsPlansCoverageInput
				if req.Input != nil {
					tmp := *req.Input
					inCpy = &tmp
				}

				newReq := req.Copy(inCpy)
				newReq.SetContext(ctx)
				return newReq.Request, nil
			},
		},
	}
}

// GetSavingsPlansCoveragePaginator is used to paginate the request. This can be done by
// calling Next and CurrentPage.
type GetSavingsPlansCoveragePaginator struct {
	aws.Pager
}

func (p *GetSavingsPlansCoveragePaginator) CurrentPage() *types.GetSavingsPlansCoverageOutput {
	return p.Pager.CurrentPage().(*types.GetSavingsPlansCoverageOutput)
}

// GetSavingsPlansCoverageResponse is the response type for the
// GetSavingsPlansCoverage API operation.
type GetSavingsPlansCoverageResponse struct {
	*types.GetSavingsPlansCoverageOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// GetSavingsPlansCoverage request.
func (r *GetSavingsPlansCoverageResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
