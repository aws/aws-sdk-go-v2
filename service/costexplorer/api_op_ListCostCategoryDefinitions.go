// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package costexplorer

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/internal/awsutil"
)

type ListCostCategoryDefinitionsInput struct {
	_ struct{} `type:"structure"`

	// The date when the Cost Category was effective.
	EffectiveOn *string `min:"20" type:"string"`

	// The token to retrieve the next set of results. Amazon Web Services provides
	// the token when the response from a previous call has more results than the
	// maximum page size.
	//
	// You can use this information to retrieve the full Cost Category information
	// using DescribeCostCategory.
	NextToken *string `type:"string"`
}

// String returns the string representation
func (s ListCostCategoryDefinitionsInput) String() string {
	return awsutil.Prettify(s)
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *ListCostCategoryDefinitionsInput) Validate() error {
	invalidParams := aws.ErrInvalidParams{Context: "ListCostCategoryDefinitionsInput"}
	if s.EffectiveOn != nil && len(*s.EffectiveOn) < 20 {
		invalidParams.Add(aws.NewErrParamMinLen("EffectiveOn", 20))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

type ListCostCategoryDefinitionsOutput struct {
	_ struct{} `type:"structure"`

	// A reference to a Cost Category containing enough information to identify
	// the Cost Category.
	CostCategoryReferences []CostCategoryReference `type:"list"`

	// The token to retrieve the next set of results. Amazon Web Services provides
	// the token when the response from a previous call has more results than the
	// maximum page size.
	NextToken *string `type:"string"`
}

// String returns the string representation
func (s ListCostCategoryDefinitionsOutput) String() string {
	return awsutil.Prettify(s)
}

const opListCostCategoryDefinitions = "ListCostCategoryDefinitions"

// ListCostCategoryDefinitionsRequest returns a request value for making API operation for
// AWS Cost Explorer Service.
//
//
//  Cost Category is in public beta for AWS Billing and Cost Management and
//  is subject to change. Your use of Cost Categories is subject to the Beta
//  Service Participation terms of the AWS Service Terms (https://aws.amazon.com/service-terms/)
//  (Section 1.10).
//
// Returns the name, ARN and effective dates of all Cost Categories defined
// in the account. You have the option to use EffectiveOn to return a list of
// Cost Categories that were active on a specific date. If there is no EffectiveOn
// specified, youâ€™ll see Cost Categories that are effective on the current
// date. If Cost Category is still effective, EffectiveEnd is omitted in the
// response.
//
//    // Example sending a request using ListCostCategoryDefinitionsRequest.
//    req := client.ListCostCategoryDefinitionsRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/ce-2017-10-25/ListCostCategoryDefinitions
func (c *Client) ListCostCategoryDefinitionsRequest(input *ListCostCategoryDefinitionsInput) ListCostCategoryDefinitionsRequest {
	op := &aws.Operation{
		Name:       opListCostCategoryDefinitions,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &ListCostCategoryDefinitionsInput{}
	}

	req := c.newRequest(op, input, &ListCostCategoryDefinitionsOutput{})
	return ListCostCategoryDefinitionsRequest{Request: req, Input: input, Copy: c.ListCostCategoryDefinitionsRequest}
}

// ListCostCategoryDefinitionsRequest is the request type for the
// ListCostCategoryDefinitions API operation.
type ListCostCategoryDefinitionsRequest struct {
	*aws.Request
	Input *ListCostCategoryDefinitionsInput
	Copy  func(*ListCostCategoryDefinitionsInput) ListCostCategoryDefinitionsRequest
}

// Send marshals and sends the ListCostCategoryDefinitions API request.
func (r ListCostCategoryDefinitionsRequest) Send(ctx context.Context) (*ListCostCategoryDefinitionsResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &ListCostCategoryDefinitionsResponse{
		ListCostCategoryDefinitionsOutput: r.Request.Data.(*ListCostCategoryDefinitionsOutput),
		response:                          &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// ListCostCategoryDefinitionsResponse is the response type for the
// ListCostCategoryDefinitions API operation.
type ListCostCategoryDefinitionsResponse struct {
	*ListCostCategoryDefinitionsOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// ListCostCategoryDefinitions request.
func (r *ListCostCategoryDefinitionsResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
