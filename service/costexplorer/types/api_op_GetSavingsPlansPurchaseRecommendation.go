// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package types

import (
	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/internal/awsutil"
	"github.com/aws/aws-sdk-go-v2/service/costexplorer/enums"
)

type GetSavingsPlansPurchaseRecommendationInput struct {
	_ struct{} `type:"structure"`

	// The lookback period used to generate the recommendation.
	//
	// LookbackPeriodInDays is a required field
	LookbackPeriodInDays enums.LookbackPeriodInDays `type:"string" required:"true" enum:"true"`

	// The token to retrieve the next set of results. Amazon Web Services provides
	// the token when the response from a previous call has more results than the
	// maximum page size.
	NextPageToken *string `type:"string"`

	// The number of recommendations that you want returned in a single response
	// object.
	PageSize *int64 `type:"integer"`

	// The payment option used to generate these recommendations.
	//
	// PaymentOption is a required field
	PaymentOption enums.PaymentOption `type:"string" required:"true" enum:"true"`

	// The Savings Plans recommendation type requested.
	//
	// SavingsPlansType is a required field
	SavingsPlansType enums.SupportedSavingsPlansType `type:"string" required:"true" enum:"true"`

	// The savings plan recommendation term used to generated these recommendations.
	//
	// TermInYears is a required field
	TermInYears enums.TermInYears `type:"string" required:"true" enum:"true"`
}

// String returns the string representation
func (s GetSavingsPlansPurchaseRecommendationInput) String() string {
	return awsutil.Prettify(s)
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *GetSavingsPlansPurchaseRecommendationInput) Validate() error {
	invalidParams := aws.ErrInvalidParams{Context: "GetSavingsPlansPurchaseRecommendationInput"}
	if len(s.LookbackPeriodInDays) == 0 {
		invalidParams.Add(aws.NewErrParamRequired("LookbackPeriodInDays"))
	}
	if len(s.PaymentOption) == 0 {
		invalidParams.Add(aws.NewErrParamRequired("PaymentOption"))
	}
	if len(s.SavingsPlansType) == 0 {
		invalidParams.Add(aws.NewErrParamRequired("SavingsPlansType"))
	}
	if len(s.TermInYears) == 0 {
		invalidParams.Add(aws.NewErrParamRequired("TermInYears"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

type GetSavingsPlansPurchaseRecommendationOutput struct {
	_ struct{} `type:"structure"`

	// Information regarding this specific recommendation set.
	Metadata *SavingsPlansPurchaseRecommendationMetadata `type:"structure"`

	// The token for the next set of retrievable results. AWS provides the token
	// when the response from a previous call has more results than the maximum
	// page size.
	NextPageToken *string `type:"string"`

	// Contains your request parameters, Savings Plan Recommendations Summary, and
	// Details.
	SavingsPlansPurchaseRecommendation *SavingsPlansPurchaseRecommendation `type:"structure"`
}

// String returns the string representation
func (s GetSavingsPlansPurchaseRecommendationOutput) String() string {
	return awsutil.Prettify(s)
}
