// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package types

import (
	"time"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/internal/awsutil"
	"github.com/aws/aws-sdk-go-v2/service/mq/enums"
)

type DescribeBrokerInput struct {
	_ struct{} `type:"structure"`

	// BrokerId is a required field
	BrokerId *string `location:"uri" locationName:"broker-id" type:"string" required:"true"`
}

// String returns the string representation
func (s DescribeBrokerInput) String() string {
	return awsutil.Prettify(s)
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *DescribeBrokerInput) Validate() error {
	invalidParams := aws.ErrInvalidParams{Context: "DescribeBrokerInput"}

	if s.BrokerId == nil {
		invalidParams.Add(aws.NewErrParamRequired("BrokerId"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

type DescribeBrokerOutput struct {
	_ struct{} `type:"structure"`

	AutoMinorVersionUpgrade *bool `locationName:"autoMinorVersionUpgrade" type:"boolean"`

	BrokerArn *string `locationName:"brokerArn" type:"string"`

	BrokerId *string `locationName:"brokerId" type:"string"`

	BrokerInstances []BrokerInstance `locationName:"brokerInstances" type:"list"`

	BrokerName *string `locationName:"brokerName" type:"string"`

	// The status of the broker.
	BrokerState enums.BrokerState `locationName:"brokerState" type:"string" enum:"true"`

	// Broker configuration information
	Configurations *Configurations `locationName:"configurations" type:"structure"`

	Created *time.Time `locationName:"created" type:"timestamp" timestampFormat:"iso8601"`

	// The deployment mode of the broker.
	DeploymentMode enums.DeploymentMode `locationName:"deploymentMode" type:"string" enum:"true"`

	// Encryption options for the broker.
	EncryptionOptions *EncryptionOptions `locationName:"encryptionOptions" type:"structure"`

	// The type of broker engine. Note: Currently, Amazon MQ supports only ActiveMQ.
	EngineType enums.EngineType `locationName:"engineType" type:"string" enum:"true"`

	EngineVersion *string `locationName:"engineVersion" type:"string"`

	HostInstanceType *string `locationName:"hostInstanceType" type:"string"`

	// The list of information about logs currently enabled and pending to be deployed
	// for the specified broker.
	Logs *LogsSummary `locationName:"logs" type:"structure"`

	// The scheduled time period relative to UTC during which Amazon MQ begins to
	// apply pending updates or patches to the broker.
	MaintenanceWindowStartTime *WeeklyStartTime `locationName:"maintenanceWindowStartTime" type:"structure"`

	PendingEngineVersion *string `locationName:"pendingEngineVersion" type:"string"`

	PendingHostInstanceType *string `locationName:"pendingHostInstanceType" type:"string"`

	PendingSecurityGroups []string `locationName:"pendingSecurityGroups" type:"list"`

	PubliclyAccessible *bool `locationName:"publiclyAccessible" type:"boolean"`

	SecurityGroups []string `locationName:"securityGroups" type:"list"`

	SubnetIds []string `locationName:"subnetIds" type:"list"`

	Tags map[string]string `locationName:"tags" type:"map"`

	Users []UserSummary `locationName:"users" type:"list"`
}

// String returns the string representation
func (s DescribeBrokerOutput) String() string {
	return awsutil.Prettify(s)
}
