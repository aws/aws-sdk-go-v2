// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package types

import (
	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/internal/awsutil"
	"github.com/aws/aws-sdk-go-v2/service/mq/enums"
)

type CreateBrokerInput struct {
	_ struct{} `type:"structure"`

	AutoMinorVersionUpgrade *bool `locationName:"autoMinorVersionUpgrade" type:"boolean"`

	BrokerName *string `locationName:"brokerName" type:"string"`

	// A list of information about the configuration.
	Configuration *ConfigurationId `locationName:"configuration" type:"structure"`

	CreatorRequestId *string `locationName:"creatorRequestId" type:"string" idempotencyToken:"true"`

	// The deployment mode of the broker.
	DeploymentMode enums.DeploymentMode `locationName:"deploymentMode" type:"string" enum:"true"`

	// Encryption options for the broker.
	EncryptionOptions *EncryptionOptions `locationName:"encryptionOptions" type:"structure"`

	// The type of broker engine. Note: Currently, Amazon MQ supports only ActiveMQ.
	EngineType enums.EngineType `locationName:"engineType" type:"string" enum:"true"`

	EngineVersion *string `locationName:"engineVersion" type:"string"`

	HostInstanceType *string `locationName:"hostInstanceType" type:"string"`

	// The list of information about logs to be enabled for the specified broker.
	Logs *Logs `locationName:"logs" type:"structure"`

	// The scheduled time period relative to UTC during which Amazon MQ begins to
	// apply pending updates or patches to the broker.
	MaintenanceWindowStartTime *WeeklyStartTime `locationName:"maintenanceWindowStartTime" type:"structure"`

	PubliclyAccessible *bool `locationName:"publiclyAccessible" type:"boolean"`

	SecurityGroups []string `locationName:"securityGroups" type:"list"`

	SubnetIds []string `locationName:"subnetIds" type:"list"`

	Tags map[string]string `locationName:"tags" type:"map"`

	Users []User `locationName:"users" type:"list"`
}

// String returns the string representation
func (s CreateBrokerInput) String() string {
	return awsutil.Prettify(s)
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *CreateBrokerInput) Validate() error {
	invalidParams := aws.ErrInvalidParams{Context: "CreateBrokerInput"}
	if s.EncryptionOptions != nil {
		if err := s.EncryptionOptions.Validate(); err != nil {
			invalidParams.AddNested("EncryptionOptions", err.(aws.ErrInvalidParams))
		}
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

type CreateBrokerOutput struct {
	_ struct{} `type:"structure"`

	BrokerArn *string `locationName:"brokerArn" type:"string"`

	BrokerId *string `locationName:"brokerId" type:"string"`
}

// String returns the string representation
func (s CreateBrokerOutput) String() string {
	return awsutil.Prettify(s)
}
