// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package mq

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/mq/types"
)

const opListBrokers = "ListBrokers"

// ListBrokersRequest returns a request value for making API operation for
// AmazonMQ.
//
// Returns a list of all brokers.
//
//    // Example sending a request using ListBrokersRequest.
//    req := client.ListBrokersRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/mq-2017-11-27/ListBrokers
func (c *Client) ListBrokersRequest(input *types.ListBrokersInput) ListBrokersRequest {
	op := &aws.Operation{
		Name:       opListBrokers,
		HTTPMethod: "GET",
		HTTPPath:   "/v1/brokers",
	}

	if input == nil {
		input = &types.ListBrokersInput{}
	}

	req := c.newRequest(op, input, &types.ListBrokersOutput{})
	return ListBrokersRequest{Request: req, Input: input, Copy: c.ListBrokersRequest}
}

// ListBrokersRequest is the request type for the
// ListBrokers API operation.
type ListBrokersRequest struct {
	*aws.Request
	Input *types.ListBrokersInput
	Copy  func(*types.ListBrokersInput) ListBrokersRequest
}

// Send marshals and sends the ListBrokers API request.
func (r ListBrokersRequest) Send(ctx context.Context) (*ListBrokersResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &ListBrokersResponse{
		ListBrokersOutput: r.Request.Data.(*types.ListBrokersOutput),
		response:          &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// ListBrokersResponse is the response type for the
// ListBrokers API operation.
type ListBrokersResponse struct {
	*types.ListBrokersOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// ListBrokers request.
func (r *ListBrokersResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
