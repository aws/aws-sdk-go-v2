// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package mq

import (
	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/internal/awsutil"
)

const opCreateBroker = "CreateBroker"

// CreateBrokerRequest is a API request type for the CreateBroker API operation.
type CreateBrokerRequest struct {
	*aws.Request
	Input *CreateBrokerInput
}

// Send marshals and sends the CreateBroker API request.
func (r CreateBrokerRequest) Send() (*CreateBrokerOutput, error) {
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	return r.Request.Data.(*CreateBrokerOutput), nil
}

// CreateBrokerRequest returns a request value for making API operation for
// AmazonMQ.
//
// Creates a broker. Note: This API is asynchronous.
//
//    // Example sending a request using the CreateBrokerRequest method.
//    req := client.CreateBrokerRequest(params)
//    resp, err := req.Send()
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/mq-2017-11-27/CreateBroker
func (c *MQ) CreateBrokerRequest(input *CreateBrokerInput) CreateBrokerRequest {
	op := &aws.Operation{
		Name:       opCreateBroker,
		HTTPMethod: "POST",
		HTTPPath:   "/v1/brokers",
	}

	if input == nil {
		input = &CreateBrokerInput{}
	}

	output := &CreateBrokerOutput{}
	req := c.newRequest(op, input, output)
	output.responseMetadata = aws.Response{Request: req}

	return CreateBrokerRequest{Request: req, Input: input}
}

const opCreateConfiguration = "CreateConfiguration"

// CreateConfigurationRequest is a API request type for the CreateConfiguration API operation.
type CreateConfigurationRequest struct {
	*aws.Request
	Input *CreateConfigurationInput
}

// Send marshals and sends the CreateConfiguration API request.
func (r CreateConfigurationRequest) Send() (*CreateConfigurationOutput, error) {
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	return r.Request.Data.(*CreateConfigurationOutput), nil
}

// CreateConfigurationRequest returns a request value for making API operation for
// AmazonMQ.
//
// Creates a new configuration for the specified configuration name. Amazon
// MQ uses the default configuration (the engine type and version). Note: If
// the configuration name already exists, Amazon MQ doesn't create a configuration.
//
//    // Example sending a request using the CreateConfigurationRequest method.
//    req := client.CreateConfigurationRequest(params)
//    resp, err := req.Send()
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/mq-2017-11-27/CreateConfiguration
func (c *MQ) CreateConfigurationRequest(input *CreateConfigurationInput) CreateConfigurationRequest {
	op := &aws.Operation{
		Name:       opCreateConfiguration,
		HTTPMethod: "POST",
		HTTPPath:   "/v1/configurations",
	}

	if input == nil {
		input = &CreateConfigurationInput{}
	}

	output := &CreateConfigurationOutput{}
	req := c.newRequest(op, input, output)
	output.responseMetadata = aws.Response{Request: req}

	return CreateConfigurationRequest{Request: req, Input: input}
}

const opCreateUser = "CreateUser"

// CreateUserRequest is a API request type for the CreateUser API operation.
type CreateUserRequest struct {
	*aws.Request
	Input *CreateUserInput
}

// Send marshals and sends the CreateUser API request.
func (r CreateUserRequest) Send() (*CreateUserOutput, error) {
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	return r.Request.Data.(*CreateUserOutput), nil
}

// CreateUserRequest returns a request value for making API operation for
// AmazonMQ.
//
// Creates an ActiveMQ user.
//
//    // Example sending a request using the CreateUserRequest method.
//    req := client.CreateUserRequest(params)
//    resp, err := req.Send()
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/mq-2017-11-27/CreateUser
func (c *MQ) CreateUserRequest(input *CreateUserInput) CreateUserRequest {
	op := &aws.Operation{
		Name:       opCreateUser,
		HTTPMethod: "POST",
		HTTPPath:   "/v1/brokers/{broker-id}/users/{username}",
	}

	if input == nil {
		input = &CreateUserInput{}
	}

	output := &CreateUserOutput{}
	req := c.newRequest(op, input, output)
	output.responseMetadata = aws.Response{Request: req}

	return CreateUserRequest{Request: req, Input: input}
}

const opDeleteBroker = "DeleteBroker"

// DeleteBrokerRequest is a API request type for the DeleteBroker API operation.
type DeleteBrokerRequest struct {
	*aws.Request
	Input *DeleteBrokerInput
}

// Send marshals and sends the DeleteBroker API request.
func (r DeleteBrokerRequest) Send() (*DeleteBrokerOutput, error) {
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	return r.Request.Data.(*DeleteBrokerOutput), nil
}

// DeleteBrokerRequest returns a request value for making API operation for
// AmazonMQ.
//
// Deletes a broker. Note: This API is asynchronous.
//
//    // Example sending a request using the DeleteBrokerRequest method.
//    req := client.DeleteBrokerRequest(params)
//    resp, err := req.Send()
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/mq-2017-11-27/DeleteBroker
func (c *MQ) DeleteBrokerRequest(input *DeleteBrokerInput) DeleteBrokerRequest {
	op := &aws.Operation{
		Name:       opDeleteBroker,
		HTTPMethod: "DELETE",
		HTTPPath:   "/v1/brokers/{broker-id}",
	}

	if input == nil {
		input = &DeleteBrokerInput{}
	}

	output := &DeleteBrokerOutput{}
	req := c.newRequest(op, input, output)
	output.responseMetadata = aws.Response{Request: req}

	return DeleteBrokerRequest{Request: req, Input: input}
}

const opDeleteUser = "DeleteUser"

// DeleteUserRequest is a API request type for the DeleteUser API operation.
type DeleteUserRequest struct {
	*aws.Request
	Input *DeleteUserInput
}

// Send marshals and sends the DeleteUser API request.
func (r DeleteUserRequest) Send() (*DeleteUserOutput, error) {
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	return r.Request.Data.(*DeleteUserOutput), nil
}

// DeleteUserRequest returns a request value for making API operation for
// AmazonMQ.
//
// Deletes an ActiveMQ user.
//
//    // Example sending a request using the DeleteUserRequest method.
//    req := client.DeleteUserRequest(params)
//    resp, err := req.Send()
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/mq-2017-11-27/DeleteUser
func (c *MQ) DeleteUserRequest(input *DeleteUserInput) DeleteUserRequest {
	op := &aws.Operation{
		Name:       opDeleteUser,
		HTTPMethod: "DELETE",
		HTTPPath:   "/v1/brokers/{broker-id}/users/{username}",
	}

	if input == nil {
		input = &DeleteUserInput{}
	}

	output := &DeleteUserOutput{}
	req := c.newRequest(op, input, output)
	output.responseMetadata = aws.Response{Request: req}

	return DeleteUserRequest{Request: req, Input: input}
}

const opDescribeBroker = "DescribeBroker"

// DescribeBrokerRequest is a API request type for the DescribeBroker API operation.
type DescribeBrokerRequest struct {
	*aws.Request
	Input *DescribeBrokerInput
}

// Send marshals and sends the DescribeBroker API request.
func (r DescribeBrokerRequest) Send() (*DescribeBrokerOutput, error) {
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	return r.Request.Data.(*DescribeBrokerOutput), nil
}

// DescribeBrokerRequest returns a request value for making API operation for
// AmazonMQ.
//
// Returns information about the specified broker.
//
//    // Example sending a request using the DescribeBrokerRequest method.
//    req := client.DescribeBrokerRequest(params)
//    resp, err := req.Send()
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/mq-2017-11-27/DescribeBroker
func (c *MQ) DescribeBrokerRequest(input *DescribeBrokerInput) DescribeBrokerRequest {
	op := &aws.Operation{
		Name:       opDescribeBroker,
		HTTPMethod: "GET",
		HTTPPath:   "/v1/brokers/{broker-id}",
	}

	if input == nil {
		input = &DescribeBrokerInput{}
	}

	output := &DescribeBrokerOutput{}
	req := c.newRequest(op, input, output)
	output.responseMetadata = aws.Response{Request: req}

	return DescribeBrokerRequest{Request: req, Input: input}
}

const opDescribeConfiguration = "DescribeConfiguration"

// DescribeConfigurationRequest is a API request type for the DescribeConfiguration API operation.
type DescribeConfigurationRequest struct {
	*aws.Request
	Input *DescribeConfigurationInput
}

// Send marshals and sends the DescribeConfiguration API request.
func (r DescribeConfigurationRequest) Send() (*DescribeConfigurationOutput, error) {
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	return r.Request.Data.(*DescribeConfigurationOutput), nil
}

// DescribeConfigurationRequest returns a request value for making API operation for
// AmazonMQ.
//
// Returns information about the specified configuration.
//
//    // Example sending a request using the DescribeConfigurationRequest method.
//    req := client.DescribeConfigurationRequest(params)
//    resp, err := req.Send()
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/mq-2017-11-27/DescribeConfiguration
func (c *MQ) DescribeConfigurationRequest(input *DescribeConfigurationInput) DescribeConfigurationRequest {
	op := &aws.Operation{
		Name:       opDescribeConfiguration,
		HTTPMethod: "GET",
		HTTPPath:   "/v1/configurations/{configuration-id}",
	}

	if input == nil {
		input = &DescribeConfigurationInput{}
	}

	output := &DescribeConfigurationOutput{}
	req := c.newRequest(op, input, output)
	output.responseMetadata = aws.Response{Request: req}

	return DescribeConfigurationRequest{Request: req, Input: input}
}

const opDescribeConfigurationRevision = "DescribeConfigurationRevision"

// DescribeConfigurationRevisionRequest is a API request type for the DescribeConfigurationRevision API operation.
type DescribeConfigurationRevisionRequest struct {
	*aws.Request
	Input *DescribeConfigurationRevisionInput
}

// Send marshals and sends the DescribeConfigurationRevision API request.
func (r DescribeConfigurationRevisionRequest) Send() (*DescribeConfigurationRevisionOutput, error) {
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	return r.Request.Data.(*DescribeConfigurationRevisionOutput), nil
}

// DescribeConfigurationRevisionRequest returns a request value for making API operation for
// AmazonMQ.
//
// Returns the specified configuration revision for the specified configuration.
//
//    // Example sending a request using the DescribeConfigurationRevisionRequest method.
//    req := client.DescribeConfigurationRevisionRequest(params)
//    resp, err := req.Send()
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/mq-2017-11-27/DescribeConfigurationRevision
func (c *MQ) DescribeConfigurationRevisionRequest(input *DescribeConfigurationRevisionInput) DescribeConfigurationRevisionRequest {
	op := &aws.Operation{
		Name:       opDescribeConfigurationRevision,
		HTTPMethod: "GET",
		HTTPPath:   "/v1/configurations/{configuration-id}/revisions/{configuration-revision}",
	}

	if input == nil {
		input = &DescribeConfigurationRevisionInput{}
	}

	output := &DescribeConfigurationRevisionOutput{}
	req := c.newRequest(op, input, output)
	output.responseMetadata = aws.Response{Request: req}

	return DescribeConfigurationRevisionRequest{Request: req, Input: input}
}

const opDescribeUser = "DescribeUser"

// DescribeUserRequest is a API request type for the DescribeUser API operation.
type DescribeUserRequest struct {
	*aws.Request
	Input *DescribeUserInput
}

// Send marshals and sends the DescribeUser API request.
func (r DescribeUserRequest) Send() (*DescribeUserOutput, error) {
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	return r.Request.Data.(*DescribeUserOutput), nil
}

// DescribeUserRequest returns a request value for making API operation for
// AmazonMQ.
//
// Returns information about an ActiveMQ user.
//
//    // Example sending a request using the DescribeUserRequest method.
//    req := client.DescribeUserRequest(params)
//    resp, err := req.Send()
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/mq-2017-11-27/DescribeUser
func (c *MQ) DescribeUserRequest(input *DescribeUserInput) DescribeUserRequest {
	op := &aws.Operation{
		Name:       opDescribeUser,
		HTTPMethod: "GET",
		HTTPPath:   "/v1/brokers/{broker-id}/users/{username}",
	}

	if input == nil {
		input = &DescribeUserInput{}
	}

	output := &DescribeUserOutput{}
	req := c.newRequest(op, input, output)
	output.responseMetadata = aws.Response{Request: req}

	return DescribeUserRequest{Request: req, Input: input}
}

const opListBrokers = "ListBrokers"

// ListBrokersRequest is a API request type for the ListBrokers API operation.
type ListBrokersRequest struct {
	*aws.Request
	Input *ListBrokersInput
}

// Send marshals and sends the ListBrokers API request.
func (r ListBrokersRequest) Send() (*ListBrokersOutput, error) {
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	return r.Request.Data.(*ListBrokersOutput), nil
}

// ListBrokersRequest returns a request value for making API operation for
// AmazonMQ.
//
// Returns a list of all brokers.
//
//    // Example sending a request using the ListBrokersRequest method.
//    req := client.ListBrokersRequest(params)
//    resp, err := req.Send()
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/mq-2017-11-27/ListBrokers
func (c *MQ) ListBrokersRequest(input *ListBrokersInput) ListBrokersRequest {
	op := &aws.Operation{
		Name:       opListBrokers,
		HTTPMethod: "GET",
		HTTPPath:   "/v1/brokers",
	}

	if input == nil {
		input = &ListBrokersInput{}
	}

	output := &ListBrokersOutput{}
	req := c.newRequest(op, input, output)
	output.responseMetadata = aws.Response{Request: req}

	return ListBrokersRequest{Request: req, Input: input}
}

const opListConfigurationRevisions = "ListConfigurationRevisions"

// ListConfigurationRevisionsRequest is a API request type for the ListConfigurationRevisions API operation.
type ListConfigurationRevisionsRequest struct {
	*aws.Request
	Input *ListConfigurationRevisionsInput
}

// Send marshals and sends the ListConfigurationRevisions API request.
func (r ListConfigurationRevisionsRequest) Send() (*ListConfigurationRevisionsOutput, error) {
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	return r.Request.Data.(*ListConfigurationRevisionsOutput), nil
}

// ListConfigurationRevisionsRequest returns a request value for making API operation for
// AmazonMQ.
//
// Returns a list of all revisions for the specified configuration.
//
//    // Example sending a request using the ListConfigurationRevisionsRequest method.
//    req := client.ListConfigurationRevisionsRequest(params)
//    resp, err := req.Send()
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/mq-2017-11-27/ListConfigurationRevisions
func (c *MQ) ListConfigurationRevisionsRequest(input *ListConfigurationRevisionsInput) ListConfigurationRevisionsRequest {
	op := &aws.Operation{
		Name:       opListConfigurationRevisions,
		HTTPMethod: "GET",
		HTTPPath:   "/v1/configurations/{configuration-id}/revisions",
	}

	if input == nil {
		input = &ListConfigurationRevisionsInput{}
	}

	output := &ListConfigurationRevisionsOutput{}
	req := c.newRequest(op, input, output)
	output.responseMetadata = aws.Response{Request: req}

	return ListConfigurationRevisionsRequest{Request: req, Input: input}
}

const opListConfigurations = "ListConfigurations"

// ListConfigurationsRequest is a API request type for the ListConfigurations API operation.
type ListConfigurationsRequest struct {
	*aws.Request
	Input *ListConfigurationsInput
}

// Send marshals and sends the ListConfigurations API request.
func (r ListConfigurationsRequest) Send() (*ListConfigurationsOutput, error) {
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	return r.Request.Data.(*ListConfigurationsOutput), nil
}

// ListConfigurationsRequest returns a request value for making API operation for
// AmazonMQ.
//
// Returns a list of all configurations.
//
//    // Example sending a request using the ListConfigurationsRequest method.
//    req := client.ListConfigurationsRequest(params)
//    resp, err := req.Send()
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/mq-2017-11-27/ListConfigurations
func (c *MQ) ListConfigurationsRequest(input *ListConfigurationsInput) ListConfigurationsRequest {
	op := &aws.Operation{
		Name:       opListConfigurations,
		HTTPMethod: "GET",
		HTTPPath:   "/v1/configurations",
	}

	if input == nil {
		input = &ListConfigurationsInput{}
	}

	output := &ListConfigurationsOutput{}
	req := c.newRequest(op, input, output)
	output.responseMetadata = aws.Response{Request: req}

	return ListConfigurationsRequest{Request: req, Input: input}
}

const opListUsers = "ListUsers"

// ListUsersRequest is a API request type for the ListUsers API operation.
type ListUsersRequest struct {
	*aws.Request
	Input *ListUsersInput
}

// Send marshals and sends the ListUsers API request.
func (r ListUsersRequest) Send() (*ListUsersOutput, error) {
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	return r.Request.Data.(*ListUsersOutput), nil
}

// ListUsersRequest returns a request value for making API operation for
// AmazonMQ.
//
// Returns a list of all ActiveMQ users.
//
//    // Example sending a request using the ListUsersRequest method.
//    req := client.ListUsersRequest(params)
//    resp, err := req.Send()
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/mq-2017-11-27/ListUsers
func (c *MQ) ListUsersRequest(input *ListUsersInput) ListUsersRequest {
	op := &aws.Operation{
		Name:       opListUsers,
		HTTPMethod: "GET",
		HTTPPath:   "/v1/brokers/{broker-id}/users",
	}

	if input == nil {
		input = &ListUsersInput{}
	}

	output := &ListUsersOutput{}
	req := c.newRequest(op, input, output)
	output.responseMetadata = aws.Response{Request: req}

	return ListUsersRequest{Request: req, Input: input}
}

const opRebootBroker = "RebootBroker"

// RebootBrokerRequest is a API request type for the RebootBroker API operation.
type RebootBrokerRequest struct {
	*aws.Request
	Input *RebootBrokerInput
}

// Send marshals and sends the RebootBroker API request.
func (r RebootBrokerRequest) Send() (*RebootBrokerOutput, error) {
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	return r.Request.Data.(*RebootBrokerOutput), nil
}

// RebootBrokerRequest returns a request value for making API operation for
// AmazonMQ.
//
// Reboots a broker. Note: This API is asynchronous.
//
//    // Example sending a request using the RebootBrokerRequest method.
//    req := client.RebootBrokerRequest(params)
//    resp, err := req.Send()
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/mq-2017-11-27/RebootBroker
func (c *MQ) RebootBrokerRequest(input *RebootBrokerInput) RebootBrokerRequest {
	op := &aws.Operation{
		Name:       opRebootBroker,
		HTTPMethod: "POST",
		HTTPPath:   "/v1/brokers/{broker-id}/reboot",
	}

	if input == nil {
		input = &RebootBrokerInput{}
	}

	output := &RebootBrokerOutput{}
	req := c.newRequest(op, input, output)
	output.responseMetadata = aws.Response{Request: req}

	return RebootBrokerRequest{Request: req, Input: input}
}

const opUpdateBroker = "UpdateBroker"

// UpdateBrokerRequest is a API request type for the UpdateBroker API operation.
type UpdateBrokerRequest struct {
	*aws.Request
	Input *UpdateBrokerInput
}

// Send marshals and sends the UpdateBroker API request.
func (r UpdateBrokerRequest) Send() (*UpdateBrokerOutput, error) {
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	return r.Request.Data.(*UpdateBrokerOutput), nil
}

// UpdateBrokerRequest returns a request value for making API operation for
// AmazonMQ.
//
// Adds a pending configuration change to a broker.
//
//    // Example sending a request using the UpdateBrokerRequest method.
//    req := client.UpdateBrokerRequest(params)
//    resp, err := req.Send()
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/mq-2017-11-27/UpdateBroker
func (c *MQ) UpdateBrokerRequest(input *UpdateBrokerInput) UpdateBrokerRequest {
	op := &aws.Operation{
		Name:       opUpdateBroker,
		HTTPMethod: "PUT",
		HTTPPath:   "/v1/brokers/{broker-id}",
	}

	if input == nil {
		input = &UpdateBrokerInput{}
	}

	output := &UpdateBrokerOutput{}
	req := c.newRequest(op, input, output)
	output.responseMetadata = aws.Response{Request: req}

	return UpdateBrokerRequest{Request: req, Input: input}
}

const opUpdateConfiguration = "UpdateConfiguration"

// UpdateConfigurationRequest is a API request type for the UpdateConfiguration API operation.
type UpdateConfigurationRequest struct {
	*aws.Request
	Input *UpdateConfigurationInput
}

// Send marshals and sends the UpdateConfiguration API request.
func (r UpdateConfigurationRequest) Send() (*UpdateConfigurationOutput, error) {
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	return r.Request.Data.(*UpdateConfigurationOutput), nil
}

// UpdateConfigurationRequest returns a request value for making API operation for
// AmazonMQ.
//
// Updates the specified configuration.
//
//    // Example sending a request using the UpdateConfigurationRequest method.
//    req := client.UpdateConfigurationRequest(params)
//    resp, err := req.Send()
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/mq-2017-11-27/UpdateConfiguration
func (c *MQ) UpdateConfigurationRequest(input *UpdateConfigurationInput) UpdateConfigurationRequest {
	op := &aws.Operation{
		Name:       opUpdateConfiguration,
		HTTPMethod: "PUT",
		HTTPPath:   "/v1/configurations/{configuration-id}",
	}

	if input == nil {
		input = &UpdateConfigurationInput{}
	}

	output := &UpdateConfigurationOutput{}
	req := c.newRequest(op, input, output)
	output.responseMetadata = aws.Response{Request: req}

	return UpdateConfigurationRequest{Request: req, Input: input}
}

const opUpdateUser = "UpdateUser"

// UpdateUserRequest is a API request type for the UpdateUser API operation.
type UpdateUserRequest struct {
	*aws.Request
	Input *UpdateUserInput
}

// Send marshals and sends the UpdateUser API request.
func (r UpdateUserRequest) Send() (*UpdateUserOutput, error) {
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	return r.Request.Data.(*UpdateUserOutput), nil
}

// UpdateUserRequest returns a request value for making API operation for
// AmazonMQ.
//
// Updates the information for an ActiveMQ user.
//
//    // Example sending a request using the UpdateUserRequest method.
//    req := client.UpdateUserRequest(params)
//    resp, err := req.Send()
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/mq-2017-11-27/UpdateUser
func (c *MQ) UpdateUserRequest(input *UpdateUserInput) UpdateUserRequest {
	op := &aws.Operation{
		Name:       opUpdateUser,
		HTTPMethod: "PUT",
		HTTPPath:   "/v1/brokers/{broker-id}/users/{username}",
	}

	if input == nil {
		input = &UpdateUserInput{}
	}

	output := &UpdateUserOutput{}
	req := c.newRequest(op, input, output)
	output.responseMetadata = aws.Response{Request: req}

	return UpdateUserRequest{Request: req, Input: input}
}

// Returns information about all brokers.
// Please also see https://docs.aws.amazon.com/goto/WebAPI/mq-2017-11-27/BrokerInstance
type BrokerInstance struct {
	_ struct{} `type:"structure"`

	// The URL of the broker's ActiveMQ Web Console.
	ConsoleURL *string `locationName:"consoleURL" type:"string"`

	// The broker's wire-level protocol endpoints.
	Endpoints []string `locationName:"endpoints" type:"list"`
}

// String returns the string representation
func (s BrokerInstance) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s BrokerInstance) GoString() string {
	return s.String()
}

// SetConsoleURL sets the ConsoleURL field's value.
func (s *BrokerInstance) SetConsoleURL(v string) *BrokerInstance {
	s.ConsoleURL = &v
	return s
}

// SetEndpoints sets the Endpoints field's value.
func (s *BrokerInstance) SetEndpoints(v []string) *BrokerInstance {
	s.Endpoints = v
	return s
}

// The Amazon Resource Name (ARN) of the broker.
// Please also see https://docs.aws.amazon.com/goto/WebAPI/mq-2017-11-27/BrokerSummary
type BrokerSummary struct {
	_ struct{} `type:"structure"`

	// The Amazon Resource Name (ARN) of the broker.
	BrokerArn *string `locationName:"brokerArn" type:"string"`

	// The unique ID that Amazon MQ generates for the broker.
	BrokerId *string `locationName:"brokerId" type:"string"`

	// The name of the broker. This value must be unique in your AWS account, 1-50
	// characters long, must contain only letters, numbers, dashes, and underscores,
	// and must not contain whitespaces, brackets, wildcard characters, or special
	// characters.
	BrokerName *string `locationName:"brokerName" type:"string"`

	// The status of the broker. Possible values: CREATION_IN_PROGRESS, CREATION_FAILED,
	// DELETION_IN_PROGRESS, RUNNING, REBOOT_IN_PROGRESS
	BrokerState BrokerState `locationName:"brokerState" type:"string" enum:"true"`

	// Required. The deployment mode of the broker. Possible values: SINGLE_INSTANCE,
	// ACTIVE_STANDBY_MULTI_AZ SINGLE_INSTANCE creates a single-instance broker
	// in a single Availability Zone. ACTIVE_STANDBY_MULTI_AZ creates an active/standby
	// broker for high availability.
	DeploymentMode DeploymentMode `locationName:"deploymentMode" type:"string" enum:"true"`

	// The broker's instance type. Possible values: mq.t2.micro, mq.m4.large
	HostInstanceType *string `locationName:"hostInstanceType" type:"string"`
}

// String returns the string representation
func (s BrokerSummary) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s BrokerSummary) GoString() string {
	return s.String()
}

// SetBrokerArn sets the BrokerArn field's value.
func (s *BrokerSummary) SetBrokerArn(v string) *BrokerSummary {
	s.BrokerArn = &v
	return s
}

// SetBrokerId sets the BrokerId field's value.
func (s *BrokerSummary) SetBrokerId(v string) *BrokerSummary {
	s.BrokerId = &v
	return s
}

// SetBrokerName sets the BrokerName field's value.
func (s *BrokerSummary) SetBrokerName(v string) *BrokerSummary {
	s.BrokerName = &v
	return s
}

// SetBrokerState sets the BrokerState field's value.
func (s *BrokerSummary) SetBrokerState(v BrokerState) *BrokerSummary {
	s.BrokerState = v
	return s
}

// SetDeploymentMode sets the DeploymentMode field's value.
func (s *BrokerSummary) SetDeploymentMode(v DeploymentMode) *BrokerSummary {
	s.DeploymentMode = v
	return s
}

// SetHostInstanceType sets the HostInstanceType field's value.
func (s *BrokerSummary) SetHostInstanceType(v string) *BrokerSummary {
	s.HostInstanceType = &v
	return s
}

// Returns information about all configurations.
// Please also see https://docs.aws.amazon.com/goto/WebAPI/mq-2017-11-27/Configuration
type Configuration struct {
	_ struct{} `type:"structure"`

	// Required. The ARN of the configuration.
	Arn *string `locationName:"arn" type:"string"`

	// Required. The description of the configuration.
	Description *string `locationName:"description" type:"string"`

	// Required. The type of broker engine. Note: Currently, Amazon MQ supports
	// only ACTIVEMQ.
	EngineType EngineType `locationName:"engineType" type:"string" enum:"true"`

	// Required. The version of the broker engine.
	EngineVersion *string `locationName:"engineVersion" type:"string"`

	// Required. The unique ID that Amazon MQ generates for the configuration.
	Id *string `locationName:"id" type:"string"`

	// Required. The latest revision of the configuration.
	LatestRevision *ConfigurationRevision `locationName:"latestRevision" type:"structure"`

	// Required. The name of the configuration. This value can contain only alphanumeric
	// characters, dashes, periods, underscores, and tildes (- . _ ~). This value
	// must be 1-150 characters long.
	Name *string `locationName:"name" type:"string"`
}

// String returns the string representation
func (s Configuration) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s Configuration) GoString() string {
	return s.String()
}

// SetArn sets the Arn field's value.
func (s *Configuration) SetArn(v string) *Configuration {
	s.Arn = &v
	return s
}

// SetDescription sets the Description field's value.
func (s *Configuration) SetDescription(v string) *Configuration {
	s.Description = &v
	return s
}

// SetEngineType sets the EngineType field's value.
func (s *Configuration) SetEngineType(v EngineType) *Configuration {
	s.EngineType = v
	return s
}

// SetEngineVersion sets the EngineVersion field's value.
func (s *Configuration) SetEngineVersion(v string) *Configuration {
	s.EngineVersion = &v
	return s
}

// SetId sets the Id field's value.
func (s *Configuration) SetId(v string) *Configuration {
	s.Id = &v
	return s
}

// SetLatestRevision sets the LatestRevision field's value.
func (s *Configuration) SetLatestRevision(v *ConfigurationRevision) *Configuration {
	s.LatestRevision = v
	return s
}

// SetName sets the Name field's value.
func (s *Configuration) SetName(v string) *Configuration {
	s.Name = &v
	return s
}

// A list of information about the configuration.
// Please also see https://docs.aws.amazon.com/goto/WebAPI/mq-2017-11-27/ConfigurationId
type ConfigurationId struct {
	_ struct{} `type:"structure"`

	// Required. The unique ID that Amazon MQ generates for the configuration.
	Id *string `locationName:"id" type:"string"`

	// The Universally Unique Identifier (UUID) of the request.
	Revision *int64 `locationName:"revision" type:"integer"`
}

// String returns the string representation
func (s ConfigurationId) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s ConfigurationId) GoString() string {
	return s.String()
}

// SetId sets the Id field's value.
func (s *ConfigurationId) SetId(v string) *ConfigurationId {
	s.Id = &v
	return s
}

// SetRevision sets the Revision field's value.
func (s *ConfigurationId) SetRevision(v int64) *ConfigurationId {
	s.Revision = &v
	return s
}

// Returns information about the specified configuration revision.
// Please also see https://docs.aws.amazon.com/goto/WebAPI/mq-2017-11-27/ConfigurationRevision
type ConfigurationRevision struct {
	_ struct{} `type:"structure"`

	// The description of the configuration revision.
	Description *string `locationName:"description" type:"string"`

	// Required. The revision of the configuration.
	Revision *int64 `locationName:"revision" type:"integer"`
}

// String returns the string representation
func (s ConfigurationRevision) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s ConfigurationRevision) GoString() string {
	return s.String()
}

// SetDescription sets the Description field's value.
func (s *ConfigurationRevision) SetDescription(v string) *ConfigurationRevision {
	s.Description = &v
	return s
}

// SetRevision sets the Revision field's value.
func (s *ConfigurationRevision) SetRevision(v int64) *ConfigurationRevision {
	s.Revision = &v
	return s
}

// Broker configuration information
// Please also see https://docs.aws.amazon.com/goto/WebAPI/mq-2017-11-27/Configurations
type Configurations struct {
	_ struct{} `type:"structure"`

	// The current configuration of the broker.
	Current *ConfigurationId `locationName:"current" type:"structure"`

	// The history of configurations applied to the broker.
	History []ConfigurationId `locationName:"history" type:"list"`

	// The pending configuration of the broker.
	Pending *ConfigurationId `locationName:"pending" type:"structure"`
}

// String returns the string representation
func (s Configurations) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s Configurations) GoString() string {
	return s.String()
}

// SetCurrent sets the Current field's value.
func (s *Configurations) SetCurrent(v *ConfigurationId) *Configurations {
	s.Current = v
	return s
}

// SetHistory sets the History field's value.
func (s *Configurations) SetHistory(v []ConfigurationId) *Configurations {
	s.History = v
	return s
}

// SetPending sets the Pending field's value.
func (s *Configurations) SetPending(v *ConfigurationId) *Configurations {
	s.Pending = v
	return s
}

// Please also see https://docs.aws.amazon.com/goto/WebAPI/mq-2017-11-27/CreateBrokerRequest
type CreateBrokerInput struct {
	_ struct{} `type:"structure"`

	AutoMinorVersionUpgrade *bool `locationName:"autoMinorVersionUpgrade" type:"boolean"`

	BrokerName *string `locationName:"brokerName" type:"string"`

	// A list of information about the configuration.
	Configuration *ConfigurationId `locationName:"configuration" type:"structure"`

	CreatorRequestId *string `locationName:"creatorRequestId" type:"string" idempotencyToken:"true"`

	// The deployment mode of the broker. Possible values: SINGLE_INSTANCE, ACTIVE_STANDBY_MULTI_AZ
	// SINGLE_INSTANCE creates a single-instance broker in a single Availability
	// Zone. ACTIVE_STANDBY_MULTI_AZ creates an active/standby broker for high availability.
	DeploymentMode DeploymentMode `locationName:"deploymentMode" type:"string" enum:"true"`

	// The type of broker engine. Note: Currently, Amazon MQ supports only ActiveMQ.
	EngineType EngineType `locationName:"engineType" type:"string" enum:"true"`

	EngineVersion *string `locationName:"engineVersion" type:"string"`

	HostInstanceType *string `locationName:"hostInstanceType" type:"string"`

	// The scheduled time period relative to UTC during which Amazon MQ begins to
	// apply pending updates or patches to the broker.
	MaintenanceWindowStartTime *WeeklyStartTime `locationName:"maintenanceWindowStartTime" type:"structure"`

	PubliclyAccessible *bool `locationName:"publiclyAccessible" type:"boolean"`

	SecurityGroups []string `locationName:"securityGroups" type:"list"`

	SubnetIds []string `locationName:"subnetIds" type:"list"`

	Users []User `locationName:"users" type:"list"`
}

// String returns the string representation
func (s CreateBrokerInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s CreateBrokerInput) GoString() string {
	return s.String()
}

// SetAutoMinorVersionUpgrade sets the AutoMinorVersionUpgrade field's value.
func (s *CreateBrokerInput) SetAutoMinorVersionUpgrade(v bool) *CreateBrokerInput {
	s.AutoMinorVersionUpgrade = &v
	return s
}

// SetBrokerName sets the BrokerName field's value.
func (s *CreateBrokerInput) SetBrokerName(v string) *CreateBrokerInput {
	s.BrokerName = &v
	return s
}

// SetConfiguration sets the Configuration field's value.
func (s *CreateBrokerInput) SetConfiguration(v *ConfigurationId) *CreateBrokerInput {
	s.Configuration = v
	return s
}

// SetCreatorRequestId sets the CreatorRequestId field's value.
func (s *CreateBrokerInput) SetCreatorRequestId(v string) *CreateBrokerInput {
	s.CreatorRequestId = &v
	return s
}

// SetDeploymentMode sets the DeploymentMode field's value.
func (s *CreateBrokerInput) SetDeploymentMode(v DeploymentMode) *CreateBrokerInput {
	s.DeploymentMode = v
	return s
}

// SetEngineType sets the EngineType field's value.
func (s *CreateBrokerInput) SetEngineType(v EngineType) *CreateBrokerInput {
	s.EngineType = v
	return s
}

// SetEngineVersion sets the EngineVersion field's value.
func (s *CreateBrokerInput) SetEngineVersion(v string) *CreateBrokerInput {
	s.EngineVersion = &v
	return s
}

// SetHostInstanceType sets the HostInstanceType field's value.
func (s *CreateBrokerInput) SetHostInstanceType(v string) *CreateBrokerInput {
	s.HostInstanceType = &v
	return s
}

// SetMaintenanceWindowStartTime sets the MaintenanceWindowStartTime field's value.
func (s *CreateBrokerInput) SetMaintenanceWindowStartTime(v *WeeklyStartTime) *CreateBrokerInput {
	s.MaintenanceWindowStartTime = v
	return s
}

// SetPubliclyAccessible sets the PubliclyAccessible field's value.
func (s *CreateBrokerInput) SetPubliclyAccessible(v bool) *CreateBrokerInput {
	s.PubliclyAccessible = &v
	return s
}

// SetSecurityGroups sets the SecurityGroups field's value.
func (s *CreateBrokerInput) SetSecurityGroups(v []string) *CreateBrokerInput {
	s.SecurityGroups = v
	return s
}

// SetSubnetIds sets the SubnetIds field's value.
func (s *CreateBrokerInput) SetSubnetIds(v []string) *CreateBrokerInput {
	s.SubnetIds = v
	return s
}

// SetUsers sets the Users field's value.
func (s *CreateBrokerInput) SetUsers(v []User) *CreateBrokerInput {
	s.Users = v
	return s
}

// Please also see https://docs.aws.amazon.com/goto/WebAPI/mq-2017-11-27/CreateBrokerResponse
type CreateBrokerOutput struct {
	_ struct{} `type:"structure"`

	responseMetadata aws.Response

	BrokerArn *string `locationName:"brokerArn" type:"string"`

	BrokerId *string `locationName:"brokerId" type:"string"`
}

// String returns the string representation
func (s CreateBrokerOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s CreateBrokerOutput) GoString() string {
	return s.String()
}

// SDKResponseMetdata return sthe response metadata for the API.
func (s CreateBrokerOutput) SDKResponseMetadata() aws.Response {
	return s.responseMetadata
}

// SetBrokerArn sets the BrokerArn field's value.
func (s *CreateBrokerOutput) SetBrokerArn(v string) *CreateBrokerOutput {
	s.BrokerArn = &v
	return s
}

// SetBrokerId sets the BrokerId field's value.
func (s *CreateBrokerOutput) SetBrokerId(v string) *CreateBrokerOutput {
	s.BrokerId = &v
	return s
}

// Please also see https://docs.aws.amazon.com/goto/WebAPI/mq-2017-11-27/CreateConfigurationRequest
type CreateConfigurationInput struct {
	_ struct{} `type:"structure"`

	// The type of broker engine. Note: Currently, Amazon MQ supports only ActiveMQ.
	EngineType EngineType `locationName:"engineType" type:"string" enum:"true"`

	EngineVersion *string `locationName:"engineVersion" type:"string"`

	Name *string `locationName:"name" type:"string"`
}

// String returns the string representation
func (s CreateConfigurationInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s CreateConfigurationInput) GoString() string {
	return s.String()
}

// SetEngineType sets the EngineType field's value.
func (s *CreateConfigurationInput) SetEngineType(v EngineType) *CreateConfigurationInput {
	s.EngineType = v
	return s
}

// SetEngineVersion sets the EngineVersion field's value.
func (s *CreateConfigurationInput) SetEngineVersion(v string) *CreateConfigurationInput {
	s.EngineVersion = &v
	return s
}

// SetName sets the Name field's value.
func (s *CreateConfigurationInput) SetName(v string) *CreateConfigurationInput {
	s.Name = &v
	return s
}

// Please also see https://docs.aws.amazon.com/goto/WebAPI/mq-2017-11-27/CreateConfigurationResponse
type CreateConfigurationOutput struct {
	_ struct{} `type:"structure"`

	responseMetadata aws.Response

	Arn *string `locationName:"arn" type:"string"`

	Id *string `locationName:"id" type:"string"`

	// Returns information about the specified configuration revision.
	LatestRevision *ConfigurationRevision `locationName:"latestRevision" type:"structure"`

	Name *string `locationName:"name" type:"string"`
}

// String returns the string representation
func (s CreateConfigurationOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s CreateConfigurationOutput) GoString() string {
	return s.String()
}

// SDKResponseMetdata return sthe response metadata for the API.
func (s CreateConfigurationOutput) SDKResponseMetadata() aws.Response {
	return s.responseMetadata
}

// SetArn sets the Arn field's value.
func (s *CreateConfigurationOutput) SetArn(v string) *CreateConfigurationOutput {
	s.Arn = &v
	return s
}

// SetId sets the Id field's value.
func (s *CreateConfigurationOutput) SetId(v string) *CreateConfigurationOutput {
	s.Id = &v
	return s
}

// SetLatestRevision sets the LatestRevision field's value.
func (s *CreateConfigurationOutput) SetLatestRevision(v *ConfigurationRevision) *CreateConfigurationOutput {
	s.LatestRevision = v
	return s
}

// SetName sets the Name field's value.
func (s *CreateConfigurationOutput) SetName(v string) *CreateConfigurationOutput {
	s.Name = &v
	return s
}

// Please also see https://docs.aws.amazon.com/goto/WebAPI/mq-2017-11-27/CreateUserRequest
type CreateUserInput struct {
	_ struct{} `type:"structure"`

	// BrokerId is a required field
	BrokerId *string `location:"uri" locationName:"broker-id" type:"string" required:"true"`

	ConsoleAccess *bool `locationName:"consoleAccess" type:"boolean"`

	Groups []string `locationName:"groups" type:"list"`

	Password *string `locationName:"password" type:"string"`

	// Username is a required field
	Username *string `location:"uri" locationName:"username" type:"string" required:"true"`
}

// String returns the string representation
func (s CreateUserInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s CreateUserInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *CreateUserInput) Validate() error {
	invalidParams := aws.ErrInvalidParams{Context: "CreateUserInput"}

	if s.BrokerId == nil {
		invalidParams.Add(aws.NewErrParamRequired("BrokerId"))
	}

	if s.Username == nil {
		invalidParams.Add(aws.NewErrParamRequired("Username"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetBrokerId sets the BrokerId field's value.
func (s *CreateUserInput) SetBrokerId(v string) *CreateUserInput {
	s.BrokerId = &v
	return s
}

// SetConsoleAccess sets the ConsoleAccess field's value.
func (s *CreateUserInput) SetConsoleAccess(v bool) *CreateUserInput {
	s.ConsoleAccess = &v
	return s
}

// SetGroups sets the Groups field's value.
func (s *CreateUserInput) SetGroups(v []string) *CreateUserInput {
	s.Groups = v
	return s
}

// SetPassword sets the Password field's value.
func (s *CreateUserInput) SetPassword(v string) *CreateUserInput {
	s.Password = &v
	return s
}

// SetUsername sets the Username field's value.
func (s *CreateUserInput) SetUsername(v string) *CreateUserInput {
	s.Username = &v
	return s
}

// Please also see https://docs.aws.amazon.com/goto/WebAPI/mq-2017-11-27/CreateUserResponse
type CreateUserOutput struct {
	_ struct{} `type:"structure"`

	responseMetadata aws.Response
}

// String returns the string representation
func (s CreateUserOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s CreateUserOutput) GoString() string {
	return s.String()
}

// SDKResponseMetdata return sthe response metadata for the API.
func (s CreateUserOutput) SDKResponseMetadata() aws.Response {
	return s.responseMetadata
}

// Please also see https://docs.aws.amazon.com/goto/WebAPI/mq-2017-11-27/DeleteBrokerRequest
type DeleteBrokerInput struct {
	_ struct{} `type:"structure"`

	// BrokerId is a required field
	BrokerId *string `location:"uri" locationName:"broker-id" type:"string" required:"true"`
}

// String returns the string representation
func (s DeleteBrokerInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DeleteBrokerInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *DeleteBrokerInput) Validate() error {
	invalidParams := aws.ErrInvalidParams{Context: "DeleteBrokerInput"}

	if s.BrokerId == nil {
		invalidParams.Add(aws.NewErrParamRequired("BrokerId"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetBrokerId sets the BrokerId field's value.
func (s *DeleteBrokerInput) SetBrokerId(v string) *DeleteBrokerInput {
	s.BrokerId = &v
	return s
}

// Please also see https://docs.aws.amazon.com/goto/WebAPI/mq-2017-11-27/DeleteBrokerResponse
type DeleteBrokerOutput struct {
	_ struct{} `type:"structure"`

	responseMetadata aws.Response

	BrokerId *string `locationName:"brokerId" type:"string"`
}

// String returns the string representation
func (s DeleteBrokerOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DeleteBrokerOutput) GoString() string {
	return s.String()
}

// SDKResponseMetdata return sthe response metadata for the API.
func (s DeleteBrokerOutput) SDKResponseMetadata() aws.Response {
	return s.responseMetadata
}

// SetBrokerId sets the BrokerId field's value.
func (s *DeleteBrokerOutput) SetBrokerId(v string) *DeleteBrokerOutput {
	s.BrokerId = &v
	return s
}

// Please also see https://docs.aws.amazon.com/goto/WebAPI/mq-2017-11-27/DeleteUserRequest
type DeleteUserInput struct {
	_ struct{} `type:"structure"`

	// BrokerId is a required field
	BrokerId *string `location:"uri" locationName:"broker-id" type:"string" required:"true"`

	// Username is a required field
	Username *string `location:"uri" locationName:"username" type:"string" required:"true"`
}

// String returns the string representation
func (s DeleteUserInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DeleteUserInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *DeleteUserInput) Validate() error {
	invalidParams := aws.ErrInvalidParams{Context: "DeleteUserInput"}

	if s.BrokerId == nil {
		invalidParams.Add(aws.NewErrParamRequired("BrokerId"))
	}

	if s.Username == nil {
		invalidParams.Add(aws.NewErrParamRequired("Username"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetBrokerId sets the BrokerId field's value.
func (s *DeleteUserInput) SetBrokerId(v string) *DeleteUserInput {
	s.BrokerId = &v
	return s
}

// SetUsername sets the Username field's value.
func (s *DeleteUserInput) SetUsername(v string) *DeleteUserInput {
	s.Username = &v
	return s
}

// Please also see https://docs.aws.amazon.com/goto/WebAPI/mq-2017-11-27/DeleteUserResponse
type DeleteUserOutput struct {
	_ struct{} `type:"structure"`

	responseMetadata aws.Response
}

// String returns the string representation
func (s DeleteUserOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DeleteUserOutput) GoString() string {
	return s.String()
}

// SDKResponseMetdata return sthe response metadata for the API.
func (s DeleteUserOutput) SDKResponseMetadata() aws.Response {
	return s.responseMetadata
}

// Please also see https://docs.aws.amazon.com/goto/WebAPI/mq-2017-11-27/DescribeBrokerRequest
type DescribeBrokerInput struct {
	_ struct{} `type:"structure"`

	// BrokerId is a required field
	BrokerId *string `location:"uri" locationName:"broker-id" type:"string" required:"true"`
}

// String returns the string representation
func (s DescribeBrokerInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeBrokerInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *DescribeBrokerInput) Validate() error {
	invalidParams := aws.ErrInvalidParams{Context: "DescribeBrokerInput"}

	if s.BrokerId == nil {
		invalidParams.Add(aws.NewErrParamRequired("BrokerId"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetBrokerId sets the BrokerId field's value.
func (s *DescribeBrokerInput) SetBrokerId(v string) *DescribeBrokerInput {
	s.BrokerId = &v
	return s
}

// Please also see https://docs.aws.amazon.com/goto/WebAPI/mq-2017-11-27/DescribeBrokerResponse
type DescribeBrokerOutput struct {
	_ struct{} `type:"structure"`

	responseMetadata aws.Response

	AutoMinorVersionUpgrade *bool `locationName:"autoMinorVersionUpgrade" type:"boolean"`

	BrokerArn *string `locationName:"brokerArn" type:"string"`

	BrokerId *string `locationName:"brokerId" type:"string"`

	BrokerInstances []BrokerInstance `locationName:"brokerInstances" type:"list"`

	BrokerName *string `locationName:"brokerName" type:"string"`

	// The status of the broker. Possible values: CREATION_IN_PROGRESS, CREATION_FAILED,
	// DELETION_IN_PROGRESS, RUNNING, REBOOT_IN_PROGRESS
	BrokerState BrokerState `locationName:"brokerState" type:"string" enum:"true"`

	// Broker configuration information
	Configurations *Configurations `locationName:"configurations" type:"structure"`

	// The deployment mode of the broker. Possible values: SINGLE_INSTANCE, ACTIVE_STANDBY_MULTI_AZ
	// SINGLE_INSTANCE creates a single-instance broker in a single Availability
	// Zone. ACTIVE_STANDBY_MULTI_AZ creates an active/standby broker for high availability.
	DeploymentMode DeploymentMode `locationName:"deploymentMode" type:"string" enum:"true"`

	// The type of broker engine. Note: Currently, Amazon MQ supports only ActiveMQ.
	EngineType EngineType `locationName:"engineType" type:"string" enum:"true"`

	EngineVersion *string `locationName:"engineVersion" type:"string"`

	HostInstanceType *string `locationName:"hostInstanceType" type:"string"`

	// The scheduled time period relative to UTC during which Amazon MQ begins to
	// apply pending updates or patches to the broker.
	MaintenanceWindowStartTime *WeeklyStartTime `locationName:"maintenanceWindowStartTime" type:"structure"`

	PubliclyAccessible *bool `locationName:"publiclyAccessible" type:"boolean"`

	SecurityGroups []string `locationName:"securityGroups" type:"list"`

	SubnetIds []string `locationName:"subnetIds" type:"list"`

	Users []UserSummary `locationName:"users" type:"list"`
}

// String returns the string representation
func (s DescribeBrokerOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeBrokerOutput) GoString() string {
	return s.String()
}

// SDKResponseMetdata return sthe response metadata for the API.
func (s DescribeBrokerOutput) SDKResponseMetadata() aws.Response {
	return s.responseMetadata
}

// SetAutoMinorVersionUpgrade sets the AutoMinorVersionUpgrade field's value.
func (s *DescribeBrokerOutput) SetAutoMinorVersionUpgrade(v bool) *DescribeBrokerOutput {
	s.AutoMinorVersionUpgrade = &v
	return s
}

// SetBrokerArn sets the BrokerArn field's value.
func (s *DescribeBrokerOutput) SetBrokerArn(v string) *DescribeBrokerOutput {
	s.BrokerArn = &v
	return s
}

// SetBrokerId sets the BrokerId field's value.
func (s *DescribeBrokerOutput) SetBrokerId(v string) *DescribeBrokerOutput {
	s.BrokerId = &v
	return s
}

// SetBrokerInstances sets the BrokerInstances field's value.
func (s *DescribeBrokerOutput) SetBrokerInstances(v []BrokerInstance) *DescribeBrokerOutput {
	s.BrokerInstances = v
	return s
}

// SetBrokerName sets the BrokerName field's value.
func (s *DescribeBrokerOutput) SetBrokerName(v string) *DescribeBrokerOutput {
	s.BrokerName = &v
	return s
}

// SetBrokerState sets the BrokerState field's value.
func (s *DescribeBrokerOutput) SetBrokerState(v BrokerState) *DescribeBrokerOutput {
	s.BrokerState = v
	return s
}

// SetConfigurations sets the Configurations field's value.
func (s *DescribeBrokerOutput) SetConfigurations(v *Configurations) *DescribeBrokerOutput {
	s.Configurations = v
	return s
}

// SetDeploymentMode sets the DeploymentMode field's value.
func (s *DescribeBrokerOutput) SetDeploymentMode(v DeploymentMode) *DescribeBrokerOutput {
	s.DeploymentMode = v
	return s
}

// SetEngineType sets the EngineType field's value.
func (s *DescribeBrokerOutput) SetEngineType(v EngineType) *DescribeBrokerOutput {
	s.EngineType = v
	return s
}

// SetEngineVersion sets the EngineVersion field's value.
func (s *DescribeBrokerOutput) SetEngineVersion(v string) *DescribeBrokerOutput {
	s.EngineVersion = &v
	return s
}

// SetHostInstanceType sets the HostInstanceType field's value.
func (s *DescribeBrokerOutput) SetHostInstanceType(v string) *DescribeBrokerOutput {
	s.HostInstanceType = &v
	return s
}

// SetMaintenanceWindowStartTime sets the MaintenanceWindowStartTime field's value.
func (s *DescribeBrokerOutput) SetMaintenanceWindowStartTime(v *WeeklyStartTime) *DescribeBrokerOutput {
	s.MaintenanceWindowStartTime = v
	return s
}

// SetPubliclyAccessible sets the PubliclyAccessible field's value.
func (s *DescribeBrokerOutput) SetPubliclyAccessible(v bool) *DescribeBrokerOutput {
	s.PubliclyAccessible = &v
	return s
}

// SetSecurityGroups sets the SecurityGroups field's value.
func (s *DescribeBrokerOutput) SetSecurityGroups(v []string) *DescribeBrokerOutput {
	s.SecurityGroups = v
	return s
}

// SetSubnetIds sets the SubnetIds field's value.
func (s *DescribeBrokerOutput) SetSubnetIds(v []string) *DescribeBrokerOutput {
	s.SubnetIds = v
	return s
}

// SetUsers sets the Users field's value.
func (s *DescribeBrokerOutput) SetUsers(v []UserSummary) *DescribeBrokerOutput {
	s.Users = v
	return s
}

// Please also see https://docs.aws.amazon.com/goto/WebAPI/mq-2017-11-27/DescribeConfigurationRequest
type DescribeConfigurationInput struct {
	_ struct{} `type:"structure"`

	// ConfigurationId is a required field
	ConfigurationId *string `location:"uri" locationName:"configuration-id" type:"string" required:"true"`
}

// String returns the string representation
func (s DescribeConfigurationInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeConfigurationInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *DescribeConfigurationInput) Validate() error {
	invalidParams := aws.ErrInvalidParams{Context: "DescribeConfigurationInput"}

	if s.ConfigurationId == nil {
		invalidParams.Add(aws.NewErrParamRequired("ConfigurationId"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetConfigurationId sets the ConfigurationId field's value.
func (s *DescribeConfigurationInput) SetConfigurationId(v string) *DescribeConfigurationInput {
	s.ConfigurationId = &v
	return s
}

// Please also see https://docs.aws.amazon.com/goto/WebAPI/mq-2017-11-27/DescribeConfigurationResponse
type DescribeConfigurationOutput struct {
	_ struct{} `type:"structure"`

	responseMetadata aws.Response

	Arn *string `locationName:"arn" type:"string"`

	Description *string `locationName:"description" type:"string"`

	// The type of broker engine. Note: Currently, Amazon MQ supports only ActiveMQ.
	EngineType EngineType `locationName:"engineType" type:"string" enum:"true"`

	EngineVersion *string `locationName:"engineVersion" type:"string"`

	Id *string `locationName:"id" type:"string"`

	// Returns information about the specified configuration revision.
	LatestRevision *ConfigurationRevision `locationName:"latestRevision" type:"structure"`

	Name *string `locationName:"name" type:"string"`
}

// String returns the string representation
func (s DescribeConfigurationOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeConfigurationOutput) GoString() string {
	return s.String()
}

// SDKResponseMetdata return sthe response metadata for the API.
func (s DescribeConfigurationOutput) SDKResponseMetadata() aws.Response {
	return s.responseMetadata
}

// SetArn sets the Arn field's value.
func (s *DescribeConfigurationOutput) SetArn(v string) *DescribeConfigurationOutput {
	s.Arn = &v
	return s
}

// SetDescription sets the Description field's value.
func (s *DescribeConfigurationOutput) SetDescription(v string) *DescribeConfigurationOutput {
	s.Description = &v
	return s
}

// SetEngineType sets the EngineType field's value.
func (s *DescribeConfigurationOutput) SetEngineType(v EngineType) *DescribeConfigurationOutput {
	s.EngineType = v
	return s
}

// SetEngineVersion sets the EngineVersion field's value.
func (s *DescribeConfigurationOutput) SetEngineVersion(v string) *DescribeConfigurationOutput {
	s.EngineVersion = &v
	return s
}

// SetId sets the Id field's value.
func (s *DescribeConfigurationOutput) SetId(v string) *DescribeConfigurationOutput {
	s.Id = &v
	return s
}

// SetLatestRevision sets the LatestRevision field's value.
func (s *DescribeConfigurationOutput) SetLatestRevision(v *ConfigurationRevision) *DescribeConfigurationOutput {
	s.LatestRevision = v
	return s
}

// SetName sets the Name field's value.
func (s *DescribeConfigurationOutput) SetName(v string) *DescribeConfigurationOutput {
	s.Name = &v
	return s
}

// Please also see https://docs.aws.amazon.com/goto/WebAPI/mq-2017-11-27/DescribeConfigurationRevisionRequest
type DescribeConfigurationRevisionInput struct {
	_ struct{} `type:"structure"`

	// ConfigurationId is a required field
	ConfigurationId *string `location:"uri" locationName:"configuration-id" type:"string" required:"true"`

	// ConfigurationRevision is a required field
	ConfigurationRevision *string `location:"uri" locationName:"configuration-revision" type:"string" required:"true"`
}

// String returns the string representation
func (s DescribeConfigurationRevisionInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeConfigurationRevisionInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *DescribeConfigurationRevisionInput) Validate() error {
	invalidParams := aws.ErrInvalidParams{Context: "DescribeConfigurationRevisionInput"}

	if s.ConfigurationId == nil {
		invalidParams.Add(aws.NewErrParamRequired("ConfigurationId"))
	}

	if s.ConfigurationRevision == nil {
		invalidParams.Add(aws.NewErrParamRequired("ConfigurationRevision"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetConfigurationId sets the ConfigurationId field's value.
func (s *DescribeConfigurationRevisionInput) SetConfigurationId(v string) *DescribeConfigurationRevisionInput {
	s.ConfigurationId = &v
	return s
}

// SetConfigurationRevision sets the ConfigurationRevision field's value.
func (s *DescribeConfigurationRevisionInput) SetConfigurationRevision(v string) *DescribeConfigurationRevisionInput {
	s.ConfigurationRevision = &v
	return s
}

// Please also see https://docs.aws.amazon.com/goto/WebAPI/mq-2017-11-27/DescribeConfigurationRevisionResponse
type DescribeConfigurationRevisionOutput struct {
	_ struct{} `type:"structure"`

	responseMetadata aws.Response

	ConfigurationId *string `locationName:"configurationId" type:"string"`

	Data *string `locationName:"data" type:"string"`

	Description *string `locationName:"description" type:"string"`
}

// String returns the string representation
func (s DescribeConfigurationRevisionOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeConfigurationRevisionOutput) GoString() string {
	return s.String()
}

// SDKResponseMetdata return sthe response metadata for the API.
func (s DescribeConfigurationRevisionOutput) SDKResponseMetadata() aws.Response {
	return s.responseMetadata
}

// SetConfigurationId sets the ConfigurationId field's value.
func (s *DescribeConfigurationRevisionOutput) SetConfigurationId(v string) *DescribeConfigurationRevisionOutput {
	s.ConfigurationId = &v
	return s
}

// SetData sets the Data field's value.
func (s *DescribeConfigurationRevisionOutput) SetData(v string) *DescribeConfigurationRevisionOutput {
	s.Data = &v
	return s
}

// SetDescription sets the Description field's value.
func (s *DescribeConfigurationRevisionOutput) SetDescription(v string) *DescribeConfigurationRevisionOutput {
	s.Description = &v
	return s
}

// Please also see https://docs.aws.amazon.com/goto/WebAPI/mq-2017-11-27/DescribeUserRequest
type DescribeUserInput struct {
	_ struct{} `type:"structure"`

	// BrokerId is a required field
	BrokerId *string `location:"uri" locationName:"broker-id" type:"string" required:"true"`

	// Username is a required field
	Username *string `location:"uri" locationName:"username" type:"string" required:"true"`
}

// String returns the string representation
func (s DescribeUserInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeUserInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *DescribeUserInput) Validate() error {
	invalidParams := aws.ErrInvalidParams{Context: "DescribeUserInput"}

	if s.BrokerId == nil {
		invalidParams.Add(aws.NewErrParamRequired("BrokerId"))
	}

	if s.Username == nil {
		invalidParams.Add(aws.NewErrParamRequired("Username"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetBrokerId sets the BrokerId field's value.
func (s *DescribeUserInput) SetBrokerId(v string) *DescribeUserInput {
	s.BrokerId = &v
	return s
}

// SetUsername sets the Username field's value.
func (s *DescribeUserInput) SetUsername(v string) *DescribeUserInput {
	s.Username = &v
	return s
}

// Please also see https://docs.aws.amazon.com/goto/WebAPI/mq-2017-11-27/DescribeUserResponse
type DescribeUserOutput struct {
	_ struct{} `type:"structure"`

	responseMetadata aws.Response

	BrokerId *string `locationName:"brokerId" type:"string"`

	ConsoleAccess *bool `locationName:"consoleAccess" type:"boolean"`

	Groups []string `locationName:"groups" type:"list"`

	// Returns information about the status of the changes pending for the ActiveMQ
	// user.
	Pending *UserPendingChanges `locationName:"pending" type:"structure"`

	Username *string `locationName:"username" type:"string"`
}

// String returns the string representation
func (s DescribeUserOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeUserOutput) GoString() string {
	return s.String()
}

// SDKResponseMetdata return sthe response metadata for the API.
func (s DescribeUserOutput) SDKResponseMetadata() aws.Response {
	return s.responseMetadata
}

// SetBrokerId sets the BrokerId field's value.
func (s *DescribeUserOutput) SetBrokerId(v string) *DescribeUserOutput {
	s.BrokerId = &v
	return s
}

// SetConsoleAccess sets the ConsoleAccess field's value.
func (s *DescribeUserOutput) SetConsoleAccess(v bool) *DescribeUserOutput {
	s.ConsoleAccess = &v
	return s
}

// SetGroups sets the Groups field's value.
func (s *DescribeUserOutput) SetGroups(v []string) *DescribeUserOutput {
	s.Groups = v
	return s
}

// SetPending sets the Pending field's value.
func (s *DescribeUserOutput) SetPending(v *UserPendingChanges) *DescribeUserOutput {
	s.Pending = v
	return s
}

// SetUsername sets the Username field's value.
func (s *DescribeUserOutput) SetUsername(v string) *DescribeUserOutput {
	s.Username = &v
	return s
}

// Please also see https://docs.aws.amazon.com/goto/WebAPI/mq-2017-11-27/ListBrokersRequest
type ListBrokersInput struct {
	_ struct{} `type:"structure"`

	MaxResults *int64 `location:"querystring" locationName:"maxResults" min:"1" type:"integer"`

	NextToken *string `location:"querystring" locationName:"nextToken" type:"string"`
}

// String returns the string representation
func (s ListBrokersInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s ListBrokersInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *ListBrokersInput) Validate() error {
	invalidParams := aws.ErrInvalidParams{Context: "ListBrokersInput"}
	if s.MaxResults != nil && *s.MaxResults < 1 {
		invalidParams.Add(aws.NewErrParamMinValue("MaxResults", 1))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetMaxResults sets the MaxResults field's value.
func (s *ListBrokersInput) SetMaxResults(v int64) *ListBrokersInput {
	s.MaxResults = &v
	return s
}

// SetNextToken sets the NextToken field's value.
func (s *ListBrokersInput) SetNextToken(v string) *ListBrokersInput {
	s.NextToken = &v
	return s
}

// Please also see https://docs.aws.amazon.com/goto/WebAPI/mq-2017-11-27/ListBrokersResponse
type ListBrokersOutput struct {
	_ struct{} `type:"structure"`

	responseMetadata aws.Response

	BrokerSummaries []BrokerSummary `locationName:"brokerSummaries" type:"list"`

	NextToken *string `locationName:"nextToken" type:"string"`
}

// String returns the string representation
func (s ListBrokersOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s ListBrokersOutput) GoString() string {
	return s.String()
}

// SDKResponseMetdata return sthe response metadata for the API.
func (s ListBrokersOutput) SDKResponseMetadata() aws.Response {
	return s.responseMetadata
}

// SetBrokerSummaries sets the BrokerSummaries field's value.
func (s *ListBrokersOutput) SetBrokerSummaries(v []BrokerSummary) *ListBrokersOutput {
	s.BrokerSummaries = v
	return s
}

// SetNextToken sets the NextToken field's value.
func (s *ListBrokersOutput) SetNextToken(v string) *ListBrokersOutput {
	s.NextToken = &v
	return s
}

// Please also see https://docs.aws.amazon.com/goto/WebAPI/mq-2017-11-27/ListConfigurationRevisionsRequest
type ListConfigurationRevisionsInput struct {
	_ struct{} `type:"structure"`

	// ConfigurationId is a required field
	ConfigurationId *string `location:"uri" locationName:"configuration-id" type:"string" required:"true"`

	MaxResults *int64 `location:"querystring" locationName:"maxResults" min:"1" type:"integer"`

	NextToken *string `location:"querystring" locationName:"nextToken" type:"string"`
}

// String returns the string representation
func (s ListConfigurationRevisionsInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s ListConfigurationRevisionsInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *ListConfigurationRevisionsInput) Validate() error {
	invalidParams := aws.ErrInvalidParams{Context: "ListConfigurationRevisionsInput"}

	if s.ConfigurationId == nil {
		invalidParams.Add(aws.NewErrParamRequired("ConfigurationId"))
	}
	if s.MaxResults != nil && *s.MaxResults < 1 {
		invalidParams.Add(aws.NewErrParamMinValue("MaxResults", 1))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetConfigurationId sets the ConfigurationId field's value.
func (s *ListConfigurationRevisionsInput) SetConfigurationId(v string) *ListConfigurationRevisionsInput {
	s.ConfigurationId = &v
	return s
}

// SetMaxResults sets the MaxResults field's value.
func (s *ListConfigurationRevisionsInput) SetMaxResults(v int64) *ListConfigurationRevisionsInput {
	s.MaxResults = &v
	return s
}

// SetNextToken sets the NextToken field's value.
func (s *ListConfigurationRevisionsInput) SetNextToken(v string) *ListConfigurationRevisionsInput {
	s.NextToken = &v
	return s
}

// Please also see https://docs.aws.amazon.com/goto/WebAPI/mq-2017-11-27/ListConfigurationRevisionsResponse
type ListConfigurationRevisionsOutput struct {
	_ struct{} `type:"structure"`

	responseMetadata aws.Response

	ConfigurationId *string `locationName:"configurationId" type:"string"`

	MaxResults *int64 `locationName:"maxResults" type:"integer"`

	NextToken *string `locationName:"nextToken" type:"string"`

	Revisions []ConfigurationRevision `locationName:"revisions" type:"list"`
}

// String returns the string representation
func (s ListConfigurationRevisionsOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s ListConfigurationRevisionsOutput) GoString() string {
	return s.String()
}

// SDKResponseMetdata return sthe response metadata for the API.
func (s ListConfigurationRevisionsOutput) SDKResponseMetadata() aws.Response {
	return s.responseMetadata
}

// SetConfigurationId sets the ConfigurationId field's value.
func (s *ListConfigurationRevisionsOutput) SetConfigurationId(v string) *ListConfigurationRevisionsOutput {
	s.ConfigurationId = &v
	return s
}

// SetMaxResults sets the MaxResults field's value.
func (s *ListConfigurationRevisionsOutput) SetMaxResults(v int64) *ListConfigurationRevisionsOutput {
	s.MaxResults = &v
	return s
}

// SetNextToken sets the NextToken field's value.
func (s *ListConfigurationRevisionsOutput) SetNextToken(v string) *ListConfigurationRevisionsOutput {
	s.NextToken = &v
	return s
}

// SetRevisions sets the Revisions field's value.
func (s *ListConfigurationRevisionsOutput) SetRevisions(v []ConfigurationRevision) *ListConfigurationRevisionsOutput {
	s.Revisions = v
	return s
}

// Please also see https://docs.aws.amazon.com/goto/WebAPI/mq-2017-11-27/ListConfigurationsRequest
type ListConfigurationsInput struct {
	_ struct{} `type:"structure"`

	MaxResults *int64 `location:"querystring" locationName:"maxResults" min:"1" type:"integer"`

	NextToken *string `location:"querystring" locationName:"nextToken" type:"string"`
}

// String returns the string representation
func (s ListConfigurationsInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s ListConfigurationsInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *ListConfigurationsInput) Validate() error {
	invalidParams := aws.ErrInvalidParams{Context: "ListConfigurationsInput"}
	if s.MaxResults != nil && *s.MaxResults < 1 {
		invalidParams.Add(aws.NewErrParamMinValue("MaxResults", 1))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetMaxResults sets the MaxResults field's value.
func (s *ListConfigurationsInput) SetMaxResults(v int64) *ListConfigurationsInput {
	s.MaxResults = &v
	return s
}

// SetNextToken sets the NextToken field's value.
func (s *ListConfigurationsInput) SetNextToken(v string) *ListConfigurationsInput {
	s.NextToken = &v
	return s
}

// Please also see https://docs.aws.amazon.com/goto/WebAPI/mq-2017-11-27/ListConfigurationsResponse
type ListConfigurationsOutput struct {
	_ struct{} `type:"structure"`

	responseMetadata aws.Response

	Configurations []Configuration `locationName:"configurations" type:"list"`

	MaxResults *int64 `locationName:"maxResults" type:"integer"`

	NextToken *string `locationName:"nextToken" type:"string"`
}

// String returns the string representation
func (s ListConfigurationsOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s ListConfigurationsOutput) GoString() string {
	return s.String()
}

// SDKResponseMetdata return sthe response metadata for the API.
func (s ListConfigurationsOutput) SDKResponseMetadata() aws.Response {
	return s.responseMetadata
}

// SetConfigurations sets the Configurations field's value.
func (s *ListConfigurationsOutput) SetConfigurations(v []Configuration) *ListConfigurationsOutput {
	s.Configurations = v
	return s
}

// SetMaxResults sets the MaxResults field's value.
func (s *ListConfigurationsOutput) SetMaxResults(v int64) *ListConfigurationsOutput {
	s.MaxResults = &v
	return s
}

// SetNextToken sets the NextToken field's value.
func (s *ListConfigurationsOutput) SetNextToken(v string) *ListConfigurationsOutput {
	s.NextToken = &v
	return s
}

// Please also see https://docs.aws.amazon.com/goto/WebAPI/mq-2017-11-27/ListUsersRequest
type ListUsersInput struct {
	_ struct{} `type:"structure"`

	// BrokerId is a required field
	BrokerId *string `location:"uri" locationName:"broker-id" type:"string" required:"true"`

	MaxResults *int64 `location:"querystring" locationName:"maxResults" min:"1" type:"integer"`

	NextToken *string `location:"querystring" locationName:"nextToken" type:"string"`
}

// String returns the string representation
func (s ListUsersInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s ListUsersInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *ListUsersInput) Validate() error {
	invalidParams := aws.ErrInvalidParams{Context: "ListUsersInput"}

	if s.BrokerId == nil {
		invalidParams.Add(aws.NewErrParamRequired("BrokerId"))
	}
	if s.MaxResults != nil && *s.MaxResults < 1 {
		invalidParams.Add(aws.NewErrParamMinValue("MaxResults", 1))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetBrokerId sets the BrokerId field's value.
func (s *ListUsersInput) SetBrokerId(v string) *ListUsersInput {
	s.BrokerId = &v
	return s
}

// SetMaxResults sets the MaxResults field's value.
func (s *ListUsersInput) SetMaxResults(v int64) *ListUsersInput {
	s.MaxResults = &v
	return s
}

// SetNextToken sets the NextToken field's value.
func (s *ListUsersInput) SetNextToken(v string) *ListUsersInput {
	s.NextToken = &v
	return s
}

// Please also see https://docs.aws.amazon.com/goto/WebAPI/mq-2017-11-27/ListUsersResponse
type ListUsersOutput struct {
	_ struct{} `type:"structure"`

	responseMetadata aws.Response

	BrokerId *string `locationName:"brokerId" type:"string"`

	MaxResults *int64 `locationName:"maxResults" type:"integer"`

	NextToken *string `locationName:"nextToken" type:"string"`

	Users []UserSummary `locationName:"users" type:"list"`
}

// String returns the string representation
func (s ListUsersOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s ListUsersOutput) GoString() string {
	return s.String()
}

// SDKResponseMetdata return sthe response metadata for the API.
func (s ListUsersOutput) SDKResponseMetadata() aws.Response {
	return s.responseMetadata
}

// SetBrokerId sets the BrokerId field's value.
func (s *ListUsersOutput) SetBrokerId(v string) *ListUsersOutput {
	s.BrokerId = &v
	return s
}

// SetMaxResults sets the MaxResults field's value.
func (s *ListUsersOutput) SetMaxResults(v int64) *ListUsersOutput {
	s.MaxResults = &v
	return s
}

// SetNextToken sets the NextToken field's value.
func (s *ListUsersOutput) SetNextToken(v string) *ListUsersOutput {
	s.NextToken = &v
	return s
}

// SetUsers sets the Users field's value.
func (s *ListUsersOutput) SetUsers(v []UserSummary) *ListUsersOutput {
	s.Users = v
	return s
}

// Please also see https://docs.aws.amazon.com/goto/WebAPI/mq-2017-11-27/RebootBrokerRequest
type RebootBrokerInput struct {
	_ struct{} `type:"structure"`

	// BrokerId is a required field
	BrokerId *string `location:"uri" locationName:"broker-id" type:"string" required:"true"`
}

// String returns the string representation
func (s RebootBrokerInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s RebootBrokerInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *RebootBrokerInput) Validate() error {
	invalidParams := aws.ErrInvalidParams{Context: "RebootBrokerInput"}

	if s.BrokerId == nil {
		invalidParams.Add(aws.NewErrParamRequired("BrokerId"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetBrokerId sets the BrokerId field's value.
func (s *RebootBrokerInput) SetBrokerId(v string) *RebootBrokerInput {
	s.BrokerId = &v
	return s
}

// Please also see https://docs.aws.amazon.com/goto/WebAPI/mq-2017-11-27/RebootBrokerResponse
type RebootBrokerOutput struct {
	_ struct{} `type:"structure"`

	responseMetadata aws.Response
}

// String returns the string representation
func (s RebootBrokerOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s RebootBrokerOutput) GoString() string {
	return s.String()
}

// SDKResponseMetdata return sthe response metadata for the API.
func (s RebootBrokerOutput) SDKResponseMetadata() aws.Response {
	return s.responseMetadata
}

// Returns information about the XML element or attribute that was sanitized
// in the configuration.
// Please also see https://docs.aws.amazon.com/goto/WebAPI/mq-2017-11-27/SanitizationWarning
type SanitizationWarning struct {
	_ struct{} `type:"structure"`

	// The name of the XML attribute that has been sanitized.
	AttributeName *string `locationName:"attributeName" type:"string"`

	// The name of the XML element that has been sanitized.
	ElementName *string `locationName:"elementName" type:"string"`

	// Required. The reason for which the XML elements or attributes were sanitized.
	// Possible values: DISALLOWED_ELEMENT_REMOVED, DISALLOWED_ATTRIBUTE_REMOVED,
	// INVALID_ATTRIBUTE_VALUE_REMOVED DISALLOWED_ELEMENT_REMOVED shows that the
	// provided element isn't allowed and has been removed. DISALLOWED_ATTRIBUTE_REMOVED
	// shows that the provided attribute isn't allowed and has been removed. INVALID_ATTRIBUTE_VALUE_REMOVED
	// shows that the provided value for the attribute isn't allowed and has been
	// removed.
	Reason SanitizationWarningReason `locationName:"reason" type:"string" enum:"true"`
}

// String returns the string representation
func (s SanitizationWarning) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s SanitizationWarning) GoString() string {
	return s.String()
}

// SetAttributeName sets the AttributeName field's value.
func (s *SanitizationWarning) SetAttributeName(v string) *SanitizationWarning {
	s.AttributeName = &v
	return s
}

// SetElementName sets the ElementName field's value.
func (s *SanitizationWarning) SetElementName(v string) *SanitizationWarning {
	s.ElementName = &v
	return s
}

// SetReason sets the Reason field's value.
func (s *SanitizationWarning) SetReason(v SanitizationWarningReason) *SanitizationWarning {
	s.Reason = v
	return s
}

// Please also see https://docs.aws.amazon.com/goto/WebAPI/mq-2017-11-27/UpdateBrokerRequest
type UpdateBrokerInput struct {
	_ struct{} `type:"structure"`

	// BrokerId is a required field
	BrokerId *string `location:"uri" locationName:"broker-id" type:"string" required:"true"`

	// A list of information about the configuration.
	Configuration *ConfigurationId `locationName:"configuration" type:"structure"`
}

// String returns the string representation
func (s UpdateBrokerInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s UpdateBrokerInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *UpdateBrokerInput) Validate() error {
	invalidParams := aws.ErrInvalidParams{Context: "UpdateBrokerInput"}

	if s.BrokerId == nil {
		invalidParams.Add(aws.NewErrParamRequired("BrokerId"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetBrokerId sets the BrokerId field's value.
func (s *UpdateBrokerInput) SetBrokerId(v string) *UpdateBrokerInput {
	s.BrokerId = &v
	return s
}

// SetConfiguration sets the Configuration field's value.
func (s *UpdateBrokerInput) SetConfiguration(v *ConfigurationId) *UpdateBrokerInput {
	s.Configuration = v
	return s
}

// Please also see https://docs.aws.amazon.com/goto/WebAPI/mq-2017-11-27/UpdateBrokerResponse
type UpdateBrokerOutput struct {
	_ struct{} `type:"structure"`

	responseMetadata aws.Response

	BrokerId *string `locationName:"brokerId" type:"string"`

	// A list of information about the configuration.
	Configuration *ConfigurationId `locationName:"configuration" type:"structure"`
}

// String returns the string representation
func (s UpdateBrokerOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s UpdateBrokerOutput) GoString() string {
	return s.String()
}

// SDKResponseMetdata return sthe response metadata for the API.
func (s UpdateBrokerOutput) SDKResponseMetadata() aws.Response {
	return s.responseMetadata
}

// SetBrokerId sets the BrokerId field's value.
func (s *UpdateBrokerOutput) SetBrokerId(v string) *UpdateBrokerOutput {
	s.BrokerId = &v
	return s
}

// SetConfiguration sets the Configuration field's value.
func (s *UpdateBrokerOutput) SetConfiguration(v *ConfigurationId) *UpdateBrokerOutput {
	s.Configuration = v
	return s
}

// Please also see https://docs.aws.amazon.com/goto/WebAPI/mq-2017-11-27/UpdateConfigurationRequest
type UpdateConfigurationInput struct {
	_ struct{} `type:"structure"`

	// ConfigurationId is a required field
	ConfigurationId *string `location:"uri" locationName:"configuration-id" type:"string" required:"true"`

	Data *string `locationName:"data" type:"string"`

	Description *string `locationName:"description" type:"string"`
}

// String returns the string representation
func (s UpdateConfigurationInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s UpdateConfigurationInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *UpdateConfigurationInput) Validate() error {
	invalidParams := aws.ErrInvalidParams{Context: "UpdateConfigurationInput"}

	if s.ConfigurationId == nil {
		invalidParams.Add(aws.NewErrParamRequired("ConfigurationId"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetConfigurationId sets the ConfigurationId field's value.
func (s *UpdateConfigurationInput) SetConfigurationId(v string) *UpdateConfigurationInput {
	s.ConfigurationId = &v
	return s
}

// SetData sets the Data field's value.
func (s *UpdateConfigurationInput) SetData(v string) *UpdateConfigurationInput {
	s.Data = &v
	return s
}

// SetDescription sets the Description field's value.
func (s *UpdateConfigurationInput) SetDescription(v string) *UpdateConfigurationInput {
	s.Description = &v
	return s
}

// Please also see https://docs.aws.amazon.com/goto/WebAPI/mq-2017-11-27/UpdateConfigurationResponse
type UpdateConfigurationOutput struct {
	_ struct{} `type:"structure"`

	responseMetadata aws.Response

	Arn *string `locationName:"arn" type:"string"`

	Id *string `locationName:"id" type:"string"`

	// Returns information about the specified configuration revision.
	LatestRevision *ConfigurationRevision `locationName:"latestRevision" type:"structure"`

	Name *string `locationName:"name" type:"string"`

	Warnings []SanitizationWarning `locationName:"warnings" type:"list"`
}

// String returns the string representation
func (s UpdateConfigurationOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s UpdateConfigurationOutput) GoString() string {
	return s.String()
}

// SDKResponseMetdata return sthe response metadata for the API.
func (s UpdateConfigurationOutput) SDKResponseMetadata() aws.Response {
	return s.responseMetadata
}

// SetArn sets the Arn field's value.
func (s *UpdateConfigurationOutput) SetArn(v string) *UpdateConfigurationOutput {
	s.Arn = &v
	return s
}

// SetId sets the Id field's value.
func (s *UpdateConfigurationOutput) SetId(v string) *UpdateConfigurationOutput {
	s.Id = &v
	return s
}

// SetLatestRevision sets the LatestRevision field's value.
func (s *UpdateConfigurationOutput) SetLatestRevision(v *ConfigurationRevision) *UpdateConfigurationOutput {
	s.LatestRevision = v
	return s
}

// SetName sets the Name field's value.
func (s *UpdateConfigurationOutput) SetName(v string) *UpdateConfigurationOutput {
	s.Name = &v
	return s
}

// SetWarnings sets the Warnings field's value.
func (s *UpdateConfigurationOutput) SetWarnings(v []SanitizationWarning) *UpdateConfigurationOutput {
	s.Warnings = v
	return s
}

// Please also see https://docs.aws.amazon.com/goto/WebAPI/mq-2017-11-27/UpdateUserRequest
type UpdateUserInput struct {
	_ struct{} `type:"structure"`

	// BrokerId is a required field
	BrokerId *string `location:"uri" locationName:"broker-id" type:"string" required:"true"`

	ConsoleAccess *bool `locationName:"consoleAccess" type:"boolean"`

	Groups []string `locationName:"groups" type:"list"`

	Password *string `locationName:"password" type:"string"`

	// Username is a required field
	Username *string `location:"uri" locationName:"username" type:"string" required:"true"`
}

// String returns the string representation
func (s UpdateUserInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s UpdateUserInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *UpdateUserInput) Validate() error {
	invalidParams := aws.ErrInvalidParams{Context: "UpdateUserInput"}

	if s.BrokerId == nil {
		invalidParams.Add(aws.NewErrParamRequired("BrokerId"))
	}

	if s.Username == nil {
		invalidParams.Add(aws.NewErrParamRequired("Username"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetBrokerId sets the BrokerId field's value.
func (s *UpdateUserInput) SetBrokerId(v string) *UpdateUserInput {
	s.BrokerId = &v
	return s
}

// SetConsoleAccess sets the ConsoleAccess field's value.
func (s *UpdateUserInput) SetConsoleAccess(v bool) *UpdateUserInput {
	s.ConsoleAccess = &v
	return s
}

// SetGroups sets the Groups field's value.
func (s *UpdateUserInput) SetGroups(v []string) *UpdateUserInput {
	s.Groups = v
	return s
}

// SetPassword sets the Password field's value.
func (s *UpdateUserInput) SetPassword(v string) *UpdateUserInput {
	s.Password = &v
	return s
}

// SetUsername sets the Username field's value.
func (s *UpdateUserInput) SetUsername(v string) *UpdateUserInput {
	s.Username = &v
	return s
}

// Please also see https://docs.aws.amazon.com/goto/WebAPI/mq-2017-11-27/UpdateUserResponse
type UpdateUserOutput struct {
	_ struct{} `type:"structure"`

	responseMetadata aws.Response
}

// String returns the string representation
func (s UpdateUserOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s UpdateUserOutput) GoString() string {
	return s.String()
}

// SDKResponseMetdata return sthe response metadata for the API.
func (s UpdateUserOutput) SDKResponseMetadata() aws.Response {
	return s.responseMetadata
}

// An ActiveMQ user associated with the broker.
// Please also see https://docs.aws.amazon.com/goto/WebAPI/mq-2017-11-27/User
type User struct {
	_ struct{} `type:"structure"`

	// Enables access to the the ActiveMQ Web Console for the ActiveMQ user.
	ConsoleAccess *bool `locationName:"consoleAccess" type:"boolean"`

	// The list of groups (20 maximum) to which the ActiveMQ user belongs. This
	// value can contain only alphanumeric characters, dashes, periods, underscores,
	// and tildes (- . _ ~). This value must be 2-100 characters long.
	Groups []string `locationName:"groups" type:"list"`

	// Required. The password of the ActiveMQ user. This value must be at least
	// 12 characters long, must contain at least 4 unique characters, and must not
	// contain commas.
	Password *string `locationName:"password" type:"string"`

	// Required. The username of the ActiveMQ user. This value can contain only
	// alphanumeric characters, dashes, periods, underscores, and tildes (- . _
	// ~). This value must be 2-100 characters long.
	Username *string `locationName:"username" type:"string"`
}

// String returns the string representation
func (s User) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s User) GoString() string {
	return s.String()
}

// SetConsoleAccess sets the ConsoleAccess field's value.
func (s *User) SetConsoleAccess(v bool) *User {
	s.ConsoleAccess = &v
	return s
}

// SetGroups sets the Groups field's value.
func (s *User) SetGroups(v []string) *User {
	s.Groups = v
	return s
}

// SetPassword sets the Password field's value.
func (s *User) SetPassword(v string) *User {
	s.Password = &v
	return s
}

// SetUsername sets the Username field's value.
func (s *User) SetUsername(v string) *User {
	s.Username = &v
	return s
}

// Returns information about the status of the changes pending for the ActiveMQ
// user.
// Please also see https://docs.aws.amazon.com/goto/WebAPI/mq-2017-11-27/UserPendingChanges
type UserPendingChanges struct {
	_ struct{} `type:"structure"`

	// Enables access to the the ActiveMQ Web Console for the ActiveMQ user.
	ConsoleAccess *bool `locationName:"consoleAccess" type:"boolean"`

	// The list of groups (20 maximum) to which the ActiveMQ user belongs. This
	// value can contain only alphanumeric characters, dashes, periods, underscores,
	// and tildes (- . _ ~). This value must be 2-100 characters long.
	Groups []string `locationName:"groups" type:"list"`

	// Required. The type of change pending for the ActiveMQ user. Possible values:
	// CREATE, UPDATE, DELETE
	PendingChange ChangeType `locationName:"pendingChange" type:"string" enum:"true"`
}

// String returns the string representation
func (s UserPendingChanges) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s UserPendingChanges) GoString() string {
	return s.String()
}

// SetConsoleAccess sets the ConsoleAccess field's value.
func (s *UserPendingChanges) SetConsoleAccess(v bool) *UserPendingChanges {
	s.ConsoleAccess = &v
	return s
}

// SetGroups sets the Groups field's value.
func (s *UserPendingChanges) SetGroups(v []string) *UserPendingChanges {
	s.Groups = v
	return s
}

// SetPendingChange sets the PendingChange field's value.
func (s *UserPendingChanges) SetPendingChange(v ChangeType) *UserPendingChanges {
	s.PendingChange = v
	return s
}

// Returns a list of all ActiveMQ users.
// Please also see https://docs.aws.amazon.com/goto/WebAPI/mq-2017-11-27/UserSummary
type UserSummary struct {
	_ struct{} `type:"structure"`

	// The type of change pending for the ActiveMQ user. Possible values: CREATE,
	// UPDATE, DELETE
	PendingChange ChangeType `locationName:"pendingChange" type:"string" enum:"true"`

	// Required. The username of the ActiveMQ user. This value can contain only
	// alphanumeric characters, dashes, periods, underscores, and tildes (- . _
	// ~). This value must be 2-100 characters long.
	Username *string `locationName:"username" type:"string"`
}

// String returns the string representation
func (s UserSummary) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s UserSummary) GoString() string {
	return s.String()
}

// SetPendingChange sets the PendingChange field's value.
func (s *UserSummary) SetPendingChange(v ChangeType) *UserSummary {
	s.PendingChange = v
	return s
}

// SetUsername sets the Username field's value.
func (s *UserSummary) SetUsername(v string) *UserSummary {
	s.Username = &v
	return s
}

// The scheduled time period relative to UTC during which Amazon MQ begins to
// apply pending updates or patches to the broker.
// Please also see https://docs.aws.amazon.com/goto/WebAPI/mq-2017-11-27/WeeklyStartTime
type WeeklyStartTime struct {
	_ struct{} `type:"structure"`

	// Required. The day of the week. Possible values: MONDAY, TUESDAY, WEDNESDAY,
	// THURSDAY, FRIDAY, SATURDAY, SUNDAY
	DayOfWeek DayOfWeek `locationName:"dayOfWeek" type:"string" enum:"true"`

	// Required. The time, in 24-hour format.
	TimeOfDay *string `locationName:"timeOfDay" type:"string"`

	// The time zone, UTC by default, in either the Country/City format, or the
	// UTC offset format.
	TimeZone *string `locationName:"timeZone" type:"string"`
}

// String returns the string representation
func (s WeeklyStartTime) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s WeeklyStartTime) GoString() string {
	return s.String()
}

// SetDayOfWeek sets the DayOfWeek field's value.
func (s *WeeklyStartTime) SetDayOfWeek(v DayOfWeek) *WeeklyStartTime {
	s.DayOfWeek = v
	return s
}

// SetTimeOfDay sets the TimeOfDay field's value.
func (s *WeeklyStartTime) SetTimeOfDay(v string) *WeeklyStartTime {
	s.TimeOfDay = &v
	return s
}

// SetTimeZone sets the TimeZone field's value.
func (s *WeeklyStartTime) SetTimeZone(v string) *WeeklyStartTime {
	s.TimeZone = &v
	return s
}

// The status of the broker. Possible values: CREATION_IN_PROGRESS, CREATION_FAILED,
// DELETION_IN_PROGRESS, RUNNING, REBOOT_IN_PROGRESS
type BrokerState string

// Enum values for BrokerState
const (
	BrokerStateCreationInProgress BrokerState = "CREATION_IN_PROGRESS"
	BrokerStateCreationFailed     BrokerState = "CREATION_FAILED"
	BrokerStateDeletionInProgress BrokerState = "DELETION_IN_PROGRESS"
	BrokerStateRunning            BrokerState = "RUNNING"
	BrokerStateRebootInProgress   BrokerState = "REBOOT_IN_PROGRESS"
)

// The type of change pending for the ActiveMQ user. Possible values: CREATE,
// UPDATE, DELETE
type ChangeType string

// Enum values for ChangeType
const (
	ChangeTypeCreate ChangeType = "CREATE"
	ChangeTypeUpdate ChangeType = "UPDATE"
	ChangeTypeDelete ChangeType = "DELETE"
)

type DayOfWeek string

// Enum values for DayOfWeek
const (
	DayOfWeekMonday    DayOfWeek = "MONDAY"
	DayOfWeekTuesday   DayOfWeek = "TUESDAY"
	DayOfWeekWednesday DayOfWeek = "WEDNESDAY"
	DayOfWeekThursday  DayOfWeek = "THURSDAY"
	DayOfWeekFriday    DayOfWeek = "FRIDAY"
	DayOfWeekSaturday  DayOfWeek = "SATURDAY"
	DayOfWeekSunday    DayOfWeek = "SUNDAY"
)

// The deployment mode of the broker. Possible values: SINGLE_INSTANCE, ACTIVE_STANDBY_MULTI_AZ
// SINGLE_INSTANCE creates a single-instance broker in a single Availability
// Zone. ACTIVE_STANDBY_MULTI_AZ creates an active/standby broker for high availability.
type DeploymentMode string

// Enum values for DeploymentMode
const (
	DeploymentModeSingleInstance       DeploymentMode = "SINGLE_INSTANCE"
	DeploymentModeActiveStandbyMultiAz DeploymentMode = "ACTIVE_STANDBY_MULTI_AZ"
)

// The type of broker engine. Note: Currently, Amazon MQ supports only ActiveMQ.
type EngineType string

// Enum values for EngineType
const (
	EngineTypeActivemq EngineType = "ACTIVEMQ"
)

// The reason for which the XML elements or attributes were sanitized. Possible
// values: DISALLOWED_ELEMENT_REMOVED, DISALLOWED_ATTRIBUTE_REMOVED, INVALID_ATTRIBUTE_VALUE_REMOVED
// DISALLOWED_ELEMENT_REMOVED shows that the provided element isn't allowed
// and has been removed. DISALLOWED_ATTRIBUTE_REMOVED shows that the provided
// attribute isn't allowed and has been removed. INVALID_ATTRIBUTE_VALUE_REMOVED
// shows that the provided value for the attribute isn't allowed and has been
// removed.
type SanitizationWarningReason string

// Enum values for SanitizationWarningReason
const (
	SanitizationWarningReasonDisallowedElementRemoved     SanitizationWarningReason = "DISALLOWED_ELEMENT_REMOVED"
	SanitizationWarningReasonDisallowedAttributeRemoved   SanitizationWarningReason = "DISALLOWED_ATTRIBUTE_REMOVED"
	SanitizationWarningReasonInvalidAttributeValueRemoved SanitizationWarningReason = "INVALID_ATTRIBUTE_VALUE_REMOVED"
)
