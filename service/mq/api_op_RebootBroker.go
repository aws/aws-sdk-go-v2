// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package mq

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/mq/types"
)

const opRebootBroker = "RebootBroker"

// RebootBrokerRequest returns a request value for making API operation for
// AmazonMQ.
//
// Reboots a broker. Note: This API is asynchronous.
//
//    // Example sending a request using RebootBrokerRequest.
//    req := client.RebootBrokerRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/mq-2017-11-27/RebootBroker
func (c *Client) RebootBrokerRequest(input *types.RebootBrokerInput) RebootBrokerRequest {
	op := &aws.Operation{
		Name:       opRebootBroker,
		HTTPMethod: "POST",
		HTTPPath:   "/v1/brokers/{broker-id}/reboot",
	}

	if input == nil {
		input = &types.RebootBrokerInput{}
	}

	req := c.newRequest(op, input, &types.RebootBrokerOutput{})
	return RebootBrokerRequest{Request: req, Input: input, Copy: c.RebootBrokerRequest}
}

// RebootBrokerRequest is the request type for the
// RebootBroker API operation.
type RebootBrokerRequest struct {
	*aws.Request
	Input *types.RebootBrokerInput
	Copy  func(*types.RebootBrokerInput) RebootBrokerRequest
}

// Send marshals and sends the RebootBroker API request.
func (r RebootBrokerRequest) Send(ctx context.Context) (*RebootBrokerResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &RebootBrokerResponse{
		RebootBrokerOutput: r.Request.Data.(*types.RebootBrokerOutput),
		response:           &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// RebootBrokerResponse is the response type for the
// RebootBroker API operation.
type RebootBrokerResponse struct {
	*types.RebootBrokerOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// RebootBroker request.
func (r *RebootBrokerResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
