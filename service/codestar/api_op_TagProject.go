// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package codestar

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/codestar/types"
)

const opTagProject = "TagProject"

// TagProjectRequest returns a request value for making API operation for
// AWS CodeStar.
//
// Adds tags to a project.
//
//    // Example sending a request using TagProjectRequest.
//    req := client.TagProjectRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/codestar-2017-04-19/TagProject
func (c *Client) TagProjectRequest(input *types.TagProjectInput) TagProjectRequest {
	op := &aws.Operation{
		Name:       opTagProject,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &types.TagProjectInput{}
	}

	req := c.newRequest(op, input, &types.TagProjectOutput{})
	return TagProjectRequest{Request: req, Input: input, Copy: c.TagProjectRequest}
}

// TagProjectRequest is the request type for the
// TagProject API operation.
type TagProjectRequest struct {
	*aws.Request
	Input *types.TagProjectInput
	Copy  func(*types.TagProjectInput) TagProjectRequest
}

// Send marshals and sends the TagProject API request.
func (r TagProjectRequest) Send(ctx context.Context) (*TagProjectResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &TagProjectResponse{
		TagProjectOutput: r.Request.Data.(*types.TagProjectOutput),
		response:         &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// TagProjectResponse is the response type for the
// TagProject API operation.
type TagProjectResponse struct {
	*types.TagProjectOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// TagProject request.
func (r *TagProjectResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
