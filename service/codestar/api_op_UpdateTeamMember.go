// Code generated by smithy-go-codegen DO NOT EDIT.

package codestar

import (
	"context"
	awsmiddleware "github.com/aws/aws-sdk-go-v2/aws/middleware"
	"github.com/aws/aws-sdk-go-v2/aws/retry"
	"github.com/aws/aws-sdk-go-v2/aws/signer/v4"
	smithy "github.com/awslabs/smithy-go"
	"github.com/awslabs/smithy-go/middleware"
	smithyhttp "github.com/awslabs/smithy-go/transport/http"
)

// Updates a team member's attributes in an AWS CodeStar project. For example, you
// can change a team member's role in the project, or change whether they have
// remote access to project resources.
func (c *Client) UpdateTeamMember(ctx context.Context, params *UpdateTeamMemberInput, optFns ...func(*Options)) (*UpdateTeamMemberOutput, error) {
	stack := middleware.NewStack("UpdateTeamMember", smithyhttp.NewStackRequest)
	options := c.options.Copy()
	for _, fn := range optFns {
		fn(&options)
	}
	addawsAwsjson11_serdeOpUpdateTeamMemberMiddlewares(stack)
	awsmiddleware.AddRequestInvocationIDMiddleware(stack)
	smithyhttp.AddContentLengthMiddleware(stack)
	AddResolveEndpointMiddleware(stack, options)
	v4.AddComputePayloadSHA256Middleware(stack)
	retry.AddRetryMiddlewares(stack, options)
	addHTTPSignerV4Middleware(stack, options)
	awsmiddleware.AddAttemptClockSkewMiddleware(stack)
	addClientUserAgent(stack)
	smithyhttp.AddErrorCloseResponseBodyMiddleware(stack)
	smithyhttp.AddCloseResponseBodyMiddleware(stack)
	addOpUpdateTeamMemberValidationMiddleware(stack)
	stack.Initialize.Add(newServiceMetadataMiddleware_opUpdateTeamMember(options.Region), middleware.Before)

	for _, fn := range options.APIOptions {
		if err := fn(stack); err != nil {
			return nil, err
		}
	}
	handler := middleware.DecorateHandler(smithyhttp.NewClientHandler(options.HTTPClient), stack)
	result, metadata, err := handler.Handle(ctx, params)
	if err != nil {
		return nil, &smithy.OperationError{
			ServiceID:     ServiceID,
			OperationName: "UpdateTeamMember",
			Err:           err,
		}
	}
	out := result.(*UpdateTeamMemberOutput)
	out.ResultMetadata = metadata
	return out, nil
}

type UpdateTeamMemberInput struct {
	// The ID of the project.
	ProjectId *string
	// The role assigned to the user in the project. Project roles have different
	// levels of access. For more information, see Working with Teams
	// (http://docs.aws.amazon.com/codestar/latest/userguide/working-with-teams.html)
	// in the AWS CodeStar User Guide.
	ProjectRole *string
	// The Amazon Resource Name (ARN) of the user for whom you want to change team
	// membership attributes.
	UserArn *string
	// Whether a team member is allowed to remotely access project resources using the
	// SSH public key associated with the user's profile. Even if this is set to True,
	// the user must associate a public key with their profile before the user can
	// access resources.
	RemoteAccessAllowed *bool
}

type UpdateTeamMemberOutput struct {
	// The project role granted to the user.
	ProjectRole *string
	// Whether a team member is allowed to remotely access project resources using the
	// SSH public key associated with the user's profile.
	RemoteAccessAllowed *bool
	// The Amazon Resource Name (ARN) of the user whose team membership attributes were
	// updated.
	UserArn *string

	// Metadata pertaining to the operation's result.
	ResultMetadata middleware.Metadata
}

func addawsAwsjson11_serdeOpUpdateTeamMemberMiddlewares(stack *middleware.Stack) {
	stack.Serialize.Add(&awsAwsjson11_serializeOpUpdateTeamMember{}, middleware.After)
	stack.Deserialize.Add(&awsAwsjson11_deserializeOpUpdateTeamMember{}, middleware.After)
}

func newServiceMetadataMiddleware_opUpdateTeamMember(region string) awsmiddleware.RegisterServiceMetadata {
	return awsmiddleware.RegisterServiceMetadata{
		Region:        region,
		ServiceID:     ServiceID,
		SigningName:   "codestar",
		OperationName: "UpdateTeamMember",
	}
}
