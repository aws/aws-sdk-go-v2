// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package qldb

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/qldb/types"
)

const opDescribeJournalS3Export = "DescribeJournalS3Export"

// DescribeJournalS3ExportRequest returns a request value for making API operation for
// Amazon QLDB.
//
// Returns information about a journal export job, including the ledger name,
// export ID, when it was created, current status, and its start and end time
// export parameters.
//
// If the export job with the given ExportId doesn't exist, then throws ResourceNotFoundException.
//
// If the ledger with the given Name doesn't exist, then throws ResourceNotFoundException.
//
//    // Example sending a request using DescribeJournalS3ExportRequest.
//    req := client.DescribeJournalS3ExportRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/qldb-2019-01-02/DescribeJournalS3Export
func (c *Client) DescribeJournalS3ExportRequest(input *types.DescribeJournalS3ExportInput) DescribeJournalS3ExportRequest {
	op := &aws.Operation{
		Name:       opDescribeJournalS3Export,
		HTTPMethod: "GET",
		HTTPPath:   "/ledgers/{name}/journal-s3-exports/{exportId}",
	}

	if input == nil {
		input = &types.DescribeJournalS3ExportInput{}
	}

	req := c.newRequest(op, input, &types.DescribeJournalS3ExportOutput{})
	return DescribeJournalS3ExportRequest{Request: req, Input: input, Copy: c.DescribeJournalS3ExportRequest}
}

// DescribeJournalS3ExportRequest is the request type for the
// DescribeJournalS3Export API operation.
type DescribeJournalS3ExportRequest struct {
	*aws.Request
	Input *types.DescribeJournalS3ExportInput
	Copy  func(*types.DescribeJournalS3ExportInput) DescribeJournalS3ExportRequest
}

// Send marshals and sends the DescribeJournalS3Export API request.
func (r DescribeJournalS3ExportRequest) Send(ctx context.Context) (*DescribeJournalS3ExportResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &DescribeJournalS3ExportResponse{
		DescribeJournalS3ExportOutput: r.Request.Data.(*types.DescribeJournalS3ExportOutput),
		response:                      &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// DescribeJournalS3ExportResponse is the response type for the
// DescribeJournalS3Export API operation.
type DescribeJournalS3ExportResponse struct {
	*types.DescribeJournalS3ExportOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// DescribeJournalS3Export request.
func (r *DescribeJournalS3ExportResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
