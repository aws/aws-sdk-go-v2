// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package licensemanager

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/licensemanager/types"
)

const opUpdateLicenseSpecificationsForResource = "UpdateLicenseSpecificationsForResource"

// UpdateLicenseSpecificationsForResourceRequest returns a request value for making API operation for
// AWS License Manager.
//
// Adds or removes license configurations for a specified AWS resource. This
// operation currently supports updating the license specifications of AMIs,
// instances, and hosts. Launch templates and AWS CloudFormation templates are
// not managed from this operation as those resources send the license configurations
// directly to a resource creation operation, such as RunInstances.
//
//    // Example sending a request using UpdateLicenseSpecificationsForResourceRequest.
//    req := client.UpdateLicenseSpecificationsForResourceRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/license-manager-2018-08-01/UpdateLicenseSpecificationsForResource
func (c *Client) UpdateLicenseSpecificationsForResourceRequest(input *types.UpdateLicenseSpecificationsForResourceInput) UpdateLicenseSpecificationsForResourceRequest {
	op := &aws.Operation{
		Name:       opUpdateLicenseSpecificationsForResource,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &types.UpdateLicenseSpecificationsForResourceInput{}
	}

	req := c.newRequest(op, input, &types.UpdateLicenseSpecificationsForResourceOutput{})
	return UpdateLicenseSpecificationsForResourceRequest{Request: req, Input: input, Copy: c.UpdateLicenseSpecificationsForResourceRequest}
}

// UpdateLicenseSpecificationsForResourceRequest is the request type for the
// UpdateLicenseSpecificationsForResource API operation.
type UpdateLicenseSpecificationsForResourceRequest struct {
	*aws.Request
	Input *types.UpdateLicenseSpecificationsForResourceInput
	Copy  func(*types.UpdateLicenseSpecificationsForResourceInput) UpdateLicenseSpecificationsForResourceRequest
}

// Send marshals and sends the UpdateLicenseSpecificationsForResource API request.
func (r UpdateLicenseSpecificationsForResourceRequest) Send(ctx context.Context) (*UpdateLicenseSpecificationsForResourceResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &UpdateLicenseSpecificationsForResourceResponse{
		UpdateLicenseSpecificationsForResourceOutput: r.Request.Data.(*types.UpdateLicenseSpecificationsForResourceOutput),
		response: &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// UpdateLicenseSpecificationsForResourceResponse is the response type for the
// UpdateLicenseSpecificationsForResource API operation.
type UpdateLicenseSpecificationsForResourceResponse struct {
	*types.UpdateLicenseSpecificationsForResourceOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// UpdateLicenseSpecificationsForResource request.
func (r *UpdateLicenseSpecificationsForResourceResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
