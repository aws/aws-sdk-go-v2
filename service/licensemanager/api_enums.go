// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package licensemanager

type InventoryFilterCondition string

// Enum values for InventoryFilterCondition
const (
	InventoryFilterConditionEquals     InventoryFilterCondition = "EQUALS"
	InventoryFilterConditionNotEquals  InventoryFilterCondition = "NOT_EQUALS"
	InventoryFilterConditionBeginsWith InventoryFilterCondition = "BEGINS_WITH"
	InventoryFilterConditionContains   InventoryFilterCondition = "CONTAINS"
)

func (enum InventoryFilterCondition) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum InventoryFilterCondition) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type LicenseConfigurationStatus string

// Enum values for LicenseConfigurationStatus
const (
	LicenseConfigurationStatusAvailable LicenseConfigurationStatus = "AVAILABLE"
	LicenseConfigurationStatusDisabled  LicenseConfigurationStatus = "DISABLED"
)

func (enum LicenseConfigurationStatus) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum LicenseConfigurationStatus) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type LicenseCountingType string

// Enum values for LicenseCountingType
const (
	LicenseCountingTypeVCpu     LicenseCountingType = "vCPU"
	LicenseCountingTypeInstance LicenseCountingType = "Instance"
	LicenseCountingTypeCore     LicenseCountingType = "Core"
	LicenseCountingTypeSocket   LicenseCountingType = "Socket"
)

func (enum LicenseCountingType) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum LicenseCountingType) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type ResourceType string

// Enum values for ResourceType
const (
	ResourceTypeEc2Instance                   ResourceType = "EC2_INSTANCE"
	ResourceTypeEc2Host                       ResourceType = "EC2_HOST"
	ResourceTypeEc2Ami                        ResourceType = "EC2_AMI"
	ResourceTypeRds                           ResourceType = "RDS"
	ResourceTypeSystemsManagerManagedInstance ResourceType = "SYSTEMS_MANAGER_MANAGED_INSTANCE"
)

func (enum ResourceType) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum ResourceType) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}
