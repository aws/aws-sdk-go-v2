// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package s3

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/s3/types"
)

const opListObjectVersions = "ListObjectVersions"

// ListObjectVersionsRequest returns a request value for making API operation for
// Amazon Simple Storage Service.
//
// Returns metadata about all of the versions of objects in a bucket. You can
// also use request parameters as selection criteria to return metadata about
// a subset of all the object versions.
//
// A 200 OK response can contain valid or invalid XML. Make sure to design your
// application to parse the contents of the response and handle it appropriately.
//
// To use this operation, you must have READ access to the bucket.
//
// The following operations are related to ListObjectVersions:
//
//    * ListObjectsV2
//
//    * GetObject
//
//    * PutObject
//
//    * DeleteObject
//
//    // Example sending a request using ListObjectVersionsRequest.
//    req := client.ListObjectVersionsRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/ListObjectVersions
func (c *Client) ListObjectVersionsRequest(input *types.ListObjectVersionsInput) ListObjectVersionsRequest {
	op := &aws.Operation{
		Name:       opListObjectVersions,
		HTTPMethod: "GET",
		HTTPPath:   "/{Bucket}?versions",
		Paginator: &aws.Paginator{
			InputTokens:     []string{"KeyMarker", "VersionIdMarker"},
			OutputTokens:    []string{"NextKeyMarker", "NextVersionIdMarker"},
			LimitToken:      "MaxKeys",
			TruncationToken: "IsTruncated",
		},
	}

	if input == nil {
		input = &types.ListObjectVersionsInput{}
	}

	req := c.newRequest(op, input, &types.ListObjectVersionsOutput{})
	return ListObjectVersionsRequest{Request: req, Input: input, Copy: c.ListObjectVersionsRequest}
}

// ListObjectVersionsRequest is the request type for the
// ListObjectVersions API operation.
type ListObjectVersionsRequest struct {
	*aws.Request
	Input *types.ListObjectVersionsInput
	Copy  func(*types.ListObjectVersionsInput) ListObjectVersionsRequest
}

// Send marshals and sends the ListObjectVersions API request.
func (r ListObjectVersionsRequest) Send(ctx context.Context) (*ListObjectVersionsResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &ListObjectVersionsResponse{
		ListObjectVersionsOutput: r.Request.Data.(*types.ListObjectVersionsOutput),
		response:                 &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// NewListObjectVersionsRequestPaginator returns a paginator for ListObjectVersions.
// Use Next method to get the next page, and CurrentPage to get the current
// response page from the paginator. Next will return false, if there are
// no more pages, or an error was encountered.
//
// Note: This operation can generate multiple requests to a service.
//
//   // Example iterating over pages.
//   req := client.ListObjectVersionsRequest(input)
//   p := s3.NewListObjectVersionsRequestPaginator(req)
//
//   for p.Next(context.TODO()) {
//       page := p.CurrentPage()
//   }
//
//   if err := p.Err(); err != nil {
//       return err
//   }
//
func NewListObjectVersionsPaginator(req ListObjectVersionsRequest) ListObjectVersionsPaginator {
	return ListObjectVersionsPaginator{
		Pager: aws.Pager{
			NewRequest: func(ctx context.Context) (*aws.Request, error) {
				var inCpy *types.ListObjectVersionsInput
				if req.Input != nil {
					tmp := *req.Input
					inCpy = &tmp
				}

				newReq := req.Copy(inCpy)
				newReq.SetContext(ctx)
				return newReq.Request, nil
			},
		},
	}
}

// ListObjectVersionsPaginator is used to paginate the request. This can be done by
// calling Next and CurrentPage.
type ListObjectVersionsPaginator struct {
	aws.Pager
}

func (p *ListObjectVersionsPaginator) CurrentPage() *types.ListObjectVersionsOutput {
	return p.Pager.CurrentPage().(*types.ListObjectVersionsOutput)
}

// ListObjectVersionsResponse is the response type for the
// ListObjectVersions API operation.
type ListObjectVersionsResponse struct {
	*types.ListObjectVersionsOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// ListObjectVersions request.
func (r *ListObjectVersionsResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
