// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package s3

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/private/protocol"
	"github.com/aws/aws-sdk-go-v2/private/protocol/restxml"
	"github.com/aws/aws-sdk-go-v2/service/s3/types"
)

const opDeleteBucketAnalyticsConfiguration = "DeleteBucketAnalyticsConfiguration"

// DeleteBucketAnalyticsConfigurationRequest returns a request value for making API operation for
// Amazon Simple Storage Service.
//
// Deletes an analytics configuration for the bucket (specified by the analytics
// configuration ID).
//
// To use this operation, you must have permissions to perform the s3:PutAnalyticsConfiguration
// action. The bucket owner has this permission by default. The bucket owner
// can grant this permission to others. For more information about permissions,
// see Permissions Related to Bucket Subresource Operations (https://docs.aws.amazon.com/AmazonS3/latest/dev//using-with-s3-actions.html#using-with-s3-actions-related-to-bucket-subresources)
// and Managing Access Permissions to Your Amazon S3 Resources (https://docs.aws.amazon.com/AmazonS3/latest/dev/s3-access-control.html).
//
// For information about Amazon S3 analytics feature, see Amazon S3 Analytics
// â€“ Storage Class Analysis (https://docs.aws.amazon.com/AmazonS3/latest/dev/analytics-storage-class.html).
//
// The following operations are related to DeleteBucketAnalyticsConfiguration:
//
//    *
//
//    *
//
//    *
//
//    // Example sending a request using DeleteBucketAnalyticsConfigurationRequest.
//    req := client.DeleteBucketAnalyticsConfigurationRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/DeleteBucketAnalyticsConfiguration
func (c *Client) DeleteBucketAnalyticsConfigurationRequest(input *types.DeleteBucketAnalyticsConfigurationInput) DeleteBucketAnalyticsConfigurationRequest {
	op := &aws.Operation{
		Name:       opDeleteBucketAnalyticsConfiguration,
		HTTPMethod: "DELETE",
		HTTPPath:   "/{Bucket}?analytics",
	}

	if input == nil {
		input = &types.DeleteBucketAnalyticsConfigurationInput{}
	}

	req := c.newRequest(op, input, &types.DeleteBucketAnalyticsConfigurationOutput{})
	req.Handlers.Unmarshal.Remove(restxml.UnmarshalHandler)
	req.Handlers.Unmarshal.PushBackNamed(protocol.UnmarshalDiscardBodyHandler)
	return DeleteBucketAnalyticsConfigurationRequest{Request: req, Input: input, Copy: c.DeleteBucketAnalyticsConfigurationRequest}
}

// DeleteBucketAnalyticsConfigurationRequest is the request type for the
// DeleteBucketAnalyticsConfiguration API operation.
type DeleteBucketAnalyticsConfigurationRequest struct {
	*aws.Request
	Input *types.DeleteBucketAnalyticsConfigurationInput
	Copy  func(*types.DeleteBucketAnalyticsConfigurationInput) DeleteBucketAnalyticsConfigurationRequest
}

// Send marshals and sends the DeleteBucketAnalyticsConfiguration API request.
func (r DeleteBucketAnalyticsConfigurationRequest) Send(ctx context.Context) (*DeleteBucketAnalyticsConfigurationResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &DeleteBucketAnalyticsConfigurationResponse{
		DeleteBucketAnalyticsConfigurationOutput: r.Request.Data.(*types.DeleteBucketAnalyticsConfigurationOutput),
		response:                                 &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// DeleteBucketAnalyticsConfigurationResponse is the response type for the
// DeleteBucketAnalyticsConfiguration API operation.
type DeleteBucketAnalyticsConfigurationResponse struct {
	*types.DeleteBucketAnalyticsConfigurationOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// DeleteBucketAnalyticsConfiguration request.
func (r *DeleteBucketAnalyticsConfigurationResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
