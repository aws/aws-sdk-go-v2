// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package s3

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/s3/types"
)

const opListBuckets = "ListBuckets"

// ListBucketsRequest returns a request value for making API operation for
// Amazon Simple Storage Service.
//
// Returns a list of all buckets owned by the authenticated sender of the request.
//
//    // Example sending a request using ListBucketsRequest.
//    req := client.ListBucketsRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/ListBuckets
func (c *Client) ListBucketsRequest(input *types.ListBucketsInput) ListBucketsRequest {
	op := &aws.Operation{
		Name:       opListBuckets,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &types.ListBucketsInput{}
	}

	req := c.newRequest(op, input, &types.ListBucketsOutput{})
	return ListBucketsRequest{Request: req, Input: input, Copy: c.ListBucketsRequest}
}

// ListBucketsRequest is the request type for the
// ListBuckets API operation.
type ListBucketsRequest struct {
	*aws.Request
	Input *types.ListBucketsInput
	Copy  func(*types.ListBucketsInput) ListBucketsRequest
}

// Send marshals and sends the ListBuckets API request.
func (r ListBucketsRequest) Send(ctx context.Context) (*ListBucketsResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &ListBucketsResponse{
		ListBucketsOutput: r.Request.Data.(*types.ListBucketsOutput),
		response:          &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// ListBucketsResponse is the response type for the
// ListBuckets API operation.
type ListBucketsResponse struct {
	*types.ListBucketsOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// ListBuckets request.
func (r *ListBucketsResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
