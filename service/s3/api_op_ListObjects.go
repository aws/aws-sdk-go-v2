// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package s3

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/s3/types"
)

const opListObjects = "ListObjects"

// ListObjectsRequest returns a request value for making API operation for
// Amazon Simple Storage Service.
//
// Returns some or all (up to 1000) of the objects in a bucket. You can use
// the request parameters as selection criteria to return a subset of the objects
// in a bucket. A 200 OK response can contain valid or invalid XML. Be sure
// to design your application to parse the contents of the response and handle
// it appropriately.
//
// This API has been revised. We recommend that you use the newer version, ListObjectsV2,
// when developing applications. For backward compatibility, Amazon S3 continues
// to support ListObjects.
//
// The following operations are related to ListObjects:
//
//    * ListObjectsV2
//
//    * GetObject
//
//    * PutObject
//
//    * CreateBucket
//
//    * ListBuckets
//
//    // Example sending a request using ListObjectsRequest.
//    req := client.ListObjectsRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/ListObjects
func (c *Client) ListObjectsRequest(input *types.ListObjectsInput) ListObjectsRequest {
	op := &aws.Operation{
		Name:       opListObjects,
		HTTPMethod: "GET",
		HTTPPath:   "/{Bucket}",
		Paginator: &aws.Paginator{
			InputTokens:     []string{"Marker"},
			OutputTokens:    []string{"NextMarker || Contents[-1].Key"},
			LimitToken:      "MaxKeys",
			TruncationToken: "IsTruncated",
		},
	}

	if input == nil {
		input = &types.ListObjectsInput{}
	}

	req := c.newRequest(op, input, &types.ListObjectsOutput{})
	return ListObjectsRequest{Request: req, Input: input, Copy: c.ListObjectsRequest}
}

// ListObjectsRequest is the request type for the
// ListObjects API operation.
type ListObjectsRequest struct {
	*aws.Request
	Input *types.ListObjectsInput
	Copy  func(*types.ListObjectsInput) ListObjectsRequest
}

// Send marshals and sends the ListObjects API request.
func (r ListObjectsRequest) Send(ctx context.Context) (*ListObjectsResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &ListObjectsResponse{
		ListObjectsOutput: r.Request.Data.(*types.ListObjectsOutput),
		response:          &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// NewListObjectsRequestPaginator returns a paginator for ListObjects.
// Use Next method to get the next page, and CurrentPage to get the current
// response page from the paginator. Next will return false, if there are
// no more pages, or an error was encountered.
//
// Note: This operation can generate multiple requests to a service.
//
//   // Example iterating over pages.
//   req := client.ListObjectsRequest(input)
//   p := s3.NewListObjectsRequestPaginator(req)
//
//   for p.Next(context.TODO()) {
//       page := p.CurrentPage()
//   }
//
//   if err := p.Err(); err != nil {
//       return err
//   }
//
func NewListObjectsPaginator(req ListObjectsRequest) ListObjectsPaginator {
	return ListObjectsPaginator{
		Pager: aws.Pager{
			NewRequest: func(ctx context.Context) (*aws.Request, error) {
				var inCpy *types.ListObjectsInput
				if req.Input != nil {
					tmp := *req.Input
					inCpy = &tmp
				}

				newReq := req.Copy(inCpy)
				newReq.SetContext(ctx)
				return newReq.Request, nil
			},
		},
	}
}

// ListObjectsPaginator is used to paginate the request. This can be done by
// calling Next and CurrentPage.
type ListObjectsPaginator struct {
	aws.Pager
}

func (p *ListObjectsPaginator) CurrentPage() *types.ListObjectsOutput {
	return p.Pager.CurrentPage().(*types.ListObjectsOutput)
}

// ListObjectsResponse is the response type for the
// ListObjects API operation.
type ListObjectsResponse struct {
	*types.ListObjectsOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// ListObjects request.
func (r *ListObjectsResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
