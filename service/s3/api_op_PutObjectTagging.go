// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package s3

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/s3/types"
)

const opPutObjectTagging = "PutObjectTagging"

// PutObjectTaggingRequest returns a request value for making API operation for
// Amazon Simple Storage Service.
//
// Sets the supplied tag-set to an object that already exists in a bucket
//
// A tag is a key-value pair. You can associate tags with an object by sending
// a PUT request against the tagging subresource that is associated with the
// object. You can retrieve tags by sending a GET request. For more information,
// see GetObjectTagging.
//
// For tagging-related restrictions related to characters and encodings, see
// Tag Restrictions (https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/allocation-tag-restrictions.html).
// Note that Amazon S3 limits the maximum number of tags to 10 tags per object.
//
// To use this operation, you must have permission to perform the s3:PutObjectTagging
// action. By default, the bucket owner has this permission and can grant this
// permission to others.
//
// To put tags of any other version, use the versionId query parameter. You
// also need permission for the s3:PutObjectVersionTagging action.
//
// For information about the Amazon S3 object tagging feature, see Object Tagging
// (https://docs.aws.amazon.com/AmazonS3/latest/dev/object-tagging.html).
//
// Special Errors
//
//    * Code: InvalidTagError Cause: The tag provided was not a valid tag. This
//    error can occur if the tag did not pass input validation. For more information,
//    see Object Tagging (https://docs.aws.amazon.com/AmazonS3/latest/dev/object-tagging.html).
//
//    * Code: MalformedXMLError Cause: The XML provided does not match the schema.
//
//    * Code: OperationAbortedError Cause: A conflicting conditional operation
//    is currently in progress against this resource. Please try again.
//
//    * Code: InternalError Cause: The service was unable to apply the provided
//    tag to the object.
//
// Related Resources
//
//    * GetObjectTagging
//
//    // Example sending a request using PutObjectTaggingRequest.
//    req := client.PutObjectTaggingRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/PutObjectTagging
func (c *Client) PutObjectTaggingRequest(input *types.PutObjectTaggingInput) PutObjectTaggingRequest {
	op := &aws.Operation{
		Name:       opPutObjectTagging,
		HTTPMethod: "PUT",
		HTTPPath:   "/{Bucket}/{Key+}?tagging",
	}

	if input == nil {
		input = &types.PutObjectTaggingInput{}
	}

	req := c.newRequest(op, input, &types.PutObjectTaggingOutput{})
	return PutObjectTaggingRequest{Request: req, Input: input, Copy: c.PutObjectTaggingRequest}
}

// PutObjectTaggingRequest is the request type for the
// PutObjectTagging API operation.
type PutObjectTaggingRequest struct {
	*aws.Request
	Input *types.PutObjectTaggingInput
	Copy  func(*types.PutObjectTaggingInput) PutObjectTaggingRequest
}

// Send marshals and sends the PutObjectTagging API request.
func (r PutObjectTaggingRequest) Send(ctx context.Context) (*PutObjectTaggingResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &PutObjectTaggingResponse{
		PutObjectTaggingOutput: r.Request.Data.(*types.PutObjectTaggingOutput),
		response:               &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// PutObjectTaggingResponse is the response type for the
// PutObjectTagging API operation.
type PutObjectTaggingResponse struct {
	*types.PutObjectTaggingOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// PutObjectTagging request.
func (r *PutObjectTaggingResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
