// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package chime

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/private/protocol"
	"github.com/aws/aws-sdk-go-v2/private/protocol/restjson"
	"github.com/aws/aws-sdk-go-v2/service/chime/types"
)

const opDeleteAttendee = "DeleteAttendee"

// DeleteAttendeeRequest returns a request value for making API operation for
// Amazon Chime.
//
// Deletes an attendee from the specified Amazon Chime SDK meeting and deletes
// their JoinToken. Attendees are automatically deleted when a Amazon Chime
// SDK meeting is deleted. For more information about the Amazon Chime SDK,
// see Using the Amazon Chime SDK (https://docs.aws.amazon.com/chime/latest/dg/meetings-sdk.html)
// in the Amazon Chime Developer Guide.
//
//    // Example sending a request using DeleteAttendeeRequest.
//    req := client.DeleteAttendeeRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/chime-2018-05-01/DeleteAttendee
func (c *Client) DeleteAttendeeRequest(input *types.DeleteAttendeeInput) DeleteAttendeeRequest {
	op := &aws.Operation{
		Name:       opDeleteAttendee,
		HTTPMethod: "DELETE",
		HTTPPath:   "/meetings/{meetingId}/attendees/{attendeeId}",
	}

	if input == nil {
		input = &types.DeleteAttendeeInput{}
	}

	req := c.newRequest(op, input, &types.DeleteAttendeeOutput{})
	req.Handlers.Unmarshal.Remove(restjson.UnmarshalHandler)
	req.Handlers.Unmarshal.PushBackNamed(protocol.UnmarshalDiscardBodyHandler)
	return DeleteAttendeeRequest{Request: req, Input: input, Copy: c.DeleteAttendeeRequest}
}

// DeleteAttendeeRequest is the request type for the
// DeleteAttendee API operation.
type DeleteAttendeeRequest struct {
	*aws.Request
	Input *types.DeleteAttendeeInput
	Copy  func(*types.DeleteAttendeeInput) DeleteAttendeeRequest
}

// Send marshals and sends the DeleteAttendee API request.
func (r DeleteAttendeeRequest) Send(ctx context.Context) (*DeleteAttendeeResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &DeleteAttendeeResponse{
		DeleteAttendeeOutput: r.Request.Data.(*types.DeleteAttendeeOutput),
		response:             &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// DeleteAttendeeResponse is the response type for the
// DeleteAttendee API operation.
type DeleteAttendeeResponse struct {
	*types.DeleteAttendeeOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// DeleteAttendee request.
func (r *DeleteAttendeeResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
