// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package chime

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/chime/types"
)

const opBatchSuspendUser = "BatchSuspendUser"

// BatchSuspendUserRequest returns a request value for making API operation for
// Amazon Chime.
//
// Suspends up to 50 users from a Team or EnterpriseLWA Amazon Chime account.
// For more information about different account types, see Managing Your Amazon
// Chime Accounts (https://docs.aws.amazon.com/chime/latest/ag/manage-chime-account.html)
// in the Amazon Chime Administration Guide.
//
// Users suspended from a Team account are dissasociated from the account, but
// they can continue to use Amazon Chime as free users. To remove the suspension
// from suspended Team account users, invite them to the Team account again.
// You can use the InviteUsers action to do so.
//
// Users suspended from an EnterpriseLWA account are immediately signed out
// of Amazon Chime and can no longer sign in. To remove the suspension from
// suspended EnterpriseLWA account users, use the BatchUnsuspendUser action.
//
// To sign out users without suspending them, use the LogoutUser action.
//
//    // Example sending a request using BatchSuspendUserRequest.
//    req := client.BatchSuspendUserRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/chime-2018-05-01/BatchSuspendUser
func (c *Client) BatchSuspendUserRequest(input *types.BatchSuspendUserInput) BatchSuspendUserRequest {
	op := &aws.Operation{
		Name:       opBatchSuspendUser,
		HTTPMethod: "POST",
		HTTPPath:   "/accounts/{accountId}/users?operation=suspend",
	}

	if input == nil {
		input = &types.BatchSuspendUserInput{}
	}

	req := c.newRequest(op, input, &types.BatchSuspendUserOutput{})
	return BatchSuspendUserRequest{Request: req, Input: input, Copy: c.BatchSuspendUserRequest}
}

// BatchSuspendUserRequest is the request type for the
// BatchSuspendUser API operation.
type BatchSuspendUserRequest struct {
	*aws.Request
	Input *types.BatchSuspendUserInput
	Copy  func(*types.BatchSuspendUserInput) BatchSuspendUserRequest
}

// Send marshals and sends the BatchSuspendUser API request.
func (r BatchSuspendUserRequest) Send(ctx context.Context) (*BatchSuspendUserResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &BatchSuspendUserResponse{
		BatchSuspendUserOutput: r.Request.Data.(*types.BatchSuspendUserOutput),
		response:               &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// BatchSuspendUserResponse is the response type for the
// BatchSuspendUser API operation.
type BatchSuspendUserResponse struct {
	*types.BatchSuspendUserOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// BatchSuspendUser request.
func (r *BatchSuspendUserResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
