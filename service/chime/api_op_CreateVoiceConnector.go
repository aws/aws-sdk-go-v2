// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package chime

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/chime/types"
)

const opCreateVoiceConnector = "CreateVoiceConnector"

// CreateVoiceConnectorRequest returns a request value for making API operation for
// Amazon Chime.
//
// Creates an Amazon Chime Voice Connector under the administrator's AWS account.
// You can choose to create an Amazon Chime Voice Connector in a specific AWS
// Region.
//
// Enabling CreateVoiceConnectorRequest$RequireEncryption configures your Amazon
// Chime Voice Connector to use TLS transport for SIP signaling and Secure RTP
// (SRTP) for media. Inbound calls use TLS transport, and unencrypted outbound
// calls are blocked.
//
//    // Example sending a request using CreateVoiceConnectorRequest.
//    req := client.CreateVoiceConnectorRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/chime-2018-05-01/CreateVoiceConnector
func (c *Client) CreateVoiceConnectorRequest(input *types.CreateVoiceConnectorInput) CreateVoiceConnectorRequest {
	op := &aws.Operation{
		Name:       opCreateVoiceConnector,
		HTTPMethod: "POST",
		HTTPPath:   "/voice-connectors",
	}

	if input == nil {
		input = &types.CreateVoiceConnectorInput{}
	}

	req := c.newRequest(op, input, &types.CreateVoiceConnectorOutput{})
	return CreateVoiceConnectorRequest{Request: req, Input: input, Copy: c.CreateVoiceConnectorRequest}
}

// CreateVoiceConnectorRequest is the request type for the
// CreateVoiceConnector API operation.
type CreateVoiceConnectorRequest struct {
	*aws.Request
	Input *types.CreateVoiceConnectorInput
	Copy  func(*types.CreateVoiceConnectorInput) CreateVoiceConnectorRequest
}

// Send marshals and sends the CreateVoiceConnector API request.
func (r CreateVoiceConnectorRequest) Send(ctx context.Context) (*CreateVoiceConnectorResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &CreateVoiceConnectorResponse{
		CreateVoiceConnectorOutput: r.Request.Data.(*types.CreateVoiceConnectorOutput),
		response:                   &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// CreateVoiceConnectorResponse is the response type for the
// CreateVoiceConnector API operation.
type CreateVoiceConnectorResponse struct {
	*types.CreateVoiceConnectorOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// CreateVoiceConnector request.
func (r *CreateVoiceConnectorResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
