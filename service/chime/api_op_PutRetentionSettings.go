// Code generated by smithy-go-codegen DO NOT EDIT.

package chime

import (
	"context"
	awsmiddleware "github.com/aws/aws-sdk-go-v2/aws/middleware"
	"github.com/aws/aws-sdk-go-v2/aws/retry"
	"github.com/aws/aws-sdk-go-v2/aws/signer/v4"
	"github.com/aws/aws-sdk-go-v2/service/chime/types"
	smithy "github.com/awslabs/smithy-go"
	"github.com/awslabs/smithy-go/middleware"
	smithyhttp "github.com/awslabs/smithy-go/transport/http"
	"time"
)

// Puts retention settings for the specified Amazon Chime Enterprise account. We
// recommend using AWS CloudTrail to monitor usage of this API for your account.
// For more information, see Logging Amazon Chime API Calls with AWS CloudTrail
// (https://docs.aws.amazon.com/chime/latest/ag/cloudtrail.html) in the Amazon
// Chime Administration Guide. To turn off existing retention settings, remove the
// number of days from the corresponding RetentionDays field in the
// RetentionSettings object. For more information about retention settings, see
// Managing Chat Retention Policies
// (https://docs.aws.amazon.com/chime/latest/ag/chat-retention.html) in the Amazon
// Chime Administration Guide.
func (c *Client) PutRetentionSettings(ctx context.Context, params *PutRetentionSettingsInput, optFns ...func(*Options)) (*PutRetentionSettingsOutput, error) {
	stack := middleware.NewStack("PutRetentionSettings", smithyhttp.NewStackRequest)
	options := c.options.Copy()
	for _, fn := range optFns {
		fn(&options)
	}
	addawsRestjson1_serdeOpPutRetentionSettingsMiddlewares(stack)
	awsmiddleware.AddRequestInvocationIDMiddleware(stack)
	smithyhttp.AddContentLengthMiddleware(stack)
	AddResolveEndpointMiddleware(stack, options)
	v4.AddComputePayloadSHA256Middleware(stack)
	retry.AddRetryMiddlewares(stack, options)
	addHTTPSignerV4Middleware(stack, options)
	awsmiddleware.AddAttemptClockSkewMiddleware(stack)
	addClientUserAgent(stack)
	smithyhttp.AddErrorCloseResponseBodyMiddleware(stack)
	smithyhttp.AddCloseResponseBodyMiddleware(stack)
	addOpPutRetentionSettingsValidationMiddleware(stack)
	stack.Initialize.Add(newServiceMetadataMiddleware_opPutRetentionSettings(options.Region), middleware.Before)

	for _, fn := range options.APIOptions {
		if err := fn(stack); err != nil {
			return nil, err
		}
	}
	handler := middleware.DecorateHandler(smithyhttp.NewClientHandler(options.HTTPClient), stack)
	result, metadata, err := handler.Handle(ctx, params)
	if err != nil {
		return nil, &smithy.OperationError{
			ServiceID:     ServiceID,
			OperationName: "PutRetentionSettings",
			Err:           err,
		}
	}
	out := result.(*PutRetentionSettingsOutput)
	out.ResultMetadata = metadata
	return out, nil
}

type PutRetentionSettingsInput struct {
	// The Amazon Chime account ID.
	AccountId *string
	// The retention settings.
	RetentionSettings *types.RetentionSettings
}

type PutRetentionSettingsOutput struct {
	// The retention settings.
	RetentionSettings *types.RetentionSettings
	// The timestamp representing the time at which the specified items are permanently
	// deleted, in ISO 8601 format.
	InitiateDeletionTimestamp *time.Time

	// Metadata pertaining to the operation's result.
	ResultMetadata middleware.Metadata
}

func addawsRestjson1_serdeOpPutRetentionSettingsMiddlewares(stack *middleware.Stack) {
	stack.Serialize.Add(&awsRestjson1_serializeOpPutRetentionSettings{}, middleware.After)
	stack.Deserialize.Add(&awsRestjson1_deserializeOpPutRetentionSettings{}, middleware.After)
}

func newServiceMetadataMiddleware_opPutRetentionSettings(region string) awsmiddleware.RegisterServiceMetadata {
	return awsmiddleware.RegisterServiceMetadata{
		Region:        region,
		ServiceID:     ServiceID,
		SigningName:   "chime",
		OperationName: "PutRetentionSettings",
	}
}
