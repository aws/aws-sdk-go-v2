// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package cloudhsm

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/cloudhsm/types"
)

const opCreateHsm = "CreateHsm"

// CreateHsmRequest returns a request value for making API operation for
// Amazon CloudHSM.
//
// This is documentation for AWS CloudHSM Classic. For more information, see
// AWS CloudHSM Classic FAQs (http://aws.amazon.com/cloudhsm/faqs-classic/),
// the AWS CloudHSM Classic User Guide (http://docs.aws.amazon.com/cloudhsm/classic/userguide/),
// and the AWS CloudHSM Classic API Reference (http://docs.aws.amazon.com/cloudhsm/classic/APIReference/).
//
// For information about the current version of AWS CloudHSM, see AWS CloudHSM
// (http://aws.amazon.com/cloudhsm/), the AWS CloudHSM User Guide (http://docs.aws.amazon.com/cloudhsm/latest/userguide/),
// and the AWS CloudHSM API Reference (http://docs.aws.amazon.com/cloudhsm/latest/APIReference/).
//
// Creates an uninitialized HSM instance.
//
// There is an upfront fee charged for each HSM instance that you create with
// the CreateHsm operation. If you accidentally provision an HSM and want to
// request a refund, delete the instance using the DeleteHsm operation, go to
// the AWS Support Center (https://console.aws.amazon.com/support/home), create
// a new case, and select Account and Billing Support.
//
// It can take up to 20 minutes to create and provision an HSM. You can monitor
// the status of the HSM with the DescribeHsm operation. The HSM is ready to
// be initialized when the status changes to RUNNING.
//
//    // Example sending a request using CreateHsmRequest.
//    req := client.CreateHsmRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/cloudhsm-2014-05-30/CreateHsm
func (c *Client) CreateHsmRequest(input *types.CreateHsmInput) CreateHsmRequest {
	op := &aws.Operation{
		Name:       opCreateHsm,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &types.CreateHsmInput{}
	}

	req := c.newRequest(op, input, &types.CreateHsmOutput{})
	return CreateHsmRequest{Request: req, Input: input, Copy: c.CreateHsmRequest}
}

// CreateHsmRequest is the request type for the
// CreateHsm API operation.
type CreateHsmRequest struct {
	*aws.Request
	Input *types.CreateHsmInput
	Copy  func(*types.CreateHsmInput) CreateHsmRequest
}

// Send marshals and sends the CreateHsm API request.
func (r CreateHsmRequest) Send(ctx context.Context) (*CreateHsmResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &CreateHsmResponse{
		CreateHsmOutput: r.Request.Data.(*types.CreateHsmOutput),
		response:        &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// CreateHsmResponse is the response type for the
// CreateHsm API operation.
type CreateHsmResponse struct {
	*types.CreateHsmOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// CreateHsm request.
func (r *CreateHsmResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
