// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package codedeploy

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/codedeploy/types"
)

const opBatchGetDeploymentTargets = "BatchGetDeploymentTargets"

// BatchGetDeploymentTargetsRequest returns a request value for making API operation for
// AWS CodeDeploy.
//
// Returns an array of one or more targets associated with a deployment. This
// method works with all compute types and should be used instead of the deprecated
// BatchGetDeploymentInstances. The maximum number of targets that can be returned
// is 25.
//
// The type of targets returned depends on the deployment's compute platform:
//
//    * EC2/On-premises: Information about EC2 instance targets.
//
//    * AWS Lambda: Information about Lambda functions targets.
//
//    * Amazon ECS: Information about Amazon ECS service targets.
//
//    // Example sending a request using BatchGetDeploymentTargetsRequest.
//    req := client.BatchGetDeploymentTargetsRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/codedeploy-2014-10-06/BatchGetDeploymentTargets
func (c *Client) BatchGetDeploymentTargetsRequest(input *types.BatchGetDeploymentTargetsInput) BatchGetDeploymentTargetsRequest {
	op := &aws.Operation{
		Name:       opBatchGetDeploymentTargets,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &types.BatchGetDeploymentTargetsInput{}
	}

	req := c.newRequest(op, input, &types.BatchGetDeploymentTargetsOutput{})
	return BatchGetDeploymentTargetsRequest{Request: req, Input: input, Copy: c.BatchGetDeploymentTargetsRequest}
}

// BatchGetDeploymentTargetsRequest is the request type for the
// BatchGetDeploymentTargets API operation.
type BatchGetDeploymentTargetsRequest struct {
	*aws.Request
	Input *types.BatchGetDeploymentTargetsInput
	Copy  func(*types.BatchGetDeploymentTargetsInput) BatchGetDeploymentTargetsRequest
}

// Send marshals and sends the BatchGetDeploymentTargets API request.
func (r BatchGetDeploymentTargetsRequest) Send(ctx context.Context) (*BatchGetDeploymentTargetsResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &BatchGetDeploymentTargetsResponse{
		BatchGetDeploymentTargetsOutput: r.Request.Data.(*types.BatchGetDeploymentTargetsOutput),
		response:                        &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// BatchGetDeploymentTargetsResponse is the response type for the
// BatchGetDeploymentTargets API operation.
type BatchGetDeploymentTargetsResponse struct {
	*types.BatchGetDeploymentTargetsOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// BatchGetDeploymentTargets request.
func (r *BatchGetDeploymentTargetsResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
