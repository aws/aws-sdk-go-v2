// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package codedeploy

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/private/protocol"
	"github.com/aws/aws-sdk-go-v2/private/protocol/jsonrpc"
	"github.com/aws/aws-sdk-go-v2/service/codedeploy/types"
)

const opRegisterApplicationRevision = "RegisterApplicationRevision"

// RegisterApplicationRevisionRequest returns a request value for making API operation for
// AWS CodeDeploy.
//
// Registers with AWS CodeDeploy a revision for the specified application.
//
//    // Example sending a request using RegisterApplicationRevisionRequest.
//    req := client.RegisterApplicationRevisionRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/codedeploy-2014-10-06/RegisterApplicationRevision
func (c *Client) RegisterApplicationRevisionRequest(input *types.RegisterApplicationRevisionInput) RegisterApplicationRevisionRequest {
	op := &aws.Operation{
		Name:       opRegisterApplicationRevision,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &types.RegisterApplicationRevisionInput{}
	}

	req := c.newRequest(op, input, &types.RegisterApplicationRevisionOutput{})
	req.Handlers.Unmarshal.Remove(jsonrpc.UnmarshalHandler)
	req.Handlers.Unmarshal.PushBackNamed(protocol.UnmarshalDiscardBodyHandler)
	return RegisterApplicationRevisionRequest{Request: req, Input: input, Copy: c.RegisterApplicationRevisionRequest}
}

// RegisterApplicationRevisionRequest is the request type for the
// RegisterApplicationRevision API operation.
type RegisterApplicationRevisionRequest struct {
	*aws.Request
	Input *types.RegisterApplicationRevisionInput
	Copy  func(*types.RegisterApplicationRevisionInput) RegisterApplicationRevisionRequest
}

// Send marshals and sends the RegisterApplicationRevision API request.
func (r RegisterApplicationRevisionRequest) Send(ctx context.Context) (*RegisterApplicationRevisionResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &RegisterApplicationRevisionResponse{
		RegisterApplicationRevisionOutput: r.Request.Data.(*types.RegisterApplicationRevisionOutput),
		response:                          &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// RegisterApplicationRevisionResponse is the response type for the
// RegisterApplicationRevision API operation.
type RegisterApplicationRevisionResponse struct {
	*types.RegisterApplicationRevisionOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// RegisterApplicationRevision request.
func (r *RegisterApplicationRevisionResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
