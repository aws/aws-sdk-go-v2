// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package connect

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/private/protocol"
	"github.com/aws/aws-sdk-go-v2/private/protocol/restjson"
	"github.com/aws/aws-sdk-go-v2/service/connect/types"
)

const opUpdateUserRoutingProfile = "UpdateUserRoutingProfile"

// UpdateUserRoutingProfileRequest returns a request value for making API operation for
// Amazon Connect Service.
//
// Assigns the specified routing profile to the specified user.
//
//    // Example sending a request using UpdateUserRoutingProfileRequest.
//    req := client.UpdateUserRoutingProfileRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/connect-2017-08-08/UpdateUserRoutingProfile
func (c *Client) UpdateUserRoutingProfileRequest(input *types.UpdateUserRoutingProfileInput) UpdateUserRoutingProfileRequest {
	op := &aws.Operation{
		Name:       opUpdateUserRoutingProfile,
		HTTPMethod: "POST",
		HTTPPath:   "/users/{InstanceId}/{UserId}/routing-profile",
	}

	if input == nil {
		input = &types.UpdateUserRoutingProfileInput{}
	}

	req := c.newRequest(op, input, &types.UpdateUserRoutingProfileOutput{})
	req.Handlers.Unmarshal.Remove(restjson.UnmarshalHandler)
	req.Handlers.Unmarshal.PushBackNamed(protocol.UnmarshalDiscardBodyHandler)
	return UpdateUserRoutingProfileRequest{Request: req, Input: input, Copy: c.UpdateUserRoutingProfileRequest}
}

// UpdateUserRoutingProfileRequest is the request type for the
// UpdateUserRoutingProfile API operation.
type UpdateUserRoutingProfileRequest struct {
	*aws.Request
	Input *types.UpdateUserRoutingProfileInput
	Copy  func(*types.UpdateUserRoutingProfileInput) UpdateUserRoutingProfileRequest
}

// Send marshals and sends the UpdateUserRoutingProfile API request.
func (r UpdateUserRoutingProfileRequest) Send(ctx context.Context) (*UpdateUserRoutingProfileResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &UpdateUserRoutingProfileResponse{
		UpdateUserRoutingProfileOutput: r.Request.Data.(*types.UpdateUserRoutingProfileOutput),
		response:                       &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// UpdateUserRoutingProfileResponse is the response type for the
// UpdateUserRoutingProfile API operation.
type UpdateUserRoutingProfileResponse struct {
	*types.UpdateUserRoutingProfileOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// UpdateUserRoutingProfile request.
func (r *UpdateUserRoutingProfileResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
