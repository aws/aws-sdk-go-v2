// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package connect

type Channel string

// Enum values for Channel
const (
	ChannelVoice Channel = "VOICE"
)

func (enum Channel) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum Channel) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type Comparison string

// Enum values for Comparison
const (
	ComparisonLt Comparison = "LT"
)

func (enum Comparison) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum Comparison) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

// A list of current metric names.
type CurrentMetricName string

// Enum values for CurrentMetricName
const (
	CurrentMetricNameAgentsOnline           CurrentMetricName = "AGENTS_ONLINE"
	CurrentMetricNameAgentsAvailable        CurrentMetricName = "AGENTS_AVAILABLE"
	CurrentMetricNameAgentsOnCall           CurrentMetricName = "AGENTS_ON_CALL"
	CurrentMetricNameAgentsNonProductive    CurrentMetricName = "AGENTS_NON_PRODUCTIVE"
	CurrentMetricNameAgentsAfterContactWork CurrentMetricName = "AGENTS_AFTER_CONTACT_WORK"
	CurrentMetricNameAgentsError            CurrentMetricName = "AGENTS_ERROR"
	CurrentMetricNameAgentsStaffed          CurrentMetricName = "AGENTS_STAFFED"
	CurrentMetricNameContactsInQueue        CurrentMetricName = "CONTACTS_IN_QUEUE"
	CurrentMetricNameOldestContactAge       CurrentMetricName = "OLDEST_CONTACT_AGE"
	CurrentMetricNameContactsScheduled      CurrentMetricName = "CONTACTS_SCHEDULED"
)

func (enum CurrentMetricName) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum CurrentMetricName) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type Grouping string

// Enum values for Grouping
const (
	GroupingQueue   Grouping = "QUEUE"
	GroupingChannel Grouping = "CHANNEL"
)

func (enum Grouping) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum Grouping) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

// A list of historical metric names.
type HistoricalMetricName string

// Enum values for HistoricalMetricName
const (
	HistoricalMetricNameContactsQueued                  HistoricalMetricName = "CONTACTS_QUEUED"
	HistoricalMetricNameContactsHandled                 HistoricalMetricName = "CONTACTS_HANDLED"
	HistoricalMetricNameContactsAbandoned               HistoricalMetricName = "CONTACTS_ABANDONED"
	HistoricalMetricNameContactsConsulted               HistoricalMetricName = "CONTACTS_CONSULTED"
	HistoricalMetricNameContactsAgentHungUpFirst        HistoricalMetricName = "CONTACTS_AGENT_HUNG_UP_FIRST"
	HistoricalMetricNameContactsHandledIncoming         HistoricalMetricName = "CONTACTS_HANDLED_INCOMING"
	HistoricalMetricNameContactsHandledOutbound         HistoricalMetricName = "CONTACTS_HANDLED_OUTBOUND"
	HistoricalMetricNameContactsHoldAbandons            HistoricalMetricName = "CONTACTS_HOLD_ABANDONS"
	HistoricalMetricNameContactsTransferredIn           HistoricalMetricName = "CONTACTS_TRANSFERRED_IN"
	HistoricalMetricNameContactsTransferredOut          HistoricalMetricName = "CONTACTS_TRANSFERRED_OUT"
	HistoricalMetricNameContactsTransferredInFromQueue  HistoricalMetricName = "CONTACTS_TRANSFERRED_IN_FROM_QUEUE"
	HistoricalMetricNameContactsTransferredOutFromQueue HistoricalMetricName = "CONTACTS_TRANSFERRED_OUT_FROM_QUEUE"
	HistoricalMetricNameContactsMissed                  HistoricalMetricName = "CONTACTS_MISSED"
	HistoricalMetricNameCallbackContactsHandled         HistoricalMetricName = "CALLBACK_CONTACTS_HANDLED"
	HistoricalMetricNameApiContactsHandled              HistoricalMetricName = "API_CONTACTS_HANDLED"
	HistoricalMetricNameOccupancy                       HistoricalMetricName = "OCCUPANCY"
	HistoricalMetricNameHandleTime                      HistoricalMetricName = "HANDLE_TIME"
	HistoricalMetricNameAfterContactWorkTime            HistoricalMetricName = "AFTER_CONTACT_WORK_TIME"
	HistoricalMetricNameQueuedTime                      HistoricalMetricName = "QUEUED_TIME"
	HistoricalMetricNameAbandonTime                     HistoricalMetricName = "ABANDON_TIME"
	HistoricalMetricNameQueueAnswerTime                 HistoricalMetricName = "QUEUE_ANSWER_TIME"
	HistoricalMetricNameHoldTime                        HistoricalMetricName = "HOLD_TIME"
	HistoricalMetricNameInteractionTime                 HistoricalMetricName = "INTERACTION_TIME"
	HistoricalMetricNameInteractionAndHoldTime          HistoricalMetricName = "INTERACTION_AND_HOLD_TIME"
	HistoricalMetricNameServiceLevel                    HistoricalMetricName = "SERVICE_LEVEL"
)

func (enum HistoricalMetricName) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum HistoricalMetricName) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type PhoneType string

// Enum values for PhoneType
const (
	PhoneTypeSoftPhone PhoneType = "SOFT_PHONE"
	PhoneTypeDeskPhone PhoneType = "DESK_PHONE"
)

func (enum PhoneType) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum PhoneType) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type Statistic string

// Enum values for Statistic
const (
	StatisticSum Statistic = "SUM"
	StatisticMax Statistic = "MAX"
	StatisticAvg Statistic = "AVG"
)

func (enum Statistic) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum Statistic) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type Unit string

// Enum values for Unit
const (
	UnitSeconds Unit = "SECONDS"
	UnitCount   Unit = "COUNT"
	UnitPercent Unit = "PERCENT"
)

func (enum Unit) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum Unit) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}
