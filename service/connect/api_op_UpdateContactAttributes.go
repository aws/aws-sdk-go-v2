// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package connect

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/connect/types"
)

const opUpdateContactAttributes = "UpdateContactAttributes"

// UpdateContactAttributesRequest returns a request value for making API operation for
// Amazon Connect Service.
//
// Creates or updates the contact attributes associated with the specified contact.
//
// You can add or update attributes for both ongoing and completed contacts.
// For example, you can update the customer's name or the reason the customer
// called while the call is active, or add notes about steps that the agent
// took during the call that are displayed to the next agent that takes the
// call. You can also update attributes for a contact using data from your CRM
// application and save the data with the contact in Amazon Connect. You could
// also flag calls for additional analysis, such as legal review or identifying
// abusive callers.
//
// Contact attributes are available in Amazon Connect for 24 months, and are
// then deleted.
//
// Important: You cannot use the operation to update attributes for contacts
// that occurred prior to the release of the API, September 12, 2018. You can
// update attributes only for contacts that started after the release of the
// API. If you attempt to update attributes for a contact that occurred prior
// to the release of the API, a 400 error is returned. This applies also to
// queued callbacks that were initiated prior to the release of the API but
// are still active in your instance.
//
//    // Example sending a request using UpdateContactAttributesRequest.
//    req := client.UpdateContactAttributesRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/connect-2017-08-08/UpdateContactAttributes
func (c *Client) UpdateContactAttributesRequest(input *types.UpdateContactAttributesInput) UpdateContactAttributesRequest {
	op := &aws.Operation{
		Name:       opUpdateContactAttributes,
		HTTPMethod: "POST",
		HTTPPath:   "/contact/attributes",
	}

	if input == nil {
		input = &types.UpdateContactAttributesInput{}
	}

	req := c.newRequest(op, input, &types.UpdateContactAttributesOutput{})
	return UpdateContactAttributesRequest{Request: req, Input: input, Copy: c.UpdateContactAttributesRequest}
}

// UpdateContactAttributesRequest is the request type for the
// UpdateContactAttributes API operation.
type UpdateContactAttributesRequest struct {
	*aws.Request
	Input *types.UpdateContactAttributesInput
	Copy  func(*types.UpdateContactAttributesInput) UpdateContactAttributesRequest
}

// Send marshals and sends the UpdateContactAttributes API request.
func (r UpdateContactAttributesRequest) Send(ctx context.Context) (*UpdateContactAttributesResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &UpdateContactAttributesResponse{
		UpdateContactAttributesOutput: r.Request.Data.(*types.UpdateContactAttributesOutput),
		response:                      &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// UpdateContactAttributesResponse is the response type for the
// UpdateContactAttributes API operation.
type UpdateContactAttributesResponse struct {
	*types.UpdateContactAttributesOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// UpdateContactAttributes request.
func (r *UpdateContactAttributesResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
