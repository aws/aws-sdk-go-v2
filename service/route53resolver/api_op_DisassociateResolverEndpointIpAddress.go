// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package route53resolver

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/route53resolver/types"
)

const opDisassociateResolverEndpointIpAddress = "DisassociateResolverEndpointIpAddress"

// DisassociateResolverEndpointIpAddressRequest returns a request value for making API operation for
// Amazon Route 53 Resolver.
//
// Removes IP addresses from an inbound or an outbound resolver endpoint. If
// you want to remove more than one IP address, submit one DisassociateResolverEndpointIpAddress
// request for each IP address.
//
// To add an IP address to an endpoint, see AssociateResolverEndpointIpAddress.
//
//    // Example sending a request using DisassociateResolverEndpointIpAddressRequest.
//    req := client.DisassociateResolverEndpointIpAddressRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/route53resolver-2018-04-01/DisassociateResolverEndpointIpAddress
func (c *Client) DisassociateResolverEndpointIpAddressRequest(input *types.DisassociateResolverEndpointIpAddressInput) DisassociateResolverEndpointIpAddressRequest {
	op := &aws.Operation{
		Name:       opDisassociateResolverEndpointIpAddress,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &types.DisassociateResolverEndpointIpAddressInput{}
	}

	req := c.newRequest(op, input, &types.DisassociateResolverEndpointIpAddressOutput{})
	return DisassociateResolverEndpointIpAddressRequest{Request: req, Input: input, Copy: c.DisassociateResolverEndpointIpAddressRequest}
}

// DisassociateResolverEndpointIpAddressRequest is the request type for the
// DisassociateResolverEndpointIpAddress API operation.
type DisassociateResolverEndpointIpAddressRequest struct {
	*aws.Request
	Input *types.DisassociateResolverEndpointIpAddressInput
	Copy  func(*types.DisassociateResolverEndpointIpAddressInput) DisassociateResolverEndpointIpAddressRequest
}

// Send marshals and sends the DisassociateResolverEndpointIpAddress API request.
func (r DisassociateResolverEndpointIpAddressRequest) Send(ctx context.Context) (*DisassociateResolverEndpointIpAddressResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &DisassociateResolverEndpointIpAddressResponse{
		DisassociateResolverEndpointIpAddressOutput: r.Request.Data.(*types.DisassociateResolverEndpointIpAddressOutput),
		response: &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// DisassociateResolverEndpointIpAddressResponse is the response type for the
// DisassociateResolverEndpointIpAddress API operation.
type DisassociateResolverEndpointIpAddressResponse struct {
	*types.DisassociateResolverEndpointIpAddressOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// DisassociateResolverEndpointIpAddress request.
func (r *DisassociateResolverEndpointIpAddressResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
