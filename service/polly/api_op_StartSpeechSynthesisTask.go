// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package polly

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/polly/types"
)

const opStartSpeechSynthesisTask = "StartSpeechSynthesisTask"

// StartSpeechSynthesisTaskRequest returns a request value for making API operation for
// Amazon Polly.
//
// Allows the creation of an asynchronous synthesis task, by starting a new
// SpeechSynthesisTask. This operation requires all the standard information
// needed for speech synthesis, plus the name of an Amazon S3 bucket for the
// service to store the output of the synthesis task and two optional parameters
// (OutputS3KeyPrefix and SnsTopicArn). Once the synthesis task is created,
// this operation will return a SpeechSynthesisTask object, which will include
// an identifier of this task as well as the current status.
//
//    // Example sending a request using StartSpeechSynthesisTaskRequest.
//    req := client.StartSpeechSynthesisTaskRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/polly-2016-06-10/StartSpeechSynthesisTask
func (c *Client) StartSpeechSynthesisTaskRequest(input *types.StartSpeechSynthesisTaskInput) StartSpeechSynthesisTaskRequest {
	op := &aws.Operation{
		Name:       opStartSpeechSynthesisTask,
		HTTPMethod: "POST",
		HTTPPath:   "/v1/synthesisTasks",
	}

	if input == nil {
		input = &types.StartSpeechSynthesisTaskInput{}
	}

	req := c.newRequest(op, input, &types.StartSpeechSynthesisTaskOutput{})
	return StartSpeechSynthesisTaskRequest{Request: req, Input: input, Copy: c.StartSpeechSynthesisTaskRequest}
}

// StartSpeechSynthesisTaskRequest is the request type for the
// StartSpeechSynthesisTask API operation.
type StartSpeechSynthesisTaskRequest struct {
	*aws.Request
	Input *types.StartSpeechSynthesisTaskInput
	Copy  func(*types.StartSpeechSynthesisTaskInput) StartSpeechSynthesisTaskRequest
}

// Send marshals and sends the StartSpeechSynthesisTask API request.
func (r StartSpeechSynthesisTaskRequest) Send(ctx context.Context) (*StartSpeechSynthesisTaskResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &StartSpeechSynthesisTaskResponse{
		StartSpeechSynthesisTaskOutput: r.Request.Data.(*types.StartSpeechSynthesisTaskOutput),
		response:                       &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// StartSpeechSynthesisTaskResponse is the response type for the
// StartSpeechSynthesisTask API operation.
type StartSpeechSynthesisTaskResponse struct {
	*types.StartSpeechSynthesisTaskOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// StartSpeechSynthesisTask request.
func (r *StartSpeechSynthesisTaskResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
