// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package mediapackage

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/mediapackage/types"
)

const opRotateIngestEndpointCredentials = "RotateIngestEndpointCredentials"

// RotateIngestEndpointCredentialsRequest returns a request value for making API operation for
// AWS Elemental MediaPackage.
//
// Rotate the IngestEndpoint's username and password, as specified by the IngestEndpoint's
// id.
//
//    // Example sending a request using RotateIngestEndpointCredentialsRequest.
//    req := client.RotateIngestEndpointCredentialsRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/mediapackage-2017-10-12/RotateIngestEndpointCredentials
func (c *Client) RotateIngestEndpointCredentialsRequest(input *types.RotateIngestEndpointCredentialsInput) RotateIngestEndpointCredentialsRequest {
	op := &aws.Operation{
		Name:       opRotateIngestEndpointCredentials,
		HTTPMethod: "PUT",
		HTTPPath:   "/channels/{id}/ingest_endpoints/{ingest_endpoint_id}/credentials",
	}

	if input == nil {
		input = &types.RotateIngestEndpointCredentialsInput{}
	}

	req := c.newRequest(op, input, &types.RotateIngestEndpointCredentialsOutput{})
	return RotateIngestEndpointCredentialsRequest{Request: req, Input: input, Copy: c.RotateIngestEndpointCredentialsRequest}
}

// RotateIngestEndpointCredentialsRequest is the request type for the
// RotateIngestEndpointCredentials API operation.
type RotateIngestEndpointCredentialsRequest struct {
	*aws.Request
	Input *types.RotateIngestEndpointCredentialsInput
	Copy  func(*types.RotateIngestEndpointCredentialsInput) RotateIngestEndpointCredentialsRequest
}

// Send marshals and sends the RotateIngestEndpointCredentials API request.
func (r RotateIngestEndpointCredentialsRequest) Send(ctx context.Context) (*RotateIngestEndpointCredentialsResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &RotateIngestEndpointCredentialsResponse{
		RotateIngestEndpointCredentialsOutput: r.Request.Data.(*types.RotateIngestEndpointCredentialsOutput),
		response:                              &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// RotateIngestEndpointCredentialsResponse is the response type for the
// RotateIngestEndpointCredentials API operation.
type RotateIngestEndpointCredentialsResponse struct {
	*types.RotateIngestEndpointCredentialsOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// RotateIngestEndpointCredentials request.
func (r *RotateIngestEndpointCredentialsResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
