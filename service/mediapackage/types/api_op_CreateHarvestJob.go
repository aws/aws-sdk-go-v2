// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package types

import (
	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/internal/awsutil"
	"github.com/aws/aws-sdk-go-v2/service/mediapackage/enums"
)

type CreateHarvestJobInput struct {
	_ struct{} `type:"structure"`

	// EndTime is a required field
	EndTime *string `locationName:"endTime" type:"string" required:"true"`

	// Id is a required field
	Id *string `locationName:"id" type:"string" required:"true"`

	// OriginEndpointId is a required field
	OriginEndpointId *string `locationName:"originEndpointId" type:"string" required:"true"`

	// Configuration parameters for where in an S3 bucket to place the harvested
	// content
	//
	// S3Destination is a required field
	S3Destination *S3Destination `locationName:"s3Destination" type:"structure" required:"true"`

	// StartTime is a required field
	StartTime *string `locationName:"startTime" type:"string" required:"true"`
}

// String returns the string representation
func (s CreateHarvestJobInput) String() string {
	return awsutil.Prettify(s)
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *CreateHarvestJobInput) Validate() error {
	invalidParams := aws.ErrInvalidParams{Context: "CreateHarvestJobInput"}

	if s.EndTime == nil {
		invalidParams.Add(aws.NewErrParamRequired("EndTime"))
	}

	if s.Id == nil {
		invalidParams.Add(aws.NewErrParamRequired("Id"))
	}

	if s.OriginEndpointId == nil {
		invalidParams.Add(aws.NewErrParamRequired("OriginEndpointId"))
	}

	if s.S3Destination == nil {
		invalidParams.Add(aws.NewErrParamRequired("S3Destination"))
	}

	if s.StartTime == nil {
		invalidParams.Add(aws.NewErrParamRequired("StartTime"))
	}
	if s.S3Destination != nil {
		if err := s.S3Destination.Validate(); err != nil {
			invalidParams.AddNested("S3Destination", err.(aws.ErrInvalidParams))
		}
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

type CreateHarvestJobOutput struct {
	_ struct{} `type:"structure"`

	Arn *string `locationName:"arn" type:"string"`

	ChannelId *string `locationName:"channelId" type:"string"`

	CreatedAt *string `locationName:"createdAt" type:"string"`

	EndTime *string `locationName:"endTime" type:"string"`

	Id *string `locationName:"id" type:"string"`

	OriginEndpointId *string `locationName:"originEndpointId" type:"string"`

	// Configuration parameters for where in an S3 bucket to place the harvested
	// content
	S3Destination *S3Destination `locationName:"s3Destination" type:"structure"`

	StartTime *string `locationName:"startTime" type:"string"`

	Status enums.Status `locationName:"status" type:"string" enum:"true"`
}

// String returns the string representation
func (s CreateHarvestJobOutput) String() string {
	return awsutil.Prettify(s)
}
