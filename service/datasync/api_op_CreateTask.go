// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package datasync

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/datasync/types"
)

const opCreateTask = "CreateTask"

// CreateTaskRequest returns a request value for making API operation for
// AWS DataSync.
//
// Creates a task. A task is a set of two locations (source and destination)
// and a set of Options that you use to control the behavior of a task. If you
// don't specify Options when you create a task, AWS DataSync populates them
// with service defaults.
//
// When you create a task, it first enters the CREATING state. During CREATING
// AWS DataSync attempts to mount the on-premises Network File System (NFS)
// location. The task transitions to the AVAILABLE state without waiting for
// the AWS location to become mounted. If required, AWS DataSync mounts the
// AWS location before each task execution.
//
// If an agent that is associated with a source (NFS) location goes offline,
// the task transitions to the UNAVAILABLE status. If the status of the task
// remains in the CREATING status for more than a few minutes, it means that
// your agent might be having trouble mounting the source NFS file system. Check
// the task's ErrorCode and ErrorDetail. Mount issues are often caused by either
// a misconfigured firewall or a mistyped NFS server host name.
//
//    // Example sending a request using CreateTaskRequest.
//    req := client.CreateTaskRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/datasync-2018-11-09/CreateTask
func (c *Client) CreateTaskRequest(input *types.CreateTaskInput) CreateTaskRequest {
	op := &aws.Operation{
		Name:       opCreateTask,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &types.CreateTaskInput{}
	}

	req := c.newRequest(op, input, &types.CreateTaskOutput{})
	return CreateTaskRequest{Request: req, Input: input, Copy: c.CreateTaskRequest}
}

// CreateTaskRequest is the request type for the
// CreateTask API operation.
type CreateTaskRequest struct {
	*aws.Request
	Input *types.CreateTaskInput
	Copy  func(*types.CreateTaskInput) CreateTaskRequest
}

// Send marshals and sends the CreateTask API request.
func (r CreateTaskRequest) Send(ctx context.Context) (*CreateTaskResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &CreateTaskResponse{
		CreateTaskOutput: r.Request.Data.(*types.CreateTaskOutput),
		response:         &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// CreateTaskResponse is the response type for the
// CreateTask API operation.
type CreateTaskResponse struct {
	*types.CreateTaskOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// CreateTask request.
func (r *CreateTaskResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
