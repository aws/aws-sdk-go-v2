// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package datasync

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/datasync/types"
)

const opCreateLocationS3 = "CreateLocationS3"

// CreateLocationS3Request returns a request value for making API operation for
// AWS DataSync.
//
// Creates an endpoint for an Amazon S3 bucket.
//
// For AWS DataSync to access a destination S3 bucket, it needs an AWS Identity
// and Access Management (IAM) role that has the required permissions. You can
// set up the required permissions by creating an IAM policy that grants the
// required permissions and attaching the policy to the role. An example of
// such a policy is shown in the examples section.
//
// For more information, see https://docs.aws.amazon.com/datasync/latest/userguide/working-with-locations.html#create-s3-location
// in the AWS DataSync User Guide.
//
//    // Example sending a request using CreateLocationS3Request.
//    req := client.CreateLocationS3Request(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/datasync-2018-11-09/CreateLocationS3
func (c *Client) CreateLocationS3Request(input *types.CreateLocationS3Input) CreateLocationS3Request {
	op := &aws.Operation{
		Name:       opCreateLocationS3,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &types.CreateLocationS3Input{}
	}

	req := c.newRequest(op, input, &types.CreateLocationS3Output{})
	return CreateLocationS3Request{Request: req, Input: input, Copy: c.CreateLocationS3Request}
}

// CreateLocationS3Request is the request type for the
// CreateLocationS3 API operation.
type CreateLocationS3Request struct {
	*aws.Request
	Input *types.CreateLocationS3Input
	Copy  func(*types.CreateLocationS3Input) CreateLocationS3Request
}

// Send marshals and sends the CreateLocationS3 API request.
func (r CreateLocationS3Request) Send(ctx context.Context) (*CreateLocationS3Response, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &CreateLocationS3Response{
		CreateLocationS3Output: r.Request.Data.(*types.CreateLocationS3Output),
		response:               &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// CreateLocationS3Response is the response type for the
// CreateLocationS3 API operation.
type CreateLocationS3Response struct {
	*types.CreateLocationS3Output

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// CreateLocationS3 request.
func (r *CreateLocationS3Response) SDKResponseMetdata() *aws.Response {
	return r.response
}
