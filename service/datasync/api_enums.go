// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package datasync

type AgentStatus string

// Enum values for AgentStatus
const (
	AgentStatusOnline  AgentStatus = "ONLINE"
	AgentStatusOffline AgentStatus = "OFFLINE"
)

func (enum AgentStatus) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum AgentStatus) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type Atime string

// Enum values for Atime
const (
	AtimeNone       Atime = "NONE"
	AtimeBestEffort Atime = "BEST_EFFORT"
)

func (enum Atime) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum Atime) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type EndpointType string

// Enum values for EndpointType
const (
	EndpointTypePublic      EndpointType = "PUBLIC"
	EndpointTypePrivateLink EndpointType = "PRIVATE_LINK"
)

func (enum EndpointType) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum EndpointType) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type FilterType string

// Enum values for FilterType
const (
	FilterTypeSimplePattern FilterType = "SIMPLE_PATTERN"
)

func (enum FilterType) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum FilterType) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type Gid string

// Enum values for Gid
const (
	GidNone     Gid = "NONE"
	GidIntValue Gid = "INT_VALUE"
	GidName     Gid = "NAME"
	GidBoth     Gid = "BOTH"
)

func (enum Gid) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum Gid) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type Mtime string

// Enum values for Mtime
const (
	MtimeNone     Mtime = "NONE"
	MtimePreserve Mtime = "PRESERVE"
)

func (enum Mtime) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum Mtime) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type NfsVersion string

// Enum values for NfsVersion
const (
	NfsVersionAutomatic NfsVersion = "AUTOMATIC"
	NfsVersionNfs3      NfsVersion = "NFS3"
	NfsVersionNfs40     NfsVersion = "NFS4_0"
	NfsVersionNfs41     NfsVersion = "NFS4_1"
)

func (enum NfsVersion) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum NfsVersion) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type PhaseStatus string

// Enum values for PhaseStatus
const (
	PhaseStatusPending PhaseStatus = "PENDING"
	PhaseStatusSuccess PhaseStatus = "SUCCESS"
	PhaseStatusError   PhaseStatus = "ERROR"
)

func (enum PhaseStatus) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum PhaseStatus) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type PosixPermissions string

// Enum values for PosixPermissions
const (
	PosixPermissionsNone       PosixPermissions = "NONE"
	PosixPermissionsBestEffort PosixPermissions = "BEST_EFFORT"
	PosixPermissionsPreserve   PosixPermissions = "PRESERVE"
)

func (enum PosixPermissions) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum PosixPermissions) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type PreserveDeletedFiles string

// Enum values for PreserveDeletedFiles
const (
	PreserveDeletedFilesPreserve PreserveDeletedFiles = "PRESERVE"
	PreserveDeletedFilesRemove   PreserveDeletedFiles = "REMOVE"
)

func (enum PreserveDeletedFiles) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum PreserveDeletedFiles) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type PreserveDevices string

// Enum values for PreserveDevices
const (
	PreserveDevicesNone     PreserveDevices = "NONE"
	PreserveDevicesPreserve PreserveDevices = "PRESERVE"
)

func (enum PreserveDevices) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum PreserveDevices) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type SmbVersion string

// Enum values for SmbVersion
const (
	SmbVersionAutomatic SmbVersion = "AUTOMATIC"
	SmbVersionSmb2      SmbVersion = "SMB2"
	SmbVersionSmb3      SmbVersion = "SMB3"
)

func (enum SmbVersion) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum SmbVersion) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type TaskExecutionStatus string

// Enum values for TaskExecutionStatus
const (
	TaskExecutionStatusLaunching    TaskExecutionStatus = "LAUNCHING"
	TaskExecutionStatusPreparing    TaskExecutionStatus = "PREPARING"
	TaskExecutionStatusTransferring TaskExecutionStatus = "TRANSFERRING"
	TaskExecutionStatusVerifying    TaskExecutionStatus = "VERIFYING"
	TaskExecutionStatusSuccess      TaskExecutionStatus = "SUCCESS"
	TaskExecutionStatusError        TaskExecutionStatus = "ERROR"
)

func (enum TaskExecutionStatus) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum TaskExecutionStatus) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type TaskStatus string

// Enum values for TaskStatus
const (
	TaskStatusAvailable   TaskStatus = "AVAILABLE"
	TaskStatusCreating    TaskStatus = "CREATING"
	TaskStatusRunning     TaskStatus = "RUNNING"
	TaskStatusUnavailable TaskStatus = "UNAVAILABLE"
)

func (enum TaskStatus) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum TaskStatus) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type Uid string

// Enum values for Uid
const (
	UidNone     Uid = "NONE"
	UidIntValue Uid = "INT_VALUE"
	UidName     Uid = "NAME"
	UidBoth     Uid = "BOTH"
)

func (enum Uid) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum Uid) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type VerifyMode string

// Enum values for VerifyMode
const (
	VerifyModePointInTimeConsistent VerifyMode = "POINT_IN_TIME_CONSISTENT"
	VerifyModeNone                  VerifyMode = "NONE"
)

func (enum VerifyMode) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum VerifyMode) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}
