// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package datasync

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/datasync/types"
)

const opUpdateTask = "UpdateTask"

// UpdateTaskRequest returns a request value for making API operation for
// AWS DataSync.
//
// Updates the metadata associated with a task.
//
//    // Example sending a request using UpdateTaskRequest.
//    req := client.UpdateTaskRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/datasync-2018-11-09/UpdateTask
func (c *Client) UpdateTaskRequest(input *types.UpdateTaskInput) UpdateTaskRequest {
	op := &aws.Operation{
		Name:       opUpdateTask,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &types.UpdateTaskInput{}
	}

	req := c.newRequest(op, input, &types.UpdateTaskOutput{})
	return UpdateTaskRequest{Request: req, Input: input, Copy: c.UpdateTaskRequest}
}

// UpdateTaskRequest is the request type for the
// UpdateTask API operation.
type UpdateTaskRequest struct {
	*aws.Request
	Input *types.UpdateTaskInput
	Copy  func(*types.UpdateTaskInput) UpdateTaskRequest
}

// Send marshals and sends the UpdateTask API request.
func (r UpdateTaskRequest) Send(ctx context.Context) (*UpdateTaskResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &UpdateTaskResponse{
		UpdateTaskOutput: r.Request.Data.(*types.UpdateTaskOutput),
		response:         &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// UpdateTaskResponse is the response type for the
// UpdateTask API operation.
type UpdateTaskResponse struct {
	*types.UpdateTaskOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// UpdateTask request.
func (r *UpdateTaskResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
