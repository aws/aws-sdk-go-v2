// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package datasync

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/datasync/types"
)

const opCreateAgent = "CreateAgent"

// CreateAgentRequest returns a request value for making API operation for
// AWS DataSync.
//
// Activates an AWS DataSync agent that you have deployed on your host. The
// activation process associates your agent with your account. In the activation
// process, you specify information such as the AWS Region that you want to
// activate the agent in. You activate the agent in the AWS Region where your
// target locations (in Amazon S3 or Amazon EFS) reside. Your tasks are created
// in this AWS Region.
//
// You can activate the agent in a VPC (Virtual private Cloud) or provide the
// agent access to a VPC endpoint so you can run tasks without going over the
// public Internet.
//
// You can use an agent for more than one location. If a task uses multiple
// agents, all of them need to have status AVAILABLE for the task to run. If
// you use multiple agents for a source location, the status of all the agents
// must be AVAILABLE for the task to run.
//
// Agents are automatically updated by AWS on a regular basis, using a mechanism
// that ensures minimal interruption to your tasks.
//
//    // Example sending a request using CreateAgentRequest.
//    req := client.CreateAgentRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/datasync-2018-11-09/CreateAgent
func (c *Client) CreateAgentRequest(input *types.CreateAgentInput) CreateAgentRequest {
	op := &aws.Operation{
		Name:       opCreateAgent,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &types.CreateAgentInput{}
	}

	req := c.newRequest(op, input, &types.CreateAgentOutput{})
	return CreateAgentRequest{Request: req, Input: input, Copy: c.CreateAgentRequest}
}

// CreateAgentRequest is the request type for the
// CreateAgent API operation.
type CreateAgentRequest struct {
	*aws.Request
	Input *types.CreateAgentInput
	Copy  func(*types.CreateAgentInput) CreateAgentRequest
}

// Send marshals and sends the CreateAgent API request.
func (r CreateAgentRequest) Send(ctx context.Context) (*CreateAgentResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &CreateAgentResponse{
		CreateAgentOutput: r.Request.Data.(*types.CreateAgentOutput),
		response:          &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// CreateAgentResponse is the response type for the
// CreateAgent API operation.
type CreateAgentResponse struct {
	*types.CreateAgentOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// CreateAgent request.
func (r *CreateAgentResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
