// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package waf

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/waf/types"
)

const opCreateByteMatchSet = "CreateByteMatchSet"

// CreateByteMatchSetRequest returns a request value for making API operation for
// AWS WAF.
//
// Creates a ByteMatchSet. You then use UpdateByteMatchSet to identify the part
// of a web request that you want AWS WAF to inspect, such as the values of
// the User-Agent header or the query string. For example, you can create a
// ByteMatchSet that matches any requests with User-Agent headers that contain
// the string BadBot. You can then configure AWS WAF to reject those requests.
//
// To create and configure a ByteMatchSet, perform the following steps:
//
// Use GetChangeToken to get the change token that you provide in the ChangeToken
// parameter of a CreateByteMatchSet request.
//
// Submit a CreateByteMatchSet request.
//
// Use GetChangeToken to get the change token that you provide in the ChangeToken
// parameter of an UpdateByteMatchSet request.
//
// Submit an UpdateByteMatchSet request to specify the part of the request that
// you want AWS WAF to inspect (for example, the header or the URI) and the
// value that you want AWS WAF to watch for.
//
// For more information about how to use the AWS WAF API to allow or block HTTP
// requests, see the AWS WAF Developer Guide (https://docs.aws.amazon.com/waf/latest/developerguide/).
//
//    // Example sending a request using CreateByteMatchSetRequest.
//    req := client.CreateByteMatchSetRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/waf-2015-08-24/CreateByteMatchSet
func (c *Client) CreateByteMatchSetRequest(input *types.CreateByteMatchSetInput) CreateByteMatchSetRequest {
	op := &aws.Operation{
		Name:       opCreateByteMatchSet,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &types.CreateByteMatchSetInput{}
	}

	req := c.newRequest(op, input, &types.CreateByteMatchSetOutput{})
	return CreateByteMatchSetRequest{Request: req, Input: input, Copy: c.CreateByteMatchSetRequest}
}

// CreateByteMatchSetRequest is the request type for the
// CreateByteMatchSet API operation.
type CreateByteMatchSetRequest struct {
	*aws.Request
	Input *types.CreateByteMatchSetInput
	Copy  func(*types.CreateByteMatchSetInput) CreateByteMatchSetRequest
}

// Send marshals and sends the CreateByteMatchSet API request.
func (r CreateByteMatchSetRequest) Send(ctx context.Context) (*CreateByteMatchSetResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &CreateByteMatchSetResponse{
		CreateByteMatchSetOutput: r.Request.Data.(*types.CreateByteMatchSetOutput),
		response:                 &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// CreateByteMatchSetResponse is the response type for the
// CreateByteMatchSet API operation.
type CreateByteMatchSetResponse struct {
	*types.CreateByteMatchSetOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// CreateByteMatchSet request.
func (r *CreateByteMatchSetResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
