// Code generated by smithy-go-codegen DO NOT EDIT.

package waf

import (
	"context"
	awsmiddleware "github.com/aws/aws-sdk-go-v2/aws/middleware"
	"github.com/aws/aws-sdk-go-v2/aws/retry"
	"github.com/aws/aws-sdk-go-v2/aws/signer/v4"
	"github.com/aws/aws-sdk-go-v2/service/waf/types"
	smithy "github.com/awslabs/smithy-go"
	"github.com/awslabs/smithy-go/middleware"
	smithyhttp "github.com/awslabs/smithy-go/transport/http"
)

// This is AWS WAF Classic documentation. For more information, see AWS WAF Classic
// (https://docs.aws.amazon.com/waf/latest/developerguide/classic-waf-chapter.html)
// in the developer guide. For the latest version of AWS WAF, use the AWS WAFV2 API
// and see the AWS WAF Developer Guide
// (https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html). With
// the latest version, AWS WAF has a single set of endpoints for regional and
// global use. Creates a WebACL, which contains the Rules that identify the
// CloudFront web requests that you want to allow, block, or count. AWS WAF
// evaluates Rules in order based on the value of Priority for each Rule. You also
// specify a default action, either ALLOW or BLOCK. If a web request doesn't match
// any of the Rules in a WebACL, AWS WAF responds to the request with the default
// action. To create and configure a WebACL, perform the following steps:
//
//     *
// Create and update the ByteMatchSet objects and other predicates that you want to
// include in Rules. For more information, see CreateByteMatchSet (),
// UpdateByteMatchSet (), CreateIPSet (), UpdateIPSet (),
// CreateSqlInjectionMatchSet (), and UpdateSqlInjectionMatchSet ().
//
//     * Create
// and update the Rules that you want to include in the WebACL. For more
// information, see CreateRule () and UpdateRule ().
//
//     * Use GetChangeToken ()
// to get the change token that you provide in the ChangeToken parameter of a
// CreateWebACL request.
//
//     * Submit a CreateWebACL request.
//
//     * Use
// GetChangeToken to get the change token that you provide in the ChangeToken
// parameter of an UpdateWebACL () request.
//
//     * Submit an UpdateWebACL ()
// request to specify the Rules that you want to include in the WebACL, to specify
// the default action, and to associate the WebACL with a CloudFront
// distribution.
//
// For more information about how to use the AWS WAF API, see the
// AWS WAF Developer Guide
// (https://docs.aws.amazon.com/waf/latest/developerguide/).
func (c *Client) CreateWebACL(ctx context.Context, params *CreateWebACLInput, optFns ...func(*Options)) (*CreateWebACLOutput, error) {
	stack := middleware.NewStack("CreateWebACL", smithyhttp.NewStackRequest)
	options := c.options.Copy()
	for _, fn := range optFns {
		fn(&options)
	}
	addawsAwsjson11_serdeOpCreateWebACLMiddlewares(stack)
	awsmiddleware.AddRequestInvocationIDMiddleware(stack)
	smithyhttp.AddContentLengthMiddleware(stack)
	AddResolveEndpointMiddleware(stack, options)
	v4.AddComputePayloadSHA256Middleware(stack)
	retry.AddRetryMiddlewares(stack, options)
	addHTTPSignerV4Middleware(stack, options)
	awsmiddleware.AddAttemptClockSkewMiddleware(stack)
	addClientUserAgent(stack)
	smithyhttp.AddErrorCloseResponseBodyMiddleware(stack)
	smithyhttp.AddCloseResponseBodyMiddleware(stack)
	addOpCreateWebACLValidationMiddleware(stack)
	stack.Initialize.Add(newServiceMetadataMiddleware_opCreateWebACL(options.Region), middleware.Before)

	for _, fn := range options.APIOptions {
		if err := fn(stack); err != nil {
			return nil, err
		}
	}
	handler := middleware.DecorateHandler(smithyhttp.NewClientHandler(options.HTTPClient), stack)
	result, metadata, err := handler.Handle(ctx, params)
	if err != nil {
		return nil, &smithy.OperationError{
			ServiceID:     ServiceID,
			OperationName: "CreateWebACL",
			Err:           err,
		}
	}
	out := result.(*CreateWebACLOutput)
	out.ResultMetadata = metadata
	return out, nil
}

type CreateWebACLInput struct {
	// A friendly name or description of the WebACL (). You can't change Name after you
	// create the WebACL.
	Name *string
	// The value returned by the most recent call to GetChangeToken ().
	ChangeToken *string
	// A friendly name or description for the metrics for this WebACL.The name can
	// contain only alphanumeric characters (A-Z, a-z, 0-9), with maximum length 128
	// and minimum length one. It can't contain whitespace or metric names reserved for
	// AWS WAF, including "All" and "Default_Action." You can't change MetricName after
	// you create the WebACL.
	MetricName *string
	//
	Tags []*types.Tag
	// The action that you want AWS WAF to take when a request doesn't match the
	// criteria specified in any of the Rule objects that are associated with the
	// WebACL.
	DefaultAction *types.WafAction
}

type CreateWebACLOutput struct {
	// The WebACL () returned in the CreateWebACL response.
	WebACL *types.WebACL
	// The ChangeToken that you used to submit the CreateWebACL request. You can also
	// use this value to query the status of the request. For more information, see
	// GetChangeTokenStatus ().
	ChangeToken *string

	// Metadata pertaining to the operation's result.
	ResultMetadata middleware.Metadata
}

func addawsAwsjson11_serdeOpCreateWebACLMiddlewares(stack *middleware.Stack) {
	stack.Serialize.Add(&awsAwsjson11_serializeOpCreateWebACL{}, middleware.After)
	stack.Deserialize.Add(&awsAwsjson11_deserializeOpCreateWebACL{}, middleware.After)
}

func newServiceMetadataMiddleware_opCreateWebACL(region string) awsmiddleware.RegisterServiceMetadata {
	return awsmiddleware.RegisterServiceMetadata{
		Region:        region,
		ServiceID:     ServiceID,
		SigningName:   "waf",
		OperationName: "CreateWebACL",
	}
}
