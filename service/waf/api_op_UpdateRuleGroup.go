// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package waf

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/waf/types"
)

const opUpdateRuleGroup = "UpdateRuleGroup"

// UpdateRuleGroupRequest returns a request value for making API operation for
// AWS WAF.
//
// Inserts or deletes ActivatedRule objects in a RuleGroup.
//
// You can only insert REGULAR rules into a rule group.
//
// You can have a maximum of ten rules per rule group.
//
// To create and configure a RuleGroup, perform the following steps:
//
// Create and update the Rules that you want to include in the RuleGroup. See
// CreateRule.
//
// Use GetChangeToken to get the change token that you provide in the ChangeToken
// parameter of an UpdateRuleGroup request.
//
// Submit an UpdateRuleGroup request to add Rules to the RuleGroup.
//
// Create and update a WebACL that contains the RuleGroup. See CreateWebACL.
//
// If you want to replace one Rule with another, you delete the existing one
// and add the new one.
//
// For more information about how to use the AWS WAF API to allow or block HTTP
// requests, see the AWS WAF Developer Guide (https://docs.aws.amazon.com/waf/latest/developerguide/).
//
//    // Example sending a request using UpdateRuleGroupRequest.
//    req := client.UpdateRuleGroupRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/waf-2015-08-24/UpdateRuleGroup
func (c *Client) UpdateRuleGroupRequest(input *types.UpdateRuleGroupInput) UpdateRuleGroupRequest {
	op := &aws.Operation{
		Name:       opUpdateRuleGroup,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &types.UpdateRuleGroupInput{}
	}

	req := c.newRequest(op, input, &types.UpdateRuleGroupOutput{})
	return UpdateRuleGroupRequest{Request: req, Input: input, Copy: c.UpdateRuleGroupRequest}
}

// UpdateRuleGroupRequest is the request type for the
// UpdateRuleGroup API operation.
type UpdateRuleGroupRequest struct {
	*aws.Request
	Input *types.UpdateRuleGroupInput
	Copy  func(*types.UpdateRuleGroupInput) UpdateRuleGroupRequest
}

// Send marshals and sends the UpdateRuleGroup API request.
func (r UpdateRuleGroupRequest) Send(ctx context.Context) (*UpdateRuleGroupResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &UpdateRuleGroupResponse{
		UpdateRuleGroupOutput: r.Request.Data.(*types.UpdateRuleGroupOutput),
		response:              &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// UpdateRuleGroupResponse is the response type for the
// UpdateRuleGroup API operation.
type UpdateRuleGroupResponse struct {
	*types.UpdateRuleGroupOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// UpdateRuleGroup request.
func (r *UpdateRuleGroupResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
