// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package waf

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/waf/types"
)

const opUpdateXssMatchSet = "UpdateXssMatchSet"

// UpdateXssMatchSetRequest returns a request value for making API operation for
// AWS WAF.
//
// Inserts or deletes XssMatchTuple objects (filters) in an XssMatchSet. For
// each XssMatchTuple object, you specify the following values:
//
//    * Action: Whether to insert the object into or delete the object from
//    the array. To change an XssMatchTuple, you delete the existing object
//    and add a new one.
//
//    * FieldToMatch: The part of web requests that you want AWS WAF to inspect
//    and, if you want AWS WAF to inspect a header or custom query parameter,
//    the name of the header or parameter.
//
//    * TextTransformation: Which text transformation, if any, to perform on
//    the web request before inspecting the request for cross-site scripting
//    attacks. You can only specify a single type of TextTransformation.
//
// You use XssMatchSet objects to specify which CloudFront requests that you
// want to allow, block, or count. For example, if you're receiving requests
// that contain cross-site scripting attacks in the request body and you want
// to block the requests, you can create an XssMatchSet with the applicable
// settings, and then configure AWS WAF to block the requests.
//
// To create and configure an XssMatchSet, perform the following steps:
//
// Submit a CreateXssMatchSet request.
//
// Use GetChangeToken to get the change token that you provide in the ChangeToken
// parameter of an UpdateIPSet request.
//
// Submit an UpdateXssMatchSet request to specify the parts of web requests
// that you want AWS WAF to inspect for cross-site scripting attacks.
//
// For more information about how to use the AWS WAF API to allow or block HTTP
// requests, see the AWS WAF Developer Guide (https://docs.aws.amazon.com/waf/latest/developerguide/).
//
//    // Example sending a request using UpdateXssMatchSetRequest.
//    req := client.UpdateXssMatchSetRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/waf-2015-08-24/UpdateXssMatchSet
func (c *Client) UpdateXssMatchSetRequest(input *types.UpdateXssMatchSetInput) UpdateXssMatchSetRequest {
	op := &aws.Operation{
		Name:       opUpdateXssMatchSet,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &types.UpdateXssMatchSetInput{}
	}

	req := c.newRequest(op, input, &types.UpdateXssMatchSetOutput{})
	return UpdateXssMatchSetRequest{Request: req, Input: input, Copy: c.UpdateXssMatchSetRequest}
}

// UpdateXssMatchSetRequest is the request type for the
// UpdateXssMatchSet API operation.
type UpdateXssMatchSetRequest struct {
	*aws.Request
	Input *types.UpdateXssMatchSetInput
	Copy  func(*types.UpdateXssMatchSetInput) UpdateXssMatchSetRequest
}

// Send marshals and sends the UpdateXssMatchSet API request.
func (r UpdateXssMatchSetRequest) Send(ctx context.Context) (*UpdateXssMatchSetResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &UpdateXssMatchSetResponse{
		UpdateXssMatchSetOutput: r.Request.Data.(*types.UpdateXssMatchSetOutput),
		response:                &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// UpdateXssMatchSetResponse is the response type for the
// UpdateXssMatchSet API operation.
type UpdateXssMatchSetResponse struct {
	*types.UpdateXssMatchSetOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// UpdateXssMatchSet request.
func (r *UpdateXssMatchSetResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
