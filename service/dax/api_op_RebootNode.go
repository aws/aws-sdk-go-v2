// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package dax

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/dax/types"
)

const opRebootNode = "RebootNode"

// RebootNodeRequest returns a request value for making API operation for
// Amazon DynamoDB Accelerator (DAX).
//
// Reboots a single node of a DAX cluster. The reboot action takes place as
// soon as possible. During the reboot, the node status is set to REBOOTING.
//
// RebootNode restarts the DAX engine process and does not remove the contents
// of the cache.
//
//    // Example sending a request using RebootNodeRequest.
//    req := client.RebootNodeRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/dax-2017-04-19/RebootNode
func (c *Client) RebootNodeRequest(input *types.RebootNodeInput) RebootNodeRequest {
	op := &aws.Operation{
		Name:       opRebootNode,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &types.RebootNodeInput{}
	}

	req := c.newRequest(op, input, &types.RebootNodeOutput{})
	return RebootNodeRequest{Request: req, Input: input, Copy: c.RebootNodeRequest}
}

// RebootNodeRequest is the request type for the
// RebootNode API operation.
type RebootNodeRequest struct {
	*aws.Request
	Input *types.RebootNodeInput
	Copy  func(*types.RebootNodeInput) RebootNodeRequest
}

// Send marshals and sends the RebootNode API request.
func (r RebootNodeRequest) Send(ctx context.Context) (*RebootNodeResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &RebootNodeResponse{
		RebootNodeOutput: r.Request.Data.(*types.RebootNodeOutput),
		response:         &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// RebootNodeResponse is the response type for the
// RebootNode API operation.
type RebootNodeResponse struct {
	*types.RebootNodeOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// RebootNode request.
func (r *RebootNodeResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
