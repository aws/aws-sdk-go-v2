// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package sms

import (
	"time"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/internal/awsutil"
)

const opCreateReplicationJob = "CreateReplicationJob"

// CreateReplicationJobRequest is a API request type for the CreateReplicationJob API operation.
type CreateReplicationJobRequest struct {
	*aws.Request
	Input *CreateReplicationJobInput
	Copy  func(*CreateReplicationJobInput) CreateReplicationJobRequest
}

// Send marshals and sends the CreateReplicationJob API request.
func (r CreateReplicationJobRequest) Send() (*CreateReplicationJobOutput, error) {
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	return r.Request.Data.(*CreateReplicationJobOutput), nil
}

// CreateReplicationJobRequest returns a request value for making API operation for
// AWS Server Migration Service.
//
// The CreateReplicationJob API is used to create a ReplicationJob to replicate
// a server on AWS. Call this API to first create a ReplicationJob, which will
// then schedule periodic ReplicationRuns to replicate your server to AWS. Each
// ReplicationRun will result in the creation of an AWS AMI.
//
//    // Example sending a request using the CreateReplicationJobRequest method.
//    req := client.CreateReplicationJobRequest(params)
//    resp, err := req.Send()
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/sms-2016-10-24/CreateReplicationJob
func (c *SMS) CreateReplicationJobRequest(input *CreateReplicationJobInput) CreateReplicationJobRequest {
	op := &aws.Operation{
		Name:       opCreateReplicationJob,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &CreateReplicationJobInput{}
	}

	output := &CreateReplicationJobOutput{}
	req := c.newRequest(op, input, output)
	output.responseMetadata = aws.Response{Request: req}

	return CreateReplicationJobRequest{Request: req, Input: input, Copy: c.CreateReplicationJobRequest}
}

const opDeleteReplicationJob = "DeleteReplicationJob"

// DeleteReplicationJobRequest is a API request type for the DeleteReplicationJob API operation.
type DeleteReplicationJobRequest struct {
	*aws.Request
	Input *DeleteReplicationJobInput
	Copy  func(*DeleteReplicationJobInput) DeleteReplicationJobRequest
}

// Send marshals and sends the DeleteReplicationJob API request.
func (r DeleteReplicationJobRequest) Send() (*DeleteReplicationJobOutput, error) {
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	return r.Request.Data.(*DeleteReplicationJobOutput), nil
}

// DeleteReplicationJobRequest returns a request value for making API operation for
// AWS Server Migration Service.
//
// The DeleteReplicationJob API is used to delete a ReplicationJob, resulting
// in no further ReplicationRuns. This will delete the contents of the S3 bucket
// used to store SMS artifacts, but will not delete any AMIs created by the
// SMS service.
//
//    // Example sending a request using the DeleteReplicationJobRequest method.
//    req := client.DeleteReplicationJobRequest(params)
//    resp, err := req.Send()
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/sms-2016-10-24/DeleteReplicationJob
func (c *SMS) DeleteReplicationJobRequest(input *DeleteReplicationJobInput) DeleteReplicationJobRequest {
	op := &aws.Operation{
		Name:       opDeleteReplicationJob,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DeleteReplicationJobInput{}
	}

	output := &DeleteReplicationJobOutput{}
	req := c.newRequest(op, input, output)
	output.responseMetadata = aws.Response{Request: req}

	return DeleteReplicationJobRequest{Request: req, Input: input, Copy: c.DeleteReplicationJobRequest}
}

const opDeleteServerCatalog = "DeleteServerCatalog"

// DeleteServerCatalogRequest is a API request type for the DeleteServerCatalog API operation.
type DeleteServerCatalogRequest struct {
	*aws.Request
	Input *DeleteServerCatalogInput
	Copy  func(*DeleteServerCatalogInput) DeleteServerCatalogRequest
}

// Send marshals and sends the DeleteServerCatalog API request.
func (r DeleteServerCatalogRequest) Send() (*DeleteServerCatalogOutput, error) {
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	return r.Request.Data.(*DeleteServerCatalogOutput), nil
}

// DeleteServerCatalogRequest returns a request value for making API operation for
// AWS Server Migration Service.
//
// The DeleteServerCatalog API clears all servers from your server catalog.
// This means that these servers will no longer be accessible to the Server
// Migration Service.
//
//    // Example sending a request using the DeleteServerCatalogRequest method.
//    req := client.DeleteServerCatalogRequest(params)
//    resp, err := req.Send()
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/sms-2016-10-24/DeleteServerCatalog
func (c *SMS) DeleteServerCatalogRequest(input *DeleteServerCatalogInput) DeleteServerCatalogRequest {
	op := &aws.Operation{
		Name:       opDeleteServerCatalog,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DeleteServerCatalogInput{}
	}

	output := &DeleteServerCatalogOutput{}
	req := c.newRequest(op, input, output)
	output.responseMetadata = aws.Response{Request: req}

	return DeleteServerCatalogRequest{Request: req, Input: input, Copy: c.DeleteServerCatalogRequest}
}

const opDisassociateConnector = "DisassociateConnector"

// DisassociateConnectorRequest is a API request type for the DisassociateConnector API operation.
type DisassociateConnectorRequest struct {
	*aws.Request
	Input *DisassociateConnectorInput
	Copy  func(*DisassociateConnectorInput) DisassociateConnectorRequest
}

// Send marshals and sends the DisassociateConnector API request.
func (r DisassociateConnectorRequest) Send() (*DisassociateConnectorOutput, error) {
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	return r.Request.Data.(*DisassociateConnectorOutput), nil
}

// DisassociateConnectorRequest returns a request value for making API operation for
// AWS Server Migration Service.
//
// The DisassociateConnector API will disassociate a connector from the Server
// Migration Service, rendering it unavailable to support replication jobs.
//
//    // Example sending a request using the DisassociateConnectorRequest method.
//    req := client.DisassociateConnectorRequest(params)
//    resp, err := req.Send()
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/sms-2016-10-24/DisassociateConnector
func (c *SMS) DisassociateConnectorRequest(input *DisassociateConnectorInput) DisassociateConnectorRequest {
	op := &aws.Operation{
		Name:       opDisassociateConnector,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DisassociateConnectorInput{}
	}

	output := &DisassociateConnectorOutput{}
	req := c.newRequest(op, input, output)
	output.responseMetadata = aws.Response{Request: req}

	return DisassociateConnectorRequest{Request: req, Input: input, Copy: c.DisassociateConnectorRequest}
}

const opGetConnectors = "GetConnectors"

// GetConnectorsRequest is a API request type for the GetConnectors API operation.
type GetConnectorsRequest struct {
	*aws.Request
	Input *GetConnectorsInput
	Copy  func(*GetConnectorsInput) GetConnectorsRequest
}

// Send marshals and sends the GetConnectors API request.
func (r GetConnectorsRequest) Send() (*GetConnectorsOutput, error) {
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	return r.Request.Data.(*GetConnectorsOutput), nil
}

// GetConnectorsRequest returns a request value for making API operation for
// AWS Server Migration Service.
//
// The GetConnectors API returns a list of connectors that are registered with
// the Server Migration Service.
//
//    // Example sending a request using the GetConnectorsRequest method.
//    req := client.GetConnectorsRequest(params)
//    resp, err := req.Send()
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/sms-2016-10-24/GetConnectors
func (c *SMS) GetConnectorsRequest(input *GetConnectorsInput) GetConnectorsRequest {
	op := &aws.Operation{
		Name:       opGetConnectors,
		HTTPMethod: "POST",
		HTTPPath:   "/",
		Paginator: &aws.Paginator{
			InputTokens:     []string{"nextToken"},
			OutputTokens:    []string{"nextToken"},
			LimitToken:      "maxResults",
			TruncationToken: "",
		},
	}

	if input == nil {
		input = &GetConnectorsInput{}
	}

	output := &GetConnectorsOutput{}
	req := c.newRequest(op, input, output)
	output.responseMetadata = aws.Response{Request: req}

	return GetConnectorsRequest{Request: req, Input: input, Copy: c.GetConnectorsRequest}
}

// Paginate pages iterates over the pages of a GetConnectorsRequest operation,
// calling the Next method for each page. Using the paginators Next
// method will depict whether or not there are more pages.
//
// Note: This operation can generate multiple requests to a service.
//
//    // Example iterating over at most 3 pages of a GetConnectors operation.
//		req := client.GetConnectorsRequest(input)
//		p := req.Paginate()
//		for p.Next() {
//			page := p.CurrentPage()
//		}
//
//		if err := p.Err(); err != nil {
//			return err
//		}
//
func (p *GetConnectorsRequest) Paginate(opts ...aws.Option) GetConnectorsPager {
	return GetConnectorsPager{
		Pager: aws.Pager{
			NewRequest: func() (*aws.Request, error) {
				var inCpy *GetConnectorsInput
				if p.Input != nil {
					tmp := *p.Input
					inCpy = &tmp
				}

				req := p.Copy(inCpy)
				req.ApplyOptions(opts...)

				return req.Request, nil
			},
		},
	}
}

// GetConnectorsPager is used to paginate the request. This can be done by
// calling Next and CurrentPage.
type GetConnectorsPager struct {
	aws.Pager
}

func (p *GetConnectorsPager) CurrentPage() *GetConnectorsOutput {
	return p.Pager.CurrentPage().(*GetConnectorsOutput)
}

const opGetReplicationJobs = "GetReplicationJobs"

// GetReplicationJobsRequest is a API request type for the GetReplicationJobs API operation.
type GetReplicationJobsRequest struct {
	*aws.Request
	Input *GetReplicationJobsInput
	Copy  func(*GetReplicationJobsInput) GetReplicationJobsRequest
}

// Send marshals and sends the GetReplicationJobs API request.
func (r GetReplicationJobsRequest) Send() (*GetReplicationJobsOutput, error) {
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	return r.Request.Data.(*GetReplicationJobsOutput), nil
}

// GetReplicationJobsRequest returns a request value for making API operation for
// AWS Server Migration Service.
//
// The GetReplicationJobs API will return all of your ReplicationJobs and their
// details. This API returns a paginated list, that may be consecutively called
// with nextToken to retrieve all ReplicationJobs.
//
//    // Example sending a request using the GetReplicationJobsRequest method.
//    req := client.GetReplicationJobsRequest(params)
//    resp, err := req.Send()
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/sms-2016-10-24/GetReplicationJobs
func (c *SMS) GetReplicationJobsRequest(input *GetReplicationJobsInput) GetReplicationJobsRequest {
	op := &aws.Operation{
		Name:       opGetReplicationJobs,
		HTTPMethod: "POST",
		HTTPPath:   "/",
		Paginator: &aws.Paginator{
			InputTokens:     []string{"nextToken"},
			OutputTokens:    []string{"nextToken"},
			LimitToken:      "maxResults",
			TruncationToken: "",
		},
	}

	if input == nil {
		input = &GetReplicationJobsInput{}
	}

	output := &GetReplicationJobsOutput{}
	req := c.newRequest(op, input, output)
	output.responseMetadata = aws.Response{Request: req}

	return GetReplicationJobsRequest{Request: req, Input: input, Copy: c.GetReplicationJobsRequest}
}

// Paginate pages iterates over the pages of a GetReplicationJobsRequest operation,
// calling the Next method for each page. Using the paginators Next
// method will depict whether or not there are more pages.
//
// Note: This operation can generate multiple requests to a service.
//
//    // Example iterating over at most 3 pages of a GetReplicationJobs operation.
//		req := client.GetReplicationJobsRequest(input)
//		p := req.Paginate()
//		for p.Next() {
//			page := p.CurrentPage()
//		}
//
//		if err := p.Err(); err != nil {
//			return err
//		}
//
func (p *GetReplicationJobsRequest) Paginate(opts ...aws.Option) GetReplicationJobsPager {
	return GetReplicationJobsPager{
		Pager: aws.Pager{
			NewRequest: func() (*aws.Request, error) {
				var inCpy *GetReplicationJobsInput
				if p.Input != nil {
					tmp := *p.Input
					inCpy = &tmp
				}

				req := p.Copy(inCpy)
				req.ApplyOptions(opts...)

				return req.Request, nil
			},
		},
	}
}

// GetReplicationJobsPager is used to paginate the request. This can be done by
// calling Next and CurrentPage.
type GetReplicationJobsPager struct {
	aws.Pager
}

func (p *GetReplicationJobsPager) CurrentPage() *GetReplicationJobsOutput {
	return p.Pager.CurrentPage().(*GetReplicationJobsOutput)
}

const opGetReplicationRuns = "GetReplicationRuns"

// GetReplicationRunsRequest is a API request type for the GetReplicationRuns API operation.
type GetReplicationRunsRequest struct {
	*aws.Request
	Input *GetReplicationRunsInput
	Copy  func(*GetReplicationRunsInput) GetReplicationRunsRequest
}

// Send marshals and sends the GetReplicationRuns API request.
func (r GetReplicationRunsRequest) Send() (*GetReplicationRunsOutput, error) {
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	return r.Request.Data.(*GetReplicationRunsOutput), nil
}

// GetReplicationRunsRequest returns a request value for making API operation for
// AWS Server Migration Service.
//
// The GetReplicationRuns API will return all ReplicationRuns for a given ReplicationJob.
// This API returns a paginated list, that may be consecutively called with
// nextToken to retrieve all ReplicationRuns for a ReplicationJob.
//
//    // Example sending a request using the GetReplicationRunsRequest method.
//    req := client.GetReplicationRunsRequest(params)
//    resp, err := req.Send()
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/sms-2016-10-24/GetReplicationRuns
func (c *SMS) GetReplicationRunsRequest(input *GetReplicationRunsInput) GetReplicationRunsRequest {
	op := &aws.Operation{
		Name:       opGetReplicationRuns,
		HTTPMethod: "POST",
		HTTPPath:   "/",
		Paginator: &aws.Paginator{
			InputTokens:     []string{"nextToken"},
			OutputTokens:    []string{"nextToken"},
			LimitToken:      "maxResults",
			TruncationToken: "",
		},
	}

	if input == nil {
		input = &GetReplicationRunsInput{}
	}

	output := &GetReplicationRunsOutput{}
	req := c.newRequest(op, input, output)
	output.responseMetadata = aws.Response{Request: req}

	return GetReplicationRunsRequest{Request: req, Input: input, Copy: c.GetReplicationRunsRequest}
}

// Paginate pages iterates over the pages of a GetReplicationRunsRequest operation,
// calling the Next method for each page. Using the paginators Next
// method will depict whether or not there are more pages.
//
// Note: This operation can generate multiple requests to a service.
//
//    // Example iterating over at most 3 pages of a GetReplicationRuns operation.
//		req := client.GetReplicationRunsRequest(input)
//		p := req.Paginate()
//		for p.Next() {
//			page := p.CurrentPage()
//		}
//
//		if err := p.Err(); err != nil {
//			return err
//		}
//
func (p *GetReplicationRunsRequest) Paginate(opts ...aws.Option) GetReplicationRunsPager {
	return GetReplicationRunsPager{
		Pager: aws.Pager{
			NewRequest: func() (*aws.Request, error) {
				var inCpy *GetReplicationRunsInput
				if p.Input != nil {
					tmp := *p.Input
					inCpy = &tmp
				}

				req := p.Copy(inCpy)
				req.ApplyOptions(opts...)

				return req.Request, nil
			},
		},
	}
}

// GetReplicationRunsPager is used to paginate the request. This can be done by
// calling Next and CurrentPage.
type GetReplicationRunsPager struct {
	aws.Pager
}

func (p *GetReplicationRunsPager) CurrentPage() *GetReplicationRunsOutput {
	return p.Pager.CurrentPage().(*GetReplicationRunsOutput)
}

const opGetServers = "GetServers"

// GetServersRequest is a API request type for the GetServers API operation.
type GetServersRequest struct {
	*aws.Request
	Input *GetServersInput
	Copy  func(*GetServersInput) GetServersRequest
}

// Send marshals and sends the GetServers API request.
func (r GetServersRequest) Send() (*GetServersOutput, error) {
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	return r.Request.Data.(*GetServersOutput), nil
}

// GetServersRequest returns a request value for making API operation for
// AWS Server Migration Service.
//
// The GetServers API returns a list of all servers in your server catalog.
// For this call to succeed, you must previously have called ImportServerCatalog.
//
//    // Example sending a request using the GetServersRequest method.
//    req := client.GetServersRequest(params)
//    resp, err := req.Send()
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/sms-2016-10-24/GetServers
func (c *SMS) GetServersRequest(input *GetServersInput) GetServersRequest {
	op := &aws.Operation{
		Name:       opGetServers,
		HTTPMethod: "POST",
		HTTPPath:   "/",
		Paginator: &aws.Paginator{
			InputTokens:     []string{"nextToken"},
			OutputTokens:    []string{"nextToken"},
			LimitToken:      "maxResults",
			TruncationToken: "",
		},
	}

	if input == nil {
		input = &GetServersInput{}
	}

	output := &GetServersOutput{}
	req := c.newRequest(op, input, output)
	output.responseMetadata = aws.Response{Request: req}

	return GetServersRequest{Request: req, Input: input, Copy: c.GetServersRequest}
}

// Paginate pages iterates over the pages of a GetServersRequest operation,
// calling the Next method for each page. Using the paginators Next
// method will depict whether or not there are more pages.
//
// Note: This operation can generate multiple requests to a service.
//
//    // Example iterating over at most 3 pages of a GetServers operation.
//		req := client.GetServersRequest(input)
//		p := req.Paginate()
//		for p.Next() {
//			page := p.CurrentPage()
//		}
//
//		if err := p.Err(); err != nil {
//			return err
//		}
//
func (p *GetServersRequest) Paginate(opts ...aws.Option) GetServersPager {
	return GetServersPager{
		Pager: aws.Pager{
			NewRequest: func() (*aws.Request, error) {
				var inCpy *GetServersInput
				if p.Input != nil {
					tmp := *p.Input
					inCpy = &tmp
				}

				req := p.Copy(inCpy)
				req.ApplyOptions(opts...)

				return req.Request, nil
			},
		},
	}
}

// GetServersPager is used to paginate the request. This can be done by
// calling Next and CurrentPage.
type GetServersPager struct {
	aws.Pager
}

func (p *GetServersPager) CurrentPage() *GetServersOutput {
	return p.Pager.CurrentPage().(*GetServersOutput)
}

const opImportServerCatalog = "ImportServerCatalog"

// ImportServerCatalogRequest is a API request type for the ImportServerCatalog API operation.
type ImportServerCatalogRequest struct {
	*aws.Request
	Input *ImportServerCatalogInput
	Copy  func(*ImportServerCatalogInput) ImportServerCatalogRequest
}

// Send marshals and sends the ImportServerCatalog API request.
func (r ImportServerCatalogRequest) Send() (*ImportServerCatalogOutput, error) {
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	return r.Request.Data.(*ImportServerCatalogOutput), nil
}

// ImportServerCatalogRequest returns a request value for making API operation for
// AWS Server Migration Service.
//
// The ImportServerCatalog API is used to gather the complete list of on-premises
// servers on your premises. This API call requires connectors to be installed
// and monitoring all servers you would like imported. This API call returns
// immediately, but may take some time to retrieve all of the servers.
//
//    // Example sending a request using the ImportServerCatalogRequest method.
//    req := client.ImportServerCatalogRequest(params)
//    resp, err := req.Send()
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/sms-2016-10-24/ImportServerCatalog
func (c *SMS) ImportServerCatalogRequest(input *ImportServerCatalogInput) ImportServerCatalogRequest {
	op := &aws.Operation{
		Name:       opImportServerCatalog,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &ImportServerCatalogInput{}
	}

	output := &ImportServerCatalogOutput{}
	req := c.newRequest(op, input, output)
	output.responseMetadata = aws.Response{Request: req}

	return ImportServerCatalogRequest{Request: req, Input: input, Copy: c.ImportServerCatalogRequest}
}

const opStartOnDemandReplicationRun = "StartOnDemandReplicationRun"

// StartOnDemandReplicationRunRequest is a API request type for the StartOnDemandReplicationRun API operation.
type StartOnDemandReplicationRunRequest struct {
	*aws.Request
	Input *StartOnDemandReplicationRunInput
	Copy  func(*StartOnDemandReplicationRunInput) StartOnDemandReplicationRunRequest
}

// Send marshals and sends the StartOnDemandReplicationRun API request.
func (r StartOnDemandReplicationRunRequest) Send() (*StartOnDemandReplicationRunOutput, error) {
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	return r.Request.Data.(*StartOnDemandReplicationRunOutput), nil
}

// StartOnDemandReplicationRunRequest returns a request value for making API operation for
// AWS Server Migration Service.
//
// The StartOnDemandReplicationRun API is used to start a ReplicationRun on
// demand (in addition to those that are scheduled based on your frequency).
// This ReplicationRun will start immediately. StartOnDemandReplicationRun is
// subject to limits on how many on demand ReplicationRuns you may call per
// 24-hour period.
//
//    // Example sending a request using the StartOnDemandReplicationRunRequest method.
//    req := client.StartOnDemandReplicationRunRequest(params)
//    resp, err := req.Send()
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/sms-2016-10-24/StartOnDemandReplicationRun
func (c *SMS) StartOnDemandReplicationRunRequest(input *StartOnDemandReplicationRunInput) StartOnDemandReplicationRunRequest {
	op := &aws.Operation{
		Name:       opStartOnDemandReplicationRun,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &StartOnDemandReplicationRunInput{}
	}

	output := &StartOnDemandReplicationRunOutput{}
	req := c.newRequest(op, input, output)
	output.responseMetadata = aws.Response{Request: req}

	return StartOnDemandReplicationRunRequest{Request: req, Input: input, Copy: c.StartOnDemandReplicationRunRequest}
}

const opUpdateReplicationJob = "UpdateReplicationJob"

// UpdateReplicationJobRequest is a API request type for the UpdateReplicationJob API operation.
type UpdateReplicationJobRequest struct {
	*aws.Request
	Input *UpdateReplicationJobInput
	Copy  func(*UpdateReplicationJobInput) UpdateReplicationJobRequest
}

// Send marshals and sends the UpdateReplicationJob API request.
func (r UpdateReplicationJobRequest) Send() (*UpdateReplicationJobOutput, error) {
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	return r.Request.Data.(*UpdateReplicationJobOutput), nil
}

// UpdateReplicationJobRequest returns a request value for making API operation for
// AWS Server Migration Service.
//
// The UpdateReplicationJob API is used to change the settings of your existing
// ReplicationJob created using CreateReplicationJob. Calling this API will
// affect the next scheduled ReplicationRun.
//
//    // Example sending a request using the UpdateReplicationJobRequest method.
//    req := client.UpdateReplicationJobRequest(params)
//    resp, err := req.Send()
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/sms-2016-10-24/UpdateReplicationJob
func (c *SMS) UpdateReplicationJobRequest(input *UpdateReplicationJobInput) UpdateReplicationJobRequest {
	op := &aws.Operation{
		Name:       opUpdateReplicationJob,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &UpdateReplicationJobInput{}
	}

	output := &UpdateReplicationJobOutput{}
	req := c.newRequest(op, input, output)
	output.responseMetadata = aws.Response{Request: req}

	return UpdateReplicationJobRequest{Request: req, Input: input, Copy: c.UpdateReplicationJobRequest}
}

// Object representing a Connector
// Please also see https://docs.aws.amazon.com/goto/WebAPI/sms-2016-10-24/Connector
type Connector struct {
	_ struct{} `type:"structure"`

	// Timestamp of an operation
	AssociatedOn *time.Time `locationName:"associatedOn" type:"timestamp" timestampFormat:"unix"`

	// List of Connector Capabilities
	CapabilityList []ConnectorCapability `locationName:"capabilityList" locationNameList:"item" type:"list"`

	// Unique Identifier for Connector
	ConnectorId *string `locationName:"connectorId" type:"string"`

	// Internet Protocol (IP) Address
	IpAddress *string `locationName:"ipAddress" type:"string"`

	// Hardware (MAC) address
	MacAddress *string `locationName:"macAddress" type:"string"`

	// Status of on-premises Connector
	Status ConnectorStatus `locationName:"status" type:"string" enum:"true"`

	// Connector version string
	Version *string `locationName:"version" type:"string"`

	// Unique Identifier for VM Manager
	VmManagerId *string `locationName:"vmManagerId" type:"string"`

	// VM Manager Name
	VmManagerName *string `locationName:"vmManagerName" type:"string"`

	// VM Management Product
	VmManagerType VmManagerType `locationName:"vmManagerType" type:"string" enum:"true"`
}

// String returns the string representation
func (s Connector) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s Connector) GoString() string {
	return s.String()
}

// Please also see https://docs.aws.amazon.com/goto/WebAPI/sms-2016-10-24/CreateReplicationJobRequest
type CreateReplicationJobInput struct {
	_ struct{} `type:"structure"`

	// The description for a Replication Job/Run.
	Description *string `locationName:"description" type:"string"`

	// Interval between Replication Runs. This value is specified in hours, and
	// represents the time between consecutive Replication Runs.
	//
	// Frequency is a required field
	Frequency *int64 `locationName:"frequency" type:"integer" required:"true"`

	// The license type to be used for the Amazon Machine Image (AMI) created after
	// a successful ReplicationRun.
	LicenseType LicenseType `locationName:"licenseType" type:"string" enum:"true"`

	// Name of service role in customer's account to be used by SMS service.
	RoleName *string `locationName:"roleName" type:"string"`

	// Timestamp of an operation
	//
	// SeedReplicationTime is a required field
	SeedReplicationTime *time.Time `locationName:"seedReplicationTime" type:"timestamp" timestampFormat:"unix" required:"true"`

	// Unique Identifier for a server
	//
	// ServerId is a required field
	ServerId *string `locationName:"serverId" type:"string" required:"true"`
}

// String returns the string representation
func (s CreateReplicationJobInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s CreateReplicationJobInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *CreateReplicationJobInput) Validate() error {
	invalidParams := aws.ErrInvalidParams{Context: "CreateReplicationJobInput"}

	if s.Frequency == nil {
		invalidParams.Add(aws.NewErrParamRequired("Frequency"))
	}

	if s.SeedReplicationTime == nil {
		invalidParams.Add(aws.NewErrParamRequired("SeedReplicationTime"))
	}

	if s.ServerId == nil {
		invalidParams.Add(aws.NewErrParamRequired("ServerId"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// Please also see https://docs.aws.amazon.com/goto/WebAPI/sms-2016-10-24/CreateReplicationJobResponse
type CreateReplicationJobOutput struct {
	_ struct{} `type:"structure"`

	responseMetadata aws.Response

	// The unique identifier for a Replication Job.
	ReplicationJobId *string `locationName:"replicationJobId" type:"string"`
}

// String returns the string representation
func (s CreateReplicationJobOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s CreateReplicationJobOutput) GoString() string {
	return s.String()
}

// SDKResponseMetdata return sthe response metadata for the API.
func (s CreateReplicationJobOutput) SDKResponseMetadata() aws.Response {
	return s.responseMetadata
}

// Please also see https://docs.aws.amazon.com/goto/WebAPI/sms-2016-10-24/DeleteReplicationJobRequest
type DeleteReplicationJobInput struct {
	_ struct{} `type:"structure"`

	// The unique identifier for a Replication Job.
	//
	// ReplicationJobId is a required field
	ReplicationJobId *string `locationName:"replicationJobId" type:"string" required:"true"`
}

// String returns the string representation
func (s DeleteReplicationJobInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DeleteReplicationJobInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *DeleteReplicationJobInput) Validate() error {
	invalidParams := aws.ErrInvalidParams{Context: "DeleteReplicationJobInput"}

	if s.ReplicationJobId == nil {
		invalidParams.Add(aws.NewErrParamRequired("ReplicationJobId"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// Please also see https://docs.aws.amazon.com/goto/WebAPI/sms-2016-10-24/DeleteReplicationJobResponse
type DeleteReplicationJobOutput struct {
	_ struct{} `type:"structure"`

	responseMetadata aws.Response
}

// String returns the string representation
func (s DeleteReplicationJobOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DeleteReplicationJobOutput) GoString() string {
	return s.String()
}

// SDKResponseMetdata return sthe response metadata for the API.
func (s DeleteReplicationJobOutput) SDKResponseMetadata() aws.Response {
	return s.responseMetadata
}

// Please also see https://docs.aws.amazon.com/goto/WebAPI/sms-2016-10-24/DeleteServerCatalogRequest
type DeleteServerCatalogInput struct {
	_ struct{} `type:"structure"`
}

// String returns the string representation
func (s DeleteServerCatalogInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DeleteServerCatalogInput) GoString() string {
	return s.String()
}

// Please also see https://docs.aws.amazon.com/goto/WebAPI/sms-2016-10-24/DeleteServerCatalogResponse
type DeleteServerCatalogOutput struct {
	_ struct{} `type:"structure"`

	responseMetadata aws.Response
}

// String returns the string representation
func (s DeleteServerCatalogOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DeleteServerCatalogOutput) GoString() string {
	return s.String()
}

// SDKResponseMetdata return sthe response metadata for the API.
func (s DeleteServerCatalogOutput) SDKResponseMetadata() aws.Response {
	return s.responseMetadata
}

// Please also see https://docs.aws.amazon.com/goto/WebAPI/sms-2016-10-24/DisassociateConnectorRequest
type DisassociateConnectorInput struct {
	_ struct{} `type:"structure"`

	// Unique Identifier for Connector
	//
	// ConnectorId is a required field
	ConnectorId *string `locationName:"connectorId" type:"string" required:"true"`
}

// String returns the string representation
func (s DisassociateConnectorInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DisassociateConnectorInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *DisassociateConnectorInput) Validate() error {
	invalidParams := aws.ErrInvalidParams{Context: "DisassociateConnectorInput"}

	if s.ConnectorId == nil {
		invalidParams.Add(aws.NewErrParamRequired("ConnectorId"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// Please also see https://docs.aws.amazon.com/goto/WebAPI/sms-2016-10-24/DisassociateConnectorResponse
type DisassociateConnectorOutput struct {
	_ struct{} `type:"structure"`

	responseMetadata aws.Response
}

// String returns the string representation
func (s DisassociateConnectorOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DisassociateConnectorOutput) GoString() string {
	return s.String()
}

// SDKResponseMetdata return sthe response metadata for the API.
func (s DisassociateConnectorOutput) SDKResponseMetadata() aws.Response {
	return s.responseMetadata
}

// Please also see https://docs.aws.amazon.com/goto/WebAPI/sms-2016-10-24/GetConnectorsRequest
type GetConnectorsInput struct {
	_ struct{} `type:"structure"`

	// The maximum number of results to return in one API call. If left empty, this
	// will default to 50.
	MaxResults *int64 `locationName:"maxResults" type:"integer"`

	// Pagination token to pass as input to API call
	NextToken *string `locationName:"nextToken" type:"string"`
}

// String returns the string representation
func (s GetConnectorsInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s GetConnectorsInput) GoString() string {
	return s.String()
}

// Please also see https://docs.aws.amazon.com/goto/WebAPI/sms-2016-10-24/GetConnectorsResponse
type GetConnectorsOutput struct {
	_ struct{} `type:"structure"`

	responseMetadata aws.Response

	// List of connectors
	ConnectorList []Connector `locationName:"connectorList" locationNameList:"item" type:"list"`

	// Pagination token to pass as input to API call
	NextToken *string `locationName:"nextToken" type:"string"`
}

// String returns the string representation
func (s GetConnectorsOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s GetConnectorsOutput) GoString() string {
	return s.String()
}

// SDKResponseMetdata return sthe response metadata for the API.
func (s GetConnectorsOutput) SDKResponseMetadata() aws.Response {
	return s.responseMetadata
}

// Please also see https://docs.aws.amazon.com/goto/WebAPI/sms-2016-10-24/GetReplicationJobsRequest
type GetReplicationJobsInput struct {
	_ struct{} `type:"structure"`

	// The maximum number of results to return in one API call. If left empty, this
	// will default to 50.
	MaxResults *int64 `locationName:"maxResults" type:"integer"`

	// Pagination token to pass as input to API call
	NextToken *string `locationName:"nextToken" type:"string"`

	// The unique identifier for a Replication Job.
	ReplicationJobId *string `locationName:"replicationJobId" type:"string"`
}

// String returns the string representation
func (s GetReplicationJobsInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s GetReplicationJobsInput) GoString() string {
	return s.String()
}

// Please also see https://docs.aws.amazon.com/goto/WebAPI/sms-2016-10-24/GetReplicationJobsResponse
type GetReplicationJobsOutput struct {
	_ struct{} `type:"structure"`

	responseMetadata aws.Response

	// Pagination token to pass as input to API call
	NextToken *string `locationName:"nextToken" type:"string"`

	// List of Replication Jobs
	ReplicationJobList []ReplicationJob `locationName:"replicationJobList" locationNameList:"item" type:"list"`
}

// String returns the string representation
func (s GetReplicationJobsOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s GetReplicationJobsOutput) GoString() string {
	return s.String()
}

// SDKResponseMetdata return sthe response metadata for the API.
func (s GetReplicationJobsOutput) SDKResponseMetadata() aws.Response {
	return s.responseMetadata
}

// Please also see https://docs.aws.amazon.com/goto/WebAPI/sms-2016-10-24/GetReplicationRunsRequest
type GetReplicationRunsInput struct {
	_ struct{} `type:"structure"`

	// The maximum number of results to return in one API call. If left empty, this
	// will default to 50.
	MaxResults *int64 `locationName:"maxResults" type:"integer"`

	// Pagination token to pass as input to API call
	NextToken *string `locationName:"nextToken" type:"string"`

	// The unique identifier for a Replication Job.
	//
	// ReplicationJobId is a required field
	ReplicationJobId *string `locationName:"replicationJobId" type:"string" required:"true"`
}

// String returns the string representation
func (s GetReplicationRunsInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s GetReplicationRunsInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *GetReplicationRunsInput) Validate() error {
	invalidParams := aws.ErrInvalidParams{Context: "GetReplicationRunsInput"}

	if s.ReplicationJobId == nil {
		invalidParams.Add(aws.NewErrParamRequired("ReplicationJobId"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// Please also see https://docs.aws.amazon.com/goto/WebAPI/sms-2016-10-24/GetReplicationRunsResponse
type GetReplicationRunsOutput struct {
	_ struct{} `type:"structure"`

	responseMetadata aws.Response

	// Pagination token to pass as input to API call
	NextToken *string `locationName:"nextToken" type:"string"`

	// Object representing a Replication Job
	ReplicationJob *ReplicationJob `locationName:"replicationJob" type:"structure"`

	// List of Replication Runs
	ReplicationRunList []ReplicationRun `locationName:"replicationRunList" locationNameList:"item" type:"list"`
}

// String returns the string representation
func (s GetReplicationRunsOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s GetReplicationRunsOutput) GoString() string {
	return s.String()
}

// SDKResponseMetdata return sthe response metadata for the API.
func (s GetReplicationRunsOutput) SDKResponseMetadata() aws.Response {
	return s.responseMetadata
}

// Please also see https://docs.aws.amazon.com/goto/WebAPI/sms-2016-10-24/GetServersRequest
type GetServersInput struct {
	_ struct{} `type:"structure"`

	// The maximum number of results to return in one API call. If left empty, this
	// will default to 50.
	MaxResults *int64 `locationName:"maxResults" type:"integer"`

	// Pagination token to pass as input to API call
	NextToken *string `locationName:"nextToken" type:"string"`
}

// String returns the string representation
func (s GetServersInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s GetServersInput) GoString() string {
	return s.String()
}

// Please also see https://docs.aws.amazon.com/goto/WebAPI/sms-2016-10-24/GetServersResponse
type GetServersOutput struct {
	_ struct{} `type:"structure"`

	responseMetadata aws.Response

	// Timestamp of an operation
	LastModifiedOn *time.Time `locationName:"lastModifiedOn" type:"timestamp" timestampFormat:"unix"`

	// Pagination token to pass as input to API call
	NextToken *string `locationName:"nextToken" type:"string"`

	// Status of Server catalog
	ServerCatalogStatus ServerCatalogStatus `locationName:"serverCatalogStatus" type:"string" enum:"true"`

	// List of servers from catalog
	ServerList []Server `locationName:"serverList" locationNameList:"item" type:"list"`
}

// String returns the string representation
func (s GetServersOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s GetServersOutput) GoString() string {
	return s.String()
}

// SDKResponseMetdata return sthe response metadata for the API.
func (s GetServersOutput) SDKResponseMetadata() aws.Response {
	return s.responseMetadata
}

// Please also see https://docs.aws.amazon.com/goto/WebAPI/sms-2016-10-24/ImportServerCatalogRequest
type ImportServerCatalogInput struct {
	_ struct{} `type:"structure"`
}

// String returns the string representation
func (s ImportServerCatalogInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s ImportServerCatalogInput) GoString() string {
	return s.String()
}

// Please also see https://docs.aws.amazon.com/goto/WebAPI/sms-2016-10-24/ImportServerCatalogResponse
type ImportServerCatalogOutput struct {
	_ struct{} `type:"structure"`

	responseMetadata aws.Response
}

// String returns the string representation
func (s ImportServerCatalogOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s ImportServerCatalogOutput) GoString() string {
	return s.String()
}

// SDKResponseMetdata return sthe response metadata for the API.
func (s ImportServerCatalogOutput) SDKResponseMetadata() aws.Response {
	return s.responseMetadata
}

// Object representing a Replication Job
// Please also see https://docs.aws.amazon.com/goto/WebAPI/sms-2016-10-24/ReplicationJob
type ReplicationJob struct {
	_ struct{} `type:"structure"`

	// The description for a Replication Job/Run.
	Description *string `locationName:"description" type:"string"`

	// Interval between Replication Runs. This value is specified in hours, and
	// represents the time between consecutive Replication Runs.
	Frequency *int64 `locationName:"frequency" type:"integer"`

	// The AMI id for the image resulting from a Replication Run.
	LatestAmiId *string `locationName:"latestAmiId" type:"string"`

	// The license type to be used for the Amazon Machine Image (AMI) created after
	// a successful ReplicationRun.
	LicenseType LicenseType `locationName:"licenseType" type:"string" enum:"true"`

	// Timestamp of an operation
	NextReplicationRunStartTime *time.Time `locationName:"nextReplicationRunStartTime" type:"timestamp" timestampFormat:"unix"`

	// The unique identifier for a Replication Job.
	ReplicationJobId *string `locationName:"replicationJobId" type:"string"`

	// List of Replication Runs
	ReplicationRunList []ReplicationRun `locationName:"replicationRunList" locationNameList:"item" type:"list"`

	// Name of service role in customer's account to be used by SMS service.
	RoleName *string `locationName:"roleName" type:"string"`

	// Timestamp of an operation
	SeedReplicationTime *time.Time `locationName:"seedReplicationTime" type:"timestamp" timestampFormat:"unix"`

	// Unique Identifier for a server
	ServerId *string `locationName:"serverId" type:"string"`

	// Type of server.
	ServerType ServerType `locationName:"serverType" type:"string" enum:"true"`

	// Current state of Replication Job
	State ReplicationJobState `locationName:"state" type:"string" enum:"true"`

	// String describing current status of Replication Job
	StatusMessage *string `locationName:"statusMessage" type:"string"`

	// Object representing a VM server
	VmServer *VmServer `locationName:"vmServer" type:"structure"`
}

// String returns the string representation
func (s ReplicationJob) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s ReplicationJob) GoString() string {
	return s.String()
}

// Object representing a Replication Run
// Please also see https://docs.aws.amazon.com/goto/WebAPI/sms-2016-10-24/ReplicationRun
type ReplicationRun struct {
	_ struct{} `type:"structure"`

	// The AMI id for the image resulting from a Replication Run.
	AmiId *string `locationName:"amiId" type:"string"`

	// Timestamp of an operation
	CompletedTime *time.Time `locationName:"completedTime" type:"timestamp" timestampFormat:"unix"`

	// The description for a Replication Job/Run.
	Description *string `locationName:"description" type:"string"`

	// The unique identifier for a Replication Run.
	ReplicationRunId *string `locationName:"replicationRunId" type:"string"`

	// Timestamp of an operation
	ScheduledStartTime *time.Time `locationName:"scheduledStartTime" type:"timestamp" timestampFormat:"unix"`

	// Current state of Replication Run
	State ReplicationRunState `locationName:"state" type:"string" enum:"true"`

	// String describing current status of Replication Run
	StatusMessage *string `locationName:"statusMessage" type:"string"`

	// Type of Replication Run
	Type ReplicationRunType `locationName:"type" type:"string" enum:"true"`
}

// String returns the string representation
func (s ReplicationRun) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s ReplicationRun) GoString() string {
	return s.String()
}

// Object representing a server
// Please also see https://docs.aws.amazon.com/goto/WebAPI/sms-2016-10-24/Server
type Server struct {
	_ struct{} `type:"structure"`

	// The unique identifier for a Replication Job.
	ReplicationJobId *string `locationName:"replicationJobId" type:"string"`

	// An indicator of the Replication Job being deleted or failed.
	ReplicationJobTerminated *bool `locationName:"replicationJobTerminated" type:"boolean"`

	// Unique Identifier for a server
	ServerId *string `locationName:"serverId" type:"string"`

	// Type of server.
	ServerType ServerType `locationName:"serverType" type:"string" enum:"true"`

	// Object representing a VM server
	VmServer *VmServer `locationName:"vmServer" type:"structure"`
}

// String returns the string representation
func (s Server) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s Server) GoString() string {
	return s.String()
}

// Please also see https://docs.aws.amazon.com/goto/WebAPI/sms-2016-10-24/StartOnDemandReplicationRunRequest
type StartOnDemandReplicationRunInput struct {
	_ struct{} `type:"structure"`

	// The description for a Replication Job/Run.
	Description *string `locationName:"description" type:"string"`

	// The unique identifier for a Replication Job.
	//
	// ReplicationJobId is a required field
	ReplicationJobId *string `locationName:"replicationJobId" type:"string" required:"true"`
}

// String returns the string representation
func (s StartOnDemandReplicationRunInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s StartOnDemandReplicationRunInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *StartOnDemandReplicationRunInput) Validate() error {
	invalidParams := aws.ErrInvalidParams{Context: "StartOnDemandReplicationRunInput"}

	if s.ReplicationJobId == nil {
		invalidParams.Add(aws.NewErrParamRequired("ReplicationJobId"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// Please also see https://docs.aws.amazon.com/goto/WebAPI/sms-2016-10-24/StartOnDemandReplicationRunResponse
type StartOnDemandReplicationRunOutput struct {
	_ struct{} `type:"structure"`

	responseMetadata aws.Response

	// The unique identifier for a Replication Run.
	ReplicationRunId *string `locationName:"replicationRunId" type:"string"`
}

// String returns the string representation
func (s StartOnDemandReplicationRunOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s StartOnDemandReplicationRunOutput) GoString() string {
	return s.String()
}

// SDKResponseMetdata return sthe response metadata for the API.
func (s StartOnDemandReplicationRunOutput) SDKResponseMetadata() aws.Response {
	return s.responseMetadata
}

// Please also see https://docs.aws.amazon.com/goto/WebAPI/sms-2016-10-24/UpdateReplicationJobRequest
type UpdateReplicationJobInput struct {
	_ struct{} `type:"structure"`

	// The description for a Replication Job/Run.
	Description *string `locationName:"description" type:"string"`

	// Interval between Replication Runs. This value is specified in hours, and
	// represents the time between consecutive Replication Runs.
	Frequency *int64 `locationName:"frequency" type:"integer"`

	// The license type to be used for the Amazon Machine Image (AMI) created after
	// a successful ReplicationRun.
	LicenseType LicenseType `locationName:"licenseType" type:"string" enum:"true"`

	// Timestamp of an operation
	NextReplicationRunStartTime *time.Time `locationName:"nextReplicationRunStartTime" type:"timestamp" timestampFormat:"unix"`

	// The unique identifier for a Replication Job.
	//
	// ReplicationJobId is a required field
	ReplicationJobId *string `locationName:"replicationJobId" type:"string" required:"true"`

	// Name of service role in customer's account to be used by SMS service.
	RoleName *string `locationName:"roleName" type:"string"`
}

// String returns the string representation
func (s UpdateReplicationJobInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s UpdateReplicationJobInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *UpdateReplicationJobInput) Validate() error {
	invalidParams := aws.ErrInvalidParams{Context: "UpdateReplicationJobInput"}

	if s.ReplicationJobId == nil {
		invalidParams.Add(aws.NewErrParamRequired("ReplicationJobId"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// Please also see https://docs.aws.amazon.com/goto/WebAPI/sms-2016-10-24/UpdateReplicationJobResponse
type UpdateReplicationJobOutput struct {
	_ struct{} `type:"structure"`

	responseMetadata aws.Response
}

// String returns the string representation
func (s UpdateReplicationJobOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s UpdateReplicationJobOutput) GoString() string {
	return s.String()
}

// SDKResponseMetdata return sthe response metadata for the API.
func (s UpdateReplicationJobOutput) SDKResponseMetadata() aws.Response {
	return s.responseMetadata
}

// Object representing a VM server
// Please also see https://docs.aws.amazon.com/goto/WebAPI/sms-2016-10-24/VmServer
type VmServer struct {
	_ struct{} `type:"structure"`

	// VM Manager Name
	VmManagerName *string `locationName:"vmManagerName" type:"string"`

	// VM Management Product
	VmManagerType VmManagerType `locationName:"vmManagerType" type:"string" enum:"true"`

	// Name of Virtual Machine
	VmName *string `locationName:"vmName" type:"string"`

	// Path to VM
	VmPath *string `locationName:"vmPath" type:"string"`

	// Object representing a server's location
	VmServerAddress *VmServerAddress `locationName:"vmServerAddress" type:"structure"`
}

// String returns the string representation
func (s VmServer) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s VmServer) GoString() string {
	return s.String()
}

// Object representing a server's location
// Please also see https://docs.aws.amazon.com/goto/WebAPI/sms-2016-10-24/VmServerAddress
type VmServerAddress struct {
	_ struct{} `type:"structure"`

	// Unique Identifier for a VM
	VmId *string `locationName:"vmId" type:"string"`

	// Unique Identifier for VM Manager
	VmManagerId *string `locationName:"vmManagerId" type:"string"`
}

// String returns the string representation
func (s VmServerAddress) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s VmServerAddress) GoString() string {
	return s.String()
}

// Capabilities for a Connector
type ConnectorCapability string

// Enum values for ConnectorCapability
const (
	ConnectorCapabilityVsphere ConnectorCapability = "VSPHERE"
)

func (enum ConnectorCapability) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum ConnectorCapability) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

// Status of on-premises Connector
type ConnectorStatus string

// Enum values for ConnectorStatus
const (
	ConnectorStatusHealthy   ConnectorStatus = "HEALTHY"
	ConnectorStatusUnhealthy ConnectorStatus = "UNHEALTHY"
)

func (enum ConnectorStatus) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum ConnectorStatus) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

// The license type to be used for the Amazon Machine Image (AMI) created after
// a successful ReplicationRun.
type LicenseType string

// Enum values for LicenseType
const (
	LicenseTypeAws  LicenseType = "AWS"
	LicenseTypeByol LicenseType = "BYOL"
)

func (enum LicenseType) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum LicenseType) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

// Current state of Replication Job
type ReplicationJobState string

// Enum values for ReplicationJobState
const (
	ReplicationJobStatePending  ReplicationJobState = "PENDING"
	ReplicationJobStateActive   ReplicationJobState = "ACTIVE"
	ReplicationJobStateFailed   ReplicationJobState = "FAILED"
	ReplicationJobStateDeleting ReplicationJobState = "DELETING"
	ReplicationJobStateDeleted  ReplicationJobState = "DELETED"
)

func (enum ReplicationJobState) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum ReplicationJobState) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

// Current state of Replication Run
type ReplicationRunState string

// Enum values for ReplicationRunState
const (
	ReplicationRunStatePending   ReplicationRunState = "PENDING"
	ReplicationRunStateMissed    ReplicationRunState = "MISSED"
	ReplicationRunStateActive    ReplicationRunState = "ACTIVE"
	ReplicationRunStateFailed    ReplicationRunState = "FAILED"
	ReplicationRunStateCompleted ReplicationRunState = "COMPLETED"
	ReplicationRunStateDeleting  ReplicationRunState = "DELETING"
	ReplicationRunStateDeleted   ReplicationRunState = "DELETED"
)

func (enum ReplicationRunState) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum ReplicationRunState) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

// Type of Replication Run
type ReplicationRunType string

// Enum values for ReplicationRunType
const (
	ReplicationRunTypeOnDemand  ReplicationRunType = "ON_DEMAND"
	ReplicationRunTypeAutomatic ReplicationRunType = "AUTOMATIC"
)

func (enum ReplicationRunType) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum ReplicationRunType) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

// Status of Server catalog
type ServerCatalogStatus string

// Enum values for ServerCatalogStatus
const (
	ServerCatalogStatusNotImported ServerCatalogStatus = "NOT_IMPORTED"
	ServerCatalogStatusImporting   ServerCatalogStatus = "IMPORTING"
	ServerCatalogStatusAvailable   ServerCatalogStatus = "AVAILABLE"
	ServerCatalogStatusDeleted     ServerCatalogStatus = "DELETED"
	ServerCatalogStatusExpired     ServerCatalogStatus = "EXPIRED"
)

func (enum ServerCatalogStatus) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum ServerCatalogStatus) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

// Type of server.
type ServerType string

// Enum values for ServerType
const (
	ServerTypeVirtualMachine ServerType = "VIRTUAL_MACHINE"
)

func (enum ServerType) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum ServerType) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

// VM Management Product
type VmManagerType string

// Enum values for VmManagerType
const (
	VmManagerTypeVsphere VmManagerType = "VSPHERE"
)

func (enum VmManagerType) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum VmManagerType) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}
