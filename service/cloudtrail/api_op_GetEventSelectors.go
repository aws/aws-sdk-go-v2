// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package cloudtrail

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/cloudtrail/types"
)

const opGetEventSelectors = "GetEventSelectors"

// GetEventSelectorsRequest returns a request value for making API operation for
// AWS CloudTrail.
//
// Describes the settings for the event selectors that you configured for your
// trail. The information returned for your event selectors includes the following:
//
//    * If your event selector includes read-only events, write-only events,
//    or all events. This applies to both management events and data events.
//
//    * If your event selector includes management events.
//
//    * If your event selector includes data events, the Amazon S3 objects or
//    AWS Lambda functions that you are logging for data events.
//
// For more information, see Logging Data and Management Events for Trails (https://docs.aws.amazon.com/awscloudtrail/latest/userguide/logging-management-and-data-events-with-cloudtrail.html)
// in the AWS CloudTrail User Guide.
//
//    // Example sending a request using GetEventSelectorsRequest.
//    req := client.GetEventSelectorsRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/cloudtrail-2013-11-01/GetEventSelectors
func (c *Client) GetEventSelectorsRequest(input *types.GetEventSelectorsInput) GetEventSelectorsRequest {
	op := &aws.Operation{
		Name:       opGetEventSelectors,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &types.GetEventSelectorsInput{}
	}

	req := c.newRequest(op, input, &types.GetEventSelectorsOutput{})
	return GetEventSelectorsRequest{Request: req, Input: input, Copy: c.GetEventSelectorsRequest}
}

// GetEventSelectorsRequest is the request type for the
// GetEventSelectors API operation.
type GetEventSelectorsRequest struct {
	*aws.Request
	Input *types.GetEventSelectorsInput
	Copy  func(*types.GetEventSelectorsInput) GetEventSelectorsRequest
}

// Send marshals and sends the GetEventSelectors API request.
func (r GetEventSelectorsRequest) Send(ctx context.Context) (*GetEventSelectorsResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &GetEventSelectorsResponse{
		GetEventSelectorsOutput: r.Request.Data.(*types.GetEventSelectorsOutput),
		response:                &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// GetEventSelectorsResponse is the response type for the
// GetEventSelectors API operation.
type GetEventSelectorsResponse struct {
	*types.GetEventSelectorsOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// GetEventSelectors request.
func (r *GetEventSelectorsResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
