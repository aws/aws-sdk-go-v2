// Code generated by smithy-go-codegen DO NOT EDIT.

package types

type DeliveryStatus string

// Enum values for DeliveryStatus
const (
	DeliveryStatusSuccess                 DeliveryStatus = "SUCCESS"
	DeliveryStatusFailed                  DeliveryStatus = "FAILED"
	DeliveryStatusFailedSigningFile       DeliveryStatus = "FAILED_SIGNING_FILE"
	DeliveryStatusPending                 DeliveryStatus = "PENDING"
	DeliveryStatusResourceNotFound        DeliveryStatus = "RESOURCE_NOT_FOUND"
	DeliveryStatusAccessDenied            DeliveryStatus = "ACCESS_DENIED"
	DeliveryStatusAccessDeniedSigningFile DeliveryStatus = "ACCESS_DENIED_SIGNING_FILE"
	DeliveryStatusCancelled               DeliveryStatus = "CANCELLED"
	DeliveryStatusUnknown                 DeliveryStatus = "UNKNOWN"
)

// Values returns all known values for DeliveryStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (DeliveryStatus) Values() []DeliveryStatus {
	return []DeliveryStatus{
		"SUCCESS",
		"FAILED",
		"FAILED_SIGNING_FILE",
		"PENDING",
		"RESOURCE_NOT_FOUND",
		"ACCESS_DENIED",
		"ACCESS_DENIED_SIGNING_FILE",
		"CANCELLED",
		"UNKNOWN",
	}
}

type DestinationType string

// Enum values for DestinationType
const (
	DestinationTypeEventDataStore DestinationType = "EVENT_DATA_STORE"
	DestinationTypeAwsService     DestinationType = "AWS_SERVICE"
)

// Values returns all known values for DestinationType. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (DestinationType) Values() []DestinationType {
	return []DestinationType{
		"EVENT_DATA_STORE",
		"AWS_SERVICE",
	}
}

type EventCategory string

// Enum values for EventCategory
const (
	EventCategoryInsight EventCategory = "insight"
)

// Values returns all known values for EventCategory. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (EventCategory) Values() []EventCategory {
	return []EventCategory{
		"insight",
	}
}

type EventDataStoreStatus string

// Enum values for EventDataStoreStatus
const (
	EventDataStoreStatusCreated           EventDataStoreStatus = "CREATED"
	EventDataStoreStatusEnabled           EventDataStoreStatus = "ENABLED"
	EventDataStoreStatusPendingDeletion   EventDataStoreStatus = "PENDING_DELETION"
	EventDataStoreStatusStartingIngestion EventDataStoreStatus = "STARTING_INGESTION"
	EventDataStoreStatusStoppingIngestion EventDataStoreStatus = "STOPPING_INGESTION"
	EventDataStoreStatusStoppedIngestion  EventDataStoreStatus = "STOPPED_INGESTION"
)

// Values returns all known values for EventDataStoreStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (EventDataStoreStatus) Values() []EventDataStoreStatus {
	return []EventDataStoreStatus{
		"CREATED",
		"ENABLED",
		"PENDING_DELETION",
		"STARTING_INGESTION",
		"STOPPING_INGESTION",
		"STOPPED_INGESTION",
	}
}

type ImportFailureStatus string

// Enum values for ImportFailureStatus
const (
	ImportFailureStatusFailed    ImportFailureStatus = "FAILED"
	ImportFailureStatusRetry     ImportFailureStatus = "RETRY"
	ImportFailureStatusSucceeded ImportFailureStatus = "SUCCEEDED"
)

// Values returns all known values for ImportFailureStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (ImportFailureStatus) Values() []ImportFailureStatus {
	return []ImportFailureStatus{
		"FAILED",
		"RETRY",
		"SUCCEEDED",
	}
}

type ImportStatus string

// Enum values for ImportStatus
const (
	ImportStatusInitializing ImportStatus = "INITIALIZING"
	ImportStatusInProgress   ImportStatus = "IN_PROGRESS"
	ImportStatusFailed       ImportStatus = "FAILED"
	ImportStatusStopped      ImportStatus = "STOPPED"
	ImportStatusCompleted    ImportStatus = "COMPLETED"
)

// Values returns all known values for ImportStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (ImportStatus) Values() []ImportStatus {
	return []ImportStatus{
		"INITIALIZING",
		"IN_PROGRESS",
		"FAILED",
		"STOPPED",
		"COMPLETED",
	}
}

type InsightType string

// Enum values for InsightType
const (
	InsightTypeApiCallRateInsight  InsightType = "ApiCallRateInsight"
	InsightTypeApiErrorRateInsight InsightType = "ApiErrorRateInsight"
)

// Values returns all known values for InsightType. Note that this can be expanded
// in the future, and so it is only as up to date as the client. The ordering of
// this slice is not guaranteed to be stable across updates.
func (InsightType) Values() []InsightType {
	return []InsightType{
		"ApiCallRateInsight",
		"ApiErrorRateInsight",
	}
}

type LookupAttributeKey string

// Enum values for LookupAttributeKey
const (
	LookupAttributeKeyEventId      LookupAttributeKey = "EventId"
	LookupAttributeKeyEventName    LookupAttributeKey = "EventName"
	LookupAttributeKeyReadOnly     LookupAttributeKey = "ReadOnly"
	LookupAttributeKeyUsername     LookupAttributeKey = "Username"
	LookupAttributeKeyResourceType LookupAttributeKey = "ResourceType"
	LookupAttributeKeyResourceName LookupAttributeKey = "ResourceName"
	LookupAttributeKeyEventSource  LookupAttributeKey = "EventSource"
	LookupAttributeKeyAccessKeyId  LookupAttributeKey = "AccessKeyId"
)

// Values returns all known values for LookupAttributeKey. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (LookupAttributeKey) Values() []LookupAttributeKey {
	return []LookupAttributeKey{
		"EventId",
		"EventName",
		"ReadOnly",
		"Username",
		"ResourceType",
		"ResourceName",
		"EventSource",
		"AccessKeyId",
	}
}

type QueryStatus string

// Enum values for QueryStatus
const (
	QueryStatusQueued    QueryStatus = "QUEUED"
	QueryStatusRunning   QueryStatus = "RUNNING"
	QueryStatusFinished  QueryStatus = "FINISHED"
	QueryStatusFailed    QueryStatus = "FAILED"
	QueryStatusCancelled QueryStatus = "CANCELLED"
	QueryStatusTimedOut  QueryStatus = "TIMED_OUT"
)

// Values returns all known values for QueryStatus. Note that this can be expanded
// in the future, and so it is only as up to date as the client. The ordering of
// this slice is not guaranteed to be stable across updates.
func (QueryStatus) Values() []QueryStatus {
	return []QueryStatus{
		"QUEUED",
		"RUNNING",
		"FINISHED",
		"FAILED",
		"CANCELLED",
		"TIMED_OUT",
	}
}

type ReadWriteType string

// Enum values for ReadWriteType
const (
	ReadWriteTypeReadOnly  ReadWriteType = "ReadOnly"
	ReadWriteTypeWriteOnly ReadWriteType = "WriteOnly"
	ReadWriteTypeAll       ReadWriteType = "All"
)

// Values returns all known values for ReadWriteType. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (ReadWriteType) Values() []ReadWriteType {
	return []ReadWriteType{
		"ReadOnly",
		"WriteOnly",
		"All",
	}
}
