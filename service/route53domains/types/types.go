// Code generated by smithy-go-codegen DO NOT EDIT.

package types

import (
	"time"
)

// Information for one billing record.
type BillingRecord struct {
	// The name of the domain that the billing record applies to. If the domain name
	// contains characters other than a-z, 0-9, and - (hyphen), such as an
	// internationalized domain name, then this value is in Punycode. For more
	// information, see DNS Domain Name Format
	// (https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/DomainNameFormat.html)
	// in the Amazon Route 53 Developer Guide.
	DomainName *string
	// The operation that you were charged for.
	Operation OperationType
	// The price that you were charged for the operation, in US dollars. Example value:
	// 12.0
	Price *float64
	// The date that the operation was billed, in Unix format.
	BillDate *time.Time
	// The ID of the invoice that is associated with the billing record.
	InvoiceId *string
}

// ContactDetail includes the following elements.
type ContactDetail struct {
	// The city of the contact's address.
	City *string
	// First line of the contact's address.
	AddressLine1 *string
	// The phone number of the contact. Constraints: Phone number must be specified in
	// the format "+[country dialing code].[number including any area code>]". For
	// example, a US phone number might appear as "+1.1234567890".
	PhoneNumber *string
	// Second line of contact's address, if any.
	AddressLine2 *string
	// The zip or postal code of the contact's address.
	ZipCode *string
	// Last name of contact.
	LastName *string
	// The state or province of the contact's city.
	State *string
	// Code for the country of the contact's address.
	CountryCode CountryCode
	// Name of the organization for contact types other than PERSON.
	OrganizationName *string
	// A list of name-value pairs for parameters required by certain top-level domains.
	ExtraParams []*ExtraParam
	// Fax number of the contact. Constraints: Phone number must be specified in the
	// format "+[country dialing code].[number including any area code]". For example,
	// a US phone number might appear as "+1.1234567890".
	Fax *string
	// First name of contact.
	FirstName *string
	// Email address of the contact.
	Email *string
	// Indicates whether the contact is a person, company, association, or public
	// organization. Note the following:
	//
	//     * If you specify a value other than
	// PERSON, you must also specify a value for OrganizationName.
	//
	//     * For some
	// TLDs, the privacy protection available depends on the value that you specify for
	// Contact Type. For the privacy protection settings for your TLD, see Domains that
	// You Can Register with Amazon Route 53
	// (https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/registrar-tld-list.html)
	// in the Amazon Route 53 Developer Guide
	//
	//     * For .es domains, if you specify
	// PERSON, you must specify INDIVIDUAL for the value of ES_LEGAL_FORM.
	ContactType ContactType
}

// Information about one suggested domain name.
type DomainSuggestion struct {
	// Whether the domain name is available for registering. You can register only the
	// domains that are designated as AVAILABLE. Valid values: AVAILABLE The domain
	// name is available. AVAILABLE_RESERVED The domain name is reserved under specific
	// conditions. AVAILABLE_PREORDER The domain name is available and can be
	// preordered. DONT_KNOW The TLD registry didn't reply with a definitive answer
	// about whether the domain name is available. Route 53 can return this response
	// for a variety of reasons, for example, the registry is performing maintenance.
	// Try again later. PENDING The TLD registry didn't return a response in the
	// expected amount of time. When the response is delayed, it usually takes just a
	// few extra seconds. You can resubmit the request immediately. RESERVED The domain
	// name has been reserved for another person or organization. UNAVAILABLE The
	// domain name is not available. UNAVAILABLE_PREMIUM The domain name is not
	// available. UNAVAILABLE_RESTRICTED The domain name is forbidden.
	Availability *string
	// A suggested domain name.
	DomainName *string
}

// Summary information about one domain.
type DomainSummary struct {
	// Expiration date of the domain in Unix time format and Coordinated Universal Time
	// (UTC).
	Expiry *time.Time
	// The name of the domain that the summary information applies to.
	DomainName *string
	// Indicates whether the domain is automatically renewed upon expiration.
	AutoRenew *bool
	// Indicates whether a domain is locked from unauthorized transfer to another
	// party.
	TransferLock *bool
}

// A complex type that contains information about whether the specified domain can
// be transferred to Route 53.
type DomainTransferability struct {
	// Whether the domain name can be transferred to Route 53. You can transfer only
	// domains that have a value of TRANSFERABLE for Transferable.  <p>Valid
	// values:</p> <dl> <dt>TRANSFERABLE</dt> <dd> <p>The domain name can be
	// transferred to Route 53.</p> </dd> <dt>UNTRANSFERRABLE</dt> <dd> <p>The domain
	// name can't be transferred to Route 53.</p> </dd> <dt>DONT_KNOW</dt> <dd>
	// <p>Reserved for future use.</p> </dd> </dl>
	Transferable Transferable
}

// ExtraParam includes the following elements.
type ExtraParam struct {
	// The value that corresponds with the name of an extra parameter.
	Value *string
	// The name of an additional parameter that is required by a top-level domain. Here
	// are the top-level domains that require additional parameters and the names of
	// the parameters that they require:  <dl> <dt>.com.au and .net.au</dt> <dd> <ul>
	// <li> <p> <code>AU_ID_NUMBER</code> </p> </li> <li> <p> <code>AU_ID_TYPE</code>
	// </p> <p>Valid values include the following:</p> <ul> <li> <p> <code>ABN</code>
	// (Australian business number)</p> </li> <li> <p> <code>ACN</code> (Australian
	// company number)</p> </li> <li> <p> <code>TM</code> (Trademark number)</p> </li>
	// </ul> </li> </ul> </dd> <dt>.ca</dt> <dd> <ul> <li> <p>
	// <code>BRAND_NUMBER</code> </p> </li> <li> <p>
	// <code>CA_BUSINESS_ENTITY_TYPE</code> </p> <p>Valid values include the
	// following:</p> <ul> <li> <p> <code>BANK</code> (Bank)</p> </li> <li> <p>
	// <code>COMMERCIAL_COMPANY</code> (Commercial company)</p> </li> <li> <p>
	// <code>COMPANY</code> (Company)</p> </li> <li> <p> <code>COOPERATION</code>
	// (Cooperation)</p> </li> <li> <p> <code>COOPERATIVE</code> (Cooperative)</p>
	// </li> <li> <p> <code>COOPRIX</code> (Cooprix)</p> </li> <li> <p>
	// <code>CORP</code> (Corporation)</p> </li> <li> <p> <code>CREDIT_UNION</code>
	// (Credit union)</p> </li> <li> <p> <code>FOMIA</code> (Federation of mutual
	// insurance associations)</p> </li> <li> <p> <code>INC</code> (Incorporated)</p>
	// </li> <li> <p> <code>LTD</code> (Limited)</p> </li> <li> <p> <code>LTEE</code>
	// (Limitée)</p> </li> <li> <p> <code>LLC</code> (Limited liability
	// corporation)</p> </li> <li> <p> <code>LLP</code> (Limited liability
	// partnership)</p> </li> <li> <p> <code>LTE</code> (Lte.)</p> </li> <li> <p>
	// <code>MBA</code> (Mutual benefit association)</p> </li> <li> <p>
	// <code>MIC</code> (Mutual insurance company)</p> </li> <li> <p> <code>NFP</code>
	// (Not-for-profit corporation)</p> </li> <li> <p> <code>SA</code> (S.A.)</p> </li>
	// <li> <p> <code>SAVINGS_COMPANY</code> (Savings company)</p> </li> <li> <p>
	// <code>SAVINGS_UNION</code> (Savings union)</p> </li> <li> <p> <code>SARL</code>
	// (Société à responsabilité limitée)</p> </li> <li> <p> <code>TRUST</code>
	// (Trust)</p> </li> <li> <p> <code>ULC</code> (Unlimited liability
	// corporation)</p> </li> </ul> </li> <li> <p> <code>CA_LEGAL_TYPE</code> </p>
	// <p>When <code>ContactType</code> is <code>PERSON</code>, valid values include
	// the following:</p> <ul> <li> <p> <code>ABO</code> (Aboriginal Peoples indigenous
	// to Canada)</p> </li> <li> <p> <code>CCT</code> (Canadian citizen)</p> </li> <li>
	// <p> <code>LGR</code> (Legal Representative of a Canadian Citizen or Permanent
	// Resident)</p> </li> <li> <p> <code>RES</code> (Permanent resident of Canada)</p>
	// </li> </ul> <p>When <code>ContactType</code> is a value other than
	// <code>PERSON</code>, valid values include the following:</p> <ul> <li> <p>
	// <code>ASS</code> (Canadian unincorporated association)</p> </li> <li> <p>
	// <code>CCO</code> (Canadian corporation)</p> </li> <li> <p> <code>EDU</code>
	// (Canadian educational institution)</p> </li> <li> <p> <code>GOV</code>
	// (Government or government entity in Canada)</p> </li> <li> <p> <code>HOP</code>
	// (Canadian Hospital)</p> </li> <li> <p> <code>INB</code> (Indian Band recognized
	// by the Indian Act of Canada)</p> </li> <li> <p> <code>LAM</code> (Canadian
	// Library, Archive, or Museum)</p> </li> <li> <p> <code>MAJ</code> (Her/His
	// Majesty the Queen/King)</p> </li> <li> <p> <code>OMK</code> (Official mark
	// registered in Canada)</p> </li> <li> <p> <code>PLT</code> (Canadian Political
	// Party)</p> </li> <li> <p> <code>PRT</code> (Partnership Registered in
	// Canada)</p> </li> <li> <p> <code>TDM</code> (Trademark registered in Canada)</p>
	// </li> <li> <p> <code>TRD</code> (Canadian Trade Union)</p> </li> <li> <p>
	// <code>TRS</code> (Trust established in Canada)</p> </li> </ul> </li> </ul> </dd>
	// <dt>.es</dt> <dd> <ul> <li> <p> <code>ES_IDENTIFICATION</code> </p> <p>Specify
	// the applicable value:</p> <ul> <li> <p> <b>For contacts inside Spain:</b> Enter
	// your passport ID.</p> </li> <li> <p> <b>For contacts outside of Spain:</b> Enter
	// the VAT identification number for the company.</p> <note> <p>For .es domains,
	// the value of <code>ContactType</code> must be <code>PERSON</code>.</p> </note>
	// </li> </ul> </li> <li> <p> <code>ES_IDENTIFICATION_TYPE</code> </p> <p>Valid
	// values include the following:</p> <ul> <li> <p> <code>DNI_AND_NIF</code> (For
	// Spanish contacts)</p> </li> <li> <p> <code>NIE</code> (For foreigners with legal
	// residence)</p> </li> <li> <p> <code>OTHER</code> (For contacts outside of
	// Spain)</p> </li> </ul> </li> <li> <p> <code>ES_LEGAL_FORM</code> </p> <p>Valid
	// values include the following:</p> <ul> <li> <p> <code>ASSOCIATION</code> </p>
	// </li> <li> <p> <code>CENTRAL_GOVERNMENT_BODY</code> </p> </li> <li> <p>
	// <code>CIVIL_SOCIETY</code> </p> </li> <li> <p> <code>COMMUNITY_OF_OWNERS</code>
	// </p> </li> <li> <p> <code>COMMUNITY_PROPERTY</code> </p> </li> <li> <p>
	// <code>CONSULATE</code> </p> </li> <li> <p> <code>COOPERATIVE</code> </p> </li>
	// <li> <p> <code>DESIGNATION_OF_ORIGIN_SUPERVISORY_COUNCIL</code> </p> </li> <li>
	// <p> <code>ECONOMIC_INTEREST_GROUP</code> </p> </li> <li> <p>
	// <code>EMBASSY</code> </p> </li> <li> <p>
	// <code>ENTITY_MANAGING_NATURAL_AREAS</code> </p> </li> <li> <p>
	// <code>FARM_PARTNERSHIP</code> </p> </li> <li> <p> <code>FOUNDATION</code> </p>
	// </li> <li> <p> <code>GENERAL_AND_LIMITED_PARTNERSHIP</code> </p> </li> <li> <p>
	// <code>GENERAL_PARTNERSHIP</code> </p> </li> <li> <p> <code>INDIVIDUAL</code>
	// </p> </li> <li> <p> <code>LIMITED_COMPANY</code> </p> </li> <li> <p>
	// <code>LOCAL_AUTHORITY</code> </p> </li> <li> <p>
	// <code>LOCAL_PUBLIC_ENTITY</code> </p> </li> <li> <p>
	// <code>MUTUAL_INSURANCE_COMPANY</code> </p> </li> <li> <p>
	// <code>NATIONAL_PUBLIC_ENTITY</code> </p> </li> <li> <p>
	// <code>ORDER_OR_RELIGIOUS_INSTITUTION</code> </p> </li> <li> <p> <code>OTHERS
	// (Only for contacts outside of Spain)</code> </p> </li> <li> <p>
	// <code>POLITICAL_PARTY</code> </p> </li> <li> <p>
	// <code>PROFESSIONAL_ASSOCIATION</code> </p> </li> <li> <p>
	// <code>PUBLIC_LAW_ASSOCIATION</code> </p> </li> <li> <p>
	// <code>PUBLIC_LIMITED_COMPANY</code> </p> </li> <li> <p>
	// <code>REGIONAL_GOVERNMENT_BODY</code> </p> </li> <li> <p>
	// <code>REGIONAL_PUBLIC_ENTITY</code> </p> </li> <li> <p>
	// <code>SAVINGS_BANK</code> </p> </li> <li> <p> <code>SPANISH_OFFICE</code> </p>
	// </li> <li> <p> <code>SPORTS_ASSOCIATION</code> </p> </li> <li> <p>
	// <code>SPORTS_FEDERATION</code> </p> </li> <li> <p>
	// <code>SPORTS_LIMITED_COMPANY</code> </p> </li> <li> <p>
	// <code>TEMPORARY_ALLIANCE_OF_ENTERPRISES</code> </p> </li> <li> <p>
	// <code>TRADE_UNION</code> </p> </li> <li> <p> <code>WORKER_OWNED_COMPANY</code>
	// </p> </li> <li> <p> <code>WORKER_OWNED_LIMITED_COMPANY</code> </p> </li> </ul>
	// </li> </ul> </dd> <dt>.fi</dt> <dd> <ul> <li> <p>
	// <code>BIRTH_DATE_IN_YYYY_MM_DD</code> </p> </li> <li> <p>
	// <code>FI_BUSINESS_NUMBER</code> </p> </li> <li> <p> <code>FI_ID_NUMBER</code>
	// </p> </li> <li> <p> <code>FI_NATIONALITY</code> </p> <p>Valid values include the
	// following:</p> <ul> <li> <p> <code>FINNISH</code> </p> </li> <li> <p>
	// <code>NOT_FINNISH</code> </p> </li> </ul> </li> <li> <p>
	// <code>FI_ORGANIZATION_TYPE</code> </p> <p>Valid values include the
	// following:</p> <ul> <li> <p> <code>COMPANY</code> </p> </li> <li> <p>
	// <code>CORPORATION</code> </p> </li> <li> <p> <code>GOVERNMENT</code> </p> </li>
	// <li> <p> <code>INSTITUTION</code> </p> </li> <li> <p>
	// <code>POLITICAL_PARTY</code> </p> </li> <li> <p> <code>PUBLIC_COMMUNITY</code>
	// </p> </li> <li> <p> <code>TOWNSHIP</code> </p> </li> </ul> </li> </ul> </dd>
	// <dt>.fr</dt> <dd> <ul> <li> <p> <code>BIRTH_CITY</code> </p> </li> <li> <p>
	// <code>BIRTH_COUNTRY</code> </p> </li> <li> <p>
	// <code>BIRTH_DATE_IN_YYYY_MM_DD</code> </p> </li> <li> <p>
	// <code>BIRTH_DEPARTMENT</code>: Specify the INSEE code that corresponds with the
	// department where the contact was born. If the contact was born somewhere other
	// than France or its overseas departments, specify <code>99</code>. For more
	// information, including a list of departments and the corresponding INSEE
	// numbers, see the Wikipedia entry <a
	// href="https://en.wikipedia.org/wiki/Departments_of_France">Departments of
	// France</a>.</p> </li> <li> <p> <code>BRAND_NUMBER</code> </p> </li> </ul> </dd>
	// <dt>.it</dt> <dd> <ul> <li> <p> <code>IT_NATIONALITY</code> </p> </li> <li> <p>
	// <code>IT_PIN</code> </p> </li> <li> <p> <code>IT_REGISTRANT_ENTITY_TYPE</code>
	// </p> <p>Valid values include the following:</p> <ul> <li> <p>
	// <code>FOREIGNERS</code> </p> </li> <li> <p> <code>FREELANCE_WORKERS</code>
	// (Freelance workers and professionals)</p> </li> <li> <p>
	// <code>ITALIAN_COMPANIES</code> (Italian companies and one-person companies)</p>
	// </li> <li> <p> <code>NON_PROFIT_ORGANIZATIONS</code> </p> </li> <li> <p>
	// <code>OTHER_SUBJECTS</code> </p> </li> <li> <p>
	// <code>PUBLIC_ORGANIZATIONS</code> </p> </li> </ul> </li> </ul> </dd>
	// <dt>.ru</dt> <dd> <ul> <li> <p> <code>BIRTH_DATE_IN_YYYY_MM_DD</code> </p> </li>
	// <li> <p> <code>RU_PASSPORT_DATA</code> </p> </li> </ul> </dd> <dt>.se</dt> <dd>
	// <ul> <li> <p> <code>BIRTH_COUNTRY</code> </p> </li> <li> <p>
	// <code>SE_ID_NUMBER</code> </p> </li> </ul> </dd> <dt>.sg</dt> <dd> <ul> <li> <p>
	// <code>SG_ID_NUMBER</code> </p> </li> </ul> </dd> <dt>.co.uk, .me.uk, and
	// .org.uk</dt> <dd> <ul> <li> <p> <code>UK_CONTACT_TYPE</code> </p> <p>Valid
	// values include the following:</p> <ul> <li> <p> <code>CRC</code> (UK Corporation
	// by Royal Charter)</p> </li> <li> <p> <code>FCORP</code> (Non-UK Corporation)</p>
	// </li> <li> <p> <code>FIND</code> (Non-UK Individual, representing self)</p>
	// </li> <li> <p> <code>FOTHER</code> (Non-UK Entity that does not fit into any
	// other category)</p> </li> <li> <p> <code>GOV</code> (UK Government Body)</p>
	// </li> <li> <p> <code>IND</code> (UK Individual (representing self))</p> </li>
	// <li> <p> <code>IP</code> (UK Industrial/Provident Registered Company)</p> </li>
	// <li> <p> <code>LLP</code> (UK Limited Liability Partnership)</p> </li> <li> <p>
	// <code>LTD</code> (UK Limited Company)</p> </li> <li> <p> <code>OTHER</code> (UK
	// Entity that does not fit into any other category)</p> </li> <li> <p>
	// <code>PLC</code> (UK Public Limited Company)</p> </li> <li> <p>
	// <code>PTNR</code> (UK Partnership)</p> </li> <li> <p> <code>RCHAR</code> (UK
	// Registered Charity)</p> </li> <li> <p> <code>SCH</code> (UK School)</p> </li>
	// <li> <p> <code>STAT</code> (UK Statutory Body)</p> </li> <li> <p>
	// <code>STRA</code> (UK Sole Trader)</p> </li> </ul> </li> <li> <p>
	// <code>UK_COMPANY_NUMBER</code> </p> </li> </ul> </dd> </dl> <p>In addition, many
	// TLDs require a <code>VAT_NUMBER</code>.</p>
	Name ExtraParamName
}

// Nameserver includes the following elements.
type Nameserver struct {
	// The fully qualified host name of the name server. Constraint: Maximum 255
	// characters
	Name *string
	// Glue IP address of a name server entry. Glue IP addresses are required only when
	// the name of the name server is a subdomain of the domain. For example, if your
	// domain is example.com and the name server for the domain is ns.example.com, you
	// need to specify the IP address for ns.example.com. Constraints: The list can
	// contain only one IPv4 and one IPv6 address.
	GlueIps []*string
}

// OperationSummary includes the following elements.
type OperationSummary struct {
	// The date when the request was submitted.
	SubmittedDate *time.Time
	// The current status of the requested operation in the system.
	Status OperationStatus
	// Type of the action requested.
	Type OperationType
	// Identifier returned to track the requested action.
	OperationId *string
}

// Each tag includes the following elements.
type Tag struct {
	// The value of a tag. Valid values: A-Z, a-z, 0-9, space, ".:/=+\-@" Constraints:
	// Each value can be 0-256 characters long.
	Value *string
	// The key (name) of a tag. Valid values: A-Z, a-z, 0-9, space, ".:/=+\-@"
	// Constraints: Each key can be 1-128 characters long.
	Key *string
}
