// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package route53domains

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/route53domains/types"
)

const opUpdateDomainContact = "UpdateDomainContact"

// UpdateDomainContactRequest returns a request value for making API operation for
// Amazon Route 53 Domains.
//
// This operation updates the contact information for a particular domain. You
// must specify information for at least one contact: registrant, administrator,
// or technical.
//
// If the update is successful, this method returns an operation ID that you
// can use to track the progress and completion of the action. If the request
// is not completed successfully, the domain registrant will be notified by
// email.
//
//    // Example sending a request using UpdateDomainContactRequest.
//    req := client.UpdateDomainContactRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/route53domains-2014-05-15/UpdateDomainContact
func (c *Client) UpdateDomainContactRequest(input *types.UpdateDomainContactInput) UpdateDomainContactRequest {
	op := &aws.Operation{
		Name:       opUpdateDomainContact,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &types.UpdateDomainContactInput{}
	}

	req := c.newRequest(op, input, &types.UpdateDomainContactOutput{})
	return UpdateDomainContactRequest{Request: req, Input: input, Copy: c.UpdateDomainContactRequest}
}

// UpdateDomainContactRequest is the request type for the
// UpdateDomainContact API operation.
type UpdateDomainContactRequest struct {
	*aws.Request
	Input *types.UpdateDomainContactInput
	Copy  func(*types.UpdateDomainContactInput) UpdateDomainContactRequest
}

// Send marshals and sends the UpdateDomainContact API request.
func (r UpdateDomainContactRequest) Send(ctx context.Context) (*UpdateDomainContactResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &UpdateDomainContactResponse{
		UpdateDomainContactOutput: r.Request.Data.(*types.UpdateDomainContactOutput),
		response:                  &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// UpdateDomainContactResponse is the response type for the
// UpdateDomainContact API operation.
type UpdateDomainContactResponse struct {
	*types.UpdateDomainContactOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// UpdateDomainContact request.
func (r *UpdateDomainContactResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
