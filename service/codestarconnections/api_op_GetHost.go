// Code generated by smithy-go-codegen DO NOT EDIT.

package codestarconnections

import (
	"context"
	awsmiddleware "github.com/aws/aws-sdk-go-v2/aws/middleware"
	"github.com/aws/aws-sdk-go-v2/aws/signer/v4"
	"github.com/aws/aws-sdk-go-v2/service/codestarconnections/types"
	"github.com/awslabs/smithy-go/middleware"
	smithyhttp "github.com/awslabs/smithy-go/transport/http"
)

// Returns the host ARN and details such as status, provider type, endpoint, and,
// if applicable, the VPC configuration.
func (c *Client) GetHost(ctx context.Context, params *GetHostInput, optFns ...func(*Options)) (*GetHostOutput, error) {
	if params == nil {
		params = &GetHostInput{}
	}

	result, metadata, err := c.invokeOperation(ctx, "GetHost", params, optFns, addOperationGetHostMiddlewares)
	if err != nil {
		return nil, err
	}

	out := result.(*GetHostOutput)
	out.ResultMetadata = metadata
	return out, nil
}

type GetHostInput struct {

	// The Amazon Resource Name (ARN) of the requested host.
	//
	// This member is required.
	HostArn *string
}

type GetHostOutput struct {

	// The name of the requested host.
	Name *string

	// The endpoint of the infrastructure represented by the requested host.
	ProviderEndpoint *string

	// The provider type of the requested host, such as GitHub Enterprise Server.
	ProviderType types.ProviderType

	// The status of the requested host.
	Status *string

	// The VPC configuration of the requested host.
	VpcConfiguration *types.VpcConfiguration

	// Metadata pertaining to the operation's result.
	ResultMetadata middleware.Metadata
}

func addOperationGetHostMiddlewares(stack *middleware.Stack, options Options) (err error) {
	err = stack.Serialize.Add(&awsAwsjson10_serializeOpGetHost{}, middleware.After)
	if err != nil {
		return err
	}
	err = stack.Deserialize.Add(&awsAwsjson10_deserializeOpGetHost{}, middleware.After)
	if err != nil {
		return err
	}
	awsmiddleware.AddRequestInvocationIDMiddleware(stack)
	smithyhttp.AddContentLengthMiddleware(stack)
	addResolveEndpointMiddleware(stack, options)
	v4.AddComputePayloadSHA256Middleware(stack)
	addRetryMiddlewares(stack, options)
	addHTTPSignerV4Middleware(stack, options)
	awsmiddleware.AddAttemptClockSkewMiddleware(stack)
	addClientUserAgent(stack)
	smithyhttp.AddErrorCloseResponseBodyMiddleware(stack)
	smithyhttp.AddCloseResponseBodyMiddleware(stack)
	addOpGetHostValidationMiddleware(stack)
	stack.Initialize.Add(newServiceMetadataMiddleware_opGetHost(options.Region), middleware.Before)
	addRequestIDRetrieverMiddleware(stack)
	addResponseErrorMiddleware(stack)
	return nil
}

func newServiceMetadataMiddleware_opGetHost(region string) awsmiddleware.RegisterServiceMetadata {
	return awsmiddleware.RegisterServiceMetadata{
		Region:        region,
		ServiceID:     ServiceID,
		SigningName:   "codestar-connections",
		OperationName: "GetHost",
	}
}
