// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package sqs

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/private/protocol"
	"github.com/aws/aws-sdk-go-v2/private/protocol/query"
	"github.com/aws/aws-sdk-go-v2/service/sqs/types"
)

const opSetQueueAttributes = "SetQueueAttributes"

// SetQueueAttributesRequest returns a request value for making API operation for
// Amazon Simple Queue Service.
//
// Sets the value of one or more queue attributes. When you change a queue's
// attributes, the change can take up to 60 seconds for most of the attributes
// to propagate throughout the Amazon SQS system. Changes made to the MessageRetentionPeriod
// attribute can take up to 15 minutes.
//
//    * In the future, new attributes might be added. If you write code that
//    calls this action, we recommend that you structure your code so that it
//    can handle new attributes gracefully.
//
//    * Cross-account permissions don't apply to this action. For more information,
//    see Grant Cross-Account Permissions to a Role and a User Name (https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-customer-managed-policy-examples.html#grant-cross-account-permissions-to-role-and-user-name)
//    in the Amazon Simple Queue Service Developer Guide.
//
//    * To remove the ability to change queue permissions, you must deny permission
//    to the AddPermission, RemovePermission, and SetQueueAttributes actions
//    in your IAM policy.
//
//    // Example sending a request using SetQueueAttributesRequest.
//    req := client.SetQueueAttributesRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/sqs-2012-11-05/SetQueueAttributes
func (c *Client) SetQueueAttributesRequest(input *types.SetQueueAttributesInput) SetQueueAttributesRequest {
	op := &aws.Operation{
		Name:       opSetQueueAttributes,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &types.SetQueueAttributesInput{}
	}

	req := c.newRequest(op, input, &types.SetQueueAttributesOutput{})
	req.Handlers.Unmarshal.Remove(query.UnmarshalHandler)
	req.Handlers.Unmarshal.PushBackNamed(protocol.UnmarshalDiscardBodyHandler)
	return SetQueueAttributesRequest{Request: req, Input: input, Copy: c.SetQueueAttributesRequest}
}

// SetQueueAttributesRequest is the request type for the
// SetQueueAttributes API operation.
type SetQueueAttributesRequest struct {
	*aws.Request
	Input *types.SetQueueAttributesInput
	Copy  func(*types.SetQueueAttributesInput) SetQueueAttributesRequest
}

// Send marshals and sends the SetQueueAttributes API request.
func (r SetQueueAttributesRequest) Send(ctx context.Context) (*SetQueueAttributesResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &SetQueueAttributesResponse{
		SetQueueAttributesOutput: r.Request.Data.(*types.SetQueueAttributesOutput),
		response:                 &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// SetQueueAttributesResponse is the response type for the
// SetQueueAttributes API operation.
type SetQueueAttributesResponse struct {
	*types.SetQueueAttributesOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// SetQueueAttributes request.
func (r *SetQueueAttributesResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
