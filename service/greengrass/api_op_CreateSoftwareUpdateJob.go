// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package greengrass

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/greengrass/types"
)

const opCreateSoftwareUpdateJob = "CreateSoftwareUpdateJob"

// CreateSoftwareUpdateJobRequest returns a request value for making API operation for
// AWS Greengrass.
//
// Creates a software update for a core or group of cores (specified as an IoT
// thing group.) Use this to update the OTA Agent as well as the Greengrass
// core software. It makes use of the IoT Jobs feature which provides additional
// commands to manage a Greengrass core software update job.
//
//    // Example sending a request using CreateSoftwareUpdateJobRequest.
//    req := client.CreateSoftwareUpdateJobRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/greengrass-2017-06-07/CreateSoftwareUpdateJob
func (c *Client) CreateSoftwareUpdateJobRequest(input *types.CreateSoftwareUpdateJobInput) CreateSoftwareUpdateJobRequest {
	op := &aws.Operation{
		Name:       opCreateSoftwareUpdateJob,
		HTTPMethod: "POST",
		HTTPPath:   "/greengrass/updates",
	}

	if input == nil {
		input = &types.CreateSoftwareUpdateJobInput{}
	}

	req := c.newRequest(op, input, &types.CreateSoftwareUpdateJobOutput{})
	return CreateSoftwareUpdateJobRequest{Request: req, Input: input, Copy: c.CreateSoftwareUpdateJobRequest}
}

// CreateSoftwareUpdateJobRequest is the request type for the
// CreateSoftwareUpdateJob API operation.
type CreateSoftwareUpdateJobRequest struct {
	*aws.Request
	Input *types.CreateSoftwareUpdateJobInput
	Copy  func(*types.CreateSoftwareUpdateJobInput) CreateSoftwareUpdateJobRequest
}

// Send marshals and sends the CreateSoftwareUpdateJob API request.
func (r CreateSoftwareUpdateJobRequest) Send(ctx context.Context) (*CreateSoftwareUpdateJobResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &CreateSoftwareUpdateJobResponse{
		CreateSoftwareUpdateJobOutput: r.Request.Data.(*types.CreateSoftwareUpdateJobOutput),
		response:                      &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// CreateSoftwareUpdateJobResponse is the response type for the
// CreateSoftwareUpdateJob API operation.
type CreateSoftwareUpdateJobResponse struct {
	*types.CreateSoftwareUpdateJobOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// CreateSoftwareUpdateJob request.
func (r *CreateSoftwareUpdateJobResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
