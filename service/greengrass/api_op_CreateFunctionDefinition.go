// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package greengrass

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/greengrass/types"
)

const opCreateFunctionDefinition = "CreateFunctionDefinition"

// CreateFunctionDefinitionRequest returns a request value for making API operation for
// AWS Greengrass.
//
// Creates a Lambda function definition which contains a list of Lambda functions
// and their configurations to be used in a group. You can create an initial
// version of the definition by providing a list of Lambda functions and their
// configurations now, or use ''CreateFunctionDefinitionVersion'' later.
//
//    // Example sending a request using CreateFunctionDefinitionRequest.
//    req := client.CreateFunctionDefinitionRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/greengrass-2017-06-07/CreateFunctionDefinition
func (c *Client) CreateFunctionDefinitionRequest(input *types.CreateFunctionDefinitionInput) CreateFunctionDefinitionRequest {
	op := &aws.Operation{
		Name:       opCreateFunctionDefinition,
		HTTPMethod: "POST",
		HTTPPath:   "/greengrass/definition/functions",
	}

	if input == nil {
		input = &types.CreateFunctionDefinitionInput{}
	}

	req := c.newRequest(op, input, &types.CreateFunctionDefinitionOutput{})
	return CreateFunctionDefinitionRequest{Request: req, Input: input, Copy: c.CreateFunctionDefinitionRequest}
}

// CreateFunctionDefinitionRequest is the request type for the
// CreateFunctionDefinition API operation.
type CreateFunctionDefinitionRequest struct {
	*aws.Request
	Input *types.CreateFunctionDefinitionInput
	Copy  func(*types.CreateFunctionDefinitionInput) CreateFunctionDefinitionRequest
}

// Send marshals and sends the CreateFunctionDefinition API request.
func (r CreateFunctionDefinitionRequest) Send(ctx context.Context) (*CreateFunctionDefinitionResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &CreateFunctionDefinitionResponse{
		CreateFunctionDefinitionOutput: r.Request.Data.(*types.CreateFunctionDefinitionOutput),
		response:                       &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// CreateFunctionDefinitionResponse is the response type for the
// CreateFunctionDefinition API operation.
type CreateFunctionDefinitionResponse struct {
	*types.CreateFunctionDefinitionOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// CreateFunctionDefinition request.
func (r *CreateFunctionDefinitionResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
