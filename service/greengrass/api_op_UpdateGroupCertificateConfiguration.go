// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package greengrass

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/greengrass/types"
)

const opUpdateGroupCertificateConfiguration = "UpdateGroupCertificateConfiguration"

// UpdateGroupCertificateConfigurationRequest returns a request value for making API operation for
// AWS Greengrass.
//
// Updates the Certificate expiry time for a group.
//
//    // Example sending a request using UpdateGroupCertificateConfigurationRequest.
//    req := client.UpdateGroupCertificateConfigurationRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/greengrass-2017-06-07/UpdateGroupCertificateConfiguration
func (c *Client) UpdateGroupCertificateConfigurationRequest(input *types.UpdateGroupCertificateConfigurationInput) UpdateGroupCertificateConfigurationRequest {
	op := &aws.Operation{
		Name:       opUpdateGroupCertificateConfiguration,
		HTTPMethod: "PUT",
		HTTPPath:   "/greengrass/groups/{GroupId}/certificateauthorities/configuration/expiry",
	}

	if input == nil {
		input = &types.UpdateGroupCertificateConfigurationInput{}
	}

	req := c.newRequest(op, input, &types.UpdateGroupCertificateConfigurationOutput{})
	return UpdateGroupCertificateConfigurationRequest{Request: req, Input: input, Copy: c.UpdateGroupCertificateConfigurationRequest}
}

// UpdateGroupCertificateConfigurationRequest is the request type for the
// UpdateGroupCertificateConfiguration API operation.
type UpdateGroupCertificateConfigurationRequest struct {
	*aws.Request
	Input *types.UpdateGroupCertificateConfigurationInput
	Copy  func(*types.UpdateGroupCertificateConfigurationInput) UpdateGroupCertificateConfigurationRequest
}

// Send marshals and sends the UpdateGroupCertificateConfiguration API request.
func (r UpdateGroupCertificateConfigurationRequest) Send(ctx context.Context) (*UpdateGroupCertificateConfigurationResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &UpdateGroupCertificateConfigurationResponse{
		UpdateGroupCertificateConfigurationOutput: r.Request.Data.(*types.UpdateGroupCertificateConfigurationOutput),
		response: &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// UpdateGroupCertificateConfigurationResponse is the response type for the
// UpdateGroupCertificateConfiguration API operation.
type UpdateGroupCertificateConfigurationResponse struct {
	*types.UpdateGroupCertificateConfigurationOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// UpdateGroupCertificateConfiguration request.
func (r *UpdateGroupCertificateConfigurationResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
