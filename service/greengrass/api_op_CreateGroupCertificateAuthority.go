// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package greengrass

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/greengrass/types"
)

const opCreateGroupCertificateAuthority = "CreateGroupCertificateAuthority"

// CreateGroupCertificateAuthorityRequest returns a request value for making API operation for
// AWS Greengrass.
//
// Creates a CA for the group. If a CA already exists, it will rotate the existing
// CA.
//
//    // Example sending a request using CreateGroupCertificateAuthorityRequest.
//    req := client.CreateGroupCertificateAuthorityRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/greengrass-2017-06-07/CreateGroupCertificateAuthority
func (c *Client) CreateGroupCertificateAuthorityRequest(input *types.CreateGroupCertificateAuthorityInput) CreateGroupCertificateAuthorityRequest {
	op := &aws.Operation{
		Name:       opCreateGroupCertificateAuthority,
		HTTPMethod: "POST",
		HTTPPath:   "/greengrass/groups/{GroupId}/certificateauthorities",
	}

	if input == nil {
		input = &types.CreateGroupCertificateAuthorityInput{}
	}

	req := c.newRequest(op, input, &types.CreateGroupCertificateAuthorityOutput{})
	return CreateGroupCertificateAuthorityRequest{Request: req, Input: input, Copy: c.CreateGroupCertificateAuthorityRequest}
}

// CreateGroupCertificateAuthorityRequest is the request type for the
// CreateGroupCertificateAuthority API operation.
type CreateGroupCertificateAuthorityRequest struct {
	*aws.Request
	Input *types.CreateGroupCertificateAuthorityInput
	Copy  func(*types.CreateGroupCertificateAuthorityInput) CreateGroupCertificateAuthorityRequest
}

// Send marshals and sends the CreateGroupCertificateAuthority API request.
func (r CreateGroupCertificateAuthorityRequest) Send(ctx context.Context) (*CreateGroupCertificateAuthorityResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &CreateGroupCertificateAuthorityResponse{
		CreateGroupCertificateAuthorityOutput: r.Request.Data.(*types.CreateGroupCertificateAuthorityOutput),
		response:                              &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// CreateGroupCertificateAuthorityResponse is the response type for the
// CreateGroupCertificateAuthority API operation.
type CreateGroupCertificateAuthorityResponse struct {
	*types.CreateGroupCertificateAuthorityOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// CreateGroupCertificateAuthority request.
func (r *CreateGroupCertificateAuthorityResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
