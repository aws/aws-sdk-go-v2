// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package apigateway

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/apigateway/types"
)

const opGetSdkType = "GetSdkType"

// GetSdkTypeRequest returns a request value for making API operation for
// Amazon API Gateway.
//
//    // Example sending a request using GetSdkTypeRequest.
//    req := client.GetSdkTypeRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
func (c *Client) GetSdkTypeRequest(input *types.GetSdkTypeInput) GetSdkTypeRequest {
	op := &aws.Operation{
		Name:       opGetSdkType,
		HTTPMethod: "GET",
		HTTPPath:   "/sdktypes/{sdktype_id}",
	}

	if input == nil {
		input = &types.GetSdkTypeInput{}
	}

	req := c.newRequest(op, input, &types.GetSdkTypeOutput{})
	return GetSdkTypeRequest{Request: req, Input: input, Copy: c.GetSdkTypeRequest}
}

// GetSdkTypeRequest is the request type for the
// GetSdkType API operation.
type GetSdkTypeRequest struct {
	*aws.Request
	Input *types.GetSdkTypeInput
	Copy  func(*types.GetSdkTypeInput) GetSdkTypeRequest
}

// Send marshals and sends the GetSdkType API request.
func (r GetSdkTypeRequest) Send(ctx context.Context) (*GetSdkTypeResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &GetSdkTypeResponse{
		GetSdkTypeOutput: r.Request.Data.(*types.GetSdkTypeOutput),
		response:         &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// GetSdkTypeResponse is the response type for the
// GetSdkType API operation.
type GetSdkTypeResponse struct {
	*types.GetSdkTypeOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// GetSdkType request.
func (r *GetSdkTypeResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
