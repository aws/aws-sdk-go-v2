// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package apigateway

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/private/protocol/restjson"
	"github.com/aws/aws-sdk-go-v2/service/apigateway/internal/aws_restjson"
	"github.com/aws/aws-sdk-go-v2/service/apigateway/types"
)

const opTestInvokeMethod = "TestInvokeMethod"

// TestInvokeMethodRequest returns a request value for making API operation for
// Amazon API Gateway.
//
// Simulate the execution of a Method in your RestApi with headers, parameters,
// and an incoming request body.
//
//    // Example sending a request using TestInvokeMethodRequest.
//    req := client.TestInvokeMethodRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
func (c *Client) TestInvokeMethodRequest(input *types.TestInvokeMethodInput) TestInvokeMethodRequest {
	op := &aws.Operation{
		Name:       opTestInvokeMethod,
		HTTPMethod: "POST",
		HTTPPath:   "/restapis/{restapi_id}/resources/{resource_id}/methods/{http_method}",
	}

	if input == nil {
		input = &types.TestInvokeMethodInput{}
	}

	req := c.newRequest(op, input, &types.TestInvokeMethodOutput{})

	// swap existing build handler on svc, with a new named build handler
	req.Handlers.Build.Swap(restjson.BuildHandler.Name, aws_restjson.TestInvokeMethodMarshaler{Input: input}.GetNamedBuildHandler())

	return TestInvokeMethodRequest{Request: req, Input: input, Copy: c.TestInvokeMethodRequest}
}

// TestInvokeMethodRequest is the request type for the
// TestInvokeMethod API operation.
type TestInvokeMethodRequest struct {
	*aws.Request
	Input *types.TestInvokeMethodInput
	Copy  func(*types.TestInvokeMethodInput) TestInvokeMethodRequest
}

// Send marshals and sends the TestInvokeMethod API request.
func (r TestInvokeMethodRequest) Send(ctx context.Context) (*TestInvokeMethodResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &TestInvokeMethodResponse{
		TestInvokeMethodOutput: r.Request.Data.(*types.TestInvokeMethodOutput),
		response:               &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// TestInvokeMethodResponse is the response type for the
// TestInvokeMethod API operation.
type TestInvokeMethodResponse struct {
	*types.TestInvokeMethodOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// TestInvokeMethod request.
func (r *TestInvokeMethodResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
