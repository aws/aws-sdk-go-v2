// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package apigateway

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/apigateway/types"
)

const opUpdateVpcLink = "UpdateVpcLink"

// UpdateVpcLinkRequest returns a request value for making API operation for
// Amazon API Gateway.
//
// Updates an existing VpcLink of a specified identifier.
//
//    // Example sending a request using UpdateVpcLinkRequest.
//    req := client.UpdateVpcLinkRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
func (c *Client) UpdateVpcLinkRequest(input *types.UpdateVpcLinkInput) UpdateVpcLinkRequest {
	op := &aws.Operation{
		Name:       opUpdateVpcLink,
		HTTPMethod: "PATCH",
		HTTPPath:   "/vpclinks/{vpclink_id}",
	}

	if input == nil {
		input = &types.UpdateVpcLinkInput{}
	}

	req := c.newRequest(op, input, &types.UpdateVpcLinkOutput{})
	return UpdateVpcLinkRequest{Request: req, Input: input, Copy: c.UpdateVpcLinkRequest}
}

// UpdateVpcLinkRequest is the request type for the
// UpdateVpcLink API operation.
type UpdateVpcLinkRequest struct {
	*aws.Request
	Input *types.UpdateVpcLinkInput
	Copy  func(*types.UpdateVpcLinkInput) UpdateVpcLinkRequest
}

// Send marshals and sends the UpdateVpcLink API request.
func (r UpdateVpcLinkRequest) Send(ctx context.Context) (*UpdateVpcLinkResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &UpdateVpcLinkResponse{
		UpdateVpcLinkOutput: r.Request.Data.(*types.UpdateVpcLinkOutput),
		response:            &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// UpdateVpcLinkResponse is the response type for the
// UpdateVpcLink API operation.
type UpdateVpcLinkResponse struct {
	*types.UpdateVpcLinkOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// UpdateVpcLink request.
func (r *UpdateVpcLinkResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
