// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package apigateway

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/apigateway/types"
)

const opCreateRestApi = "CreateRestApi"

// CreateRestApiRequest returns a request value for making API operation for
// Amazon API Gateway.
//
// Creates a new RestApi resource.
//
//    // Example sending a request using CreateRestApiRequest.
//    req := client.CreateRestApiRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
func (c *Client) CreateRestApiRequest(input *types.CreateRestApiInput) CreateRestApiRequest {
	op := &aws.Operation{
		Name:       opCreateRestApi,
		HTTPMethod: "POST",
		HTTPPath:   "/restapis",
	}

	if input == nil {
		input = &types.CreateRestApiInput{}
	}

	req := c.newRequest(op, input, &types.CreateRestApiOutput{})
	return CreateRestApiRequest{Request: req, Input: input, Copy: c.CreateRestApiRequest}
}

// CreateRestApiRequest is the request type for the
// CreateRestApi API operation.
type CreateRestApiRequest struct {
	*aws.Request
	Input *types.CreateRestApiInput
	Copy  func(*types.CreateRestApiInput) CreateRestApiRequest
}

// Send marshals and sends the CreateRestApi API request.
func (r CreateRestApiRequest) Send(ctx context.Context) (*CreateRestApiResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &CreateRestApiResponse{
		CreateRestApiOutput: r.Request.Data.(*types.CreateRestApiOutput),
		response:            &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// CreateRestApiResponse is the response type for the
// CreateRestApi API operation.
type CreateRestApiResponse struct {
	*types.CreateRestApiOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// CreateRestApi request.
func (r *CreateRestApiResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
