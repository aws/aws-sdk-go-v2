// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

// Package aws_restjson service, marshal.go contains the generated operation marshalers and methods on it.

package aws_restjson

import (
	"bytes"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/aws/awserr"
	"github.com/aws/aws-sdk-go-v2/private/protocol/jsonrpc"
	"github.com/aws/aws-sdk-go-v2/private/protocol/rest"
	"github.com/aws/aws-sdk-go-v2/service/apigateway/types"
)

var _ bytes.Buffer
var _ awserr.Error

// CreateApiKeyMarshaler defines marshaler for CreateApiKey operation
type CreateApiKeyMarshaler struct {
	Input *types.CreateApiKeyInput
}

// CreateAuthorizerMarshaler defines marshaler for CreateAuthorizer operation
type CreateAuthorizerMarshaler struct {
	Input *types.CreateAuthorizerInput
}

// CreateBasePathMappingMarshaler defines marshaler for CreateBasePathMapping operation
type CreateBasePathMappingMarshaler struct {
	Input *types.CreateBasePathMappingInput
}

// CreateDeploymentMarshaler defines marshaler for CreateDeployment operation
type CreateDeploymentMarshaler struct {
	Input *types.CreateDeploymentInput
}

// CreateDocumentationPartMarshaler defines marshaler for CreateDocumentationPart operation
type CreateDocumentationPartMarshaler struct {
	Input *types.CreateDocumentationPartInput
}

// CreateDocumentationVersionMarshaler defines marshaler for CreateDocumentationVersion operation
type CreateDocumentationVersionMarshaler struct {
	Input *types.CreateDocumentationVersionInput
}

// CreateDomainNameMarshaler defines marshaler for CreateDomainName operation
type CreateDomainNameMarshaler struct {
	Input *types.CreateDomainNameInput
}

// CreateModelMarshaler defines marshaler for CreateModel operation
type CreateModelMarshaler struct {
	Input *types.CreateModelInput
}

// CreateRequestValidatorMarshaler defines marshaler for CreateRequestValidator operation
type CreateRequestValidatorMarshaler struct {
	Input *types.CreateRequestValidatorInput
}

// CreateResourceMarshaler defines marshaler for CreateResource operation
type CreateResourceMarshaler struct {
	Input *types.CreateResourceInput
}

// CreateRestApiMarshaler defines marshaler for CreateRestApi operation
type CreateRestApiMarshaler struct {
	Input *types.CreateRestApiInput
}

// CreateStageMarshaler defines marshaler for CreateStage operation
type CreateStageMarshaler struct {
	Input *types.CreateStageInput
}

// CreateUsagePlanMarshaler defines marshaler for CreateUsagePlan operation
type CreateUsagePlanMarshaler struct {
	Input *types.CreateUsagePlanInput
}

// CreateUsagePlanKeyMarshaler defines marshaler for CreateUsagePlanKey operation
type CreateUsagePlanKeyMarshaler struct {
	Input *types.CreateUsagePlanKeyInput
}

// CreateVpcLinkMarshaler defines marshaler for CreateVpcLink operation
type CreateVpcLinkMarshaler struct {
	Input *types.CreateVpcLinkInput
}

// DeleteApiKeyMarshaler defines marshaler for DeleteApiKey operation
type DeleteApiKeyMarshaler struct {
	Input *types.DeleteApiKeyInput
}

// DeleteAuthorizerMarshaler defines marshaler for DeleteAuthorizer operation
type DeleteAuthorizerMarshaler struct {
	Input *types.DeleteAuthorizerInput
}

// DeleteBasePathMappingMarshaler defines marshaler for DeleteBasePathMapping operation
type DeleteBasePathMappingMarshaler struct {
	Input *types.DeleteBasePathMappingInput
}

// DeleteClientCertificateMarshaler defines marshaler for DeleteClientCertificate operation
type DeleteClientCertificateMarshaler struct {
	Input *types.DeleteClientCertificateInput
}

// DeleteDeploymentMarshaler defines marshaler for DeleteDeployment operation
type DeleteDeploymentMarshaler struct {
	Input *types.DeleteDeploymentInput
}

// DeleteDocumentationPartMarshaler defines marshaler for DeleteDocumentationPart operation
type DeleteDocumentationPartMarshaler struct {
	Input *types.DeleteDocumentationPartInput
}

// DeleteDocumentationVersionMarshaler defines marshaler for DeleteDocumentationVersion operation
type DeleteDocumentationVersionMarshaler struct {
	Input *types.DeleteDocumentationVersionInput
}

// DeleteDomainNameMarshaler defines marshaler for DeleteDomainName operation
type DeleteDomainNameMarshaler struct {
	Input *types.DeleteDomainNameInput
}

// DeleteGatewayResponseMarshaler defines marshaler for DeleteGatewayResponse operation
type DeleteGatewayResponseMarshaler struct {
	Input *types.DeleteGatewayResponseInput
}

// DeleteIntegrationMarshaler defines marshaler for DeleteIntegration operation
type DeleteIntegrationMarshaler struct {
	Input *types.DeleteIntegrationInput
}

// DeleteIntegrationResponseMarshaler defines marshaler for DeleteIntegrationResponse operation
type DeleteIntegrationResponseMarshaler struct {
	Input *types.DeleteIntegrationResponseInput
}

// DeleteMethodMarshaler defines marshaler for DeleteMethod operation
type DeleteMethodMarshaler struct {
	Input *types.DeleteMethodInput
}

// DeleteMethodResponseMarshaler defines marshaler for DeleteMethodResponse operation
type DeleteMethodResponseMarshaler struct {
	Input *types.DeleteMethodResponseInput
}

// DeleteModelMarshaler defines marshaler for DeleteModel operation
type DeleteModelMarshaler struct {
	Input *types.DeleteModelInput
}

// DeleteRequestValidatorMarshaler defines marshaler for DeleteRequestValidator operation
type DeleteRequestValidatorMarshaler struct {
	Input *types.DeleteRequestValidatorInput
}

// DeleteResourceMarshaler defines marshaler for DeleteResource operation
type DeleteResourceMarshaler struct {
	Input *types.DeleteResourceInput
}

// DeleteRestApiMarshaler defines marshaler for DeleteRestApi operation
type DeleteRestApiMarshaler struct {
	Input *types.DeleteRestApiInput
}

// DeleteStageMarshaler defines marshaler for DeleteStage operation
type DeleteStageMarshaler struct {
	Input *types.DeleteStageInput
}

// DeleteUsagePlanMarshaler defines marshaler for DeleteUsagePlan operation
type DeleteUsagePlanMarshaler struct {
	Input *types.DeleteUsagePlanInput
}

// DeleteUsagePlanKeyMarshaler defines marshaler for DeleteUsagePlanKey operation
type DeleteUsagePlanKeyMarshaler struct {
	Input *types.DeleteUsagePlanKeyInput
}

// DeleteVpcLinkMarshaler defines marshaler for DeleteVpcLink operation
type DeleteVpcLinkMarshaler struct {
	Input *types.DeleteVpcLinkInput
}

// FlushStageAuthorizersCacheMarshaler defines marshaler for FlushStageAuthorizersCache operation
type FlushStageAuthorizersCacheMarshaler struct {
	Input *types.FlushStageAuthorizersCacheInput
}

// FlushStageCacheMarshaler defines marshaler for FlushStageCache operation
type FlushStageCacheMarshaler struct {
	Input *types.FlushStageCacheInput
}

// GenerateClientCertificateMarshaler defines marshaler for GenerateClientCertificate operation
type GenerateClientCertificateMarshaler struct {
	Input *types.GenerateClientCertificateInput
}

// GetAccountMarshaler defines marshaler for GetAccount operation
type GetAccountMarshaler struct {
	Input *types.GetAccountInput
}

// GetApiKeyMarshaler defines marshaler for GetApiKey operation
type GetApiKeyMarshaler struct {
	Input *types.GetApiKeyInput
}

// GetApiKeysMarshaler defines marshaler for GetApiKeys operation
type GetApiKeysMarshaler struct {
	Input *types.GetApiKeysInput
}

// GetAuthorizerMarshaler defines marshaler for GetAuthorizer operation
type GetAuthorizerMarshaler struct {
	Input *types.GetAuthorizerInput
}

// GetAuthorizersMarshaler defines marshaler for GetAuthorizers operation
type GetAuthorizersMarshaler struct {
	Input *types.GetAuthorizersInput
}

// GetBasePathMappingMarshaler defines marshaler for GetBasePathMapping operation
type GetBasePathMappingMarshaler struct {
	Input *types.GetBasePathMappingInput
}

// GetBasePathMappingsMarshaler defines marshaler for GetBasePathMappings operation
type GetBasePathMappingsMarshaler struct {
	Input *types.GetBasePathMappingsInput
}

// GetClientCertificateMarshaler defines marshaler for GetClientCertificate operation
type GetClientCertificateMarshaler struct {
	Input *types.GetClientCertificateInput
}

// GetClientCertificatesMarshaler defines marshaler for GetClientCertificates operation
type GetClientCertificatesMarshaler struct {
	Input *types.GetClientCertificatesInput
}

// GetDeploymentMarshaler defines marshaler for GetDeployment operation
type GetDeploymentMarshaler struct {
	Input *types.GetDeploymentInput
}

// GetDeploymentsMarshaler defines marshaler for GetDeployments operation
type GetDeploymentsMarshaler struct {
	Input *types.GetDeploymentsInput
}

// GetDocumentationPartMarshaler defines marshaler for GetDocumentationPart operation
type GetDocumentationPartMarshaler struct {
	Input *types.GetDocumentationPartInput
}

// GetDocumentationPartsMarshaler defines marshaler for GetDocumentationParts operation
type GetDocumentationPartsMarshaler struct {
	Input *types.GetDocumentationPartsInput
}

// GetDocumentationVersionMarshaler defines marshaler for GetDocumentationVersion operation
type GetDocumentationVersionMarshaler struct {
	Input *types.GetDocumentationVersionInput
}

// GetDocumentationVersionsMarshaler defines marshaler for GetDocumentationVersions operation
type GetDocumentationVersionsMarshaler struct {
	Input *types.GetDocumentationVersionsInput
}

// GetDomainNameMarshaler defines marshaler for GetDomainName operation
type GetDomainNameMarshaler struct {
	Input *types.GetDomainNameInput
}

// GetDomainNamesMarshaler defines marshaler for GetDomainNames operation
type GetDomainNamesMarshaler struct {
	Input *types.GetDomainNamesInput
}

// GetExportMarshaler defines marshaler for GetExport operation
type GetExportMarshaler struct {
	Input *types.GetExportInput
}

// GetGatewayResponseMarshaler defines marshaler for GetGatewayResponse operation
type GetGatewayResponseMarshaler struct {
	Input *types.GetGatewayResponseInput
}

// GetGatewayResponsesMarshaler defines marshaler for GetGatewayResponses operation
type GetGatewayResponsesMarshaler struct {
	Input *types.GetGatewayResponsesInput
}

// GetIntegrationMarshaler defines marshaler for GetIntegration operation
type GetIntegrationMarshaler struct {
	Input *types.GetIntegrationInput
}

// GetIntegrationResponseMarshaler defines marshaler for GetIntegrationResponse operation
type GetIntegrationResponseMarshaler struct {
	Input *types.GetIntegrationResponseInput
}

// GetMethodMarshaler defines marshaler for GetMethod operation
type GetMethodMarshaler struct {
	Input *types.GetMethodInput
}

// GetMethodResponseMarshaler defines marshaler for GetMethodResponse operation
type GetMethodResponseMarshaler struct {
	Input *types.GetMethodResponseInput
}

// GetModelMarshaler defines marshaler for GetModel operation
type GetModelMarshaler struct {
	Input *types.GetModelInput
}

// GetModelTemplateMarshaler defines marshaler for GetModelTemplate operation
type GetModelTemplateMarshaler struct {
	Input *types.GetModelTemplateInput
}

// GetModelsMarshaler defines marshaler for GetModels operation
type GetModelsMarshaler struct {
	Input *types.GetModelsInput
}

// GetRequestValidatorMarshaler defines marshaler for GetRequestValidator operation
type GetRequestValidatorMarshaler struct {
	Input *types.GetRequestValidatorInput
}

// GetRequestValidatorsMarshaler defines marshaler for GetRequestValidators operation
type GetRequestValidatorsMarshaler struct {
	Input *types.GetRequestValidatorsInput
}

// GetResourceMarshaler defines marshaler for GetResource operation
type GetResourceMarshaler struct {
	Input *types.GetResourceInput
}

// GetResourcesMarshaler defines marshaler for GetResources operation
type GetResourcesMarshaler struct {
	Input *types.GetResourcesInput
}

// GetRestApiMarshaler defines marshaler for GetRestApi operation
type GetRestApiMarshaler struct {
	Input *types.GetRestApiInput
}

// GetRestApisMarshaler defines marshaler for GetRestApis operation
type GetRestApisMarshaler struct {
	Input *types.GetRestApisInput
}

// GetSdkMarshaler defines marshaler for GetSdk operation
type GetSdkMarshaler struct {
	Input *types.GetSdkInput
}

// GetSdkTypeMarshaler defines marshaler for GetSdkType operation
type GetSdkTypeMarshaler struct {
	Input *types.GetSdkTypeInput
}

// GetSdkTypesMarshaler defines marshaler for GetSdkTypes operation
type GetSdkTypesMarshaler struct {
	Input *types.GetSdkTypesInput
}

// GetStageMarshaler defines marshaler for GetStage operation
type GetStageMarshaler struct {
	Input *types.GetStageInput
}

// GetStagesMarshaler defines marshaler for GetStages operation
type GetStagesMarshaler struct {
	Input *types.GetStagesInput
}

// GetTagsMarshaler defines marshaler for GetTags operation
type GetTagsMarshaler struct {
	Input *types.GetTagsInput
}

// GetUsageMarshaler defines marshaler for GetUsage operation
type GetUsageMarshaler struct {
	Input *types.GetUsageInput
}

// GetUsagePlanMarshaler defines marshaler for GetUsagePlan operation
type GetUsagePlanMarshaler struct {
	Input *types.GetUsagePlanInput
}

// GetUsagePlanKeyMarshaler defines marshaler for GetUsagePlanKey operation
type GetUsagePlanKeyMarshaler struct {
	Input *types.GetUsagePlanKeyInput
}

// GetUsagePlanKeysMarshaler defines marshaler for GetUsagePlanKeys operation
type GetUsagePlanKeysMarshaler struct {
	Input *types.GetUsagePlanKeysInput
}

// GetUsagePlansMarshaler defines marshaler for GetUsagePlans operation
type GetUsagePlansMarshaler struct {
	Input *types.GetUsagePlansInput
}

// GetVpcLinkMarshaler defines marshaler for GetVpcLink operation
type GetVpcLinkMarshaler struct {
	Input *types.GetVpcLinkInput
}

// GetVpcLinksMarshaler defines marshaler for GetVpcLinks operation
type GetVpcLinksMarshaler struct {
	Input *types.GetVpcLinksInput
}

// ImportApiKeysMarshaler defines marshaler for ImportApiKeys operation
type ImportApiKeysMarshaler struct {
	Input *types.ImportApiKeysInput
}

// ImportDocumentationPartsMarshaler defines marshaler for ImportDocumentationParts operation
type ImportDocumentationPartsMarshaler struct {
	Input *types.ImportDocumentationPartsInput
}

// ImportRestApiMarshaler defines marshaler for ImportRestApi operation
type ImportRestApiMarshaler struct {
	Input *types.ImportRestApiInput
}

// PutGatewayResponseMarshaler defines marshaler for PutGatewayResponse operation
type PutGatewayResponseMarshaler struct {
	Input *types.PutGatewayResponseInput
}

// PutIntegrationMarshaler defines marshaler for PutIntegration operation
type PutIntegrationMarshaler struct {
	Input *types.PutIntegrationInput
}

// PutIntegrationResponseMarshaler defines marshaler for PutIntegrationResponse operation
type PutIntegrationResponseMarshaler struct {
	Input *types.PutIntegrationResponseInput
}

// PutMethodMarshaler defines marshaler for PutMethod operation
type PutMethodMarshaler struct {
	Input *types.PutMethodInput
}

// PutMethodResponseMarshaler defines marshaler for PutMethodResponse operation
type PutMethodResponseMarshaler struct {
	Input *types.PutMethodResponseInput
}

// PutRestApiMarshaler defines marshaler for PutRestApi operation
type PutRestApiMarshaler struct {
	Input *types.PutRestApiInput
}

// TagResourceMarshaler defines marshaler for TagResource operation
type TagResourceMarshaler struct {
	Input *types.TagResourceInput
}

// TestInvokeAuthorizerMarshaler defines marshaler for TestInvokeAuthorizer operation
type TestInvokeAuthorizerMarshaler struct {
	Input *types.TestInvokeAuthorizerInput
}

// TestInvokeMethodMarshaler defines marshaler for TestInvokeMethod operation
type TestInvokeMethodMarshaler struct {
	Input *types.TestInvokeMethodInput
}

// UntagResourceMarshaler defines marshaler for UntagResource operation
type UntagResourceMarshaler struct {
	Input *types.UntagResourceInput
}

// UpdateAccountMarshaler defines marshaler for UpdateAccount operation
type UpdateAccountMarshaler struct {
	Input *types.UpdateAccountInput
}

// UpdateApiKeyMarshaler defines marshaler for UpdateApiKey operation
type UpdateApiKeyMarshaler struct {
	Input *types.UpdateApiKeyInput
}

// UpdateAuthorizerMarshaler defines marshaler for UpdateAuthorizer operation
type UpdateAuthorizerMarshaler struct {
	Input *types.UpdateAuthorizerInput
}

// UpdateBasePathMappingMarshaler defines marshaler for UpdateBasePathMapping operation
type UpdateBasePathMappingMarshaler struct {
	Input *types.UpdateBasePathMappingInput
}

// UpdateClientCertificateMarshaler defines marshaler for UpdateClientCertificate operation
type UpdateClientCertificateMarshaler struct {
	Input *types.UpdateClientCertificateInput
}

// UpdateDeploymentMarshaler defines marshaler for UpdateDeployment operation
type UpdateDeploymentMarshaler struct {
	Input *types.UpdateDeploymentInput
}

// UpdateDocumentationPartMarshaler defines marshaler for UpdateDocumentationPart operation
type UpdateDocumentationPartMarshaler struct {
	Input *types.UpdateDocumentationPartInput
}

// UpdateDocumentationVersionMarshaler defines marshaler for UpdateDocumentationVersion operation
type UpdateDocumentationVersionMarshaler struct {
	Input *types.UpdateDocumentationVersionInput
}

// UpdateDomainNameMarshaler defines marshaler for UpdateDomainName operation
type UpdateDomainNameMarshaler struct {
	Input *types.UpdateDomainNameInput
}

// UpdateGatewayResponseMarshaler defines marshaler for UpdateGatewayResponse operation
type UpdateGatewayResponseMarshaler struct {
	Input *types.UpdateGatewayResponseInput
}

// UpdateIntegrationMarshaler defines marshaler for UpdateIntegration operation
type UpdateIntegrationMarshaler struct {
	Input *types.UpdateIntegrationInput
}

// UpdateIntegrationResponseMarshaler defines marshaler for UpdateIntegrationResponse operation
type UpdateIntegrationResponseMarshaler struct {
	Input *types.UpdateIntegrationResponseInput
}

// UpdateMethodMarshaler defines marshaler for UpdateMethod operation
type UpdateMethodMarshaler struct {
	Input *types.UpdateMethodInput
}

// UpdateMethodResponseMarshaler defines marshaler for UpdateMethodResponse operation
type UpdateMethodResponseMarshaler struct {
	Input *types.UpdateMethodResponseInput
}

// UpdateModelMarshaler defines marshaler for UpdateModel operation
type UpdateModelMarshaler struct {
	Input *types.UpdateModelInput
}

// UpdateRequestValidatorMarshaler defines marshaler for UpdateRequestValidator operation
type UpdateRequestValidatorMarshaler struct {
	Input *types.UpdateRequestValidatorInput
}

// UpdateResourceMarshaler defines marshaler for UpdateResource operation
type UpdateResourceMarshaler struct {
	Input *types.UpdateResourceInput
}

// UpdateRestApiMarshaler defines marshaler for UpdateRestApi operation
type UpdateRestApiMarshaler struct {
	Input *types.UpdateRestApiInput
}

// UpdateStageMarshaler defines marshaler for UpdateStage operation
type UpdateStageMarshaler struct {
	Input *types.UpdateStageInput
}

// UpdateUsageMarshaler defines marshaler for UpdateUsage operation
type UpdateUsageMarshaler struct {
	Input *types.UpdateUsageInput
}

// UpdateUsagePlanMarshaler defines marshaler for UpdateUsagePlan operation
type UpdateUsagePlanMarshaler struct {
	Input *types.UpdateUsagePlanInput
}

// UpdateVpcLinkMarshaler defines marshaler for UpdateVpcLink operation
type UpdateVpcLinkMarshaler struct {
	Input *types.UpdateVpcLinkInput
}

func MarshalCreateApiKeyInputShapeAWSREST(v *types.CreateApiKeyInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalCreateApiKeyInputShapeAWSJSON(v *types.CreateApiKeyInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalCreateAuthorizerInputShapeAWSREST(v *types.CreateAuthorizerInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalCreateAuthorizerInputShapeAWSJSON(v *types.CreateAuthorizerInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalCreateBasePathMappingInputShapeAWSREST(v *types.CreateBasePathMappingInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalCreateBasePathMappingInputShapeAWSJSON(v *types.CreateBasePathMappingInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalCreateDeploymentInputShapeAWSREST(v *types.CreateDeploymentInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalCreateDeploymentInputShapeAWSJSON(v *types.CreateDeploymentInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalCreateDocumentationPartInputShapeAWSREST(v *types.CreateDocumentationPartInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalCreateDocumentationPartInputShapeAWSJSON(v *types.CreateDocumentationPartInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalCreateDocumentationVersionInputShapeAWSREST(v *types.CreateDocumentationVersionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalCreateDocumentationVersionInputShapeAWSJSON(v *types.CreateDocumentationVersionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalCreateDomainNameInputShapeAWSREST(v *types.CreateDomainNameInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalCreateDomainNameInputShapeAWSJSON(v *types.CreateDomainNameInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalCreateModelInputShapeAWSREST(v *types.CreateModelInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalCreateModelInputShapeAWSJSON(v *types.CreateModelInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalCreateRequestValidatorInputShapeAWSREST(v *types.CreateRequestValidatorInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalCreateRequestValidatorInputShapeAWSJSON(v *types.CreateRequestValidatorInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalCreateResourceInputShapeAWSREST(v *types.CreateResourceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalCreateResourceInputShapeAWSJSON(v *types.CreateResourceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalCreateRestApiInputShapeAWSREST(v *types.CreateRestApiInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalCreateRestApiInputShapeAWSJSON(v *types.CreateRestApiInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalCreateStageInputShapeAWSREST(v *types.CreateStageInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalCreateStageInputShapeAWSJSON(v *types.CreateStageInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalCreateUsagePlanInputShapeAWSREST(v *types.CreateUsagePlanInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalCreateUsagePlanInputShapeAWSJSON(v *types.CreateUsagePlanInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalCreateUsagePlanKeyInputShapeAWSREST(v *types.CreateUsagePlanKeyInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalCreateUsagePlanKeyInputShapeAWSJSON(v *types.CreateUsagePlanKeyInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalCreateVpcLinkInputShapeAWSREST(v *types.CreateVpcLinkInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalCreateVpcLinkInputShapeAWSJSON(v *types.CreateVpcLinkInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalDeleteApiKeyInputShapeAWSREST(v *types.DeleteApiKeyInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalDeleteApiKeyInputShapeAWSJSON(v *types.DeleteApiKeyInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalDeleteAuthorizerInputShapeAWSREST(v *types.DeleteAuthorizerInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalDeleteAuthorizerInputShapeAWSJSON(v *types.DeleteAuthorizerInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalDeleteBasePathMappingInputShapeAWSREST(v *types.DeleteBasePathMappingInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalDeleteBasePathMappingInputShapeAWSJSON(v *types.DeleteBasePathMappingInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalDeleteClientCertificateInputShapeAWSREST(v *types.DeleteClientCertificateInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalDeleteClientCertificateInputShapeAWSJSON(v *types.DeleteClientCertificateInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalDeleteDeploymentInputShapeAWSREST(v *types.DeleteDeploymentInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalDeleteDeploymentInputShapeAWSJSON(v *types.DeleteDeploymentInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalDeleteDocumentationPartInputShapeAWSREST(v *types.DeleteDocumentationPartInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalDeleteDocumentationPartInputShapeAWSJSON(v *types.DeleteDocumentationPartInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalDeleteDocumentationVersionInputShapeAWSREST(v *types.DeleteDocumentationVersionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalDeleteDocumentationVersionInputShapeAWSJSON(v *types.DeleteDocumentationVersionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalDeleteDomainNameInputShapeAWSREST(v *types.DeleteDomainNameInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalDeleteDomainNameInputShapeAWSJSON(v *types.DeleteDomainNameInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalDeleteGatewayResponseInputShapeAWSREST(v *types.DeleteGatewayResponseInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalDeleteGatewayResponseInputShapeAWSJSON(v *types.DeleteGatewayResponseInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalDeleteIntegrationInputShapeAWSREST(v *types.DeleteIntegrationInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalDeleteIntegrationInputShapeAWSJSON(v *types.DeleteIntegrationInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalDeleteIntegrationResponseInputShapeAWSREST(v *types.DeleteIntegrationResponseInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalDeleteIntegrationResponseInputShapeAWSJSON(v *types.DeleteIntegrationResponseInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalDeleteMethodInputShapeAWSREST(v *types.DeleteMethodInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalDeleteMethodInputShapeAWSJSON(v *types.DeleteMethodInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalDeleteMethodResponseInputShapeAWSREST(v *types.DeleteMethodResponseInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalDeleteMethodResponseInputShapeAWSJSON(v *types.DeleteMethodResponseInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalDeleteModelInputShapeAWSREST(v *types.DeleteModelInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalDeleteModelInputShapeAWSJSON(v *types.DeleteModelInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalDeleteRequestValidatorInputShapeAWSREST(v *types.DeleteRequestValidatorInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalDeleteRequestValidatorInputShapeAWSJSON(v *types.DeleteRequestValidatorInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalDeleteResourceInputShapeAWSREST(v *types.DeleteResourceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalDeleteResourceInputShapeAWSJSON(v *types.DeleteResourceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalDeleteRestApiInputShapeAWSREST(v *types.DeleteRestApiInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalDeleteRestApiInputShapeAWSJSON(v *types.DeleteRestApiInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalDeleteStageInputShapeAWSREST(v *types.DeleteStageInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalDeleteStageInputShapeAWSJSON(v *types.DeleteStageInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalDeleteUsagePlanInputShapeAWSREST(v *types.DeleteUsagePlanInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalDeleteUsagePlanInputShapeAWSJSON(v *types.DeleteUsagePlanInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalDeleteUsagePlanKeyInputShapeAWSREST(v *types.DeleteUsagePlanKeyInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalDeleteUsagePlanKeyInputShapeAWSJSON(v *types.DeleteUsagePlanKeyInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalDeleteVpcLinkInputShapeAWSREST(v *types.DeleteVpcLinkInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalDeleteVpcLinkInputShapeAWSJSON(v *types.DeleteVpcLinkInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalFlushStageAuthorizersCacheInputShapeAWSREST(v *types.FlushStageAuthorizersCacheInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalFlushStageAuthorizersCacheInputShapeAWSJSON(v *types.FlushStageAuthorizersCacheInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalFlushStageCacheInputShapeAWSREST(v *types.FlushStageCacheInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalFlushStageCacheInputShapeAWSJSON(v *types.FlushStageCacheInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalGenerateClientCertificateInputShapeAWSREST(v *types.GenerateClientCertificateInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalGenerateClientCertificateInputShapeAWSJSON(v *types.GenerateClientCertificateInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalGetAccountInputShapeAWSREST(v *types.GetAccountInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalGetAccountInputShapeAWSJSON(v *types.GetAccountInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalGetApiKeyInputShapeAWSREST(v *types.GetApiKeyInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalGetApiKeyInputShapeAWSJSON(v *types.GetApiKeyInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalGetApiKeysInputShapeAWSREST(v *types.GetApiKeysInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalGetApiKeysInputShapeAWSJSON(v *types.GetApiKeysInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalGetAuthorizerInputShapeAWSREST(v *types.GetAuthorizerInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalGetAuthorizerInputShapeAWSJSON(v *types.GetAuthorizerInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalGetAuthorizersInputShapeAWSREST(v *types.GetAuthorizersInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalGetAuthorizersInputShapeAWSJSON(v *types.GetAuthorizersInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalGetBasePathMappingInputShapeAWSREST(v *types.GetBasePathMappingInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalGetBasePathMappingInputShapeAWSJSON(v *types.GetBasePathMappingInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalGetBasePathMappingsInputShapeAWSREST(v *types.GetBasePathMappingsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalGetBasePathMappingsInputShapeAWSJSON(v *types.GetBasePathMappingsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalGetClientCertificateInputShapeAWSREST(v *types.GetClientCertificateInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalGetClientCertificateInputShapeAWSJSON(v *types.GetClientCertificateInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalGetClientCertificatesInputShapeAWSREST(v *types.GetClientCertificatesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalGetClientCertificatesInputShapeAWSJSON(v *types.GetClientCertificatesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalGetDeploymentInputShapeAWSREST(v *types.GetDeploymentInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalGetDeploymentInputShapeAWSJSON(v *types.GetDeploymentInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalGetDeploymentsInputShapeAWSREST(v *types.GetDeploymentsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalGetDeploymentsInputShapeAWSJSON(v *types.GetDeploymentsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalGetDocumentationPartInputShapeAWSREST(v *types.GetDocumentationPartInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalGetDocumentationPartInputShapeAWSJSON(v *types.GetDocumentationPartInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalGetDocumentationPartsInputShapeAWSREST(v *types.GetDocumentationPartsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalGetDocumentationPartsInputShapeAWSJSON(v *types.GetDocumentationPartsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalGetDocumentationVersionInputShapeAWSREST(v *types.GetDocumentationVersionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalGetDocumentationVersionInputShapeAWSJSON(v *types.GetDocumentationVersionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalGetDocumentationVersionsInputShapeAWSREST(v *types.GetDocumentationVersionsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalGetDocumentationVersionsInputShapeAWSJSON(v *types.GetDocumentationVersionsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalGetDomainNameInputShapeAWSREST(v *types.GetDomainNameInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalGetDomainNameInputShapeAWSJSON(v *types.GetDomainNameInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalGetDomainNamesInputShapeAWSREST(v *types.GetDomainNamesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalGetDomainNamesInputShapeAWSJSON(v *types.GetDomainNamesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalGetExportInputShapeAWSREST(v *types.GetExportInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalGetExportInputShapeAWSJSON(v *types.GetExportInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalGetGatewayResponseInputShapeAWSREST(v *types.GetGatewayResponseInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalGetGatewayResponseInputShapeAWSJSON(v *types.GetGatewayResponseInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalGetGatewayResponsesInputShapeAWSREST(v *types.GetGatewayResponsesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalGetGatewayResponsesInputShapeAWSJSON(v *types.GetGatewayResponsesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalGetIntegrationInputShapeAWSREST(v *types.GetIntegrationInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalGetIntegrationInputShapeAWSJSON(v *types.GetIntegrationInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalGetIntegrationResponseInputShapeAWSREST(v *types.GetIntegrationResponseInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalGetIntegrationResponseInputShapeAWSJSON(v *types.GetIntegrationResponseInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalGetMethodInputShapeAWSREST(v *types.GetMethodInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalGetMethodInputShapeAWSJSON(v *types.GetMethodInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalGetMethodResponseInputShapeAWSREST(v *types.GetMethodResponseInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalGetMethodResponseInputShapeAWSJSON(v *types.GetMethodResponseInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalGetModelInputShapeAWSREST(v *types.GetModelInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalGetModelInputShapeAWSJSON(v *types.GetModelInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalGetModelTemplateInputShapeAWSREST(v *types.GetModelTemplateInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalGetModelTemplateInputShapeAWSJSON(v *types.GetModelTemplateInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalGetModelsInputShapeAWSREST(v *types.GetModelsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalGetModelsInputShapeAWSJSON(v *types.GetModelsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalGetRequestValidatorInputShapeAWSREST(v *types.GetRequestValidatorInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalGetRequestValidatorInputShapeAWSJSON(v *types.GetRequestValidatorInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalGetRequestValidatorsInputShapeAWSREST(v *types.GetRequestValidatorsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalGetRequestValidatorsInputShapeAWSJSON(v *types.GetRequestValidatorsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalGetResourceInputShapeAWSREST(v *types.GetResourceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalGetResourceInputShapeAWSJSON(v *types.GetResourceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalGetResourcesInputShapeAWSREST(v *types.GetResourcesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalGetResourcesInputShapeAWSJSON(v *types.GetResourcesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalGetRestApiInputShapeAWSREST(v *types.GetRestApiInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalGetRestApiInputShapeAWSJSON(v *types.GetRestApiInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalGetRestApisInputShapeAWSREST(v *types.GetRestApisInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalGetRestApisInputShapeAWSJSON(v *types.GetRestApisInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalGetSdkInputShapeAWSREST(v *types.GetSdkInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalGetSdkInputShapeAWSJSON(v *types.GetSdkInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalGetSdkTypeInputShapeAWSREST(v *types.GetSdkTypeInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalGetSdkTypeInputShapeAWSJSON(v *types.GetSdkTypeInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalGetSdkTypesInputShapeAWSREST(v *types.GetSdkTypesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalGetSdkTypesInputShapeAWSJSON(v *types.GetSdkTypesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalGetStageInputShapeAWSREST(v *types.GetStageInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalGetStageInputShapeAWSJSON(v *types.GetStageInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalGetStagesInputShapeAWSREST(v *types.GetStagesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalGetStagesInputShapeAWSJSON(v *types.GetStagesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalGetTagsInputShapeAWSREST(v *types.GetTagsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalGetTagsInputShapeAWSJSON(v *types.GetTagsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalGetUsageInputShapeAWSREST(v *types.GetUsageInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalGetUsageInputShapeAWSJSON(v *types.GetUsageInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalGetUsagePlanInputShapeAWSREST(v *types.GetUsagePlanInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalGetUsagePlanInputShapeAWSJSON(v *types.GetUsagePlanInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalGetUsagePlanKeyInputShapeAWSREST(v *types.GetUsagePlanKeyInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalGetUsagePlanKeyInputShapeAWSJSON(v *types.GetUsagePlanKeyInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalGetUsagePlanKeysInputShapeAWSREST(v *types.GetUsagePlanKeysInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalGetUsagePlanKeysInputShapeAWSJSON(v *types.GetUsagePlanKeysInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalGetUsagePlansInputShapeAWSREST(v *types.GetUsagePlansInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalGetUsagePlansInputShapeAWSJSON(v *types.GetUsagePlansInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalGetVpcLinkInputShapeAWSREST(v *types.GetVpcLinkInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalGetVpcLinkInputShapeAWSJSON(v *types.GetVpcLinkInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalGetVpcLinksInputShapeAWSREST(v *types.GetVpcLinksInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalGetVpcLinksInputShapeAWSJSON(v *types.GetVpcLinksInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalImportApiKeysInputShapeAWSREST(v *types.ImportApiKeysInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalImportApiKeysInputShapeAWSJSON(v *types.ImportApiKeysInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalImportDocumentationPartsInputShapeAWSREST(v *types.ImportDocumentationPartsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalImportDocumentationPartsInputShapeAWSJSON(v *types.ImportDocumentationPartsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalImportRestApiInputShapeAWSREST(v *types.ImportRestApiInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalImportRestApiInputShapeAWSJSON(v *types.ImportRestApiInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalPutGatewayResponseInputShapeAWSREST(v *types.PutGatewayResponseInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalPutGatewayResponseInputShapeAWSJSON(v *types.PutGatewayResponseInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalPutIntegrationInputShapeAWSREST(v *types.PutIntegrationInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalPutIntegrationInputShapeAWSJSON(v *types.PutIntegrationInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalPutIntegrationResponseInputShapeAWSREST(v *types.PutIntegrationResponseInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalPutIntegrationResponseInputShapeAWSJSON(v *types.PutIntegrationResponseInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalPutMethodInputShapeAWSREST(v *types.PutMethodInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalPutMethodInputShapeAWSJSON(v *types.PutMethodInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalPutMethodResponseInputShapeAWSREST(v *types.PutMethodResponseInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalPutMethodResponseInputShapeAWSJSON(v *types.PutMethodResponseInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalPutRestApiInputShapeAWSREST(v *types.PutRestApiInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalPutRestApiInputShapeAWSJSON(v *types.PutRestApiInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalTagResourceInputShapeAWSREST(v *types.TagResourceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalTagResourceInputShapeAWSJSON(v *types.TagResourceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalTestInvokeAuthorizerInputShapeAWSREST(v *types.TestInvokeAuthorizerInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalTestInvokeAuthorizerInputShapeAWSJSON(v *types.TestInvokeAuthorizerInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalTestInvokeMethodInputShapeAWSREST(v *types.TestInvokeMethodInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalTestInvokeMethodInputShapeAWSJSON(v *types.TestInvokeMethodInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalUntagResourceInputShapeAWSREST(v *types.UntagResourceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalUntagResourceInputShapeAWSJSON(v *types.UntagResourceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalUpdateAccountInputShapeAWSREST(v *types.UpdateAccountInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalUpdateAccountInputShapeAWSJSON(v *types.UpdateAccountInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalUpdateApiKeyInputShapeAWSREST(v *types.UpdateApiKeyInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalUpdateApiKeyInputShapeAWSJSON(v *types.UpdateApiKeyInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalUpdateAuthorizerInputShapeAWSREST(v *types.UpdateAuthorizerInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalUpdateAuthorizerInputShapeAWSJSON(v *types.UpdateAuthorizerInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalUpdateBasePathMappingInputShapeAWSREST(v *types.UpdateBasePathMappingInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalUpdateBasePathMappingInputShapeAWSJSON(v *types.UpdateBasePathMappingInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalUpdateClientCertificateInputShapeAWSREST(v *types.UpdateClientCertificateInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalUpdateClientCertificateInputShapeAWSJSON(v *types.UpdateClientCertificateInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalUpdateDeploymentInputShapeAWSREST(v *types.UpdateDeploymentInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalUpdateDeploymentInputShapeAWSJSON(v *types.UpdateDeploymentInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalUpdateDocumentationPartInputShapeAWSREST(v *types.UpdateDocumentationPartInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalUpdateDocumentationPartInputShapeAWSJSON(v *types.UpdateDocumentationPartInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalUpdateDocumentationVersionInputShapeAWSREST(v *types.UpdateDocumentationVersionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalUpdateDocumentationVersionInputShapeAWSJSON(v *types.UpdateDocumentationVersionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalUpdateDomainNameInputShapeAWSREST(v *types.UpdateDomainNameInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalUpdateDomainNameInputShapeAWSJSON(v *types.UpdateDomainNameInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalUpdateGatewayResponseInputShapeAWSREST(v *types.UpdateGatewayResponseInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalUpdateGatewayResponseInputShapeAWSJSON(v *types.UpdateGatewayResponseInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalUpdateIntegrationInputShapeAWSREST(v *types.UpdateIntegrationInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalUpdateIntegrationInputShapeAWSJSON(v *types.UpdateIntegrationInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalUpdateIntegrationResponseInputShapeAWSREST(v *types.UpdateIntegrationResponseInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalUpdateIntegrationResponseInputShapeAWSJSON(v *types.UpdateIntegrationResponseInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalUpdateMethodInputShapeAWSREST(v *types.UpdateMethodInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalUpdateMethodInputShapeAWSJSON(v *types.UpdateMethodInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalUpdateMethodResponseInputShapeAWSREST(v *types.UpdateMethodResponseInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalUpdateMethodResponseInputShapeAWSJSON(v *types.UpdateMethodResponseInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalUpdateModelInputShapeAWSREST(v *types.UpdateModelInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalUpdateModelInputShapeAWSJSON(v *types.UpdateModelInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalUpdateRequestValidatorInputShapeAWSREST(v *types.UpdateRequestValidatorInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalUpdateRequestValidatorInputShapeAWSJSON(v *types.UpdateRequestValidatorInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalUpdateResourceInputShapeAWSREST(v *types.UpdateResourceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalUpdateResourceInputShapeAWSJSON(v *types.UpdateResourceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalUpdateRestApiInputShapeAWSREST(v *types.UpdateRestApiInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalUpdateRestApiInputShapeAWSJSON(v *types.UpdateRestApiInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalUpdateStageInputShapeAWSREST(v *types.UpdateStageInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalUpdateStageInputShapeAWSJSON(v *types.UpdateStageInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalUpdateUsageInputShapeAWSREST(v *types.UpdateUsageInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalUpdateUsageInputShapeAWSJSON(v *types.UpdateUsageInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalUpdateUsagePlanInputShapeAWSREST(v *types.UpdateUsagePlanInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalUpdateUsagePlanInputShapeAWSJSON(v *types.UpdateUsagePlanInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalUpdateVpcLinkInputShapeAWSREST(v *types.UpdateVpcLinkInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalUpdateVpcLinkInputShapeAWSJSON(v *types.UpdateVpcLinkInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}
func (m CreateApiKeyMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateApiKeyInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalCreateApiKeyInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateApiKeyMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateApiKey.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateAuthorizerMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateAuthorizerInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalCreateAuthorizerInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateAuthorizerMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateAuthorizer.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateBasePathMappingMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateBasePathMappingInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalCreateBasePathMappingInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateBasePathMappingMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateBasePathMapping.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateDeploymentMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateDeploymentInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalCreateDeploymentInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateDeploymentMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateDeployment.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateDocumentationPartMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateDocumentationPartInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalCreateDocumentationPartInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateDocumentationPartMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateDocumentationPart.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateDocumentationVersionMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateDocumentationVersionInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalCreateDocumentationVersionInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateDocumentationVersionMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateDocumentationVersion.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateDomainNameMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateDomainNameInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalCreateDomainNameInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateDomainNameMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateDomainName.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateModelMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateModelInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalCreateModelInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateModelMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateModel.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateRequestValidatorMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateRequestValidatorInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalCreateRequestValidatorInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateRequestValidatorMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateRequestValidator.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateResourceMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateResourceInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalCreateResourceInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateResourceMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateResource.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateRestApiMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateRestApiInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalCreateRestApiInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateRestApiMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateRestApi.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateStageMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateStageInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalCreateStageInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateStageMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateStage.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateUsagePlanMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateUsagePlanInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalCreateUsagePlanInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateUsagePlanMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateUsagePlan.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateUsagePlanKeyMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateUsagePlanKeyInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalCreateUsagePlanKeyInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateUsagePlanKeyMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateUsagePlanKey.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateVpcLinkMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateVpcLinkInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalCreateVpcLinkInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateVpcLinkMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateVpcLink.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteApiKeyMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteApiKeyInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalDeleteApiKeyInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteApiKeyMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteApiKey.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteAuthorizerMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteAuthorizerInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalDeleteAuthorizerInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteAuthorizerMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteAuthorizer.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteBasePathMappingMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteBasePathMappingInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalDeleteBasePathMappingInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteBasePathMappingMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteBasePathMapping.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteClientCertificateMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteClientCertificateInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalDeleteClientCertificateInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteClientCertificateMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteClientCertificate.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteDeploymentMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteDeploymentInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalDeleteDeploymentInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteDeploymentMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteDeployment.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteDocumentationPartMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteDocumentationPartInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalDeleteDocumentationPartInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteDocumentationPartMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteDocumentationPart.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteDocumentationVersionMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteDocumentationVersionInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalDeleteDocumentationVersionInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteDocumentationVersionMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteDocumentationVersion.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteDomainNameMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteDomainNameInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalDeleteDomainNameInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteDomainNameMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteDomainName.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteGatewayResponseMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteGatewayResponseInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalDeleteGatewayResponseInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteGatewayResponseMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteGatewayResponse.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteIntegrationMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteIntegrationInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalDeleteIntegrationInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteIntegrationMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteIntegration.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteIntegrationResponseMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteIntegrationResponseInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalDeleteIntegrationResponseInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteIntegrationResponseMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteIntegrationResponse.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteMethodMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteMethodInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalDeleteMethodInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteMethodMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteMethod.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteMethodResponseMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteMethodResponseInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalDeleteMethodResponseInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteMethodResponseMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteMethodResponse.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteModelMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteModelInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalDeleteModelInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteModelMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteModel.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteRequestValidatorMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteRequestValidatorInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalDeleteRequestValidatorInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteRequestValidatorMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteRequestValidator.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteResourceMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteResourceInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalDeleteResourceInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteResourceMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteResource.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteRestApiMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteRestApiInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalDeleteRestApiInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteRestApiMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteRestApi.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteStageMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteStageInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalDeleteStageInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteStageMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteStage.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteUsagePlanMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteUsagePlanInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalDeleteUsagePlanInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteUsagePlanMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteUsagePlan.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteUsagePlanKeyMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteUsagePlanKeyInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalDeleteUsagePlanKeyInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteUsagePlanKeyMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteUsagePlanKey.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteVpcLinkMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteVpcLinkInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalDeleteVpcLinkInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteVpcLinkMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteVpcLink.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m FlushStageAuthorizersCacheMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalFlushStageAuthorizersCacheInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalFlushStageAuthorizersCacheInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m FlushStageAuthorizersCacheMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "FlushStageAuthorizersCache.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m FlushStageCacheMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalFlushStageCacheInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalFlushStageCacheInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m FlushStageCacheMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "FlushStageCache.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GenerateClientCertificateMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGenerateClientCertificateInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalGenerateClientCertificateInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GenerateClientCertificateMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GenerateClientCertificate.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetAccountMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetAccountInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalGetAccountInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetAccountMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetAccount.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetApiKeyMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetApiKeyInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalGetApiKeyInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetApiKeyMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetApiKey.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetApiKeysMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetApiKeysInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalGetApiKeysInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetApiKeysMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetApiKeys.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetAuthorizerMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetAuthorizerInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalGetAuthorizerInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetAuthorizerMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetAuthorizer.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetAuthorizersMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetAuthorizersInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalGetAuthorizersInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetAuthorizersMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetAuthorizers.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetBasePathMappingMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetBasePathMappingInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalGetBasePathMappingInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetBasePathMappingMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetBasePathMapping.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetBasePathMappingsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetBasePathMappingsInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalGetBasePathMappingsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetBasePathMappingsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetBasePathMappings.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetClientCertificateMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetClientCertificateInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalGetClientCertificateInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetClientCertificateMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetClientCertificate.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetClientCertificatesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetClientCertificatesInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalGetClientCertificatesInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetClientCertificatesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetClientCertificates.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetDeploymentMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetDeploymentInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalGetDeploymentInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetDeploymentMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetDeployment.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetDeploymentsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetDeploymentsInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalGetDeploymentsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetDeploymentsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetDeployments.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetDocumentationPartMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetDocumentationPartInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalGetDocumentationPartInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetDocumentationPartMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetDocumentationPart.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetDocumentationPartsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetDocumentationPartsInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalGetDocumentationPartsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetDocumentationPartsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetDocumentationParts.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetDocumentationVersionMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetDocumentationVersionInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalGetDocumentationVersionInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetDocumentationVersionMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetDocumentationVersion.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetDocumentationVersionsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetDocumentationVersionsInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalGetDocumentationVersionsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetDocumentationVersionsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetDocumentationVersions.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetDomainNameMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetDomainNameInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalGetDomainNameInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetDomainNameMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetDomainName.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetDomainNamesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetDomainNamesInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalGetDomainNamesInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetDomainNamesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetDomainNames.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetExportMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetExportInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalGetExportInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetExportMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetExport.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetGatewayResponseMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetGatewayResponseInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalGetGatewayResponseInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetGatewayResponseMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetGatewayResponse.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetGatewayResponsesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetGatewayResponsesInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalGetGatewayResponsesInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetGatewayResponsesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetGatewayResponses.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetIntegrationMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetIntegrationInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalGetIntegrationInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetIntegrationMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetIntegration.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetIntegrationResponseMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetIntegrationResponseInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalGetIntegrationResponseInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetIntegrationResponseMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetIntegrationResponse.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetMethodMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetMethodInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalGetMethodInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetMethodMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetMethod.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetMethodResponseMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetMethodResponseInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalGetMethodResponseInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetMethodResponseMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetMethodResponse.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetModelMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetModelInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalGetModelInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetModelMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetModel.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetModelTemplateMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetModelTemplateInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalGetModelTemplateInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetModelTemplateMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetModelTemplate.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetModelsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetModelsInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalGetModelsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetModelsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetModels.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetRequestValidatorMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetRequestValidatorInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalGetRequestValidatorInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetRequestValidatorMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetRequestValidator.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetRequestValidatorsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetRequestValidatorsInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalGetRequestValidatorsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetRequestValidatorsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetRequestValidators.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetResourceMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetResourceInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalGetResourceInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetResourceMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetResource.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetResourcesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetResourcesInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalGetResourcesInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetResourcesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetResources.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetRestApiMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetRestApiInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalGetRestApiInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetRestApiMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetRestApi.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetRestApisMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetRestApisInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalGetRestApisInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetRestApisMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetRestApis.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetSdkMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetSdkInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalGetSdkInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetSdkMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetSdk.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetSdkTypeMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetSdkTypeInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalGetSdkTypeInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetSdkTypeMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetSdkType.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetSdkTypesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetSdkTypesInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalGetSdkTypesInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetSdkTypesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetSdkTypes.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetStageMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetStageInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalGetStageInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetStageMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetStage.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetStagesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetStagesInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalGetStagesInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetStagesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetStages.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetTagsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetTagsInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalGetTagsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetTagsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetTags.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetUsageMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetUsageInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalGetUsageInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetUsageMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetUsage.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetUsagePlanMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetUsagePlanInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalGetUsagePlanInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetUsagePlanMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetUsagePlan.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetUsagePlanKeyMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetUsagePlanKeyInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalGetUsagePlanKeyInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetUsagePlanKeyMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetUsagePlanKey.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetUsagePlanKeysMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetUsagePlanKeysInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalGetUsagePlanKeysInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetUsagePlanKeysMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetUsagePlanKeys.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetUsagePlansMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetUsagePlansInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalGetUsagePlansInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetUsagePlansMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetUsagePlans.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetVpcLinkMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetVpcLinkInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalGetVpcLinkInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetVpcLinkMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetVpcLink.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetVpcLinksMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetVpcLinksInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalGetVpcLinksInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetVpcLinksMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetVpcLinks.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ImportApiKeysMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalImportApiKeysInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalImportApiKeysInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ImportApiKeysMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ImportApiKeys.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ImportDocumentationPartsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalImportDocumentationPartsInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalImportDocumentationPartsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ImportDocumentationPartsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ImportDocumentationParts.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ImportRestApiMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalImportRestApiInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalImportRestApiInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ImportRestApiMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ImportRestApi.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m PutGatewayResponseMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalPutGatewayResponseInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalPutGatewayResponseInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m PutGatewayResponseMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "PutGatewayResponse.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m PutIntegrationMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalPutIntegrationInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalPutIntegrationInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m PutIntegrationMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "PutIntegration.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m PutIntegrationResponseMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalPutIntegrationResponseInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalPutIntegrationResponseInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m PutIntegrationResponseMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "PutIntegrationResponse.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m PutMethodMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalPutMethodInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalPutMethodInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m PutMethodMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "PutMethod.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m PutMethodResponseMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalPutMethodResponseInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalPutMethodResponseInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m PutMethodResponseMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "PutMethodResponse.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m PutRestApiMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalPutRestApiInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalPutRestApiInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m PutRestApiMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "PutRestApi.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m TagResourceMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalTagResourceInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalTagResourceInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m TagResourceMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "TagResource.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m TestInvokeAuthorizerMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalTestInvokeAuthorizerInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalTestInvokeAuthorizerInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m TestInvokeAuthorizerMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "TestInvokeAuthorizer.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m TestInvokeMethodMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalTestInvokeMethodInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalTestInvokeMethodInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m TestInvokeMethodMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "TestInvokeMethod.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UntagResourceMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUntagResourceInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalUntagResourceInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UntagResourceMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UntagResource.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UpdateAccountMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUpdateAccountInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalUpdateAccountInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UpdateAccountMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UpdateAccount.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UpdateApiKeyMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUpdateApiKeyInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalUpdateApiKeyInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UpdateApiKeyMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UpdateApiKey.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UpdateAuthorizerMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUpdateAuthorizerInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalUpdateAuthorizerInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UpdateAuthorizerMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UpdateAuthorizer.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UpdateBasePathMappingMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUpdateBasePathMappingInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalUpdateBasePathMappingInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UpdateBasePathMappingMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UpdateBasePathMapping.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UpdateClientCertificateMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUpdateClientCertificateInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalUpdateClientCertificateInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UpdateClientCertificateMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UpdateClientCertificate.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UpdateDeploymentMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUpdateDeploymentInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalUpdateDeploymentInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UpdateDeploymentMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UpdateDeployment.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UpdateDocumentationPartMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUpdateDocumentationPartInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalUpdateDocumentationPartInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UpdateDocumentationPartMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UpdateDocumentationPart.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UpdateDocumentationVersionMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUpdateDocumentationVersionInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalUpdateDocumentationVersionInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UpdateDocumentationVersionMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UpdateDocumentationVersion.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UpdateDomainNameMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUpdateDomainNameInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalUpdateDomainNameInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UpdateDomainNameMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UpdateDomainName.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UpdateGatewayResponseMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUpdateGatewayResponseInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalUpdateGatewayResponseInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UpdateGatewayResponseMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UpdateGatewayResponse.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UpdateIntegrationMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUpdateIntegrationInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalUpdateIntegrationInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UpdateIntegrationMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UpdateIntegration.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UpdateIntegrationResponseMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUpdateIntegrationResponseInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalUpdateIntegrationResponseInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UpdateIntegrationResponseMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UpdateIntegrationResponse.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UpdateMethodMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUpdateMethodInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalUpdateMethodInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UpdateMethodMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UpdateMethod.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UpdateMethodResponseMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUpdateMethodResponseInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalUpdateMethodResponseInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UpdateMethodResponseMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UpdateMethodResponse.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UpdateModelMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUpdateModelInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalUpdateModelInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UpdateModelMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UpdateModel.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UpdateRequestValidatorMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUpdateRequestValidatorInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalUpdateRequestValidatorInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UpdateRequestValidatorMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UpdateRequestValidator.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UpdateResourceMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUpdateResourceInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalUpdateResourceInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UpdateResourceMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UpdateResource.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UpdateRestApiMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUpdateRestApiInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalUpdateRestApiInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UpdateRestApiMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UpdateRestApi.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UpdateStageMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUpdateStageInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalUpdateStageInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UpdateStageMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UpdateStage.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UpdateUsageMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUpdateUsageInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalUpdateUsageInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UpdateUsageMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UpdateUsage.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UpdateUsagePlanMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUpdateUsagePlanInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalUpdateUsagePlanInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UpdateUsagePlanMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UpdateUsagePlan.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UpdateVpcLinkMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUpdateVpcLinkInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalUpdateVpcLinkInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UpdateVpcLinkMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UpdateVpcLink.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}
