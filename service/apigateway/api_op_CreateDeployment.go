// Code generated by smithy-go-codegen DO NOT EDIT.

package apigateway

import (
	"context"
	awsmiddleware "github.com/aws/aws-sdk-go-v2/aws/middleware"
	"github.com/aws/aws-sdk-go-v2/aws/retry"
	"github.com/aws/aws-sdk-go-v2/aws/signer/v4"
	"github.com/aws/aws-sdk-go-v2/service/apigateway/types"
	smithy "github.com/awslabs/smithy-go"
	"github.com/awslabs/smithy-go/middleware"
	smithyhttp "github.com/awslabs/smithy-go/transport/http"
	"time"
)

// Creates a Deployment () resource, which makes a specified RestApi () callable
// over the internet.
func (c *Client) CreateDeployment(ctx context.Context, params *CreateDeploymentInput, optFns ...func(*Options)) (*CreateDeploymentOutput, error) {
	stack := middleware.NewStack("CreateDeployment", smithyhttp.NewStackRequest)
	options := c.options.Copy()
	for _, fn := range optFns {
		fn(&options)
	}
	addawsRestjson1_serdeOpCreateDeploymentMiddlewares(stack)
	awsmiddleware.AddRequestInvocationIDMiddleware(stack)
	smithyhttp.AddContentLengthMiddleware(stack)
	AddResolveEndpointMiddleware(stack, options)
	v4.AddComputePayloadSHA256Middleware(stack)
	retry.AddRetryMiddlewares(stack, options)
	addHTTPSignerV4Middleware(stack, options)
	awsmiddleware.AddAttemptClockSkewMiddleware(stack)
	addClientUserAgent(stack)
	smithyhttp.AddErrorCloseResponseBodyMiddleware(stack)
	smithyhttp.AddCloseResponseBodyMiddleware(stack)
	addOpCreateDeploymentValidationMiddleware(stack)
	stack.Initialize.Add(newServiceMetadataMiddleware_opCreateDeployment(options.Region), middleware.Before)

	for _, fn := range options.APIOptions {
		if err := fn(stack); err != nil {
			return nil, err
		}
	}
	handler := middleware.DecorateHandler(smithyhttp.NewClientHandler(options.HTTPClient), stack)
	result, metadata, err := handler.Handle(ctx, params)
	if err != nil {
		return nil, &smithy.OperationError{
			ServiceID:     ServiceID,
			OperationName: "CreateDeployment",
			Err:           err,
		}
	}
	out := result.(*CreateDeploymentOutput)
	out.ResultMetadata = metadata
	return out, nil
}

// Requests API Gateway to create a Deployment () resource.
type CreateDeploymentInput struct {
	Template         *bool
	TemplateSkipList []*string
	Title            *string
	Name             *string
	// [Required] The string identifier of the associated RestApi ().
	RestApiId *string
	// Specifies whether active tracing with X-ray is enabled for the Stage ().
	TracingEnabled *bool
	// The input configuration for the canary deployment when the deployment is a
	// canary release deployment.
	CanarySettings *types.DeploymentCanarySettings
	// A map that defines the stage variables for the Stage () resource that is
	// associated with the new deployment. Variable names can have alphanumeric and
	// underscore characters, and the values must match [A-Za-z0-9-._~:/?#&=,]+.
	Variables map[string]*string
	// Specifies the cache cluster size for the Stage () resource specified in the
	// input, if a cache cluster is enabled.
	CacheClusterSize types.CacheClusterSize
	// The description of the Stage () resource for the Deployment () resource to
	// create.
	StageDescription *string
	// Enables a cache cluster for the Stage () resource specified in the input.
	CacheClusterEnabled *bool
	// The name of the Stage () resource for the Deployment () resource to create.
	StageName *string
	// The description for the Deployment () resource to create.
	Description *string
}

// An immutable representation of a RestApi () resource that can be called by users
// using Stages (). A deployment must be associated with a Stage () for it to be
// callable over the Internet. To create a deployment, call POST on the Deployments
// () resource of a RestApi (). To view, update, or delete a deployment, call GET,
// PATCH, or DELETE on the specified deployment resource
// (/restapis/{restapi_id}/deployments/{deployment_id}). RestApi (), Deployments
// (), Stage (), AWS CLI
// (https://docs.aws.amazon.com/cli/latest/reference/apigateway/get-deployment.html),
// AWS SDKs (https://aws.amazon.com/tools/)
type CreateDeploymentOutput struct {
	// The date and time that the deployment resource was created.
	CreatedDate *time.Time
	// A summary of the RestApi () at the date and time that the deployment resource
	// was created.
	ApiSummary map[string]map[string]*types.MethodSnapshot
	// The identifier for the deployment resource.
	Id *string
	// The description for the deployment resource.
	Description *string

	// Metadata pertaining to the operation's result.
	ResultMetadata middleware.Metadata
}

func addawsRestjson1_serdeOpCreateDeploymentMiddlewares(stack *middleware.Stack) {
	stack.Serialize.Add(&awsRestjson1_serializeOpCreateDeployment{}, middleware.After)
	stack.Deserialize.Add(&awsRestjson1_deserializeOpCreateDeployment{}, middleware.After)
}

func newServiceMetadataMiddleware_opCreateDeployment(region string) awsmiddleware.RegisterServiceMetadata {
	return awsmiddleware.RegisterServiceMetadata{
		Region:        region,
		ServiceID:     ServiceID,
		SigningName:   "apigateway",
		OperationName: "CreateDeployment",
	}
}
