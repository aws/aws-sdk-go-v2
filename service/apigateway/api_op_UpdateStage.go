// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package apigateway

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/apigateway/types"
)

const opUpdateStage = "UpdateStage"

// UpdateStageRequest returns a request value for making API operation for
// Amazon API Gateway.
//
// Changes information about a Stage resource.
//
//    // Example sending a request using UpdateStageRequest.
//    req := client.UpdateStageRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
func (c *Client) UpdateStageRequest(input *types.UpdateStageInput) UpdateStageRequest {
	op := &aws.Operation{
		Name:       opUpdateStage,
		HTTPMethod: "PATCH",
		HTTPPath:   "/restapis/{restapi_id}/stages/{stage_name}",
	}

	if input == nil {
		input = &types.UpdateStageInput{}
	}

	req := c.newRequest(op, input, &types.UpdateStageOutput{})
	return UpdateStageRequest{Request: req, Input: input, Copy: c.UpdateStageRequest}
}

// UpdateStageRequest is the request type for the
// UpdateStage API operation.
type UpdateStageRequest struct {
	*aws.Request
	Input *types.UpdateStageInput
	Copy  func(*types.UpdateStageInput) UpdateStageRequest
}

// Send marshals and sends the UpdateStage API request.
func (r UpdateStageRequest) Send(ctx context.Context) (*UpdateStageResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &UpdateStageResponse{
		UpdateStageOutput: r.Request.Data.(*types.UpdateStageOutput),
		response:          &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// UpdateStageResponse is the response type for the
// UpdateStage API operation.
type UpdateStageResponse struct {
	*types.UpdateStageOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// UpdateStage request.
func (r *UpdateStageResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
