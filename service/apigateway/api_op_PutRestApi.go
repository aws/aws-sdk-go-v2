// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package apigateway

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/private/protocol/restjson"
	"github.com/aws/aws-sdk-go-v2/service/apigateway/internal/aws_restjson"
	"github.com/aws/aws-sdk-go-v2/service/apigateway/types"
)

const opPutRestApi = "PutRestApi"

// PutRestApiRequest returns a request value for making API operation for
// Amazon API Gateway.
//
// A feature of the API Gateway control service for updating an existing API
// with an input of external API definitions. The update can take the form of
// merging the supplied definition into the existing API or overwriting the
// existing API.
//
//    // Example sending a request using PutRestApiRequest.
//    req := client.PutRestApiRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
func (c *Client) PutRestApiRequest(input *types.PutRestApiInput) PutRestApiRequest {
	op := &aws.Operation{
		Name:       opPutRestApi,
		HTTPMethod: "PUT",
		HTTPPath:   "/restapis/{restapi_id}",
	}

	if input == nil {
		input = &types.PutRestApiInput{}
	}

	req := c.newRequest(op, input, &types.PutRestApiOutput{})

	// swap existing build handler on svc, with a new named build handler
	req.Handlers.Build.Swap(restjson.BuildHandler.Name, aws_restjson.PutRestApiMarshaler{Input: input}.GetNamedBuildHandler())

	return PutRestApiRequest{Request: req, Input: input, Copy: c.PutRestApiRequest}
}

// PutRestApiRequest is the request type for the
// PutRestApi API operation.
type PutRestApiRequest struct {
	*aws.Request
	Input *types.PutRestApiInput
	Copy  func(*types.PutRestApiInput) PutRestApiRequest
}

// Send marshals and sends the PutRestApi API request.
func (r PutRestApiRequest) Send(ctx context.Context) (*PutRestApiResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &PutRestApiResponse{
		PutRestApiOutput: r.Request.Data.(*types.PutRestApiOutput),
		response:         &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// PutRestApiResponse is the response type for the
// PutRestApi API operation.
type PutRestApiResponse struct {
	*types.PutRestApiOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// PutRestApi request.
func (r *PutRestApiResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
