// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package apigateway

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/apigateway/types"
)

const opUpdateAccount = "UpdateAccount"

// UpdateAccountRequest returns a request value for making API operation for
// Amazon API Gateway.
//
// Changes information about the current Account resource.
//
//    // Example sending a request using UpdateAccountRequest.
//    req := client.UpdateAccountRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
func (c *Client) UpdateAccountRequest(input *types.UpdateAccountInput) UpdateAccountRequest {
	op := &aws.Operation{
		Name:       opUpdateAccount,
		HTTPMethod: "PATCH",
		HTTPPath:   "/account",
	}

	if input == nil {
		input = &types.UpdateAccountInput{}
	}

	req := c.newRequest(op, input, &types.UpdateAccountOutput{})
	return UpdateAccountRequest{Request: req, Input: input, Copy: c.UpdateAccountRequest}
}

// UpdateAccountRequest is the request type for the
// UpdateAccount API operation.
type UpdateAccountRequest struct {
	*aws.Request
	Input *types.UpdateAccountInput
	Copy  func(*types.UpdateAccountInput) UpdateAccountRequest
}

// Send marshals and sends the UpdateAccount API request.
func (r UpdateAccountRequest) Send(ctx context.Context) (*UpdateAccountResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &UpdateAccountResponse{
		UpdateAccountOutput: r.Request.Data.(*types.UpdateAccountOutput),
		response:            &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// UpdateAccountResponse is the response type for the
// UpdateAccount API operation.
type UpdateAccountResponse struct {
	*types.UpdateAccountOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// UpdateAccount request.
func (r *UpdateAccountResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
