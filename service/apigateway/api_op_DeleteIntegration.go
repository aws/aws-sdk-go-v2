// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package apigateway

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/private/protocol"
	"github.com/aws/aws-sdk-go-v2/private/protocol/restjson"
	"github.com/aws/aws-sdk-go-v2/service/apigateway/internal/aws_restjson"
	"github.com/aws/aws-sdk-go-v2/service/apigateway/types"
)

const opDeleteIntegration = "DeleteIntegration"

// DeleteIntegrationRequest returns a request value for making API operation for
// Amazon API Gateway.
//
// Represents a delete integration.
//
//    // Example sending a request using DeleteIntegrationRequest.
//    req := client.DeleteIntegrationRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
func (c *Client) DeleteIntegrationRequest(input *types.DeleteIntegrationInput) DeleteIntegrationRequest {
	op := &aws.Operation{
		Name:       opDeleteIntegration,
		HTTPMethod: "DELETE",
		HTTPPath:   "/restapis/{restapi_id}/resources/{resource_id}/methods/{http_method}/integration",
	}

	if input == nil {
		input = &types.DeleteIntegrationInput{}
	}

	req := c.newRequest(op, input, &types.DeleteIntegrationOutput{})

	// swap existing build handler on svc, with a new named build handler
	req.Handlers.Build.Swap(restjson.BuildHandler.Name, aws_restjson.DeleteIntegrationMarshaler{Input: input}.GetNamedBuildHandler())

	req.Handlers.Unmarshal.Remove(restjson.UnmarshalHandler)
	req.Handlers.Unmarshal.PushBackNamed(protocol.UnmarshalDiscardBodyHandler)
	return DeleteIntegrationRequest{Request: req, Input: input, Copy: c.DeleteIntegrationRequest}
}

// DeleteIntegrationRequest is the request type for the
// DeleteIntegration API operation.
type DeleteIntegrationRequest struct {
	*aws.Request
	Input *types.DeleteIntegrationInput
	Copy  func(*types.DeleteIntegrationInput) DeleteIntegrationRequest
}

// Send marshals and sends the DeleteIntegration API request.
func (r DeleteIntegrationRequest) Send(ctx context.Context) (*DeleteIntegrationResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &DeleteIntegrationResponse{
		DeleteIntegrationOutput: r.Request.Data.(*types.DeleteIntegrationOutput),
		response:                &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// DeleteIntegrationResponse is the response type for the
// DeleteIntegration API operation.
type DeleteIntegrationResponse struct {
	*types.DeleteIntegrationOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// DeleteIntegration request.
func (r *DeleteIntegrationResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
