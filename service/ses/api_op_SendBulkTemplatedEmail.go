// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package ses

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/ses/types"
)

const opSendBulkTemplatedEmail = "SendBulkTemplatedEmail"

// SendBulkTemplatedEmailRequest returns a request value for making API operation for
// Amazon Simple Email Service.
//
// Composes an email message to multiple destinations. The message body is created
// using an email template.
//
// In order to send email using the SendBulkTemplatedEmail operation, your call
// to the API must meet the following requirements:
//
//    * The call must refer to an existing email template. You can create email
//    templates using the CreateTemplate operation.
//
//    * The message must be sent from a verified email address or domain.
//
//    * If your account is still in the Amazon SES sandbox, you may only send
//    to verified addresses or domains, or to email addresses associated with
//    the Amazon SES Mailbox Simulator. For more information, see Verifying
//    Email Addresses and Domains (https://docs.aws.amazon.com/ses/latest/DeveloperGuide/verify-addresses-and-domains.html)
//    in the Amazon SES Developer Guide.
//
//    * The maximum message size is 10 MB.
//
//    * Each Destination parameter must include at least one recipient email
//    address. The recipient address can be a To: address, a CC: address, or
//    a BCC: address. If a recipient email address is invalid (that is, it is
//    not in the format UserName@[SubDomain.]Domain.TopLevelDomain), the entire
//    message will be rejected, even if the message contains other recipients
//    that are valid.
//
//    * The message may not include more than 50 recipients, across the To:,
//    CC: and BCC: fields. If you need to send an email message to a larger
//    audience, you can divide your recipient list into groups of 50 or fewer,
//    and then call the SendBulkTemplatedEmail operation several times to send
//    the message to each group.
//
//    * The number of destinations you can contact in a single call to the API
//    may be limited by your account's maximum sending rate.
//
//    // Example sending a request using SendBulkTemplatedEmailRequest.
//    req := client.SendBulkTemplatedEmailRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/email-2010-12-01/SendBulkTemplatedEmail
func (c *Client) SendBulkTemplatedEmailRequest(input *types.SendBulkTemplatedEmailInput) SendBulkTemplatedEmailRequest {
	op := &aws.Operation{
		Name:       opSendBulkTemplatedEmail,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &types.SendBulkTemplatedEmailInput{}
	}

	req := c.newRequest(op, input, &types.SendBulkTemplatedEmailOutput{})
	return SendBulkTemplatedEmailRequest{Request: req, Input: input, Copy: c.SendBulkTemplatedEmailRequest}
}

// SendBulkTemplatedEmailRequest is the request type for the
// SendBulkTemplatedEmail API operation.
type SendBulkTemplatedEmailRequest struct {
	*aws.Request
	Input *types.SendBulkTemplatedEmailInput
	Copy  func(*types.SendBulkTemplatedEmailInput) SendBulkTemplatedEmailRequest
}

// Send marshals and sends the SendBulkTemplatedEmail API request.
func (r SendBulkTemplatedEmailRequest) Send(ctx context.Context) (*SendBulkTemplatedEmailResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &SendBulkTemplatedEmailResponse{
		SendBulkTemplatedEmailOutput: r.Request.Data.(*types.SendBulkTemplatedEmailOutput),
		response:                     &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// SendBulkTemplatedEmailResponse is the response type for the
// SendBulkTemplatedEmail API operation.
type SendBulkTemplatedEmailResponse struct {
	*types.SendBulkTemplatedEmailOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// SendBulkTemplatedEmail request.
func (r *SendBulkTemplatedEmailResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
