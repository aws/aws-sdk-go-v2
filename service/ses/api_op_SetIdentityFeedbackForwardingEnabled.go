// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package ses

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/ses/types"
)

const opSetIdentityFeedbackForwardingEnabled = "SetIdentityFeedbackForwardingEnabled"

// SetIdentityFeedbackForwardingEnabledRequest returns a request value for making API operation for
// Amazon Simple Email Service.
//
// Given an identity (an email address or a domain), enables or disables whether
// Amazon SES forwards bounce and complaint notifications as email. Feedback
// forwarding can only be disabled when Amazon Simple Notification Service (Amazon
// SNS) topics are specified for both bounces and complaints.
//
// Feedback forwarding does not apply to delivery notifications. Delivery notifications
// are only available through Amazon SNS.
//
// You can execute this operation no more than once per second.
//
// For more information about using notifications with Amazon SES, see the Amazon
// SES Developer Guide (https://docs.aws.amazon.com/ses/latest/DeveloperGuide/notifications.html).
//
//    // Example sending a request using SetIdentityFeedbackForwardingEnabledRequest.
//    req := client.SetIdentityFeedbackForwardingEnabledRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/email-2010-12-01/SetIdentityFeedbackForwardingEnabled
func (c *Client) SetIdentityFeedbackForwardingEnabledRequest(input *types.SetIdentityFeedbackForwardingEnabledInput) SetIdentityFeedbackForwardingEnabledRequest {
	op := &aws.Operation{
		Name:       opSetIdentityFeedbackForwardingEnabled,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &types.SetIdentityFeedbackForwardingEnabledInput{}
	}

	req := c.newRequest(op, input, &types.SetIdentityFeedbackForwardingEnabledOutput{})
	return SetIdentityFeedbackForwardingEnabledRequest{Request: req, Input: input, Copy: c.SetIdentityFeedbackForwardingEnabledRequest}
}

// SetIdentityFeedbackForwardingEnabledRequest is the request type for the
// SetIdentityFeedbackForwardingEnabled API operation.
type SetIdentityFeedbackForwardingEnabledRequest struct {
	*aws.Request
	Input *types.SetIdentityFeedbackForwardingEnabledInput
	Copy  func(*types.SetIdentityFeedbackForwardingEnabledInput) SetIdentityFeedbackForwardingEnabledRequest
}

// Send marshals and sends the SetIdentityFeedbackForwardingEnabled API request.
func (r SetIdentityFeedbackForwardingEnabledRequest) Send(ctx context.Context) (*SetIdentityFeedbackForwardingEnabledResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &SetIdentityFeedbackForwardingEnabledResponse{
		SetIdentityFeedbackForwardingEnabledOutput: r.Request.Data.(*types.SetIdentityFeedbackForwardingEnabledOutput),
		response: &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// SetIdentityFeedbackForwardingEnabledResponse is the response type for the
// SetIdentityFeedbackForwardingEnabled API operation.
type SetIdentityFeedbackForwardingEnabledResponse struct {
	*types.SetIdentityFeedbackForwardingEnabledOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// SetIdentityFeedbackForwardingEnabled request.
func (r *SetIdentityFeedbackForwardingEnabledResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
