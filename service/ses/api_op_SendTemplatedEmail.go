// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package ses

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/ses/types"
)

const opSendTemplatedEmail = "SendTemplatedEmail"

// SendTemplatedEmailRequest returns a request value for making API operation for
// Amazon Simple Email Service.
//
// Composes an email message using an email template and immediately queues
// it for sending.
//
// In order to send email using the SendTemplatedEmail operation, your call
// to the API must meet the following requirements:
//
//    * The call must refer to an existing email template. You can create email
//    templates using the CreateTemplate operation.
//
//    * The message must be sent from a verified email address or domain.
//
//    * If your account is still in the Amazon SES sandbox, you may only send
//    to verified addresses or domains, or to email addresses associated with
//    the Amazon SES Mailbox Simulator. For more information, see Verifying
//    Email Addresses and Domains (https://docs.aws.amazon.com/ses/latest/DeveloperGuide/verify-addresses-and-domains.html)
//    in the Amazon SES Developer Guide.
//
//    * The maximum message size is 10 MB.
//
//    * Calls to the SendTemplatedEmail operation may only include one Destination
//    parameter. A destination is a set of recipients who will receive the same
//    version of the email. The Destination parameter can include up to 50 recipients,
//    across the To:, CC: and BCC: fields.
//
//    * The Destination parameter must include at least one recipient email
//    address. The recipient address can be a To: address, a CC: address, or
//    a BCC: address. If a recipient email address is invalid (that is, it is
//    not in the format UserName@[SubDomain.]Domain.TopLevelDomain), the entire
//    message will be rejected, even if the message contains other recipients
//    that are valid.
//
// If your call to the SendTemplatedEmail operation includes all of the required
// parameters, Amazon SES accepts it and returns a Message ID. However, if Amazon
// SES can't render the email because the template contains errors, it doesn't
// send the email. Additionally, because it already accepted the message, Amazon
// SES doesn't return a message stating that it was unable to send the email.
//
// For these reasons, we highly recommend that you set up Amazon SES to send
// you notifications when Rendering Failure events occur. For more information,
// see Sending Personalized Email Using the Amazon SES API (https://docs.aws.amazon.com/ses/latest/DeveloperGuide/send-personalized-email-api.html)
// in the Amazon Simple Email Service Developer Guide.
//
//    // Example sending a request using SendTemplatedEmailRequest.
//    req := client.SendTemplatedEmailRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/email-2010-12-01/SendTemplatedEmail
func (c *Client) SendTemplatedEmailRequest(input *types.SendTemplatedEmailInput) SendTemplatedEmailRequest {
	op := &aws.Operation{
		Name:       opSendTemplatedEmail,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &types.SendTemplatedEmailInput{}
	}

	req := c.newRequest(op, input, &types.SendTemplatedEmailOutput{})
	return SendTemplatedEmailRequest{Request: req, Input: input, Copy: c.SendTemplatedEmailRequest}
}

// SendTemplatedEmailRequest is the request type for the
// SendTemplatedEmail API operation.
type SendTemplatedEmailRequest struct {
	*aws.Request
	Input *types.SendTemplatedEmailInput
	Copy  func(*types.SendTemplatedEmailInput) SendTemplatedEmailRequest
}

// Send marshals and sends the SendTemplatedEmail API request.
func (r SendTemplatedEmailRequest) Send(ctx context.Context) (*SendTemplatedEmailResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &SendTemplatedEmailResponse{
		SendTemplatedEmailOutput: r.Request.Data.(*types.SendTemplatedEmailOutput),
		response:                 &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// SendTemplatedEmailResponse is the response type for the
// SendTemplatedEmail API operation.
type SendTemplatedEmailResponse struct {
	*types.SendTemplatedEmailOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// SendTemplatedEmail request.
func (r *SendTemplatedEmailResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
