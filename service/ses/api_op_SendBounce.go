// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package ses

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/ses/types"
)

const opSendBounce = "SendBounce"

// SendBounceRequest returns a request value for making API operation for
// Amazon Simple Email Service.
//
// Generates and sends a bounce message to the sender of an email you received
// through Amazon SES. You can only use this API on an email up to 24 hours
// after you receive it.
//
// You cannot use this API to send generic bounces for mail that was not received
// by Amazon SES.
//
// For information about receiving email through Amazon SES, see the Amazon
// SES Developer Guide (https://docs.aws.amazon.com/ses/latest/DeveloperGuide/receiving-email.html).
//
// You can execute this operation no more than once per second.
//
//    // Example sending a request using SendBounceRequest.
//    req := client.SendBounceRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/email-2010-12-01/SendBounce
func (c *Client) SendBounceRequest(input *types.SendBounceInput) SendBounceRequest {
	op := &aws.Operation{
		Name:       opSendBounce,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &types.SendBounceInput{}
	}

	req := c.newRequest(op, input, &types.SendBounceOutput{})
	return SendBounceRequest{Request: req, Input: input, Copy: c.SendBounceRequest}
}

// SendBounceRequest is the request type for the
// SendBounce API operation.
type SendBounceRequest struct {
	*aws.Request
	Input *types.SendBounceInput
	Copy  func(*types.SendBounceInput) SendBounceRequest
}

// Send marshals and sends the SendBounce API request.
func (r SendBounceRequest) Send(ctx context.Context) (*SendBounceResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &SendBounceResponse{
		SendBounceOutput: r.Request.Data.(*types.SendBounceOutput),
		response:         &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// SendBounceResponse is the response type for the
// SendBounce API operation.
type SendBounceResponse struct {
	*types.SendBounceOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// SendBounce request.
func (r *SendBounceResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
