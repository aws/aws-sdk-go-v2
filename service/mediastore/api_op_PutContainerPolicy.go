// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package mediastore

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/mediastore/types"
)

const opPutContainerPolicy = "PutContainerPolicy"

// PutContainerPolicyRequest returns a request value for making API operation for
// AWS Elemental MediaStore.
//
// Creates an access policy for the specified container to restrict the users
// and clients that can access it. For information about the data that is included
// in an access policy, see the AWS Identity and Access Management User Guide
// (https://aws.amazon.com/documentation/iam/).
//
// For this release of the REST API, you can create only one policy for a container.
// If you enter PutContainerPolicy twice, the second command modifies the existing
// policy.
//
//    // Example sending a request using PutContainerPolicyRequest.
//    req := client.PutContainerPolicyRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/mediastore-2017-09-01/PutContainerPolicy
func (c *Client) PutContainerPolicyRequest(input *types.PutContainerPolicyInput) PutContainerPolicyRequest {
	op := &aws.Operation{
		Name:       opPutContainerPolicy,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &types.PutContainerPolicyInput{}
	}

	req := c.newRequest(op, input, &types.PutContainerPolicyOutput{})
	return PutContainerPolicyRequest{Request: req, Input: input, Copy: c.PutContainerPolicyRequest}
}

// PutContainerPolicyRequest is the request type for the
// PutContainerPolicy API operation.
type PutContainerPolicyRequest struct {
	*aws.Request
	Input *types.PutContainerPolicyInput
	Copy  func(*types.PutContainerPolicyInput) PutContainerPolicyRequest
}

// Send marshals and sends the PutContainerPolicy API request.
func (r PutContainerPolicyRequest) Send(ctx context.Context) (*PutContainerPolicyResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &PutContainerPolicyResponse{
		PutContainerPolicyOutput: r.Request.Data.(*types.PutContainerPolicyOutput),
		response:                 &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// PutContainerPolicyResponse is the response type for the
// PutContainerPolicy API operation.
type PutContainerPolicyResponse struct {
	*types.PutContainerPolicyOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// PutContainerPolicy request.
func (r *PutContainerPolicyResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
