// Code generated by smithy-go-codegen DO NOT EDIT.

package types

type ComponentUpdateType string

// Enum values for ComponentUpdateType
const (
	ComponentUpdateTypeCreate ComponentUpdateType = "CREATE"
	ComponentUpdateTypeUpdate ComponentUpdateType = "UPDATE"
	ComponentUpdateTypeDelete ComponentUpdateType = "DELETE"
)

// Values returns all known values for ComponentUpdateType. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (ComponentUpdateType) Values() []ComponentUpdateType {
	return []ComponentUpdateType{
		"CREATE",
		"UPDATE",
		"DELETE",
	}
}

type ErrorCode string

// Enum values for ErrorCode
const (
	ErrorCodeValidationError ErrorCode = "VALIDATION_ERROR"
	ErrorCodeInternalFailure ErrorCode = "INTERNAL_FAILURE"
)

// Values returns all known values for ErrorCode. Note that this can be expanded in
// the future, and so it is only as up to date as the client. The ordering of this
// slice is not guaranteed to be stable across updates.
func (ErrorCode) Values() []ErrorCode {
	return []ErrorCode{
		"VALIDATION_ERROR",
		"INTERNAL_FAILURE",
	}
}

type InterpolationType string

// Enum values for InterpolationType
const (
	InterpolationTypeLinear InterpolationType = "LINEAR"
)

// Values returns all known values for InterpolationType. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (InterpolationType) Values() []InterpolationType {
	return []InterpolationType{
		"LINEAR",
	}
}

type OrderByTime string

// Enum values for OrderByTime
const (
	OrderByTimeAscending  OrderByTime = "ASCENDING"
	OrderByTimeDescending OrderByTime = "DESCENDING"
)

// Values returns all known values for OrderByTime. Note that this can be expanded
// in the future, and so it is only as up to date as the client. The ordering of
// this slice is not guaranteed to be stable across updates.
func (OrderByTime) Values() []OrderByTime {
	return []OrderByTime{
		"ASCENDING",
		"DESCENDING",
	}
}

type ParentEntityUpdateType string

// Enum values for ParentEntityUpdateType
const (
	ParentEntityUpdateTypeUpdate ParentEntityUpdateType = "UPDATE"
	ParentEntityUpdateTypeDelete ParentEntityUpdateType = "DELETE"
)

// Values returns all known values for ParentEntityUpdateType. Note that this can
// be expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (ParentEntityUpdateType) Values() []ParentEntityUpdateType {
	return []ParentEntityUpdateType{
		"UPDATE",
		"DELETE",
	}
}

type PropertyUpdateType string

// Enum values for PropertyUpdateType
const (
	PropertyUpdateTypeUpdate PropertyUpdateType = "UPDATE"
	PropertyUpdateTypeDelete PropertyUpdateType = "DELETE"
)

// Values returns all known values for PropertyUpdateType. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (PropertyUpdateType) Values() []PropertyUpdateType {
	return []PropertyUpdateType{
		"UPDATE",
		"DELETE",
	}
}

type Scope string

// Enum values for Scope
const (
	ScopeEntity    Scope = "ENTITY"
	ScopeWorkspace Scope = "WORKSPACE"
)

// Values returns all known values for Scope. Note that this can be expanded in the
// future, and so it is only as up to date as the client. The ordering of this
// slice is not guaranteed to be stable across updates.
func (Scope) Values() []Scope {
	return []Scope{
		"ENTITY",
		"WORKSPACE",
	}
}

type State string

// Enum values for State
const (
	StateCreating State = "CREATING"
	StateUpdating State = "UPDATING"
	StateDeleting State = "DELETING"
	StateActive   State = "ACTIVE"
	StateError    State = "ERROR"
)

// Values returns all known values for State. Note that this can be expanded in the
// future, and so it is only as up to date as the client. The ordering of this
// slice is not guaranteed to be stable across updates.
func (State) Values() []State {
	return []State{
		"CREATING",
		"UPDATING",
		"DELETING",
		"ACTIVE",
		"ERROR",
	}
}

type Type string

// Enum values for Type
const (
	TypeRelationship Type = "RELATIONSHIP"
	TypeString       Type = "STRING"
	TypeLong         Type = "LONG"
	TypeBoolean      Type = "BOOLEAN"
	TypeInteger      Type = "INTEGER"
	TypeDouble       Type = "DOUBLE"
	TypeList         Type = "LIST"
	TypeMap          Type = "MAP"
)

// Values returns all known values for Type. Note that this can be expanded in the
// future, and so it is only as up to date as the client. The ordering of this
// slice is not guaranteed to be stable across updates.
func (Type) Values() []Type {
	return []Type{
		"RELATIONSHIP",
		"STRING",
		"LONG",
		"BOOLEAN",
		"INTEGER",
		"DOUBLE",
		"LIST",
		"MAP",
	}
}
