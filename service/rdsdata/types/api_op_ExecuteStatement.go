// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package types

import (
	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/internal/awsutil"
)

// The request parameters represent the input of a request to run a SQL statement
// against a database.
type ExecuteStatementInput struct {
	_ struct{} `type:"structure"`

	// A value that indicates whether to continue running the statement after the
	// call times out. By default, the statement stops running when the call times
	// out.
	//
	// For DDL statements, we recommend continuing to run the statement after the
	// call times out. When a DDL statement terminates before it is finished running,
	// it can result in errors and possibly corrupted data structures.
	ContinueAfterTimeout *bool `locationName:"continueAfterTimeout" type:"boolean"`

	// The name of the database.
	Database *string `locationName:"database" type:"string"`

	// A value that indicates whether to include metadata in the results.
	IncludeResultMetadata *bool `locationName:"includeResultMetadata" type:"boolean"`

	// The parameters for the SQL statement.
	Parameters []SqlParameter `locationName:"parameters" type:"list"`

	// The Amazon Resource Name (ARN) of the Aurora Serverless DB cluster.
	//
	// ResourceArn is a required field
	ResourceArn *string `locationName:"resourceArn" min:"11" type:"string" required:"true"`

	// Options that control how the result set is returned.
	ResultSetOptions *ResultSetOptions `locationName:"resultSetOptions" type:"structure"`

	// The name of the database schema.
	Schema *string `locationName:"schema" type:"string"`

	// The name or ARN of the secret that enables access to the DB cluster.
	//
	// SecretArn is a required field
	SecretArn *string `locationName:"secretArn" min:"11" type:"string" required:"true"`

	// The SQL statement to run.
	//
	// Sql is a required field
	Sql *string `locationName:"sql" type:"string" required:"true"`

	// The identifier of a transaction that was started by using the BeginTransaction
	// operation. Specify the transaction ID of the transaction that you want to
	// include the SQL statement in.
	//
	// If the SQL statement is not part of a transaction, don't set this parameter.
	TransactionId *string `locationName:"transactionId" type:"string"`
}

// String returns the string representation
func (s ExecuteStatementInput) String() string {
	return awsutil.Prettify(s)
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *ExecuteStatementInput) Validate() error {
	invalidParams := aws.ErrInvalidParams{Context: "ExecuteStatementInput"}

	if s.ResourceArn == nil {
		invalidParams.Add(aws.NewErrParamRequired("ResourceArn"))
	}
	if s.ResourceArn != nil && len(*s.ResourceArn) < 11 {
		invalidParams.Add(aws.NewErrParamMinLen("ResourceArn", 11))
	}

	if s.SecretArn == nil {
		invalidParams.Add(aws.NewErrParamRequired("SecretArn"))
	}
	if s.SecretArn != nil && len(*s.SecretArn) < 11 {
		invalidParams.Add(aws.NewErrParamMinLen("SecretArn", 11))
	}

	if s.Sql == nil {
		invalidParams.Add(aws.NewErrParamRequired("Sql"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// The response elements represent the output of a request to run a SQL statement
// against a database.
type ExecuteStatementOutput struct {
	_ struct{} `type:"structure"`

	// Metadata for the columns included in the results.
	ColumnMetadata []ColumnMetadata `locationName:"columnMetadata" type:"list"`

	// Values for fields generated during the request.
	//
	//    <note> <p>The <code>generatedFields</code> data isn't supported by Aurora
	//    PostgreSQL. To get the values of generated fields, use the <code>RETURNING</code>
	//    clause. For more information, see <a href="https://www.postgresql.org/docs/10/dml-returning.html">Returning
	//    Data From Modified Rows</a> in the PostgreSQL documentation.</p> </note>
	GeneratedFields []Field `locationName:"generatedFields" type:"list"`

	// The number of records updated by the request.
	NumberOfRecordsUpdated *int64 `locationName:"numberOfRecordsUpdated" type:"long"`

	// The records returned by the SQL statement.
	Records [][]Field `locationName:"records" type:"list"`
}

// String returns the string representation
func (s ExecuteStatementOutput) String() string {
	return awsutil.Prettify(s)
}
