// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package rdsdata

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/rdsdata/types"
)

const opBeginTransaction = "BeginTransaction"

// BeginTransactionRequest returns a request value for making API operation for
// AWS RDS DataService.
//
// Starts a SQL transaction.
//
//    <important> <p>A transaction can run for a maximum of 24 hours. A transaction
//    is terminated and rolled back automatically after 24 hours.</p> <p>A transaction
//    times out if no calls use its transaction ID in three minutes. If a transaction
//    times out before it's committed, it's rolled back automatically.</p> <p>DDL
//    statements inside a transaction cause an implicit commit. We recommend
//    that you run each DDL statement in a separate <code>ExecuteStatement</code>
//    call with <code>continueAfterTimeout</code> enabled.</p> </important>
//
//    // Example sending a request using BeginTransactionRequest.
//    req := client.BeginTransactionRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/rds-data-2018-08-01/BeginTransaction
func (c *Client) BeginTransactionRequest(input *types.BeginTransactionInput) BeginTransactionRequest {
	op := &aws.Operation{
		Name:       opBeginTransaction,
		HTTPMethod: "POST",
		HTTPPath:   "/BeginTransaction",
	}

	if input == nil {
		input = &types.BeginTransactionInput{}
	}

	req := c.newRequest(op, input, &types.BeginTransactionOutput{})
	return BeginTransactionRequest{Request: req, Input: input, Copy: c.BeginTransactionRequest}
}

// BeginTransactionRequest is the request type for the
// BeginTransaction API operation.
type BeginTransactionRequest struct {
	*aws.Request
	Input *types.BeginTransactionInput
	Copy  func(*types.BeginTransactionInput) BeginTransactionRequest
}

// Send marshals and sends the BeginTransaction API request.
func (r BeginTransactionRequest) Send(ctx context.Context) (*BeginTransactionResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &BeginTransactionResponse{
		BeginTransactionOutput: r.Request.Data.(*types.BeginTransactionOutput),
		response:               &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// BeginTransactionResponse is the response type for the
// BeginTransaction API operation.
type BeginTransactionResponse struct {
	*types.BeginTransactionOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// BeginTransaction request.
func (r *BeginTransactionResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
