// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package rdsdata

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/rdsdata/types"
)

const opExecuteStatement = "ExecuteStatement"

// ExecuteStatementRequest returns a request value for making API operation for
// AWS RDS DataService.
//
// Runs a SQL statement against a database.
//
// If a call isn't part of a transaction because it doesn't include the transactionID
// parameter, changes that result from the call are committed automatically.
//
// The response size limit is 1 MB or 1,000 records. If the call returns more
// than 1 MB of response data or over 1,000 records, the call is terminated.
//
//    // Example sending a request using ExecuteStatementRequest.
//    req := client.ExecuteStatementRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/rds-data-2018-08-01/ExecuteStatement
func (c *Client) ExecuteStatementRequest(input *types.ExecuteStatementInput) ExecuteStatementRequest {
	op := &aws.Operation{
		Name:       opExecuteStatement,
		HTTPMethod: "POST",
		HTTPPath:   "/Execute",
	}

	if input == nil {
		input = &types.ExecuteStatementInput{}
	}

	req := c.newRequest(op, input, &types.ExecuteStatementOutput{})
	return ExecuteStatementRequest{Request: req, Input: input, Copy: c.ExecuteStatementRequest}
}

// ExecuteStatementRequest is the request type for the
// ExecuteStatement API operation.
type ExecuteStatementRequest struct {
	*aws.Request
	Input *types.ExecuteStatementInput
	Copy  func(*types.ExecuteStatementInput) ExecuteStatementRequest
}

// Send marshals and sends the ExecuteStatement API request.
func (r ExecuteStatementRequest) Send(ctx context.Context) (*ExecuteStatementResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &ExecuteStatementResponse{
		ExecuteStatementOutput: r.Request.Data.(*types.ExecuteStatementOutput),
		response:               &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// ExecuteStatementResponse is the response type for the
// ExecuteStatement API operation.
type ExecuteStatementResponse struct {
	*types.ExecuteStatementOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// ExecuteStatement request.
func (r *ExecuteStatementResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
