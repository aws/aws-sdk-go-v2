// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package directoryservice

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/directoryservice/types"
)

const opUpdateConditionalForwarder = "UpdateConditionalForwarder"

// UpdateConditionalForwarderRequest returns a request value for making API operation for
// AWS Directory Service.
//
// Updates a conditional forwarder that has been set up for your AWS directory.
//
//    // Example sending a request using UpdateConditionalForwarderRequest.
//    req := client.UpdateConditionalForwarderRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/ds-2015-04-16/UpdateConditionalForwarder
func (c *Client) UpdateConditionalForwarderRequest(input *types.UpdateConditionalForwarderInput) UpdateConditionalForwarderRequest {
	op := &aws.Operation{
		Name:       opUpdateConditionalForwarder,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &types.UpdateConditionalForwarderInput{}
	}

	req := c.newRequest(op, input, &types.UpdateConditionalForwarderOutput{})
	return UpdateConditionalForwarderRequest{Request: req, Input: input, Copy: c.UpdateConditionalForwarderRequest}
}

// UpdateConditionalForwarderRequest is the request type for the
// UpdateConditionalForwarder API operation.
type UpdateConditionalForwarderRequest struct {
	*aws.Request
	Input *types.UpdateConditionalForwarderInput
	Copy  func(*types.UpdateConditionalForwarderInput) UpdateConditionalForwarderRequest
}

// Send marshals and sends the UpdateConditionalForwarder API request.
func (r UpdateConditionalForwarderRequest) Send(ctx context.Context) (*UpdateConditionalForwarderResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &UpdateConditionalForwarderResponse{
		UpdateConditionalForwarderOutput: r.Request.Data.(*types.UpdateConditionalForwarderOutput),
		response:                         &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// UpdateConditionalForwarderResponse is the response type for the
// UpdateConditionalForwarder API operation.
type UpdateConditionalForwarderResponse struct {
	*types.UpdateConditionalForwarderOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// UpdateConditionalForwarder request.
func (r *UpdateConditionalForwarderResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
