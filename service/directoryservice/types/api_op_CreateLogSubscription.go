// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package types

import (
	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/internal/awsutil"
)

type CreateLogSubscriptionInput struct {
	_ struct{} `type:"structure"`

	// Identifier (ID) of the directory to which you want to subscribe and receive
	// real-time logs to your specified CloudWatch log group.
	//
	// DirectoryId is a required field
	DirectoryId *string `type:"string" required:"true"`

	// The name of the CloudWatch log group where the real-time domain controller
	// logs are forwarded.
	//
	// LogGroupName is a required field
	LogGroupName *string `min:"1" type:"string" required:"true"`
}

// String returns the string representation
func (s CreateLogSubscriptionInput) String() string {
	return awsutil.Prettify(s)
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *CreateLogSubscriptionInput) Validate() error {
	invalidParams := aws.ErrInvalidParams{Context: "CreateLogSubscriptionInput"}

	if s.DirectoryId == nil {
		invalidParams.Add(aws.NewErrParamRequired("DirectoryId"))
	}

	if s.LogGroupName == nil {
		invalidParams.Add(aws.NewErrParamRequired("LogGroupName"))
	}
	if s.LogGroupName != nil && len(*s.LogGroupName) < 1 {
		invalidParams.Add(aws.NewErrParamMinLen("LogGroupName", 1))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

type CreateLogSubscriptionOutput struct {
	_ struct{} `type:"structure"`
}

// String returns the string representation
func (s CreateLogSubscriptionOutput) String() string {
	return awsutil.Prettify(s)
}
