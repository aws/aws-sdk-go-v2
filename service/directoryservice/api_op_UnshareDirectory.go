// Code generated by smithy-go-codegen DO NOT EDIT.

package directoryservice

import (
	"context"
	awsmiddleware "github.com/aws/aws-sdk-go-v2/aws/middleware"
	"github.com/aws/aws-sdk-go-v2/aws/retry"
	"github.com/aws/aws-sdk-go-v2/aws/signer/v4"
	"github.com/aws/aws-sdk-go-v2/service/directoryservice/types"
	smithy "github.com/awslabs/smithy-go"
	"github.com/awslabs/smithy-go/middleware"
	smithyhttp "github.com/awslabs/smithy-go/transport/http"
)

// Stops the directory sharing between the directory owner and consumer accounts.
func (c *Client) UnshareDirectory(ctx context.Context, params *UnshareDirectoryInput, optFns ...func(*Options)) (*UnshareDirectoryOutput, error) {
	stack := middleware.NewStack("UnshareDirectory", smithyhttp.NewStackRequest)
	options := c.options.Copy()
	for _, fn := range optFns {
		fn(&options)
	}
	addawsAwsjson11_serdeOpUnshareDirectoryMiddlewares(stack)
	awsmiddleware.AddRequestInvocationIDMiddleware(stack)
	smithyhttp.AddContentLengthMiddleware(stack)
	AddResolveEndpointMiddleware(stack, options)
	v4.AddComputePayloadSHA256Middleware(stack)
	retry.AddRetryMiddlewares(stack, options)
	addHTTPSignerV4Middleware(stack, options)
	awsmiddleware.AddAttemptClockSkewMiddleware(stack)
	addClientUserAgent(stack)
	smithyhttp.AddErrorCloseResponseBodyMiddleware(stack)
	smithyhttp.AddCloseResponseBodyMiddleware(stack)
	addOpUnshareDirectoryValidationMiddleware(stack)
	stack.Initialize.Add(newServiceMetadataMiddleware_opUnshareDirectory(options.Region), middleware.Before)

	for _, fn := range options.APIOptions {
		if err := fn(stack); err != nil {
			return nil, err
		}
	}
	handler := middleware.DecorateHandler(smithyhttp.NewClientHandler(options.HTTPClient), stack)
	result, metadata, err := handler.Handle(ctx, params)
	if err != nil {
		return nil, &smithy.OperationError{
			ServiceID:     ServiceID,
			OperationName: "UnshareDirectory",
			Err:           err,
		}
	}
	out := result.(*UnshareDirectoryOutput)
	out.ResultMetadata = metadata
	return out, nil
}

type UnshareDirectoryInput struct {
	// The identifier of the AWS Managed Microsoft AD directory that you want to stop
	// sharing.
	DirectoryId *string
	// Identifier for the directory consumer account with whom the directory has to be
	// unshared.
	UnshareTarget *types.UnshareTarget
}

type UnshareDirectoryOutput struct {
	// Identifier of the directory stored in the directory consumer account that is to
	// be unshared from the specified directory (DirectoryId).
	SharedDirectoryId *string

	// Metadata pertaining to the operation's result.
	ResultMetadata middleware.Metadata
}

func addawsAwsjson11_serdeOpUnshareDirectoryMiddlewares(stack *middleware.Stack) {
	stack.Serialize.Add(&awsAwsjson11_serializeOpUnshareDirectory{}, middleware.After)
	stack.Deserialize.Add(&awsAwsjson11_deserializeOpUnshareDirectory{}, middleware.After)
}

func newServiceMetadataMiddleware_opUnshareDirectory(region string) awsmiddleware.RegisterServiceMetadata {
	return awsmiddleware.RegisterServiceMetadata{
		Region:        region,
		ServiceID:     ServiceID,
		SigningName:   "ds",
		OperationName: "UnshareDirectory",
	}
}
