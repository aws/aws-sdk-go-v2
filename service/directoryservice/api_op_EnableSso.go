// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package directoryservice

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/directoryservice/types"
)

const opEnableSso = "EnableSso"

// EnableSsoRequest returns a request value for making API operation for
// AWS Directory Service.
//
// Enables single sign-on for a directory.
//
//    // Example sending a request using EnableSsoRequest.
//    req := client.EnableSsoRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/ds-2015-04-16/EnableSso
func (c *Client) EnableSsoRequest(input *types.EnableSsoInput) EnableSsoRequest {
	op := &aws.Operation{
		Name:       opEnableSso,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &types.EnableSsoInput{}
	}

	req := c.newRequest(op, input, &types.EnableSsoOutput{})
	return EnableSsoRequest{Request: req, Input: input, Copy: c.EnableSsoRequest}
}

// EnableSsoRequest is the request type for the
// EnableSso API operation.
type EnableSsoRequest struct {
	*aws.Request
	Input *types.EnableSsoInput
	Copy  func(*types.EnableSsoInput) EnableSsoRequest
}

// Send marshals and sends the EnableSso API request.
func (r EnableSsoRequest) Send(ctx context.Context) (*EnableSsoResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &EnableSsoResponse{
		EnableSsoOutput: r.Request.Data.(*types.EnableSsoOutput),
		response:        &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// EnableSsoResponse is the response type for the
// EnableSso API operation.
type EnableSsoResponse struct {
	*types.EnableSsoOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// EnableSso request.
func (r *EnableSsoResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
