// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package sagemaker

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/sagemaker/types"
)

const opCreateCompilationJob = "CreateCompilationJob"

// CreateCompilationJobRequest returns a request value for making API operation for
// Amazon SageMaker Service.
//
// Starts a model compilation job. After the model has been compiled, Amazon
// SageMaker saves the resulting model artifacts to an Amazon Simple Storage
// Service (Amazon S3) bucket that you specify.
//
// If you choose to host your model using Amazon SageMaker hosting services,
// you can use the resulting model artifacts as part of the model. You can also
// use the artifacts with AWS IoT Greengrass. In that case, deploy them as an
// ML resource.
//
// In the request body, you provide the following:
//
//    * A name for the compilation job
//
//    * Information about the input model artifacts
//
//    * The output location for the compiled model and the device (target) that
//    the model runs on
//
//    * The Amazon Resource Name (ARN) of the IAM role that Amazon SageMaker
//    assumes to perform the model compilation job
//
// You can also provide a Tag to track the model compilation job's resource
// use and costs. The response body contains the CompilationJobArn for the compiled
// job.
//
// To stop a model compilation job, use StopCompilationJob. To get information
// about a particular model compilation job, use DescribeCompilationJob. To
// get information about multiple model compilation jobs, use ListCompilationJobs.
//
//    // Example sending a request using CreateCompilationJobRequest.
//    req := client.CreateCompilationJobRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/sagemaker-2017-07-24/CreateCompilationJob
func (c *Client) CreateCompilationJobRequest(input *types.CreateCompilationJobInput) CreateCompilationJobRequest {
	op := &aws.Operation{
		Name:       opCreateCompilationJob,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &types.CreateCompilationJobInput{}
	}

	req := c.newRequest(op, input, &types.CreateCompilationJobOutput{})
	return CreateCompilationJobRequest{Request: req, Input: input, Copy: c.CreateCompilationJobRequest}
}

// CreateCompilationJobRequest is the request type for the
// CreateCompilationJob API operation.
type CreateCompilationJobRequest struct {
	*aws.Request
	Input *types.CreateCompilationJobInput
	Copy  func(*types.CreateCompilationJobInput) CreateCompilationJobRequest
}

// Send marshals and sends the CreateCompilationJob API request.
func (r CreateCompilationJobRequest) Send(ctx context.Context) (*CreateCompilationJobResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &CreateCompilationJobResponse{
		CreateCompilationJobOutput: r.Request.Data.(*types.CreateCompilationJobOutput),
		response:                   &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// CreateCompilationJobResponse is the response type for the
// CreateCompilationJob API operation.
type CreateCompilationJobResponse struct {
	*types.CreateCompilationJobOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// CreateCompilationJob request.
func (r *CreateCompilationJobResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
