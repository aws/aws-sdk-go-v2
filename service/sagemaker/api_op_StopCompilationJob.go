// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package sagemaker

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/private/protocol"
	"github.com/aws/aws-sdk-go-v2/private/protocol/jsonrpc"
	"github.com/aws/aws-sdk-go-v2/service/sagemaker/types"
)

const opStopCompilationJob = "StopCompilationJob"

// StopCompilationJobRequest returns a request value for making API operation for
// Amazon SageMaker Service.
//
// Stops a model compilation job.
//
// To stop a job, Amazon SageMaker sends the algorithm the SIGTERM signal. This
// gracefully shuts the job down. If the job hasn't stopped, it sends the SIGKILL
// signal.
//
// When it receives a StopCompilationJob request, Amazon SageMaker changes the
// CompilationJobSummary$CompilationJobStatus of the job to Stopping. After
// Amazon SageMaker stops the job, it sets the CompilationJobSummary$CompilationJobStatus
// to Stopped.
//
//    // Example sending a request using StopCompilationJobRequest.
//    req := client.StopCompilationJobRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/sagemaker-2017-07-24/StopCompilationJob
func (c *Client) StopCompilationJobRequest(input *types.StopCompilationJobInput) StopCompilationJobRequest {
	op := &aws.Operation{
		Name:       opStopCompilationJob,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &types.StopCompilationJobInput{}
	}

	req := c.newRequest(op, input, &types.StopCompilationJobOutput{})
	req.Handlers.Unmarshal.Remove(jsonrpc.UnmarshalHandler)
	req.Handlers.Unmarshal.PushBackNamed(protocol.UnmarshalDiscardBodyHandler)
	return StopCompilationJobRequest{Request: req, Input: input, Copy: c.StopCompilationJobRequest}
}

// StopCompilationJobRequest is the request type for the
// StopCompilationJob API operation.
type StopCompilationJobRequest struct {
	*aws.Request
	Input *types.StopCompilationJobInput
	Copy  func(*types.StopCompilationJobInput) StopCompilationJobRequest
}

// Send marshals and sends the StopCompilationJob API request.
func (r StopCompilationJobRequest) Send(ctx context.Context) (*StopCompilationJobResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &StopCompilationJobResponse{
		StopCompilationJobOutput: r.Request.Data.(*types.StopCompilationJobOutput),
		response:                 &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// StopCompilationJobResponse is the response type for the
// StopCompilationJob API operation.
type StopCompilationJobResponse struct {
	*types.StopCompilationJobOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// StopCompilationJob request.
func (r *StopCompilationJobResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
