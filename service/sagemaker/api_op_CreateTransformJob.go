// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package sagemaker

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/sagemaker/types"
)

const opCreateTransformJob = "CreateTransformJob"

// CreateTransformJobRequest returns a request value for making API operation for
// Amazon SageMaker Service.
//
// Starts a transform job. A transform job uses a trained model to get inferences
// on a dataset and saves these results to an Amazon S3 location that you specify.
//
// To perform batch transformations, you create a transform job and use the
// data that you have readily available.
//
// In the request body, you provide the following:
//
//    * TransformJobName - Identifies the transform job. The name must be unique
//    within an AWS Region in an AWS account.
//
//    * ModelName - Identifies the model to use. ModelName must be the name
//    of an existing Amazon SageMaker model in the same AWS Region and AWS account.
//    For information on creating a model, see CreateModel.
//
//    * TransformInput - Describes the dataset to be transformed and the Amazon
//    S3 location where it is stored.
//
//    * TransformOutput - Identifies the Amazon S3 location where you want Amazon
//    SageMaker to save the results from the transform job.
//
//    * TransformResources - Identifies the ML compute instances for the transform
//    job.
//
// For more information about how batch transformation works, see Batch Transform
// (https://docs.aws.amazon.com/sagemaker/latest/dg/batch-transform.html).
//
//    // Example sending a request using CreateTransformJobRequest.
//    req := client.CreateTransformJobRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/sagemaker-2017-07-24/CreateTransformJob
func (c *Client) CreateTransformJobRequest(input *types.CreateTransformJobInput) CreateTransformJobRequest {
	op := &aws.Operation{
		Name:       opCreateTransformJob,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &types.CreateTransformJobInput{}
	}

	req := c.newRequest(op, input, &types.CreateTransformJobOutput{})
	return CreateTransformJobRequest{Request: req, Input: input, Copy: c.CreateTransformJobRequest}
}

// CreateTransformJobRequest is the request type for the
// CreateTransformJob API operation.
type CreateTransformJobRequest struct {
	*aws.Request
	Input *types.CreateTransformJobInput
	Copy  func(*types.CreateTransformJobInput) CreateTransformJobRequest
}

// Send marshals and sends the CreateTransformJob API request.
func (r CreateTransformJobRequest) Send(ctx context.Context) (*CreateTransformJobResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &CreateTransformJobResponse{
		CreateTransformJobOutput: r.Request.Data.(*types.CreateTransformJobOutput),
		response:                 &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// CreateTransformJobResponse is the response type for the
// CreateTransformJob API operation.
type CreateTransformJobResponse struct {
	*types.CreateTransformJobOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// CreateTransformJob request.
func (r *CreateTransformJobResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
