// Code generated by smithy-go-codegen DO NOT EDIT.

package sagemaker

import (
	"context"
	awsmiddleware "github.com/aws/aws-sdk-go-v2/aws/middleware"
	"github.com/aws/aws-sdk-go-v2/aws/signer/v4"
	"github.com/aws/aws-sdk-go-v2/service/sagemaker/types"
	"github.com/awslabs/smithy-go/middleware"
	smithyhttp "github.com/awslabs/smithy-go/transport/http"
)

// Finds Amazon SageMaker resources that match a search query. Matching resources
// are returned as a list of SearchRecord objects in the response. You can sort the
// search results by any resource property in a ascending or descending order. You
// can query against the following value types: numeric, text, Boolean, and
// timestamp.
func (c *Client) Search(ctx context.Context, params *SearchInput, optFns ...func(*Options)) (*SearchOutput, error) {
	if params == nil {
		params = &SearchInput{}
	}

	result, metadata, err := c.invokeOperation(ctx, "Search", params, optFns, addOperationSearchMiddlewares)
	if err != nil {
		return nil, err
	}

	out := result.(*SearchOutput)
	out.ResultMetadata = metadata
	return out, nil
}

type SearchInput struct {

	// The name of the Amazon SageMaker resource to search for.
	//
	// This member is required.
	Resource types.ResourceType

	// The maximum number of results to return.
	MaxResults *int32

	// If more than MaxResults resources match the specified SearchExpression, the
	// response includes a NextToken. The NextToken can be passed to the next
	// SearchRequest to continue retrieving results.
	NextToken *string

	// A Boolean conditional statement. Resources must satisfy this condition to be
	// included in search results. You must provide at least one subexpression, filter,
	// or nested filter. The maximum number of recursive SubExpressions, NestedFilters,
	// and Filters that can be included in a SearchExpression object is 50.
	SearchExpression *types.SearchExpression

	// The name of the resource property used to sort the SearchResults. The default is
	// LastModifiedTime.
	SortBy *string

	// How SearchResults are ordered. Valid values are Ascending or Descending. The
	// default is Descending.
	SortOrder types.SearchSortOrder
}

type SearchOutput struct {

	// If the result of the previous Search request was truncated, the response
	// includes a NextToken. To retrieve the next set of results, use the token in the
	// next request.
	NextToken *string

	// A list of SearchRecord objects.
	Results []*types.SearchRecord

	// Metadata pertaining to the operation's result.
	ResultMetadata middleware.Metadata
}

func addOperationSearchMiddlewares(stack *middleware.Stack, options Options) (err error) {
	err = stack.Serialize.Add(&awsAwsjson11_serializeOpSearch{}, middleware.After)
	if err != nil {
		return err
	}
	err = stack.Deserialize.Add(&awsAwsjson11_deserializeOpSearch{}, middleware.After)
	if err != nil {
		return err
	}
	awsmiddleware.AddRequestInvocationIDMiddleware(stack)
	smithyhttp.AddContentLengthMiddleware(stack)
	addResolveEndpointMiddleware(stack, options)
	v4.AddComputePayloadSHA256Middleware(stack)
	addRetryMiddlewares(stack, options)
	addHTTPSignerV4Middleware(stack, options)
	awsmiddleware.AddAttemptClockSkewMiddleware(stack)
	addClientUserAgent(stack)
	smithyhttp.AddErrorCloseResponseBodyMiddleware(stack)
	smithyhttp.AddCloseResponseBodyMiddleware(stack)
	addOpSearchValidationMiddleware(stack)
	stack.Initialize.Add(newServiceMetadataMiddleware_opSearch(options.Region), middleware.Before)
	addRequestIDRetrieverMiddleware(stack)
	addResponseErrorMiddleware(stack)
	return nil
}

func newServiceMetadataMiddleware_opSearch(region string) awsmiddleware.RegisterServiceMetadata {
	return awsmiddleware.RegisterServiceMetadata{
		Region:        region,
		ServiceID:     ServiceID,
		SigningName:   "sagemaker",
		OperationName: "Search",
	}
}
