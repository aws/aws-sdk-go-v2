// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package sagemaker

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/sagemaker/types"
)

const opCreateModelPackage = "CreateModelPackage"

// CreateModelPackageRequest returns a request value for making API operation for
// Amazon SageMaker Service.
//
// Creates a model package that you can use to create Amazon SageMaker models
// or list on AWS Marketplace. Buyers can subscribe to model packages listed
// on AWS Marketplace to create models in Amazon SageMaker.
//
// To create a model package by specifying a Docker container that contains
// your inference code and the Amazon S3 location of your model artifacts, provide
// values for InferenceSpecification. To create a model from an algorithm resource
// that you created or subscribed to in AWS Marketplace, provide a value for
// SourceAlgorithmSpecification.
//
//    // Example sending a request using CreateModelPackageRequest.
//    req := client.CreateModelPackageRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/sagemaker-2017-07-24/CreateModelPackage
func (c *Client) CreateModelPackageRequest(input *types.CreateModelPackageInput) CreateModelPackageRequest {
	op := &aws.Operation{
		Name:       opCreateModelPackage,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &types.CreateModelPackageInput{}
	}

	req := c.newRequest(op, input, &types.CreateModelPackageOutput{})
	return CreateModelPackageRequest{Request: req, Input: input, Copy: c.CreateModelPackageRequest}
}

// CreateModelPackageRequest is the request type for the
// CreateModelPackage API operation.
type CreateModelPackageRequest struct {
	*aws.Request
	Input *types.CreateModelPackageInput
	Copy  func(*types.CreateModelPackageInput) CreateModelPackageRequest
}

// Send marshals and sends the CreateModelPackage API request.
func (r CreateModelPackageRequest) Send(ctx context.Context) (*CreateModelPackageResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &CreateModelPackageResponse{
		CreateModelPackageOutput: r.Request.Data.(*types.CreateModelPackageOutput),
		response:                 &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// CreateModelPackageResponse is the response type for the
// CreateModelPackage API operation.
type CreateModelPackageResponse struct {
	*types.CreateModelPackageOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// CreateModelPackage request.
func (r *CreateModelPackageResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
