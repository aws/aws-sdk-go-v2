// Code generated by smithy-go-codegen DO NOT EDIT.

package sagemaker

import (
	"context"
	awsmiddleware "github.com/aws/aws-sdk-go-v2/aws/middleware"
	"github.com/aws/aws-sdk-go-v2/aws/signer/v4"
	"github.com/aws/aws-sdk-go-v2/service/sagemaker/types"
	"github.com/awslabs/smithy-go/middleware"
	smithyhttp "github.com/awslabs/smithy-go/transport/http"
	"time"
)

// Provides a list of a trial's properties.
func (c *Client) DescribeTrial(ctx context.Context, params *DescribeTrialInput, optFns ...func(*Options)) (*DescribeTrialOutput, error) {
	if params == nil {
		params = &DescribeTrialInput{}
	}

	result, metadata, err := c.invokeOperation(ctx, "DescribeTrial", params, optFns, addOperationDescribeTrialMiddlewares)
	if err != nil {
		return nil, err
	}

	out := result.(*DescribeTrialOutput)
	out.ResultMetadata = metadata
	return out, nil
}

type DescribeTrialInput struct {

	// The name of the trial to describe.
	//
	// This member is required.
	TrialName *string
}

type DescribeTrialOutput struct {

	// Who created the trial.
	CreatedBy *types.UserContext

	// When the trial was created.
	CreationTime *time.Time

	// The name of the trial as displayed. If DisplayName isn't specified, TrialName is
	// displayed.
	DisplayName *string

	// The name of the experiment the trial is part of.
	ExperimentName *string

	// Who last modified the trial.
	LastModifiedBy *types.UserContext

	// When the trial was last modified.
	LastModifiedTime *time.Time

	// The Amazon Resource Name (ARN) of the source and, optionally, the job type.
	Source *types.TrialSource

	// The Amazon Resource Name (ARN) of the trial.
	TrialArn *string

	// The name of the trial.
	TrialName *string

	// Metadata pertaining to the operation's result.
	ResultMetadata middleware.Metadata
}

func addOperationDescribeTrialMiddlewares(stack *middleware.Stack, options Options) (err error) {
	err = stack.Serialize.Add(&awsAwsjson11_serializeOpDescribeTrial{}, middleware.After)
	if err != nil {
		return err
	}
	err = stack.Deserialize.Add(&awsAwsjson11_deserializeOpDescribeTrial{}, middleware.After)
	if err != nil {
		return err
	}
	awsmiddleware.AddRequestInvocationIDMiddleware(stack)
	smithyhttp.AddContentLengthMiddleware(stack)
	addResolveEndpointMiddleware(stack, options)
	v4.AddComputePayloadSHA256Middleware(stack)
	addRetryMiddlewares(stack, options)
	addHTTPSignerV4Middleware(stack, options)
	awsmiddleware.AddAttemptClockSkewMiddleware(stack)
	addClientUserAgent(stack)
	smithyhttp.AddErrorCloseResponseBodyMiddleware(stack)
	smithyhttp.AddCloseResponseBodyMiddleware(stack)
	addOpDescribeTrialValidationMiddleware(stack)
	stack.Initialize.Add(newServiceMetadataMiddleware_opDescribeTrial(options.Region), middleware.Before)
	addRequestIDRetrieverMiddleware(stack)
	addResponseErrorMiddleware(stack)
	return nil
}

func newServiceMetadataMiddleware_opDescribeTrial(region string) awsmiddleware.RegisterServiceMetadata {
	return awsmiddleware.RegisterServiceMetadata{
		Region:        region,
		ServiceID:     ServiceID,
		SigningName:   "sagemaker",
		OperationName: "DescribeTrial",
	}
}
