// Code generated by smithy-go-codegen DO NOT EDIT.

package types

type AlgorithmSortBy string

// Enum values for AlgorithmSortBy
const (
	AlgorithmSortByName          AlgorithmSortBy = "Name"
	AlgorithmSortByCreation_time AlgorithmSortBy = "CreationTime"
)

// Values returns all known values for AlgorithmSortBy. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (AlgorithmSortBy) Values() []AlgorithmSortBy {
	return []AlgorithmSortBy{
		"Name",
		"CreationTime",
	}
}

type AlgorithmStatus string

// Enum values for AlgorithmStatus
const (
	AlgorithmStatusPending     AlgorithmStatus = "Pending"
	AlgorithmStatusIn_progress AlgorithmStatus = "InProgress"
	AlgorithmStatusCompleted   AlgorithmStatus = "Completed"
	AlgorithmStatusFailed      AlgorithmStatus = "Failed"
	AlgorithmStatusDeleting    AlgorithmStatus = "Deleting"
)

// Values returns all known values for AlgorithmStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (AlgorithmStatus) Values() []AlgorithmStatus {
	return []AlgorithmStatus{
		"Pending",
		"InProgress",
		"Completed",
		"Failed",
		"Deleting",
	}
}

type AppInstanceType string

// Enum values for AppInstanceType
const (
	AppInstanceTypeSystem           AppInstanceType = "system"
	AppInstanceTypeMl_t3_micro      AppInstanceType = "ml.t3.micro"
	AppInstanceTypeMl_t3_small      AppInstanceType = "ml.t3.small"
	AppInstanceTypeMl_t3_medium     AppInstanceType = "ml.t3.medium"
	AppInstanceTypeMl_t3_large      AppInstanceType = "ml.t3.large"
	AppInstanceTypeMl_t3_xlarge     AppInstanceType = "ml.t3.xlarge"
	AppInstanceTypeMl_t3_2xlarge    AppInstanceType = "ml.t3.2xlarge"
	AppInstanceTypeMl_m5_large      AppInstanceType = "ml.m5.large"
	AppInstanceTypeMl_m5_xlarge     AppInstanceType = "ml.m5.xlarge"
	AppInstanceTypeMl_m5_2xlarge    AppInstanceType = "ml.m5.2xlarge"
	AppInstanceTypeMl_m5_4xlarge    AppInstanceType = "ml.m5.4xlarge"
	AppInstanceTypeMl_m5_8xlarge    AppInstanceType = "ml.m5.8xlarge"
	AppInstanceTypeMl_m5_12xlarge   AppInstanceType = "ml.m5.12xlarge"
	AppInstanceTypeMl_m5_16xlarge   AppInstanceType = "ml.m5.16xlarge"
	AppInstanceTypeMl_m5_24xlarge   AppInstanceType = "ml.m5.24xlarge"
	AppInstanceTypeMl_c5_large      AppInstanceType = "ml.c5.large"
	AppInstanceTypeMl_c5_xlarge     AppInstanceType = "ml.c5.xlarge"
	AppInstanceTypeMl_c5_2xlarge    AppInstanceType = "ml.c5.2xlarge"
	AppInstanceTypeMl_c5_4xlarge    AppInstanceType = "ml.c5.4xlarge"
	AppInstanceTypeMl_c5_9xlarge    AppInstanceType = "ml.c5.9xlarge"
	AppInstanceTypeMl_c5_12xlarge   AppInstanceType = "ml.c5.12xlarge"
	AppInstanceTypeMl_c5_18xlarge   AppInstanceType = "ml.c5.18xlarge"
	AppInstanceTypeMl_c5_24xlarge   AppInstanceType = "ml.c5.24xlarge"
	AppInstanceTypeMl_p3_2xlarge    AppInstanceType = "ml.p3.2xlarge"
	AppInstanceTypeMl_p3_8xlarge    AppInstanceType = "ml.p3.8xlarge"
	AppInstanceTypeMl_p3_16xlarge   AppInstanceType = "ml.p3.16xlarge"
	AppInstanceTypeMl_g4dn_xlarge   AppInstanceType = "ml.g4dn.xlarge"
	AppInstanceTypeMl_g4dn_2xlarge  AppInstanceType = "ml.g4dn.2xlarge"
	AppInstanceTypeMl_g4dn_4xlarge  AppInstanceType = "ml.g4dn.4xlarge"
	AppInstanceTypeMl_g4dn_8xlarge  AppInstanceType = "ml.g4dn.8xlarge"
	AppInstanceTypeMl_g4dn_12xlarge AppInstanceType = "ml.g4dn.12xlarge"
	AppInstanceTypeMl_g4dn_16xlarge AppInstanceType = "ml.g4dn.16xlarge"
)

// Values returns all known values for AppInstanceType. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (AppInstanceType) Values() []AppInstanceType {
	return []AppInstanceType{
		"system",
		"ml.t3.micro",
		"ml.t3.small",
		"ml.t3.medium",
		"ml.t3.large",
		"ml.t3.xlarge",
		"ml.t3.2xlarge",
		"ml.m5.large",
		"ml.m5.xlarge",
		"ml.m5.2xlarge",
		"ml.m5.4xlarge",
		"ml.m5.8xlarge",
		"ml.m5.12xlarge",
		"ml.m5.16xlarge",
		"ml.m5.24xlarge",
		"ml.c5.large",
		"ml.c5.xlarge",
		"ml.c5.2xlarge",
		"ml.c5.4xlarge",
		"ml.c5.9xlarge",
		"ml.c5.12xlarge",
		"ml.c5.18xlarge",
		"ml.c5.24xlarge",
		"ml.p3.2xlarge",
		"ml.p3.8xlarge",
		"ml.p3.16xlarge",
		"ml.g4dn.xlarge",
		"ml.g4dn.2xlarge",
		"ml.g4dn.4xlarge",
		"ml.g4dn.8xlarge",
		"ml.g4dn.12xlarge",
		"ml.g4dn.16xlarge",
	}
}

type AppNetworkAccessType string

// Enum values for AppNetworkAccessType
const (
	AppNetworkAccessTypePublicinternetonly AppNetworkAccessType = "PublicInternetOnly"
	AppNetworkAccessTypeVpconly            AppNetworkAccessType = "VpcOnly"
)

// Values returns all known values for AppNetworkAccessType. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (AppNetworkAccessType) Values() []AppNetworkAccessType {
	return []AppNetworkAccessType{
		"PublicInternetOnly",
		"VpcOnly",
	}
}

type AppSortKey string

// Enum values for AppSortKey
const (
	AppSortKeyCreationtime AppSortKey = "CreationTime"
)

// Values returns all known values for AppSortKey. Note that this can be expanded
// in the future, and so it is only as up to date as the client. The ordering of
// this slice is not guaranteed to be stable across updates.
func (AppSortKey) Values() []AppSortKey {
	return []AppSortKey{
		"CreationTime",
	}
}

type AppStatus string

// Enum values for AppStatus
const (
	AppStatusDeleted   AppStatus = "Deleted"
	AppStatusDeleting  AppStatus = "Deleting"
	AppStatusFailed    AppStatus = "Failed"
	AppStatusInservice AppStatus = "InService"
	AppStatusPending   AppStatus = "Pending"
)

// Values returns all known values for AppStatus. Note that this can be expanded in
// the future, and so it is only as up to date as the client. The ordering of this
// slice is not guaranteed to be stable across updates.
func (AppStatus) Values() []AppStatus {
	return []AppStatus{
		"Deleted",
		"Deleting",
		"Failed",
		"InService",
		"Pending",
	}
}

type AppType string

// Enum values for AppType
const (
	AppTypeJupyterserver AppType = "JupyterServer"
	AppTypeKernelgateway AppType = "KernelGateway"
	AppTypeTensorboard   AppType = "TensorBoard"
)

// Values returns all known values for AppType. Note that this can be expanded in
// the future, and so it is only as up to date as the client. The ordering of this
// slice is not guaranteed to be stable across updates.
func (AppType) Values() []AppType {
	return []AppType{
		"JupyterServer",
		"KernelGateway",
		"TensorBoard",
	}
}

type AssemblyType string

// Enum values for AssemblyType
const (
	AssemblyTypeNone AssemblyType = "None"
	AssemblyTypeLine AssemblyType = "Line"
)

// Values returns all known values for AssemblyType. Note that this can be expanded
// in the future, and so it is only as up to date as the client. The ordering of
// this slice is not guaranteed to be stable across updates.
func (AssemblyType) Values() []AssemblyType {
	return []AssemblyType{
		"None",
		"Line",
	}
}

type AuthMode string

// Enum values for AuthMode
const (
	AuthModeSso AuthMode = "SSO"
	AuthModeIam AuthMode = "IAM"
)

// Values returns all known values for AuthMode. Note that this can be expanded in
// the future, and so it is only as up to date as the client. The ordering of this
// slice is not guaranteed to be stable across updates.
func (AuthMode) Values() []AuthMode {
	return []AuthMode{
		"SSO",
		"IAM",
	}
}

type AutoMLJobObjectiveType string

// Enum values for AutoMLJobObjectiveType
const (
	AutoMLJobObjectiveTypeMaximize AutoMLJobObjectiveType = "Maximize"
	AutoMLJobObjectiveTypeMinimize AutoMLJobObjectiveType = "Minimize"
)

// Values returns all known values for AutoMLJobObjectiveType. Note that this can
// be expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (AutoMLJobObjectiveType) Values() []AutoMLJobObjectiveType {
	return []AutoMLJobObjectiveType{
		"Maximize",
		"Minimize",
	}
}

type AutoMLJobSecondaryStatus string

// Enum values for AutoMLJobSecondaryStatus
const (
	AutoMLJobSecondaryStatusStarting                        AutoMLJobSecondaryStatus = "Starting"
	AutoMLJobSecondaryStatusAnalyzing_data                  AutoMLJobSecondaryStatus = "AnalyzingData"
	AutoMLJobSecondaryStatusFeature_engineering             AutoMLJobSecondaryStatus = "FeatureEngineering"
	AutoMLJobSecondaryStatusModel_tuning                    AutoMLJobSecondaryStatus = "ModelTuning"
	AutoMLJobSecondaryStatusMax_candidates_reached          AutoMLJobSecondaryStatus = "MaxCandidatesReached"
	AutoMLJobSecondaryStatusFailed                          AutoMLJobSecondaryStatus = "Failed"
	AutoMLJobSecondaryStatusStopped                         AutoMLJobSecondaryStatus = "Stopped"
	AutoMLJobSecondaryStatusMax_auto_ml_job_runtime_reached AutoMLJobSecondaryStatus = "MaxAutoMLJobRuntimeReached"
	AutoMLJobSecondaryStatusStopping                        AutoMLJobSecondaryStatus = "Stopping"
	AutoMLJobSecondaryStatusCandidate_definitions_generated AutoMLJobSecondaryStatus = "CandidateDefinitionsGenerated"
)

// Values returns all known values for AutoMLJobSecondaryStatus. Note that this can
// be expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (AutoMLJobSecondaryStatus) Values() []AutoMLJobSecondaryStatus {
	return []AutoMLJobSecondaryStatus{
		"Starting",
		"AnalyzingData",
		"FeatureEngineering",
		"ModelTuning",
		"MaxCandidatesReached",
		"Failed",
		"Stopped",
		"MaxAutoMLJobRuntimeReached",
		"Stopping",
		"CandidateDefinitionsGenerated",
	}
}

type AutoMLJobStatus string

// Enum values for AutoMLJobStatus
const (
	AutoMLJobStatusCompleted   AutoMLJobStatus = "Completed"
	AutoMLJobStatusIn_progress AutoMLJobStatus = "InProgress"
	AutoMLJobStatusFailed      AutoMLJobStatus = "Failed"
	AutoMLJobStatusStopped     AutoMLJobStatus = "Stopped"
	AutoMLJobStatusStopping    AutoMLJobStatus = "Stopping"
)

// Values returns all known values for AutoMLJobStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (AutoMLJobStatus) Values() []AutoMLJobStatus {
	return []AutoMLJobStatus{
		"Completed",
		"InProgress",
		"Failed",
		"Stopped",
		"Stopping",
	}
}

type AutoMLMetricEnum string

// Enum values for AutoMLMetricEnum
const (
	AutoMLMetricEnumAccuracy AutoMLMetricEnum = "Accuracy"
	AutoMLMetricEnumMse      AutoMLMetricEnum = "MSE"
	AutoMLMetricEnumF1       AutoMLMetricEnum = "F1"
	AutoMLMetricEnumF1_macro AutoMLMetricEnum = "F1macro"
	AutoMLMetricEnumAuc      AutoMLMetricEnum = "AUC"
)

// Values returns all known values for AutoMLMetricEnum. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (AutoMLMetricEnum) Values() []AutoMLMetricEnum {
	return []AutoMLMetricEnum{
		"Accuracy",
		"MSE",
		"F1",
		"F1macro",
		"AUC",
	}
}

type AutoMLS3DataType string

// Enum values for AutoMLS3DataType
const (
	AutoMLS3DataTypeManifest_file AutoMLS3DataType = "ManifestFile"
	AutoMLS3DataTypeS3_prefix     AutoMLS3DataType = "S3Prefix"
)

// Values returns all known values for AutoMLS3DataType. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (AutoMLS3DataType) Values() []AutoMLS3DataType {
	return []AutoMLS3DataType{
		"ManifestFile",
		"S3Prefix",
	}
}

type AutoMLSortBy string

// Enum values for AutoMLSortBy
const (
	AutoMLSortByName          AutoMLSortBy = "Name"
	AutoMLSortByCreation_time AutoMLSortBy = "CreationTime"
	AutoMLSortByStatus        AutoMLSortBy = "Status"
)

// Values returns all known values for AutoMLSortBy. Note that this can be expanded
// in the future, and so it is only as up to date as the client. The ordering of
// this slice is not guaranteed to be stable across updates.
func (AutoMLSortBy) Values() []AutoMLSortBy {
	return []AutoMLSortBy{
		"Name",
		"CreationTime",
		"Status",
	}
}

type AutoMLSortOrder string

// Enum values for AutoMLSortOrder
const (
	AutoMLSortOrderAscending  AutoMLSortOrder = "Ascending"
	AutoMLSortOrderDescending AutoMLSortOrder = "Descending"
)

// Values returns all known values for AutoMLSortOrder. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (AutoMLSortOrder) Values() []AutoMLSortOrder {
	return []AutoMLSortOrder{
		"Ascending",
		"Descending",
	}
}

type AwsManagedHumanLoopRequestSource string

// Enum values for AwsManagedHumanLoopRequestSource
const (
	AwsManagedHumanLoopRequestSourceRekognition_detect_moderation_labels_image_v3 AwsManagedHumanLoopRequestSource = "AWS/Rekognition/DetectModerationLabels/Image/V3"
	AwsManagedHumanLoopRequestSourceTextract_analyze_document_forms_v1            AwsManagedHumanLoopRequestSource = "AWS/Textract/AnalyzeDocument/Forms/V1"
)

// Values returns all known values for AwsManagedHumanLoopRequestSource. Note that
// this can be expanded in the future, and so it is only as up to date as the
// client. The ordering of this slice is not guaranteed to be stable across
// updates.
func (AwsManagedHumanLoopRequestSource) Values() []AwsManagedHumanLoopRequestSource {
	return []AwsManagedHumanLoopRequestSource{
		"AWS/Rekognition/DetectModerationLabels/Image/V3",
		"AWS/Textract/AnalyzeDocument/Forms/V1",
	}
}

type BatchStrategy string

// Enum values for BatchStrategy
const (
	BatchStrategyMulti_record  BatchStrategy = "MultiRecord"
	BatchStrategySingle_record BatchStrategy = "SingleRecord"
)

// Values returns all known values for BatchStrategy. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (BatchStrategy) Values() []BatchStrategy {
	return []BatchStrategy{
		"MultiRecord",
		"SingleRecord",
	}
}

type BooleanOperator string

// Enum values for BooleanOperator
const (
	BooleanOperatorAnd BooleanOperator = "And"
	BooleanOperatorOr  BooleanOperator = "Or"
)

// Values returns all known values for BooleanOperator. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (BooleanOperator) Values() []BooleanOperator {
	return []BooleanOperator{
		"And",
		"Or",
	}
}

type CandidateSortBy string

// Enum values for CandidateSortBy
const (
	CandidateSortByCreationtime              CandidateSortBy = "CreationTime"
	CandidateSortByStatus                    CandidateSortBy = "Status"
	CandidateSortByFinalobjectivemetricvalue CandidateSortBy = "FinalObjectiveMetricValue"
)

// Values returns all known values for CandidateSortBy. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (CandidateSortBy) Values() []CandidateSortBy {
	return []CandidateSortBy{
		"CreationTime",
		"Status",
		"FinalObjectiveMetricValue",
	}
}

type CandidateStatus string

// Enum values for CandidateStatus
const (
	CandidateStatusCompleted   CandidateStatus = "Completed"
	CandidateStatusIn_progress CandidateStatus = "InProgress"
	CandidateStatusFailed      CandidateStatus = "Failed"
	CandidateStatusStopped     CandidateStatus = "Stopped"
	CandidateStatusStopping    CandidateStatus = "Stopping"
)

// Values returns all known values for CandidateStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (CandidateStatus) Values() []CandidateStatus {
	return []CandidateStatus{
		"Completed",
		"InProgress",
		"Failed",
		"Stopped",
		"Stopping",
	}
}

type CandidateStepType string

// Enum values for CandidateStepType
const (
	CandidateStepTypeTraining   CandidateStepType = "AWS::SageMaker::TrainingJob"
	CandidateStepTypeTransform  CandidateStepType = "AWS::SageMaker::TransformJob"
	CandidateStepTypeProcessing CandidateStepType = "AWS::SageMaker::ProcessingJob"
)

// Values returns all known values for CandidateStepType. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (CandidateStepType) Values() []CandidateStepType {
	return []CandidateStepType{
		"AWS::SageMaker::TrainingJob",
		"AWS::SageMaker::TransformJob",
		"AWS::SageMaker::ProcessingJob",
	}
}

type CaptureMode string

// Enum values for CaptureMode
const (
	CaptureModeInput  CaptureMode = "Input"
	CaptureModeOutput CaptureMode = "Output"
)

// Values returns all known values for CaptureMode. Note that this can be expanded
// in the future, and so it is only as up to date as the client. The ordering of
// this slice is not guaranteed to be stable across updates.
func (CaptureMode) Values() []CaptureMode {
	return []CaptureMode{
		"Input",
		"Output",
	}
}

type CaptureStatus string

// Enum values for CaptureStatus
const (
	CaptureStatusStarted CaptureStatus = "Started"
	CaptureStatusStopped CaptureStatus = "Stopped"
)

// Values returns all known values for CaptureStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (CaptureStatus) Values() []CaptureStatus {
	return []CaptureStatus{
		"Started",
		"Stopped",
	}
}

type CodeRepositorySortBy string

// Enum values for CodeRepositorySortBy
const (
	CodeRepositorySortByName               CodeRepositorySortBy = "Name"
	CodeRepositorySortByCreation_time      CodeRepositorySortBy = "CreationTime"
	CodeRepositorySortByLast_modified_time CodeRepositorySortBy = "LastModifiedTime"
)

// Values returns all known values for CodeRepositorySortBy. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (CodeRepositorySortBy) Values() []CodeRepositorySortBy {
	return []CodeRepositorySortBy{
		"Name",
		"CreationTime",
		"LastModifiedTime",
	}
}

type CodeRepositorySortOrder string

// Enum values for CodeRepositorySortOrder
const (
	CodeRepositorySortOrderAscending  CodeRepositorySortOrder = "Ascending"
	CodeRepositorySortOrderDescending CodeRepositorySortOrder = "Descending"
)

// Values returns all known values for CodeRepositorySortOrder. Note that this can
// be expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (CodeRepositorySortOrder) Values() []CodeRepositorySortOrder {
	return []CodeRepositorySortOrder{
		"Ascending",
		"Descending",
	}
}

type CompilationJobStatus string

// Enum values for CompilationJobStatus
const (
	CompilationJobStatusInprogress CompilationJobStatus = "INPROGRESS"
	CompilationJobStatusCompleted  CompilationJobStatus = "COMPLETED"
	CompilationJobStatusFailed     CompilationJobStatus = "FAILED"
	CompilationJobStatusStarting   CompilationJobStatus = "STARTING"
	CompilationJobStatusStopping   CompilationJobStatus = "STOPPING"
	CompilationJobStatusStopped    CompilationJobStatus = "STOPPED"
)

// Values returns all known values for CompilationJobStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (CompilationJobStatus) Values() []CompilationJobStatus {
	return []CompilationJobStatus{
		"INPROGRESS",
		"COMPLETED",
		"FAILED",
		"STARTING",
		"STOPPING",
		"STOPPED",
	}
}

type CompressionType string

// Enum values for CompressionType
const (
	CompressionTypeNone CompressionType = "None"
	CompressionTypeGzip CompressionType = "Gzip"
)

// Values returns all known values for CompressionType. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (CompressionType) Values() []CompressionType {
	return []CompressionType{
		"None",
		"Gzip",
	}
}

type ContainerMode string

// Enum values for ContainerMode
const (
	ContainerModeSingle_model ContainerMode = "SingleModel"
	ContainerModeMulti_model  ContainerMode = "MultiModel"
)

// Values returns all known values for ContainerMode. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (ContainerMode) Values() []ContainerMode {
	return []ContainerMode{
		"SingleModel",
		"MultiModel",
	}
}

type ContentClassifier string

// Enum values for ContentClassifier
const (
	ContentClassifierFree_of_personally_identifiable_information ContentClassifier = "FreeOfPersonallyIdentifiableInformation"
	ContentClassifierFree_of_adult_content                       ContentClassifier = "FreeOfAdultContent"
)

// Values returns all known values for ContentClassifier. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (ContentClassifier) Values() []ContentClassifier {
	return []ContentClassifier{
		"FreeOfPersonallyIdentifiableInformation",
		"FreeOfAdultContent",
	}
}

type DetailedAlgorithmStatus string

// Enum values for DetailedAlgorithmStatus
const (
	DetailedAlgorithmStatusNot_started DetailedAlgorithmStatus = "NotStarted"
	DetailedAlgorithmStatusIn_progress DetailedAlgorithmStatus = "InProgress"
	DetailedAlgorithmStatusCompleted   DetailedAlgorithmStatus = "Completed"
	DetailedAlgorithmStatusFailed      DetailedAlgorithmStatus = "Failed"
)

// Values returns all known values for DetailedAlgorithmStatus. Note that this can
// be expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (DetailedAlgorithmStatus) Values() []DetailedAlgorithmStatus {
	return []DetailedAlgorithmStatus{
		"NotStarted",
		"InProgress",
		"Completed",
		"Failed",
	}
}

type DetailedModelPackageStatus string

// Enum values for DetailedModelPackageStatus
const (
	DetailedModelPackageStatusNot_started DetailedModelPackageStatus = "NotStarted"
	DetailedModelPackageStatusIn_progress DetailedModelPackageStatus = "InProgress"
	DetailedModelPackageStatusCompleted   DetailedModelPackageStatus = "Completed"
	DetailedModelPackageStatusFailed      DetailedModelPackageStatus = "Failed"
)

// Values returns all known values for DetailedModelPackageStatus. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
// The ordering of this slice is not guaranteed to be stable across updates.
func (DetailedModelPackageStatus) Values() []DetailedModelPackageStatus {
	return []DetailedModelPackageStatus{
		"NotStarted",
		"InProgress",
		"Completed",
		"Failed",
	}
}

type DirectInternetAccess string

// Enum values for DirectInternetAccess
const (
	DirectInternetAccessEnabled  DirectInternetAccess = "Enabled"
	DirectInternetAccessDisabled DirectInternetAccess = "Disabled"
)

// Values returns all known values for DirectInternetAccess. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (DirectInternetAccess) Values() []DirectInternetAccess {
	return []DirectInternetAccess{
		"Enabled",
		"Disabled",
	}
}

type DomainStatus string

// Enum values for DomainStatus
const (
	DomainStatusDeleting  DomainStatus = "Deleting"
	DomainStatusFailed    DomainStatus = "Failed"
	DomainStatusInservice DomainStatus = "InService"
	DomainStatusPending   DomainStatus = "Pending"
)

// Values returns all known values for DomainStatus. Note that this can be expanded
// in the future, and so it is only as up to date as the client. The ordering of
// this slice is not guaranteed to be stable across updates.
func (DomainStatus) Values() []DomainStatus {
	return []DomainStatus{
		"Deleting",
		"Failed",
		"InService",
		"Pending",
	}
}

type EndpointConfigSortKey string

// Enum values for EndpointConfigSortKey
const (
	EndpointConfigSortKeyName         EndpointConfigSortKey = "Name"
	EndpointConfigSortKeyCreationtime EndpointConfigSortKey = "CreationTime"
)

// Values returns all known values for EndpointConfigSortKey. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (EndpointConfigSortKey) Values() []EndpointConfigSortKey {
	return []EndpointConfigSortKey{
		"Name",
		"CreationTime",
	}
}

type EndpointSortKey string

// Enum values for EndpointSortKey
const (
	EndpointSortKeyName         EndpointSortKey = "Name"
	EndpointSortKeyCreationtime EndpointSortKey = "CreationTime"
	EndpointSortKeyStatus       EndpointSortKey = "Status"
)

// Values returns all known values for EndpointSortKey. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (EndpointSortKey) Values() []EndpointSortKey {
	return []EndpointSortKey{
		"Name",
		"CreationTime",
		"Status",
	}
}

type EndpointStatus string

// Enum values for EndpointStatus
const (
	EndpointStatusOut_of_service  EndpointStatus = "OutOfService"
	EndpointStatusCreating        EndpointStatus = "Creating"
	EndpointStatusUpdating        EndpointStatus = "Updating"
	EndpointStatusSystem_updating EndpointStatus = "SystemUpdating"
	EndpointStatusRolling_back    EndpointStatus = "RollingBack"
	EndpointStatusIn_service      EndpointStatus = "InService"
	EndpointStatusDeleting        EndpointStatus = "Deleting"
	EndpointStatusFailed          EndpointStatus = "Failed"
)

// Values returns all known values for EndpointStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (EndpointStatus) Values() []EndpointStatus {
	return []EndpointStatus{
		"OutOfService",
		"Creating",
		"Updating",
		"SystemUpdating",
		"RollingBack",
		"InService",
		"Deleting",
		"Failed",
	}
}

type ExecutionStatus string

// Enum values for ExecutionStatus
const (
	ExecutionStatusPending                   ExecutionStatus = "Pending"
	ExecutionStatusCompleted                 ExecutionStatus = "Completed"
	ExecutionStatusCompleted_with_violations ExecutionStatus = "CompletedWithViolations"
	ExecutionStatusIn_progress               ExecutionStatus = "InProgress"
	ExecutionStatusFailed                    ExecutionStatus = "Failed"
	ExecutionStatusStopping                  ExecutionStatus = "Stopping"
	ExecutionStatusStopped                   ExecutionStatus = "Stopped"
)

// Values returns all known values for ExecutionStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (ExecutionStatus) Values() []ExecutionStatus {
	return []ExecutionStatus{
		"Pending",
		"Completed",
		"CompletedWithViolations",
		"InProgress",
		"Failed",
		"Stopping",
		"Stopped",
	}
}

type FileSystemAccessMode string

// Enum values for FileSystemAccessMode
const (
	FileSystemAccessModeRw FileSystemAccessMode = "rw"
	FileSystemAccessModeRo FileSystemAccessMode = "ro"
)

// Values returns all known values for FileSystemAccessMode. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (FileSystemAccessMode) Values() []FileSystemAccessMode {
	return []FileSystemAccessMode{
		"rw",
		"ro",
	}
}

type FileSystemType string

// Enum values for FileSystemType
const (
	FileSystemTypeEfs       FileSystemType = "EFS"
	FileSystemTypeFsxlustre FileSystemType = "FSxLustre"
)

// Values returns all known values for FileSystemType. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (FileSystemType) Values() []FileSystemType {
	return []FileSystemType{
		"EFS",
		"FSxLustre",
	}
}

type FlowDefinitionStatus string

// Enum values for FlowDefinitionStatus
const (
	FlowDefinitionStatusInitializing FlowDefinitionStatus = "Initializing"
	FlowDefinitionStatusActive       FlowDefinitionStatus = "Active"
	FlowDefinitionStatusFailed       FlowDefinitionStatus = "Failed"
	FlowDefinitionStatusDeleting     FlowDefinitionStatus = "Deleting"
)

// Values returns all known values for FlowDefinitionStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (FlowDefinitionStatus) Values() []FlowDefinitionStatus {
	return []FlowDefinitionStatus{
		"Initializing",
		"Active",
		"Failed",
		"Deleting",
	}
}

type Framework string

// Enum values for Framework
const (
	FrameworkTensorflow Framework = "TENSORFLOW"
	FrameworkKeras      Framework = "KERAS"
	FrameworkMxnet      Framework = "MXNET"
	FrameworkOnnx       Framework = "ONNX"
	FrameworkPytorch    Framework = "PYTORCH"
	FrameworkXgboost    Framework = "XGBOOST"
	FrameworkTflite     Framework = "TFLITE"
)

// Values returns all known values for Framework. Note that this can be expanded in
// the future, and so it is only as up to date as the client. The ordering of this
// slice is not guaranteed to be stable across updates.
func (Framework) Values() []Framework {
	return []Framework{
		"TENSORFLOW",
		"KERAS",
		"MXNET",
		"ONNX",
		"PYTORCH",
		"XGBOOST",
		"TFLITE",
	}
}

type HumanTaskUiStatus string

// Enum values for HumanTaskUiStatus
const (
	HumanTaskUiStatusActive   HumanTaskUiStatus = "Active"
	HumanTaskUiStatusDeleting HumanTaskUiStatus = "Deleting"
)

// Values returns all known values for HumanTaskUiStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (HumanTaskUiStatus) Values() []HumanTaskUiStatus {
	return []HumanTaskUiStatus{
		"Active",
		"Deleting",
	}
}

type HyperParameterScalingType string

// Enum values for HyperParameterScalingType
const (
	HyperParameterScalingTypeAuto                HyperParameterScalingType = "Auto"
	HyperParameterScalingTypeLinear              HyperParameterScalingType = "Linear"
	HyperParameterScalingTypeLogarithmic         HyperParameterScalingType = "Logarithmic"
	HyperParameterScalingTypeReverse_logarithmic HyperParameterScalingType = "ReverseLogarithmic"
)

// Values returns all known values for HyperParameterScalingType. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
// The ordering of this slice is not guaranteed to be stable across updates.
func (HyperParameterScalingType) Values() []HyperParameterScalingType {
	return []HyperParameterScalingType{
		"Auto",
		"Linear",
		"Logarithmic",
		"ReverseLogarithmic",
	}
}

type HyperParameterTuningJobObjectiveType string

// Enum values for HyperParameterTuningJobObjectiveType
const (
	HyperParameterTuningJobObjectiveTypeMaximize HyperParameterTuningJobObjectiveType = "Maximize"
	HyperParameterTuningJobObjectiveTypeMinimize HyperParameterTuningJobObjectiveType = "Minimize"
)

// Values returns all known values for HyperParameterTuningJobObjectiveType. Note
// that this can be expanded in the future, and so it is only as up to date as the
// client. The ordering of this slice is not guaranteed to be stable across
// updates.
func (HyperParameterTuningJobObjectiveType) Values() []HyperParameterTuningJobObjectiveType {
	return []HyperParameterTuningJobObjectiveType{
		"Maximize",
		"Minimize",
	}
}

type HyperParameterTuningJobSortByOptions string

// Enum values for HyperParameterTuningJobSortByOptions
const (
	HyperParameterTuningJobSortByOptionsName         HyperParameterTuningJobSortByOptions = "Name"
	HyperParameterTuningJobSortByOptionsStatus       HyperParameterTuningJobSortByOptions = "Status"
	HyperParameterTuningJobSortByOptionsCreationtime HyperParameterTuningJobSortByOptions = "CreationTime"
)

// Values returns all known values for HyperParameterTuningJobSortByOptions. Note
// that this can be expanded in the future, and so it is only as up to date as the
// client. The ordering of this slice is not guaranteed to be stable across
// updates.
func (HyperParameterTuningJobSortByOptions) Values() []HyperParameterTuningJobSortByOptions {
	return []HyperParameterTuningJobSortByOptions{
		"Name",
		"Status",
		"CreationTime",
	}
}

type HyperParameterTuningJobStatus string

// Enum values for HyperParameterTuningJobStatus
const (
	HyperParameterTuningJobStatusCompleted   HyperParameterTuningJobStatus = "Completed"
	HyperParameterTuningJobStatusIn_progress HyperParameterTuningJobStatus = "InProgress"
	HyperParameterTuningJobStatusFailed      HyperParameterTuningJobStatus = "Failed"
	HyperParameterTuningJobStatusStopped     HyperParameterTuningJobStatus = "Stopped"
	HyperParameterTuningJobStatusStopping    HyperParameterTuningJobStatus = "Stopping"
)

// Values returns all known values for HyperParameterTuningJobStatus. Note that
// this can be expanded in the future, and so it is only as up to date as the
// client. The ordering of this slice is not guaranteed to be stable across
// updates.
func (HyperParameterTuningJobStatus) Values() []HyperParameterTuningJobStatus {
	return []HyperParameterTuningJobStatus{
		"Completed",
		"InProgress",
		"Failed",
		"Stopped",
		"Stopping",
	}
}

type HyperParameterTuningJobStrategyType string

// Enum values for HyperParameterTuningJobStrategyType
const (
	HyperParameterTuningJobStrategyTypeBayesian HyperParameterTuningJobStrategyType = "Bayesian"
	HyperParameterTuningJobStrategyTypeRandom   HyperParameterTuningJobStrategyType = "Random"
)

// Values returns all known values for HyperParameterTuningJobStrategyType. Note
// that this can be expanded in the future, and so it is only as up to date as the
// client. The ordering of this slice is not guaranteed to be stable across
// updates.
func (HyperParameterTuningJobStrategyType) Values() []HyperParameterTuningJobStrategyType {
	return []HyperParameterTuningJobStrategyType{
		"Bayesian",
		"Random",
	}
}

type HyperParameterTuningJobWarmStartType string

// Enum values for HyperParameterTuningJobWarmStartType
const (
	HyperParameterTuningJobWarmStartTypeIdentical_data_and_algorithm HyperParameterTuningJobWarmStartType = "IdenticalDataAndAlgorithm"
	HyperParameterTuningJobWarmStartTypeTransfer_learning            HyperParameterTuningJobWarmStartType = "TransferLearning"
)

// Values returns all known values for HyperParameterTuningJobWarmStartType. Note
// that this can be expanded in the future, and so it is only as up to date as the
// client. The ordering of this slice is not guaranteed to be stable across
// updates.
func (HyperParameterTuningJobWarmStartType) Values() []HyperParameterTuningJobWarmStartType {
	return []HyperParameterTuningJobWarmStartType{
		"IdenticalDataAndAlgorithm",
		"TransferLearning",
	}
}

type InstanceType string

// Enum values for InstanceType
const (
	InstanceTypeMl_t2_medium    InstanceType = "ml.t2.medium"
	InstanceTypeMl_t2_large     InstanceType = "ml.t2.large"
	InstanceTypeMl_t2_xlarge    InstanceType = "ml.t2.xlarge"
	InstanceTypeMl_t2_2xlarge   InstanceType = "ml.t2.2xlarge"
	InstanceTypeMl_t3_medium    InstanceType = "ml.t3.medium"
	InstanceTypeMl_t3_large     InstanceType = "ml.t3.large"
	InstanceTypeMl_t3_xlarge    InstanceType = "ml.t3.xlarge"
	InstanceTypeMl_t3_2xlarge   InstanceType = "ml.t3.2xlarge"
	InstanceTypeMl_m4_xlarge    InstanceType = "ml.m4.xlarge"
	InstanceTypeMl_m4_2xlarge   InstanceType = "ml.m4.2xlarge"
	InstanceTypeMl_m4_4xlarge   InstanceType = "ml.m4.4xlarge"
	InstanceTypeMl_m4_10xlarge  InstanceType = "ml.m4.10xlarge"
	InstanceTypeMl_m4_16xlarge  InstanceType = "ml.m4.16xlarge"
	InstanceTypeMl_m5_xlarge    InstanceType = "ml.m5.xlarge"
	InstanceTypeMl_m5_2xlarge   InstanceType = "ml.m5.2xlarge"
	InstanceTypeMl_m5_4xlarge   InstanceType = "ml.m5.4xlarge"
	InstanceTypeMl_m5_12xlarge  InstanceType = "ml.m5.12xlarge"
	InstanceTypeMl_m5_24xlarge  InstanceType = "ml.m5.24xlarge"
	InstanceTypeMl_c4_xlarge    InstanceType = "ml.c4.xlarge"
	InstanceTypeMl_c4_2xlarge   InstanceType = "ml.c4.2xlarge"
	InstanceTypeMl_c4_4xlarge   InstanceType = "ml.c4.4xlarge"
	InstanceTypeMl_c4_8xlarge   InstanceType = "ml.c4.8xlarge"
	InstanceTypeMl_c5_xlarge    InstanceType = "ml.c5.xlarge"
	InstanceTypeMl_c5_2xlarge   InstanceType = "ml.c5.2xlarge"
	InstanceTypeMl_c5_4xlarge   InstanceType = "ml.c5.4xlarge"
	InstanceTypeMl_c5_9xlarge   InstanceType = "ml.c5.9xlarge"
	InstanceTypeMl_c5_18xlarge  InstanceType = "ml.c5.18xlarge"
	InstanceTypeMl_c5d_xlarge   InstanceType = "ml.c5d.xlarge"
	InstanceTypeMl_c5d_2xlarge  InstanceType = "ml.c5d.2xlarge"
	InstanceTypeMl_c5d_4xlarge  InstanceType = "ml.c5d.4xlarge"
	InstanceTypeMl_c5d_9xlarge  InstanceType = "ml.c5d.9xlarge"
	InstanceTypeMl_c5d_18xlarge InstanceType = "ml.c5d.18xlarge"
	InstanceTypeMl_p2_xlarge    InstanceType = "ml.p2.xlarge"
	InstanceTypeMl_p2_8xlarge   InstanceType = "ml.p2.8xlarge"
	InstanceTypeMl_p2_16xlarge  InstanceType = "ml.p2.16xlarge"
	InstanceTypeMl_p3_2xlarge   InstanceType = "ml.p3.2xlarge"
	InstanceTypeMl_p3_8xlarge   InstanceType = "ml.p3.8xlarge"
	InstanceTypeMl_p3_16xlarge  InstanceType = "ml.p3.16xlarge"
)

// Values returns all known values for InstanceType. Note that this can be expanded
// in the future, and so it is only as up to date as the client. The ordering of
// this slice is not guaranteed to be stable across updates.
func (InstanceType) Values() []InstanceType {
	return []InstanceType{
		"ml.t2.medium",
		"ml.t2.large",
		"ml.t2.xlarge",
		"ml.t2.2xlarge",
		"ml.t3.medium",
		"ml.t3.large",
		"ml.t3.xlarge",
		"ml.t3.2xlarge",
		"ml.m4.xlarge",
		"ml.m4.2xlarge",
		"ml.m4.4xlarge",
		"ml.m4.10xlarge",
		"ml.m4.16xlarge",
		"ml.m5.xlarge",
		"ml.m5.2xlarge",
		"ml.m5.4xlarge",
		"ml.m5.12xlarge",
		"ml.m5.24xlarge",
		"ml.c4.xlarge",
		"ml.c4.2xlarge",
		"ml.c4.4xlarge",
		"ml.c4.8xlarge",
		"ml.c5.xlarge",
		"ml.c5.2xlarge",
		"ml.c5.4xlarge",
		"ml.c5.9xlarge",
		"ml.c5.18xlarge",
		"ml.c5d.xlarge",
		"ml.c5d.2xlarge",
		"ml.c5d.4xlarge",
		"ml.c5d.9xlarge",
		"ml.c5d.18xlarge",
		"ml.p2.xlarge",
		"ml.p2.8xlarge",
		"ml.p2.16xlarge",
		"ml.p3.2xlarge",
		"ml.p3.8xlarge",
		"ml.p3.16xlarge",
	}
}

type JoinSource string

// Enum values for JoinSource
const (
	JoinSourceInput JoinSource = "Input"
	JoinSourceNone  JoinSource = "None"
)

// Values returns all known values for JoinSource. Note that this can be expanded
// in the future, and so it is only as up to date as the client. The ordering of
// this slice is not guaranteed to be stable across updates.
func (JoinSource) Values() []JoinSource {
	return []JoinSource{
		"Input",
		"None",
	}
}

type LabelingJobStatus string

// Enum values for LabelingJobStatus
const (
	LabelingJobStatusInitializing LabelingJobStatus = "Initializing"
	LabelingJobStatusIn_progress  LabelingJobStatus = "InProgress"
	LabelingJobStatusCompleted    LabelingJobStatus = "Completed"
	LabelingJobStatusFailed       LabelingJobStatus = "Failed"
	LabelingJobStatusStopping     LabelingJobStatus = "Stopping"
	LabelingJobStatusStopped      LabelingJobStatus = "Stopped"
)

// Values returns all known values for LabelingJobStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (LabelingJobStatus) Values() []LabelingJobStatus {
	return []LabelingJobStatus{
		"Initializing",
		"InProgress",
		"Completed",
		"Failed",
		"Stopping",
		"Stopped",
	}
}

type ListCompilationJobsSortBy string

// Enum values for ListCompilationJobsSortBy
const (
	ListCompilationJobsSortByName          ListCompilationJobsSortBy = "Name"
	ListCompilationJobsSortByCreation_time ListCompilationJobsSortBy = "CreationTime"
	ListCompilationJobsSortByStatus        ListCompilationJobsSortBy = "Status"
)

// Values returns all known values for ListCompilationJobsSortBy. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
// The ordering of this slice is not guaranteed to be stable across updates.
func (ListCompilationJobsSortBy) Values() []ListCompilationJobsSortBy {
	return []ListCompilationJobsSortBy{
		"Name",
		"CreationTime",
		"Status",
	}
}

type ListLabelingJobsForWorkteamSortByOptions string

// Enum values for ListLabelingJobsForWorkteamSortByOptions
const (
	ListLabelingJobsForWorkteamSortByOptionsCreation_time ListLabelingJobsForWorkteamSortByOptions = "CreationTime"
)

// Values returns all known values for ListLabelingJobsForWorkteamSortByOptions.
// Note that this can be expanded in the future, and so it is only as up to date as
// the client. The ordering of this slice is not guaranteed to be stable across
// updates.
func (ListLabelingJobsForWorkteamSortByOptions) Values() []ListLabelingJobsForWorkteamSortByOptions {
	return []ListLabelingJobsForWorkteamSortByOptions{
		"CreationTime",
	}
}

type ListWorkforcesSortByOptions string

// Enum values for ListWorkforcesSortByOptions
const (
	ListWorkforcesSortByOptionsName       ListWorkforcesSortByOptions = "Name"
	ListWorkforcesSortByOptionsCreatedate ListWorkforcesSortByOptions = "CreateDate"
)

// Values returns all known values for ListWorkforcesSortByOptions. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
// The ordering of this slice is not guaranteed to be stable across updates.
func (ListWorkforcesSortByOptions) Values() []ListWorkforcesSortByOptions {
	return []ListWorkforcesSortByOptions{
		"Name",
		"CreateDate",
	}
}

type ListWorkteamsSortByOptions string

// Enum values for ListWorkteamsSortByOptions
const (
	ListWorkteamsSortByOptionsName       ListWorkteamsSortByOptions = "Name"
	ListWorkteamsSortByOptionsCreatedate ListWorkteamsSortByOptions = "CreateDate"
)

// Values returns all known values for ListWorkteamsSortByOptions. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
// The ordering of this slice is not guaranteed to be stable across updates.
func (ListWorkteamsSortByOptions) Values() []ListWorkteamsSortByOptions {
	return []ListWorkteamsSortByOptions{
		"Name",
		"CreateDate",
	}
}

type ModelPackageSortBy string

// Enum values for ModelPackageSortBy
const (
	ModelPackageSortByName          ModelPackageSortBy = "Name"
	ModelPackageSortByCreation_time ModelPackageSortBy = "CreationTime"
)

// Values returns all known values for ModelPackageSortBy. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (ModelPackageSortBy) Values() []ModelPackageSortBy {
	return []ModelPackageSortBy{
		"Name",
		"CreationTime",
	}
}

type ModelPackageStatus string

// Enum values for ModelPackageStatus
const (
	ModelPackageStatusPending     ModelPackageStatus = "Pending"
	ModelPackageStatusIn_progress ModelPackageStatus = "InProgress"
	ModelPackageStatusCompleted   ModelPackageStatus = "Completed"
	ModelPackageStatusFailed      ModelPackageStatus = "Failed"
	ModelPackageStatusDeleting    ModelPackageStatus = "Deleting"
)

// Values returns all known values for ModelPackageStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (ModelPackageStatus) Values() []ModelPackageStatus {
	return []ModelPackageStatus{
		"Pending",
		"InProgress",
		"Completed",
		"Failed",
		"Deleting",
	}
}

type ModelSortKey string

// Enum values for ModelSortKey
const (
	ModelSortKeyName         ModelSortKey = "Name"
	ModelSortKeyCreationtime ModelSortKey = "CreationTime"
)

// Values returns all known values for ModelSortKey. Note that this can be expanded
// in the future, and so it is only as up to date as the client. The ordering of
// this slice is not guaranteed to be stable across updates.
func (ModelSortKey) Values() []ModelSortKey {
	return []ModelSortKey{
		"Name",
		"CreationTime",
	}
}

type MonitoringExecutionSortKey string

// Enum values for MonitoringExecutionSortKey
const (
	MonitoringExecutionSortKeyCreation_time  MonitoringExecutionSortKey = "CreationTime"
	MonitoringExecutionSortKeyScheduled_time MonitoringExecutionSortKey = "ScheduledTime"
	MonitoringExecutionSortKeyStatus         MonitoringExecutionSortKey = "Status"
)

// Values returns all known values for MonitoringExecutionSortKey. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
// The ordering of this slice is not guaranteed to be stable across updates.
func (MonitoringExecutionSortKey) Values() []MonitoringExecutionSortKey {
	return []MonitoringExecutionSortKey{
		"CreationTime",
		"ScheduledTime",
		"Status",
	}
}

type MonitoringScheduleSortKey string

// Enum values for MonitoringScheduleSortKey
const (
	MonitoringScheduleSortKeyName          MonitoringScheduleSortKey = "Name"
	MonitoringScheduleSortKeyCreation_time MonitoringScheduleSortKey = "CreationTime"
	MonitoringScheduleSortKeyStatus        MonitoringScheduleSortKey = "Status"
)

// Values returns all known values for MonitoringScheduleSortKey. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
// The ordering of this slice is not guaranteed to be stable across updates.
func (MonitoringScheduleSortKey) Values() []MonitoringScheduleSortKey {
	return []MonitoringScheduleSortKey{
		"Name",
		"CreationTime",
		"Status",
	}
}

type NotebookInstanceAcceleratorType string

// Enum values for NotebookInstanceAcceleratorType
const (
	NotebookInstanceAcceleratorTypeMl_eia1_medium NotebookInstanceAcceleratorType = "ml.eia1.medium"
	NotebookInstanceAcceleratorTypeMl_eia1_large  NotebookInstanceAcceleratorType = "ml.eia1.large"
	NotebookInstanceAcceleratorTypeMl_eia1_xlarge NotebookInstanceAcceleratorType = "ml.eia1.xlarge"
	NotebookInstanceAcceleratorTypeMl_eia2_medium NotebookInstanceAcceleratorType = "ml.eia2.medium"
	NotebookInstanceAcceleratorTypeMl_eia2_large  NotebookInstanceAcceleratorType = "ml.eia2.large"
	NotebookInstanceAcceleratorTypeMl_eia2_xlarge NotebookInstanceAcceleratorType = "ml.eia2.xlarge"
)

// Values returns all known values for NotebookInstanceAcceleratorType. Note that
// this can be expanded in the future, and so it is only as up to date as the
// client. The ordering of this slice is not guaranteed to be stable across
// updates.
func (NotebookInstanceAcceleratorType) Values() []NotebookInstanceAcceleratorType {
	return []NotebookInstanceAcceleratorType{
		"ml.eia1.medium",
		"ml.eia1.large",
		"ml.eia1.xlarge",
		"ml.eia2.medium",
		"ml.eia2.large",
		"ml.eia2.xlarge",
	}
}

type NotebookInstanceLifecycleConfigSortKey string

// Enum values for NotebookInstanceLifecycleConfigSortKey
const (
	NotebookInstanceLifecycleConfigSortKeyName               NotebookInstanceLifecycleConfigSortKey = "Name"
	NotebookInstanceLifecycleConfigSortKeyCreation_time      NotebookInstanceLifecycleConfigSortKey = "CreationTime"
	NotebookInstanceLifecycleConfigSortKeyLast_modified_time NotebookInstanceLifecycleConfigSortKey = "LastModifiedTime"
)

// Values returns all known values for NotebookInstanceLifecycleConfigSortKey. Note
// that this can be expanded in the future, and so it is only as up to date as the
// client. The ordering of this slice is not guaranteed to be stable across
// updates.
func (NotebookInstanceLifecycleConfigSortKey) Values() []NotebookInstanceLifecycleConfigSortKey {
	return []NotebookInstanceLifecycleConfigSortKey{
		"Name",
		"CreationTime",
		"LastModifiedTime",
	}
}

type NotebookInstanceLifecycleConfigSortOrder string

// Enum values for NotebookInstanceLifecycleConfigSortOrder
const (
	NotebookInstanceLifecycleConfigSortOrderAscending  NotebookInstanceLifecycleConfigSortOrder = "Ascending"
	NotebookInstanceLifecycleConfigSortOrderDescending NotebookInstanceLifecycleConfigSortOrder = "Descending"
)

// Values returns all known values for NotebookInstanceLifecycleConfigSortOrder.
// Note that this can be expanded in the future, and so it is only as up to date as
// the client. The ordering of this slice is not guaranteed to be stable across
// updates.
func (NotebookInstanceLifecycleConfigSortOrder) Values() []NotebookInstanceLifecycleConfigSortOrder {
	return []NotebookInstanceLifecycleConfigSortOrder{
		"Ascending",
		"Descending",
	}
}

type NotebookInstanceSortKey string

// Enum values for NotebookInstanceSortKey
const (
	NotebookInstanceSortKeyName          NotebookInstanceSortKey = "Name"
	NotebookInstanceSortKeyCreation_time NotebookInstanceSortKey = "CreationTime"
	NotebookInstanceSortKeyStatus        NotebookInstanceSortKey = "Status"
)

// Values returns all known values for NotebookInstanceSortKey. Note that this can
// be expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (NotebookInstanceSortKey) Values() []NotebookInstanceSortKey {
	return []NotebookInstanceSortKey{
		"Name",
		"CreationTime",
		"Status",
	}
}

type NotebookInstanceSortOrder string

// Enum values for NotebookInstanceSortOrder
const (
	NotebookInstanceSortOrderAscending  NotebookInstanceSortOrder = "Ascending"
	NotebookInstanceSortOrderDescending NotebookInstanceSortOrder = "Descending"
)

// Values returns all known values for NotebookInstanceSortOrder. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
// The ordering of this slice is not guaranteed to be stable across updates.
func (NotebookInstanceSortOrder) Values() []NotebookInstanceSortOrder {
	return []NotebookInstanceSortOrder{
		"Ascending",
		"Descending",
	}
}

type NotebookInstanceStatus string

// Enum values for NotebookInstanceStatus
const (
	NotebookInstanceStatusPending   NotebookInstanceStatus = "Pending"
	NotebookInstanceStatusInservice NotebookInstanceStatus = "InService"
	NotebookInstanceStatusStopping  NotebookInstanceStatus = "Stopping"
	NotebookInstanceStatusStopped   NotebookInstanceStatus = "Stopped"
	NotebookInstanceStatusFailed    NotebookInstanceStatus = "Failed"
	NotebookInstanceStatusDeleting  NotebookInstanceStatus = "Deleting"
	NotebookInstanceStatusUpdating  NotebookInstanceStatus = "Updating"
)

// Values returns all known values for NotebookInstanceStatus. Note that this can
// be expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (NotebookInstanceStatus) Values() []NotebookInstanceStatus {
	return []NotebookInstanceStatus{
		"Pending",
		"InService",
		"Stopping",
		"Stopped",
		"Failed",
		"Deleting",
		"Updating",
	}
}

type NotebookOutputOption string

// Enum values for NotebookOutputOption
const (
	NotebookOutputOptionAllowed  NotebookOutputOption = "Allowed"
	NotebookOutputOptionDisabled NotebookOutputOption = "Disabled"
)

// Values returns all known values for NotebookOutputOption. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (NotebookOutputOption) Values() []NotebookOutputOption {
	return []NotebookOutputOption{
		"Allowed",
		"Disabled",
	}
}

type ObjectiveStatus string

// Enum values for ObjectiveStatus
const (
	ObjectiveStatusSucceeded ObjectiveStatus = "Succeeded"
	ObjectiveStatusPending   ObjectiveStatus = "Pending"
	ObjectiveStatusFailed    ObjectiveStatus = "Failed"
)

// Values returns all known values for ObjectiveStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (ObjectiveStatus) Values() []ObjectiveStatus {
	return []ObjectiveStatus{
		"Succeeded",
		"Pending",
		"Failed",
	}
}

type Operator string

// Enum values for Operator
const (
	OperatorEquals                   Operator = "Equals"
	OperatorNot_equals               Operator = "NotEquals"
	OperatorGreater_than             Operator = "GreaterThan"
	OperatorGreater_than_or_equal_to Operator = "GreaterThanOrEqualTo"
	OperatorLess_than                Operator = "LessThan"
	OperatorLess_than_or_equal_to    Operator = "LessThanOrEqualTo"
	OperatorContains                 Operator = "Contains"
	OperatorExists                   Operator = "Exists"
	OperatorNot_exists               Operator = "NotExists"
	OperatorIn                       Operator = "In"
)

// Values returns all known values for Operator. Note that this can be expanded in
// the future, and so it is only as up to date as the client. The ordering of this
// slice is not guaranteed to be stable across updates.
func (Operator) Values() []Operator {
	return []Operator{
		"Equals",
		"NotEquals",
		"GreaterThan",
		"GreaterThanOrEqualTo",
		"LessThan",
		"LessThanOrEqualTo",
		"Contains",
		"Exists",
		"NotExists",
		"In",
	}
}

type OrderKey string

// Enum values for OrderKey
const (
	OrderKeyAscending  OrderKey = "Ascending"
	OrderKeyDescending OrderKey = "Descending"
)

// Values returns all known values for OrderKey. Note that this can be expanded in
// the future, and so it is only as up to date as the client. The ordering of this
// slice is not guaranteed to be stable across updates.
func (OrderKey) Values() []OrderKey {
	return []OrderKey{
		"Ascending",
		"Descending",
	}
}

type ParameterType string

// Enum values for ParameterType
const (
	ParameterTypeInteger     ParameterType = "Integer"
	ParameterTypeContinuous  ParameterType = "Continuous"
	ParameterTypeCategorical ParameterType = "Categorical"
	ParameterTypeFree_text   ParameterType = "FreeText"
)

// Values returns all known values for ParameterType. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (ParameterType) Values() []ParameterType {
	return []ParameterType{
		"Integer",
		"Continuous",
		"Categorical",
		"FreeText",
	}
}

type ProblemType string

// Enum values for ProblemType
const (
	ProblemTypeBinary_classification     ProblemType = "BinaryClassification"
	ProblemTypeMulticlass_classification ProblemType = "MulticlassClassification"
	ProblemTypeRegression                ProblemType = "Regression"
)

// Values returns all known values for ProblemType. Note that this can be expanded
// in the future, and so it is only as up to date as the client. The ordering of
// this slice is not guaranteed to be stable across updates.
func (ProblemType) Values() []ProblemType {
	return []ProblemType{
		"BinaryClassification",
		"MulticlassClassification",
		"Regression",
	}
}

type ProcessingInstanceType string

// Enum values for ProcessingInstanceType
const (
	ProcessingInstanceTypeMl_t3_medium   ProcessingInstanceType = "ml.t3.medium"
	ProcessingInstanceTypeMl_t3_large    ProcessingInstanceType = "ml.t3.large"
	ProcessingInstanceTypeMl_t3_xlarge   ProcessingInstanceType = "ml.t3.xlarge"
	ProcessingInstanceTypeMl_t3_2xlarge  ProcessingInstanceType = "ml.t3.2xlarge"
	ProcessingInstanceTypeMl_m4_xlarge   ProcessingInstanceType = "ml.m4.xlarge"
	ProcessingInstanceTypeMl_m4_2xlarge  ProcessingInstanceType = "ml.m4.2xlarge"
	ProcessingInstanceTypeMl_m4_4xlarge  ProcessingInstanceType = "ml.m4.4xlarge"
	ProcessingInstanceTypeMl_m4_10xlarge ProcessingInstanceType = "ml.m4.10xlarge"
	ProcessingInstanceTypeMl_m4_16xlarge ProcessingInstanceType = "ml.m4.16xlarge"
	ProcessingInstanceTypeMl_c4_xlarge   ProcessingInstanceType = "ml.c4.xlarge"
	ProcessingInstanceTypeMl_c4_2xlarge  ProcessingInstanceType = "ml.c4.2xlarge"
	ProcessingInstanceTypeMl_c4_4xlarge  ProcessingInstanceType = "ml.c4.4xlarge"
	ProcessingInstanceTypeMl_c4_8xlarge  ProcessingInstanceType = "ml.c4.8xlarge"
	ProcessingInstanceTypeMl_p2_xlarge   ProcessingInstanceType = "ml.p2.xlarge"
	ProcessingInstanceTypeMl_p2_8xlarge  ProcessingInstanceType = "ml.p2.8xlarge"
	ProcessingInstanceTypeMl_p2_16xlarge ProcessingInstanceType = "ml.p2.16xlarge"
	ProcessingInstanceTypeMl_p3_2xlarge  ProcessingInstanceType = "ml.p3.2xlarge"
	ProcessingInstanceTypeMl_p3_8xlarge  ProcessingInstanceType = "ml.p3.8xlarge"
	ProcessingInstanceTypeMl_p3_16xlarge ProcessingInstanceType = "ml.p3.16xlarge"
	ProcessingInstanceTypeMl_c5_xlarge   ProcessingInstanceType = "ml.c5.xlarge"
	ProcessingInstanceTypeMl_c5_2xlarge  ProcessingInstanceType = "ml.c5.2xlarge"
	ProcessingInstanceTypeMl_c5_4xlarge  ProcessingInstanceType = "ml.c5.4xlarge"
	ProcessingInstanceTypeMl_c5_9xlarge  ProcessingInstanceType = "ml.c5.9xlarge"
	ProcessingInstanceTypeMl_c5_18xlarge ProcessingInstanceType = "ml.c5.18xlarge"
	ProcessingInstanceTypeMl_m5_large    ProcessingInstanceType = "ml.m5.large"
	ProcessingInstanceTypeMl_m5_xlarge   ProcessingInstanceType = "ml.m5.xlarge"
	ProcessingInstanceTypeMl_m5_2xlarge  ProcessingInstanceType = "ml.m5.2xlarge"
	ProcessingInstanceTypeMl_m5_4xlarge  ProcessingInstanceType = "ml.m5.4xlarge"
	ProcessingInstanceTypeMl_m5_12xlarge ProcessingInstanceType = "ml.m5.12xlarge"
	ProcessingInstanceTypeMl_m5_24xlarge ProcessingInstanceType = "ml.m5.24xlarge"
	ProcessingInstanceTypeMl_r5_large    ProcessingInstanceType = "ml.r5.large"
	ProcessingInstanceTypeMl_r5_xlarge   ProcessingInstanceType = "ml.r5.xlarge"
	ProcessingInstanceTypeMl_r5_2xlarge  ProcessingInstanceType = "ml.r5.2xlarge"
	ProcessingInstanceTypeMl_r5_4xlarge  ProcessingInstanceType = "ml.r5.4xlarge"
	ProcessingInstanceTypeMl_r5_8xlarge  ProcessingInstanceType = "ml.r5.8xlarge"
	ProcessingInstanceTypeMl_r5_12xlarge ProcessingInstanceType = "ml.r5.12xlarge"
	ProcessingInstanceTypeMl_r5_16xlarge ProcessingInstanceType = "ml.r5.16xlarge"
	ProcessingInstanceTypeMl_r5_24xlarge ProcessingInstanceType = "ml.r5.24xlarge"
)

// Values returns all known values for ProcessingInstanceType. Note that this can
// be expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (ProcessingInstanceType) Values() []ProcessingInstanceType {
	return []ProcessingInstanceType{
		"ml.t3.medium",
		"ml.t3.large",
		"ml.t3.xlarge",
		"ml.t3.2xlarge",
		"ml.m4.xlarge",
		"ml.m4.2xlarge",
		"ml.m4.4xlarge",
		"ml.m4.10xlarge",
		"ml.m4.16xlarge",
		"ml.c4.xlarge",
		"ml.c4.2xlarge",
		"ml.c4.4xlarge",
		"ml.c4.8xlarge",
		"ml.p2.xlarge",
		"ml.p2.8xlarge",
		"ml.p2.16xlarge",
		"ml.p3.2xlarge",
		"ml.p3.8xlarge",
		"ml.p3.16xlarge",
		"ml.c5.xlarge",
		"ml.c5.2xlarge",
		"ml.c5.4xlarge",
		"ml.c5.9xlarge",
		"ml.c5.18xlarge",
		"ml.m5.large",
		"ml.m5.xlarge",
		"ml.m5.2xlarge",
		"ml.m5.4xlarge",
		"ml.m5.12xlarge",
		"ml.m5.24xlarge",
		"ml.r5.large",
		"ml.r5.xlarge",
		"ml.r5.2xlarge",
		"ml.r5.4xlarge",
		"ml.r5.8xlarge",
		"ml.r5.12xlarge",
		"ml.r5.16xlarge",
		"ml.r5.24xlarge",
	}
}

type ProcessingJobStatus string

// Enum values for ProcessingJobStatus
const (
	ProcessingJobStatusIn_progress ProcessingJobStatus = "InProgress"
	ProcessingJobStatusCompleted   ProcessingJobStatus = "Completed"
	ProcessingJobStatusFailed      ProcessingJobStatus = "Failed"
	ProcessingJobStatusStopping    ProcessingJobStatus = "Stopping"
	ProcessingJobStatusStopped     ProcessingJobStatus = "Stopped"
)

// Values returns all known values for ProcessingJobStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (ProcessingJobStatus) Values() []ProcessingJobStatus {
	return []ProcessingJobStatus{
		"InProgress",
		"Completed",
		"Failed",
		"Stopping",
		"Stopped",
	}
}

type ProcessingS3CompressionType string

// Enum values for ProcessingS3CompressionType
const (
	ProcessingS3CompressionTypeNone ProcessingS3CompressionType = "None"
	ProcessingS3CompressionTypeGzip ProcessingS3CompressionType = "Gzip"
)

// Values returns all known values for ProcessingS3CompressionType. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
// The ordering of this slice is not guaranteed to be stable across updates.
func (ProcessingS3CompressionType) Values() []ProcessingS3CompressionType {
	return []ProcessingS3CompressionType{
		"None",
		"Gzip",
	}
}

type ProcessingS3DataDistributionType string

// Enum values for ProcessingS3DataDistributionType
const (
	ProcessingS3DataDistributionTypeFullyreplicated ProcessingS3DataDistributionType = "FullyReplicated"
	ProcessingS3DataDistributionTypeShardedbys3key  ProcessingS3DataDistributionType = "ShardedByS3Key"
)

// Values returns all known values for ProcessingS3DataDistributionType. Note that
// this can be expanded in the future, and so it is only as up to date as the
// client. The ordering of this slice is not guaranteed to be stable across
// updates.
func (ProcessingS3DataDistributionType) Values() []ProcessingS3DataDistributionType {
	return []ProcessingS3DataDistributionType{
		"FullyReplicated",
		"ShardedByS3Key",
	}
}

type ProcessingS3DataType string

// Enum values for ProcessingS3DataType
const (
	ProcessingS3DataTypeManifest_file ProcessingS3DataType = "ManifestFile"
	ProcessingS3DataTypeS3_prefix     ProcessingS3DataType = "S3Prefix"
)

// Values returns all known values for ProcessingS3DataType. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (ProcessingS3DataType) Values() []ProcessingS3DataType {
	return []ProcessingS3DataType{
		"ManifestFile",
		"S3Prefix",
	}
}

type ProcessingS3InputMode string

// Enum values for ProcessingS3InputMode
const (
	ProcessingS3InputModePipe ProcessingS3InputMode = "Pipe"
	ProcessingS3InputModeFile ProcessingS3InputMode = "File"
)

// Values returns all known values for ProcessingS3InputMode. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (ProcessingS3InputMode) Values() []ProcessingS3InputMode {
	return []ProcessingS3InputMode{
		"Pipe",
		"File",
	}
}

type ProcessingS3UploadMode string

// Enum values for ProcessingS3UploadMode
const (
	ProcessingS3UploadModeContinuous ProcessingS3UploadMode = "Continuous"
	ProcessingS3UploadModeEnd_of_job ProcessingS3UploadMode = "EndOfJob"
)

// Values returns all known values for ProcessingS3UploadMode. Note that this can
// be expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (ProcessingS3UploadMode) Values() []ProcessingS3UploadMode {
	return []ProcessingS3UploadMode{
		"Continuous",
		"EndOfJob",
	}
}

type ProductionVariantAcceleratorType string

// Enum values for ProductionVariantAcceleratorType
const (
	ProductionVariantAcceleratorTypeMl_eia1_medium ProductionVariantAcceleratorType = "ml.eia1.medium"
	ProductionVariantAcceleratorTypeMl_eia1_large  ProductionVariantAcceleratorType = "ml.eia1.large"
	ProductionVariantAcceleratorTypeMl_eia1_xlarge ProductionVariantAcceleratorType = "ml.eia1.xlarge"
	ProductionVariantAcceleratorTypeMl_eia2_medium ProductionVariantAcceleratorType = "ml.eia2.medium"
	ProductionVariantAcceleratorTypeMl_eia2_large  ProductionVariantAcceleratorType = "ml.eia2.large"
	ProductionVariantAcceleratorTypeMl_eia2_xlarge ProductionVariantAcceleratorType = "ml.eia2.xlarge"
)

// Values returns all known values for ProductionVariantAcceleratorType. Note that
// this can be expanded in the future, and so it is only as up to date as the
// client. The ordering of this slice is not guaranteed to be stable across
// updates.
func (ProductionVariantAcceleratorType) Values() []ProductionVariantAcceleratorType {
	return []ProductionVariantAcceleratorType{
		"ml.eia1.medium",
		"ml.eia1.large",
		"ml.eia1.xlarge",
		"ml.eia2.medium",
		"ml.eia2.large",
		"ml.eia2.xlarge",
	}
}

type ProductionVariantInstanceType string

// Enum values for ProductionVariantInstanceType
const (
	ProductionVariantInstanceTypeMl_t2_medium     ProductionVariantInstanceType = "ml.t2.medium"
	ProductionVariantInstanceTypeMl_t2_large      ProductionVariantInstanceType = "ml.t2.large"
	ProductionVariantInstanceTypeMl_t2_xlarge     ProductionVariantInstanceType = "ml.t2.xlarge"
	ProductionVariantInstanceTypeMl_t2_2xlarge    ProductionVariantInstanceType = "ml.t2.2xlarge"
	ProductionVariantInstanceTypeMl_m4_xlarge     ProductionVariantInstanceType = "ml.m4.xlarge"
	ProductionVariantInstanceTypeMl_m4_2xlarge    ProductionVariantInstanceType = "ml.m4.2xlarge"
	ProductionVariantInstanceTypeMl_m4_4xlarge    ProductionVariantInstanceType = "ml.m4.4xlarge"
	ProductionVariantInstanceTypeMl_m4_10xlarge   ProductionVariantInstanceType = "ml.m4.10xlarge"
	ProductionVariantInstanceTypeMl_m4_16xlarge   ProductionVariantInstanceType = "ml.m4.16xlarge"
	ProductionVariantInstanceTypeMl_m5_large      ProductionVariantInstanceType = "ml.m5.large"
	ProductionVariantInstanceTypeMl_m5_xlarge     ProductionVariantInstanceType = "ml.m5.xlarge"
	ProductionVariantInstanceTypeMl_m5_2xlarge    ProductionVariantInstanceType = "ml.m5.2xlarge"
	ProductionVariantInstanceTypeMl_m5_4xlarge    ProductionVariantInstanceType = "ml.m5.4xlarge"
	ProductionVariantInstanceTypeMl_m5_12xlarge   ProductionVariantInstanceType = "ml.m5.12xlarge"
	ProductionVariantInstanceTypeMl_m5_24xlarge   ProductionVariantInstanceType = "ml.m5.24xlarge"
	ProductionVariantInstanceTypeMl_m5d_large     ProductionVariantInstanceType = "ml.m5d.large"
	ProductionVariantInstanceTypeMl_m5d_xlarge    ProductionVariantInstanceType = "ml.m5d.xlarge"
	ProductionVariantInstanceTypeMl_m5d_2xlarge   ProductionVariantInstanceType = "ml.m5d.2xlarge"
	ProductionVariantInstanceTypeMl_m5d_4xlarge   ProductionVariantInstanceType = "ml.m5d.4xlarge"
	ProductionVariantInstanceTypeMl_m5d_12xlarge  ProductionVariantInstanceType = "ml.m5d.12xlarge"
	ProductionVariantInstanceTypeMl_m5d_24xlarge  ProductionVariantInstanceType = "ml.m5d.24xlarge"
	ProductionVariantInstanceTypeMl_c4_large      ProductionVariantInstanceType = "ml.c4.large"
	ProductionVariantInstanceTypeMl_c4_xlarge     ProductionVariantInstanceType = "ml.c4.xlarge"
	ProductionVariantInstanceTypeMl_c4_2xlarge    ProductionVariantInstanceType = "ml.c4.2xlarge"
	ProductionVariantInstanceTypeMl_c4_4xlarge    ProductionVariantInstanceType = "ml.c4.4xlarge"
	ProductionVariantInstanceTypeMl_c4_8xlarge    ProductionVariantInstanceType = "ml.c4.8xlarge"
	ProductionVariantInstanceTypeMl_p2_xlarge     ProductionVariantInstanceType = "ml.p2.xlarge"
	ProductionVariantInstanceTypeMl_p2_8xlarge    ProductionVariantInstanceType = "ml.p2.8xlarge"
	ProductionVariantInstanceTypeMl_p2_16xlarge   ProductionVariantInstanceType = "ml.p2.16xlarge"
	ProductionVariantInstanceTypeMl_p3_2xlarge    ProductionVariantInstanceType = "ml.p3.2xlarge"
	ProductionVariantInstanceTypeMl_p3_8xlarge    ProductionVariantInstanceType = "ml.p3.8xlarge"
	ProductionVariantInstanceTypeMl_p3_16xlarge   ProductionVariantInstanceType = "ml.p3.16xlarge"
	ProductionVariantInstanceTypeMl_c5_large      ProductionVariantInstanceType = "ml.c5.large"
	ProductionVariantInstanceTypeMl_c5_xlarge     ProductionVariantInstanceType = "ml.c5.xlarge"
	ProductionVariantInstanceTypeMl_c5_2xlarge    ProductionVariantInstanceType = "ml.c5.2xlarge"
	ProductionVariantInstanceTypeMl_c5_4xlarge    ProductionVariantInstanceType = "ml.c5.4xlarge"
	ProductionVariantInstanceTypeMl_c5_9xlarge    ProductionVariantInstanceType = "ml.c5.9xlarge"
	ProductionVariantInstanceTypeMl_c5_18xlarge   ProductionVariantInstanceType = "ml.c5.18xlarge"
	ProductionVariantInstanceTypeMl_c5d_large     ProductionVariantInstanceType = "ml.c5d.large"
	ProductionVariantInstanceTypeMl_c5d_xlarge    ProductionVariantInstanceType = "ml.c5d.xlarge"
	ProductionVariantInstanceTypeMl_c5d_2xlarge   ProductionVariantInstanceType = "ml.c5d.2xlarge"
	ProductionVariantInstanceTypeMl_c5d_4xlarge   ProductionVariantInstanceType = "ml.c5d.4xlarge"
	ProductionVariantInstanceTypeMl_c5d_9xlarge   ProductionVariantInstanceType = "ml.c5d.9xlarge"
	ProductionVariantInstanceTypeMl_c5d_18xlarge  ProductionVariantInstanceType = "ml.c5d.18xlarge"
	ProductionVariantInstanceTypeMl_g4dn_xlarge   ProductionVariantInstanceType = "ml.g4dn.xlarge"
	ProductionVariantInstanceTypeMl_g4dn_2xlarge  ProductionVariantInstanceType = "ml.g4dn.2xlarge"
	ProductionVariantInstanceTypeMl_g4dn_4xlarge  ProductionVariantInstanceType = "ml.g4dn.4xlarge"
	ProductionVariantInstanceTypeMl_g4dn_8xlarge  ProductionVariantInstanceType = "ml.g4dn.8xlarge"
	ProductionVariantInstanceTypeMl_g4dn_12xlarge ProductionVariantInstanceType = "ml.g4dn.12xlarge"
	ProductionVariantInstanceTypeMl_g4dn_16xlarge ProductionVariantInstanceType = "ml.g4dn.16xlarge"
	ProductionVariantInstanceTypeMl_r5_large      ProductionVariantInstanceType = "ml.r5.large"
	ProductionVariantInstanceTypeMl_r5_xlarge     ProductionVariantInstanceType = "ml.r5.xlarge"
	ProductionVariantInstanceTypeMl_r5_2xlarge    ProductionVariantInstanceType = "ml.r5.2xlarge"
	ProductionVariantInstanceTypeMl_r5_4xlarge    ProductionVariantInstanceType = "ml.r5.4xlarge"
	ProductionVariantInstanceTypeMl_r5_12xlarge   ProductionVariantInstanceType = "ml.r5.12xlarge"
	ProductionVariantInstanceTypeMl_r5_24xlarge   ProductionVariantInstanceType = "ml.r5.24xlarge"
	ProductionVariantInstanceTypeMl_r5d_large     ProductionVariantInstanceType = "ml.r5d.large"
	ProductionVariantInstanceTypeMl_r5d_xlarge    ProductionVariantInstanceType = "ml.r5d.xlarge"
	ProductionVariantInstanceTypeMl_r5d_2xlarge   ProductionVariantInstanceType = "ml.r5d.2xlarge"
	ProductionVariantInstanceTypeMl_r5d_4xlarge   ProductionVariantInstanceType = "ml.r5d.4xlarge"
	ProductionVariantInstanceTypeMl_r5d_12xlarge  ProductionVariantInstanceType = "ml.r5d.12xlarge"
	ProductionVariantInstanceTypeMl_r5d_24xlarge  ProductionVariantInstanceType = "ml.r5d.24xlarge"
	ProductionVariantInstanceTypeMl_inf1_xlarge   ProductionVariantInstanceType = "ml.inf1.xlarge"
	ProductionVariantInstanceTypeMl_inf1_2xlarge  ProductionVariantInstanceType = "ml.inf1.2xlarge"
	ProductionVariantInstanceTypeMl_inf1_6xlarge  ProductionVariantInstanceType = "ml.inf1.6xlarge"
	ProductionVariantInstanceTypeMl_inf1_24xlarge ProductionVariantInstanceType = "ml.inf1.24xlarge"
)

// Values returns all known values for ProductionVariantInstanceType. Note that
// this can be expanded in the future, and so it is only as up to date as the
// client. The ordering of this slice is not guaranteed to be stable across
// updates.
func (ProductionVariantInstanceType) Values() []ProductionVariantInstanceType {
	return []ProductionVariantInstanceType{
		"ml.t2.medium",
		"ml.t2.large",
		"ml.t2.xlarge",
		"ml.t2.2xlarge",
		"ml.m4.xlarge",
		"ml.m4.2xlarge",
		"ml.m4.4xlarge",
		"ml.m4.10xlarge",
		"ml.m4.16xlarge",
		"ml.m5.large",
		"ml.m5.xlarge",
		"ml.m5.2xlarge",
		"ml.m5.4xlarge",
		"ml.m5.12xlarge",
		"ml.m5.24xlarge",
		"ml.m5d.large",
		"ml.m5d.xlarge",
		"ml.m5d.2xlarge",
		"ml.m5d.4xlarge",
		"ml.m5d.12xlarge",
		"ml.m5d.24xlarge",
		"ml.c4.large",
		"ml.c4.xlarge",
		"ml.c4.2xlarge",
		"ml.c4.4xlarge",
		"ml.c4.8xlarge",
		"ml.p2.xlarge",
		"ml.p2.8xlarge",
		"ml.p2.16xlarge",
		"ml.p3.2xlarge",
		"ml.p3.8xlarge",
		"ml.p3.16xlarge",
		"ml.c5.large",
		"ml.c5.xlarge",
		"ml.c5.2xlarge",
		"ml.c5.4xlarge",
		"ml.c5.9xlarge",
		"ml.c5.18xlarge",
		"ml.c5d.large",
		"ml.c5d.xlarge",
		"ml.c5d.2xlarge",
		"ml.c5d.4xlarge",
		"ml.c5d.9xlarge",
		"ml.c5d.18xlarge",
		"ml.g4dn.xlarge",
		"ml.g4dn.2xlarge",
		"ml.g4dn.4xlarge",
		"ml.g4dn.8xlarge",
		"ml.g4dn.12xlarge",
		"ml.g4dn.16xlarge",
		"ml.r5.large",
		"ml.r5.xlarge",
		"ml.r5.2xlarge",
		"ml.r5.4xlarge",
		"ml.r5.12xlarge",
		"ml.r5.24xlarge",
		"ml.r5d.large",
		"ml.r5d.xlarge",
		"ml.r5d.2xlarge",
		"ml.r5d.4xlarge",
		"ml.r5d.12xlarge",
		"ml.r5d.24xlarge",
		"ml.inf1.xlarge",
		"ml.inf1.2xlarge",
		"ml.inf1.6xlarge",
		"ml.inf1.24xlarge",
	}
}

type RecordWrapper string

// Enum values for RecordWrapper
const (
	RecordWrapperNone     RecordWrapper = "None"
	RecordWrapperRecordio RecordWrapper = "RecordIO"
)

// Values returns all known values for RecordWrapper. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (RecordWrapper) Values() []RecordWrapper {
	return []RecordWrapper{
		"None",
		"RecordIO",
	}
}

type RepositoryAccessMode string

// Enum values for RepositoryAccessMode
const (
	RepositoryAccessModePlatform RepositoryAccessMode = "Platform"
	RepositoryAccessModeVpc      RepositoryAccessMode = "Vpc"
)

// Values returns all known values for RepositoryAccessMode. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (RepositoryAccessMode) Values() []RepositoryAccessMode {
	return []RepositoryAccessMode{
		"Platform",
		"Vpc",
	}
}

type ResourceType string

// Enum values for ResourceType
const (
	ResourceTypeTraining_job               ResourceType = "TrainingJob"
	ResourceTypeExperiment                 ResourceType = "Experiment"
	ResourceTypeExperiment_trial           ResourceType = "ExperimentTrial"
	ResourceTypeExperiment_trial_component ResourceType = "ExperimentTrialComponent"
)

// Values returns all known values for ResourceType. Note that this can be expanded
// in the future, and so it is only as up to date as the client. The ordering of
// this slice is not guaranteed to be stable across updates.
func (ResourceType) Values() []ResourceType {
	return []ResourceType{
		"TrainingJob",
		"Experiment",
		"ExperimentTrial",
		"ExperimentTrialComponent",
	}
}

type RetentionType string

// Enum values for RetentionType
const (
	RetentionTypeRetain RetentionType = "Retain"
	RetentionTypeDelete RetentionType = "Delete"
)

// Values returns all known values for RetentionType. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (RetentionType) Values() []RetentionType {
	return []RetentionType{
		"Retain",
		"Delete",
	}
}

type RootAccess string

// Enum values for RootAccess
const (
	RootAccessEnabled  RootAccess = "Enabled"
	RootAccessDisabled RootAccess = "Disabled"
)

// Values returns all known values for RootAccess. Note that this can be expanded
// in the future, and so it is only as up to date as the client. The ordering of
// this slice is not guaranteed to be stable across updates.
func (RootAccess) Values() []RootAccess {
	return []RootAccess{
		"Enabled",
		"Disabled",
	}
}

type RuleEvaluationStatus string

// Enum values for RuleEvaluationStatus
const (
	RuleEvaluationStatusIn_progress     RuleEvaluationStatus = "InProgress"
	RuleEvaluationStatusNo_issues_found RuleEvaluationStatus = "NoIssuesFound"
	RuleEvaluationStatusIssues_found    RuleEvaluationStatus = "IssuesFound"
	RuleEvaluationStatusError           RuleEvaluationStatus = "Error"
	RuleEvaluationStatusStopping        RuleEvaluationStatus = "Stopping"
	RuleEvaluationStatusStopped         RuleEvaluationStatus = "Stopped"
)

// Values returns all known values for RuleEvaluationStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (RuleEvaluationStatus) Values() []RuleEvaluationStatus {
	return []RuleEvaluationStatus{
		"InProgress",
		"NoIssuesFound",
		"IssuesFound",
		"Error",
		"Stopping",
		"Stopped",
	}
}

type S3DataDistribution string

// Enum values for S3DataDistribution
const (
	S3DataDistributionFully_replicated  S3DataDistribution = "FullyReplicated"
	S3DataDistributionSharded_by_s3_key S3DataDistribution = "ShardedByS3Key"
)

// Values returns all known values for S3DataDistribution. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (S3DataDistribution) Values() []S3DataDistribution {
	return []S3DataDistribution{
		"FullyReplicated",
		"ShardedByS3Key",
	}
}

type S3DataType string

// Enum values for S3DataType
const (
	S3DataTypeManifest_file           S3DataType = "ManifestFile"
	S3DataTypeS3_prefix               S3DataType = "S3Prefix"
	S3DataTypeAugmented_manifest_file S3DataType = "AugmentedManifestFile"
)

// Values returns all known values for S3DataType. Note that this can be expanded
// in the future, and so it is only as up to date as the client. The ordering of
// this slice is not guaranteed to be stable across updates.
func (S3DataType) Values() []S3DataType {
	return []S3DataType{
		"ManifestFile",
		"S3Prefix",
		"AugmentedManifestFile",
	}
}

type ScheduleStatus string

// Enum values for ScheduleStatus
const (
	ScheduleStatusPending   ScheduleStatus = "Pending"
	ScheduleStatusFailed    ScheduleStatus = "Failed"
	ScheduleStatusScheduled ScheduleStatus = "Scheduled"
	ScheduleStatusStopped   ScheduleStatus = "Stopped"
)

// Values returns all known values for ScheduleStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (ScheduleStatus) Values() []ScheduleStatus {
	return []ScheduleStatus{
		"Pending",
		"Failed",
		"Scheduled",
		"Stopped",
	}
}

type SearchSortOrder string

// Enum values for SearchSortOrder
const (
	SearchSortOrderAscending  SearchSortOrder = "Ascending"
	SearchSortOrderDescending SearchSortOrder = "Descending"
)

// Values returns all known values for SearchSortOrder. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (SearchSortOrder) Values() []SearchSortOrder {
	return []SearchSortOrder{
		"Ascending",
		"Descending",
	}
}

type SecondaryStatus string

// Enum values for SecondaryStatus
const (
	SecondaryStatusStarting                   SecondaryStatus = "Starting"
	SecondaryStatusLaunching_ml_instances     SecondaryStatus = "LaunchingMLInstances"
	SecondaryStatusPreparing_training_stack   SecondaryStatus = "PreparingTrainingStack"
	SecondaryStatusDownloading                SecondaryStatus = "Downloading"
	SecondaryStatusDownloading_training_image SecondaryStatus = "DownloadingTrainingImage"
	SecondaryStatusTraining                   SecondaryStatus = "Training"
	SecondaryStatusUploading                  SecondaryStatus = "Uploading"
	SecondaryStatusStopping                   SecondaryStatus = "Stopping"
	SecondaryStatusStopped                    SecondaryStatus = "Stopped"
	SecondaryStatusMax_runtime_exceeded       SecondaryStatus = "MaxRuntimeExceeded"
	SecondaryStatusCompleted                  SecondaryStatus = "Completed"
	SecondaryStatusFailed                     SecondaryStatus = "Failed"
	SecondaryStatusInterrupted                SecondaryStatus = "Interrupted"
	SecondaryStatusMax_wait_time_exceeded     SecondaryStatus = "MaxWaitTimeExceeded"
)

// Values returns all known values for SecondaryStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (SecondaryStatus) Values() []SecondaryStatus {
	return []SecondaryStatus{
		"Starting",
		"LaunchingMLInstances",
		"PreparingTrainingStack",
		"Downloading",
		"DownloadingTrainingImage",
		"Training",
		"Uploading",
		"Stopping",
		"Stopped",
		"MaxRuntimeExceeded",
		"Completed",
		"Failed",
		"Interrupted",
		"MaxWaitTimeExceeded",
	}
}

type SortBy string

// Enum values for SortBy
const (
	SortByName          SortBy = "Name"
	SortByCreation_time SortBy = "CreationTime"
	SortByStatus        SortBy = "Status"
)

// Values returns all known values for SortBy. Note that this can be expanded in
// the future, and so it is only as up to date as the client. The ordering of this
// slice is not guaranteed to be stable across updates.
func (SortBy) Values() []SortBy {
	return []SortBy{
		"Name",
		"CreationTime",
		"Status",
	}
}

type SortExperimentsBy string

// Enum values for SortExperimentsBy
const (
	SortExperimentsByName          SortExperimentsBy = "Name"
	SortExperimentsByCreation_time SortExperimentsBy = "CreationTime"
)

// Values returns all known values for SortExperimentsBy. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (SortExperimentsBy) Values() []SortExperimentsBy {
	return []SortExperimentsBy{
		"Name",
		"CreationTime",
	}
}

type SortOrder string

// Enum values for SortOrder
const (
	SortOrderAscending  SortOrder = "Ascending"
	SortOrderDescending SortOrder = "Descending"
)

// Values returns all known values for SortOrder. Note that this can be expanded in
// the future, and so it is only as up to date as the client. The ordering of this
// slice is not guaranteed to be stable across updates.
func (SortOrder) Values() []SortOrder {
	return []SortOrder{
		"Ascending",
		"Descending",
	}
}

type SortTrialComponentsBy string

// Enum values for SortTrialComponentsBy
const (
	SortTrialComponentsByName          SortTrialComponentsBy = "Name"
	SortTrialComponentsByCreation_time SortTrialComponentsBy = "CreationTime"
)

// Values returns all known values for SortTrialComponentsBy. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (SortTrialComponentsBy) Values() []SortTrialComponentsBy {
	return []SortTrialComponentsBy{
		"Name",
		"CreationTime",
	}
}

type SortTrialsBy string

// Enum values for SortTrialsBy
const (
	SortTrialsByName          SortTrialsBy = "Name"
	SortTrialsByCreation_time SortTrialsBy = "CreationTime"
)

// Values returns all known values for SortTrialsBy. Note that this can be expanded
// in the future, and so it is only as up to date as the client. The ordering of
// this slice is not guaranteed to be stable across updates.
func (SortTrialsBy) Values() []SortTrialsBy {
	return []SortTrialsBy{
		"Name",
		"CreationTime",
	}
}

type SplitType string

// Enum values for SplitType
const (
	SplitTypeNone     SplitType = "None"
	SplitTypeLine     SplitType = "Line"
	SplitTypeRecordio SplitType = "RecordIO"
	SplitTypeTfrecord SplitType = "TFRecord"
)

// Values returns all known values for SplitType. Note that this can be expanded in
// the future, and so it is only as up to date as the client. The ordering of this
// slice is not guaranteed to be stable across updates.
func (SplitType) Values() []SplitType {
	return []SplitType{
		"None",
		"Line",
		"RecordIO",
		"TFRecord",
	}
}

type TargetDevice string

// Enum values for TargetDevice
const (
	TargetDeviceLambda        TargetDevice = "lambda"
	TargetDeviceMl_m4         TargetDevice = "ml_m4"
	TargetDeviceMl_m5         TargetDevice = "ml_m5"
	TargetDeviceMl_c4         TargetDevice = "ml_c4"
	TargetDeviceMl_c5         TargetDevice = "ml_c5"
	TargetDeviceMl_p2         TargetDevice = "ml_p2"
	TargetDeviceMl_p3         TargetDevice = "ml_p3"
	TargetDeviceMl_g4dn       TargetDevice = "ml_g4dn"
	TargetDeviceMl_inf1       TargetDevice = "ml_inf1"
	TargetDeviceJetson_tx1    TargetDevice = "jetson_tx1"
	TargetDeviceJetson_tx2    TargetDevice = "jetson_tx2"
	TargetDeviceJetson_nano   TargetDevice = "jetson_nano"
	TargetDeviceJetson_xavier TargetDevice = "jetson_xavier"
	TargetDeviceRasp3b        TargetDevice = "rasp3b"
	TargetDeviceImx8qm        TargetDevice = "imx8qm"
	TargetDeviceDeeplens      TargetDevice = "deeplens"
	TargetDeviceRk3399        TargetDevice = "rk3399"
	TargetDeviceRk3288        TargetDevice = "rk3288"
	TargetDeviceAisage        TargetDevice = "aisage"
	TargetDeviceSbe_c         TargetDevice = "sbe_c"
	TargetDeviceQcs605        TargetDevice = "qcs605"
	TargetDeviceQcs603        TargetDevice = "qcs603"
	TargetDeviceSitara_am57x  TargetDevice = "sitara_am57x"
	TargetDeviceAmba_cv22     TargetDevice = "amba_cv22"
	TargetDeviceX86_win32     TargetDevice = "x86_win32"
	TargetDeviceX86_win64     TargetDevice = "x86_win64"
	TargetDeviceCoreml        TargetDevice = "coreml"
)

// Values returns all known values for TargetDevice. Note that this can be expanded
// in the future, and so it is only as up to date as the client. The ordering of
// this slice is not guaranteed to be stable across updates.
func (TargetDevice) Values() []TargetDevice {
	return []TargetDevice{
		"lambda",
		"ml_m4",
		"ml_m5",
		"ml_c4",
		"ml_c5",
		"ml_p2",
		"ml_p3",
		"ml_g4dn",
		"ml_inf1",
		"jetson_tx1",
		"jetson_tx2",
		"jetson_nano",
		"jetson_xavier",
		"rasp3b",
		"imx8qm",
		"deeplens",
		"rk3399",
		"rk3288",
		"aisage",
		"sbe_c",
		"qcs605",
		"qcs603",
		"sitara_am57x",
		"amba_cv22",
		"x86_win32",
		"x86_win64",
		"coreml",
	}
}

type TargetPlatformAccelerator string

// Enum values for TargetPlatformAccelerator
const (
	TargetPlatformAcceleratorIntel_graphics TargetPlatformAccelerator = "INTEL_GRAPHICS"
	TargetPlatformAcceleratorMali           TargetPlatformAccelerator = "MALI"
	TargetPlatformAcceleratorNvidia         TargetPlatformAccelerator = "NVIDIA"
)

// Values returns all known values for TargetPlatformAccelerator. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
// The ordering of this slice is not guaranteed to be stable across updates.
func (TargetPlatformAccelerator) Values() []TargetPlatformAccelerator {
	return []TargetPlatformAccelerator{
		"INTEL_GRAPHICS",
		"MALI",
		"NVIDIA",
	}
}

type TargetPlatformArch string

// Enum values for TargetPlatformArch
const (
	TargetPlatformArchX86_64     TargetPlatformArch = "X86_64"
	TargetPlatformArchX86        TargetPlatformArch = "X86"
	TargetPlatformArchArm64      TargetPlatformArch = "ARM64"
	TargetPlatformArchArm_eabi   TargetPlatformArch = "ARM_EABI"
	TargetPlatformArchArm_eabihf TargetPlatformArch = "ARM_EABIHF"
)

// Values returns all known values for TargetPlatformArch. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (TargetPlatformArch) Values() []TargetPlatformArch {
	return []TargetPlatformArch{
		"X86_64",
		"X86",
		"ARM64",
		"ARM_EABI",
		"ARM_EABIHF",
	}
}

type TargetPlatformOs string

// Enum values for TargetPlatformOs
const (
	TargetPlatformOsAndroid TargetPlatformOs = "ANDROID"
	TargetPlatformOsLinux   TargetPlatformOs = "LINUX"
)

// Values returns all known values for TargetPlatformOs. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (TargetPlatformOs) Values() []TargetPlatformOs {
	return []TargetPlatformOs{
		"ANDROID",
		"LINUX",
	}
}

type TrainingInputMode string

// Enum values for TrainingInputMode
const (
	TrainingInputModePipe TrainingInputMode = "Pipe"
	TrainingInputModeFile TrainingInputMode = "File"
)

// Values returns all known values for TrainingInputMode. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (TrainingInputMode) Values() []TrainingInputMode {
	return []TrainingInputMode{
		"Pipe",
		"File",
	}
}

type TrainingInstanceType string

// Enum values for TrainingInstanceType
const (
	TrainingInstanceTypeMl_m4_xlarge     TrainingInstanceType = "ml.m4.xlarge"
	TrainingInstanceTypeMl_m4_2xlarge    TrainingInstanceType = "ml.m4.2xlarge"
	TrainingInstanceTypeMl_m4_4xlarge    TrainingInstanceType = "ml.m4.4xlarge"
	TrainingInstanceTypeMl_m4_10xlarge   TrainingInstanceType = "ml.m4.10xlarge"
	TrainingInstanceTypeMl_m4_16xlarge   TrainingInstanceType = "ml.m4.16xlarge"
	TrainingInstanceTypeMl_g4dn_xlarge   TrainingInstanceType = "ml.g4dn.xlarge"
	TrainingInstanceTypeMl_g4dn_2xlarge  TrainingInstanceType = "ml.g4dn.2xlarge"
	TrainingInstanceTypeMl_g4dn_4xlarge  TrainingInstanceType = "ml.g4dn.4xlarge"
	TrainingInstanceTypeMl_g4dn_8xlarge  TrainingInstanceType = "ml.g4dn.8xlarge"
	TrainingInstanceTypeMl_g4dn_12xlarge TrainingInstanceType = "ml.g4dn.12xlarge"
	TrainingInstanceTypeMl_g4dn_16xlarge TrainingInstanceType = "ml.g4dn.16xlarge"
	TrainingInstanceTypeMl_m5_large      TrainingInstanceType = "ml.m5.large"
	TrainingInstanceTypeMl_m5_xlarge     TrainingInstanceType = "ml.m5.xlarge"
	TrainingInstanceTypeMl_m5_2xlarge    TrainingInstanceType = "ml.m5.2xlarge"
	TrainingInstanceTypeMl_m5_4xlarge    TrainingInstanceType = "ml.m5.4xlarge"
	TrainingInstanceTypeMl_m5_12xlarge   TrainingInstanceType = "ml.m5.12xlarge"
	TrainingInstanceTypeMl_m5_24xlarge   TrainingInstanceType = "ml.m5.24xlarge"
	TrainingInstanceTypeMl_c4_xlarge     TrainingInstanceType = "ml.c4.xlarge"
	TrainingInstanceTypeMl_c4_2xlarge    TrainingInstanceType = "ml.c4.2xlarge"
	TrainingInstanceTypeMl_c4_4xlarge    TrainingInstanceType = "ml.c4.4xlarge"
	TrainingInstanceTypeMl_c4_8xlarge    TrainingInstanceType = "ml.c4.8xlarge"
	TrainingInstanceTypeMl_p2_xlarge     TrainingInstanceType = "ml.p2.xlarge"
	TrainingInstanceTypeMl_p2_8xlarge    TrainingInstanceType = "ml.p2.8xlarge"
	TrainingInstanceTypeMl_p2_16xlarge   TrainingInstanceType = "ml.p2.16xlarge"
	TrainingInstanceTypeMl_p3_2xlarge    TrainingInstanceType = "ml.p3.2xlarge"
	TrainingInstanceTypeMl_p3_8xlarge    TrainingInstanceType = "ml.p3.8xlarge"
	TrainingInstanceTypeMl_p3_16xlarge   TrainingInstanceType = "ml.p3.16xlarge"
	TrainingInstanceTypeMl_p3dn_24xlarge TrainingInstanceType = "ml.p3dn.24xlarge"
	TrainingInstanceTypeMl_c5_xlarge     TrainingInstanceType = "ml.c5.xlarge"
	TrainingInstanceTypeMl_c5_2xlarge    TrainingInstanceType = "ml.c5.2xlarge"
	TrainingInstanceTypeMl_c5_4xlarge    TrainingInstanceType = "ml.c5.4xlarge"
	TrainingInstanceTypeMl_c5_9xlarge    TrainingInstanceType = "ml.c5.9xlarge"
	TrainingInstanceTypeMl_c5_18xlarge   TrainingInstanceType = "ml.c5.18xlarge"
	TrainingInstanceTypeMl_c5n_xlarge    TrainingInstanceType = "ml.c5n.xlarge"
	TrainingInstanceTypeMl_c5n_2xlarge   TrainingInstanceType = "ml.c5n.2xlarge"
	TrainingInstanceTypeMl_c5n_4xlarge   TrainingInstanceType = "ml.c5n.4xlarge"
	TrainingInstanceTypeMl_c5n_9xlarge   TrainingInstanceType = "ml.c5n.9xlarge"
	TrainingInstanceTypeMl_c5n_18xlarge  TrainingInstanceType = "ml.c5n.18xlarge"
)

// Values returns all known values for TrainingInstanceType. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (TrainingInstanceType) Values() []TrainingInstanceType {
	return []TrainingInstanceType{
		"ml.m4.xlarge",
		"ml.m4.2xlarge",
		"ml.m4.4xlarge",
		"ml.m4.10xlarge",
		"ml.m4.16xlarge",
		"ml.g4dn.xlarge",
		"ml.g4dn.2xlarge",
		"ml.g4dn.4xlarge",
		"ml.g4dn.8xlarge",
		"ml.g4dn.12xlarge",
		"ml.g4dn.16xlarge",
		"ml.m5.large",
		"ml.m5.xlarge",
		"ml.m5.2xlarge",
		"ml.m5.4xlarge",
		"ml.m5.12xlarge",
		"ml.m5.24xlarge",
		"ml.c4.xlarge",
		"ml.c4.2xlarge",
		"ml.c4.4xlarge",
		"ml.c4.8xlarge",
		"ml.p2.xlarge",
		"ml.p2.8xlarge",
		"ml.p2.16xlarge",
		"ml.p3.2xlarge",
		"ml.p3.8xlarge",
		"ml.p3.16xlarge",
		"ml.p3dn.24xlarge",
		"ml.c5.xlarge",
		"ml.c5.2xlarge",
		"ml.c5.4xlarge",
		"ml.c5.9xlarge",
		"ml.c5.18xlarge",
		"ml.c5n.xlarge",
		"ml.c5n.2xlarge",
		"ml.c5n.4xlarge",
		"ml.c5n.9xlarge",
		"ml.c5n.18xlarge",
	}
}

type TrainingJobEarlyStoppingType string

// Enum values for TrainingJobEarlyStoppingType
const (
	TrainingJobEarlyStoppingTypeOff  TrainingJobEarlyStoppingType = "Off"
	TrainingJobEarlyStoppingTypeAuto TrainingJobEarlyStoppingType = "Auto"
)

// Values returns all known values for TrainingJobEarlyStoppingType. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
// The ordering of this slice is not guaranteed to be stable across updates.
func (TrainingJobEarlyStoppingType) Values() []TrainingJobEarlyStoppingType {
	return []TrainingJobEarlyStoppingType{
		"Off",
		"Auto",
	}
}

type TrainingJobSortByOptions string

// Enum values for TrainingJobSortByOptions
const (
	TrainingJobSortByOptionsName                      TrainingJobSortByOptions = "Name"
	TrainingJobSortByOptionsCreationtime              TrainingJobSortByOptions = "CreationTime"
	TrainingJobSortByOptionsStatus                    TrainingJobSortByOptions = "Status"
	TrainingJobSortByOptionsFinalobjectivemetricvalue TrainingJobSortByOptions = "FinalObjectiveMetricValue"
)

// Values returns all known values for TrainingJobSortByOptions. Note that this can
// be expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (TrainingJobSortByOptions) Values() []TrainingJobSortByOptions {
	return []TrainingJobSortByOptions{
		"Name",
		"CreationTime",
		"Status",
		"FinalObjectiveMetricValue",
	}
}

type TrainingJobStatus string

// Enum values for TrainingJobStatus
const (
	TrainingJobStatusIn_progress TrainingJobStatus = "InProgress"
	TrainingJobStatusCompleted   TrainingJobStatus = "Completed"
	TrainingJobStatusFailed      TrainingJobStatus = "Failed"
	TrainingJobStatusStopping    TrainingJobStatus = "Stopping"
	TrainingJobStatusStopped     TrainingJobStatus = "Stopped"
)

// Values returns all known values for TrainingJobStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (TrainingJobStatus) Values() []TrainingJobStatus {
	return []TrainingJobStatus{
		"InProgress",
		"Completed",
		"Failed",
		"Stopping",
		"Stopped",
	}
}

type TransformInstanceType string

// Enum values for TransformInstanceType
const (
	TransformInstanceTypeMl_m4_xlarge   TransformInstanceType = "ml.m4.xlarge"
	TransformInstanceTypeMl_m4_2xlarge  TransformInstanceType = "ml.m4.2xlarge"
	TransformInstanceTypeMl_m4_4xlarge  TransformInstanceType = "ml.m4.4xlarge"
	TransformInstanceTypeMl_m4_10xlarge TransformInstanceType = "ml.m4.10xlarge"
	TransformInstanceTypeMl_m4_16xlarge TransformInstanceType = "ml.m4.16xlarge"
	TransformInstanceTypeMl_c4_xlarge   TransformInstanceType = "ml.c4.xlarge"
	TransformInstanceTypeMl_c4_2xlarge  TransformInstanceType = "ml.c4.2xlarge"
	TransformInstanceTypeMl_c4_4xlarge  TransformInstanceType = "ml.c4.4xlarge"
	TransformInstanceTypeMl_c4_8xlarge  TransformInstanceType = "ml.c4.8xlarge"
	TransformInstanceTypeMl_p2_xlarge   TransformInstanceType = "ml.p2.xlarge"
	TransformInstanceTypeMl_p2_8xlarge  TransformInstanceType = "ml.p2.8xlarge"
	TransformInstanceTypeMl_p2_16xlarge TransformInstanceType = "ml.p2.16xlarge"
	TransformInstanceTypeMl_p3_2xlarge  TransformInstanceType = "ml.p3.2xlarge"
	TransformInstanceTypeMl_p3_8xlarge  TransformInstanceType = "ml.p3.8xlarge"
	TransformInstanceTypeMl_p3_16xlarge TransformInstanceType = "ml.p3.16xlarge"
	TransformInstanceTypeMl_c5_xlarge   TransformInstanceType = "ml.c5.xlarge"
	TransformInstanceTypeMl_c5_2xlarge  TransformInstanceType = "ml.c5.2xlarge"
	TransformInstanceTypeMl_c5_4xlarge  TransformInstanceType = "ml.c5.4xlarge"
	TransformInstanceTypeMl_c5_9xlarge  TransformInstanceType = "ml.c5.9xlarge"
	TransformInstanceTypeMl_c5_18xlarge TransformInstanceType = "ml.c5.18xlarge"
	TransformInstanceTypeMl_m5_large    TransformInstanceType = "ml.m5.large"
	TransformInstanceTypeMl_m5_xlarge   TransformInstanceType = "ml.m5.xlarge"
	TransformInstanceTypeMl_m5_2xlarge  TransformInstanceType = "ml.m5.2xlarge"
	TransformInstanceTypeMl_m5_4xlarge  TransformInstanceType = "ml.m5.4xlarge"
	TransformInstanceTypeMl_m5_12xlarge TransformInstanceType = "ml.m5.12xlarge"
	TransformInstanceTypeMl_m5_24xlarge TransformInstanceType = "ml.m5.24xlarge"
)

// Values returns all known values for TransformInstanceType. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (TransformInstanceType) Values() []TransformInstanceType {
	return []TransformInstanceType{
		"ml.m4.xlarge",
		"ml.m4.2xlarge",
		"ml.m4.4xlarge",
		"ml.m4.10xlarge",
		"ml.m4.16xlarge",
		"ml.c4.xlarge",
		"ml.c4.2xlarge",
		"ml.c4.4xlarge",
		"ml.c4.8xlarge",
		"ml.p2.xlarge",
		"ml.p2.8xlarge",
		"ml.p2.16xlarge",
		"ml.p3.2xlarge",
		"ml.p3.8xlarge",
		"ml.p3.16xlarge",
		"ml.c5.xlarge",
		"ml.c5.2xlarge",
		"ml.c5.4xlarge",
		"ml.c5.9xlarge",
		"ml.c5.18xlarge",
		"ml.m5.large",
		"ml.m5.xlarge",
		"ml.m5.2xlarge",
		"ml.m5.4xlarge",
		"ml.m5.12xlarge",
		"ml.m5.24xlarge",
	}
}

type TransformJobStatus string

// Enum values for TransformJobStatus
const (
	TransformJobStatusIn_progress TransformJobStatus = "InProgress"
	TransformJobStatusCompleted   TransformJobStatus = "Completed"
	TransformJobStatusFailed      TransformJobStatus = "Failed"
	TransformJobStatusStopping    TransformJobStatus = "Stopping"
	TransformJobStatusStopped     TransformJobStatus = "Stopped"
)

// Values returns all known values for TransformJobStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (TransformJobStatus) Values() []TransformJobStatus {
	return []TransformJobStatus{
		"InProgress",
		"Completed",
		"Failed",
		"Stopping",
		"Stopped",
	}
}

type TrialComponentPrimaryStatus string

// Enum values for TrialComponentPrimaryStatus
const (
	TrialComponentPrimaryStatusIn_progress TrialComponentPrimaryStatus = "InProgress"
	TrialComponentPrimaryStatusCompleted   TrialComponentPrimaryStatus = "Completed"
	TrialComponentPrimaryStatusFailed      TrialComponentPrimaryStatus = "Failed"
	TrialComponentPrimaryStatusStopping    TrialComponentPrimaryStatus = "Stopping"
	TrialComponentPrimaryStatusStopped     TrialComponentPrimaryStatus = "Stopped"
)

// Values returns all known values for TrialComponentPrimaryStatus. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
// The ordering of this slice is not guaranteed to be stable across updates.
func (TrialComponentPrimaryStatus) Values() []TrialComponentPrimaryStatus {
	return []TrialComponentPrimaryStatus{
		"InProgress",
		"Completed",
		"Failed",
		"Stopping",
		"Stopped",
	}
}

type UserProfileSortKey string

// Enum values for UserProfileSortKey
const (
	UserProfileSortKeyCreationtime     UserProfileSortKey = "CreationTime"
	UserProfileSortKeyLastmodifiedtime UserProfileSortKey = "LastModifiedTime"
)

// Values returns all known values for UserProfileSortKey. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (UserProfileSortKey) Values() []UserProfileSortKey {
	return []UserProfileSortKey{
		"CreationTime",
		"LastModifiedTime",
	}
}

type UserProfileStatus string

// Enum values for UserProfileStatus
const (
	UserProfileStatusDeleting  UserProfileStatus = "Deleting"
	UserProfileStatusFailed    UserProfileStatus = "Failed"
	UserProfileStatusInservice UserProfileStatus = "InService"
	UserProfileStatusPending   UserProfileStatus = "Pending"
)

// Values returns all known values for UserProfileStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (UserProfileStatus) Values() []UserProfileStatus {
	return []UserProfileStatus{
		"Deleting",
		"Failed",
		"InService",
		"Pending",
	}
}

type VariantPropertyType string

// Enum values for VariantPropertyType
const (
	VariantPropertyTypeDesiredinstancecount VariantPropertyType = "DesiredInstanceCount"
	VariantPropertyTypeDesiredweight        VariantPropertyType = "DesiredWeight"
	VariantPropertyTypeDatacaptureconfig    VariantPropertyType = "DataCaptureConfig"
)

// Values returns all known values for VariantPropertyType. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (VariantPropertyType) Values() []VariantPropertyType {
	return []VariantPropertyType{
		"DesiredInstanceCount",
		"DesiredWeight",
		"DataCaptureConfig",
	}
}
