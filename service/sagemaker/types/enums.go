// Code generated by smithy-go-codegen DO NOT EDIT.

package types

type ActionStatus string

// Enum values for ActionStatus
const (
	ActionStatusUnknown    ActionStatus = "Unknown"
	ActionStatusInProgress ActionStatus = "InProgress"
	ActionStatusCompleted  ActionStatus = "Completed"
	ActionStatusFailed     ActionStatus = "Failed"
	ActionStatusStopping   ActionStatus = "Stopping"
	ActionStatusStopped    ActionStatus = "Stopped"
)

// Values returns all known values for ActionStatus. Note that this can be expanded
// in the future, and so it is only as up to date as the client. The ordering of
// this slice is not guaranteed to be stable across updates.
func (ActionStatus) Values() []ActionStatus {
	return []ActionStatus{
		"Unknown",
		"InProgress",
		"Completed",
		"Failed",
		"Stopping",
		"Stopped",
	}
}

type AlgorithmSortBy string

// Enum values for AlgorithmSortBy
const (
	AlgorithmSortByName         AlgorithmSortBy = "Name"
	AlgorithmSortByCreationTime AlgorithmSortBy = "CreationTime"
)

// Values returns all known values for AlgorithmSortBy. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (AlgorithmSortBy) Values() []AlgorithmSortBy {
	return []AlgorithmSortBy{
		"Name",
		"CreationTime",
	}
}

type AlgorithmStatus string

// Enum values for AlgorithmStatus
const (
	AlgorithmStatusPending    AlgorithmStatus = "Pending"
	AlgorithmStatusInProgress AlgorithmStatus = "InProgress"
	AlgorithmStatusCompleted  AlgorithmStatus = "Completed"
	AlgorithmStatusFailed     AlgorithmStatus = "Failed"
	AlgorithmStatusDeleting   AlgorithmStatus = "Deleting"
)

// Values returns all known values for AlgorithmStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (AlgorithmStatus) Values() []AlgorithmStatus {
	return []AlgorithmStatus{
		"Pending",
		"InProgress",
		"Completed",
		"Failed",
		"Deleting",
	}
}

type AppImageConfigSortKey string

// Enum values for AppImageConfigSortKey
const (
	AppImageConfigSortKeyCreationTime     AppImageConfigSortKey = "CreationTime"
	AppImageConfigSortKeyLastModifiedTime AppImageConfigSortKey = "LastModifiedTime"
	AppImageConfigSortKeyName             AppImageConfigSortKey = "Name"
)

// Values returns all known values for AppImageConfigSortKey. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (AppImageConfigSortKey) Values() []AppImageConfigSortKey {
	return []AppImageConfigSortKey{
		"CreationTime",
		"LastModifiedTime",
		"Name",
	}
}

type AppInstanceType string

// Enum values for AppInstanceType
const (
	AppInstanceTypeSystem         AppInstanceType = "system"
	AppInstanceTypeMlT3Micro      AppInstanceType = "ml.t3.micro"
	AppInstanceTypeMlT3Small      AppInstanceType = "ml.t3.small"
	AppInstanceTypeMlT3Medium     AppInstanceType = "ml.t3.medium"
	AppInstanceTypeMlT3Large      AppInstanceType = "ml.t3.large"
	AppInstanceTypeMlT3Xlarge     AppInstanceType = "ml.t3.xlarge"
	AppInstanceTypeMlT32xlarge    AppInstanceType = "ml.t3.2xlarge"
	AppInstanceTypeMlM5Large      AppInstanceType = "ml.m5.large"
	AppInstanceTypeMlM5Xlarge     AppInstanceType = "ml.m5.xlarge"
	AppInstanceTypeMlM52xlarge    AppInstanceType = "ml.m5.2xlarge"
	AppInstanceTypeMlM54xlarge    AppInstanceType = "ml.m5.4xlarge"
	AppInstanceTypeMlM58xlarge    AppInstanceType = "ml.m5.8xlarge"
	AppInstanceTypeMlM512xlarge   AppInstanceType = "ml.m5.12xlarge"
	AppInstanceTypeMlM516xlarge   AppInstanceType = "ml.m5.16xlarge"
	AppInstanceTypeMlM524xlarge   AppInstanceType = "ml.m5.24xlarge"
	AppInstanceTypeMlM5dLarge     AppInstanceType = "ml.m5d.large"
	AppInstanceTypeMlM5dXlarge    AppInstanceType = "ml.m5d.xlarge"
	AppInstanceTypeMlM5d2xlarge   AppInstanceType = "ml.m5d.2xlarge"
	AppInstanceTypeMlM5d4xlarge   AppInstanceType = "ml.m5d.4xlarge"
	AppInstanceTypeMlM5d8xlarge   AppInstanceType = "ml.m5d.8xlarge"
	AppInstanceTypeMlM5d12xlarge  AppInstanceType = "ml.m5d.12xlarge"
	AppInstanceTypeMlM5d16xlarge  AppInstanceType = "ml.m5d.16xlarge"
	AppInstanceTypeMlM5d24xlarge  AppInstanceType = "ml.m5d.24xlarge"
	AppInstanceTypeMlC5Large      AppInstanceType = "ml.c5.large"
	AppInstanceTypeMlC5Xlarge     AppInstanceType = "ml.c5.xlarge"
	AppInstanceTypeMlC52xlarge    AppInstanceType = "ml.c5.2xlarge"
	AppInstanceTypeMlC54xlarge    AppInstanceType = "ml.c5.4xlarge"
	AppInstanceTypeMlC59xlarge    AppInstanceType = "ml.c5.9xlarge"
	AppInstanceTypeMlC512xlarge   AppInstanceType = "ml.c5.12xlarge"
	AppInstanceTypeMlC518xlarge   AppInstanceType = "ml.c5.18xlarge"
	AppInstanceTypeMlC524xlarge   AppInstanceType = "ml.c5.24xlarge"
	AppInstanceTypeMlP32xlarge    AppInstanceType = "ml.p3.2xlarge"
	AppInstanceTypeMlP38xlarge    AppInstanceType = "ml.p3.8xlarge"
	AppInstanceTypeMlP316xlarge   AppInstanceType = "ml.p3.16xlarge"
	AppInstanceTypeMlP3dn24xlarge AppInstanceType = "ml.p3dn.24xlarge"
	AppInstanceTypeMlG4dnXlarge   AppInstanceType = "ml.g4dn.xlarge"
	AppInstanceTypeMlG4dn2xlarge  AppInstanceType = "ml.g4dn.2xlarge"
	AppInstanceTypeMlG4dn4xlarge  AppInstanceType = "ml.g4dn.4xlarge"
	AppInstanceTypeMlG4dn8xlarge  AppInstanceType = "ml.g4dn.8xlarge"
	AppInstanceTypeMlG4dn12xlarge AppInstanceType = "ml.g4dn.12xlarge"
	AppInstanceTypeMlG4dn16xlarge AppInstanceType = "ml.g4dn.16xlarge"
	AppInstanceTypeMlR5Large      AppInstanceType = "ml.r5.large"
	AppInstanceTypeMlR5Xlarge     AppInstanceType = "ml.r5.xlarge"
	AppInstanceTypeMlR52xlarge    AppInstanceType = "ml.r5.2xlarge"
	AppInstanceTypeMlR54xlarge    AppInstanceType = "ml.r5.4xlarge"
	AppInstanceTypeMlR58xlarge    AppInstanceType = "ml.r5.8xlarge"
	AppInstanceTypeMlR512xlarge   AppInstanceType = "ml.r5.12xlarge"
	AppInstanceTypeMlR516xlarge   AppInstanceType = "ml.r5.16xlarge"
	AppInstanceTypeMlR524xlarge   AppInstanceType = "ml.r5.24xlarge"
)

// Values returns all known values for AppInstanceType. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (AppInstanceType) Values() []AppInstanceType {
	return []AppInstanceType{
		"system",
		"ml.t3.micro",
		"ml.t3.small",
		"ml.t3.medium",
		"ml.t3.large",
		"ml.t3.xlarge",
		"ml.t3.2xlarge",
		"ml.m5.large",
		"ml.m5.xlarge",
		"ml.m5.2xlarge",
		"ml.m5.4xlarge",
		"ml.m5.8xlarge",
		"ml.m5.12xlarge",
		"ml.m5.16xlarge",
		"ml.m5.24xlarge",
		"ml.m5d.large",
		"ml.m5d.xlarge",
		"ml.m5d.2xlarge",
		"ml.m5d.4xlarge",
		"ml.m5d.8xlarge",
		"ml.m5d.12xlarge",
		"ml.m5d.16xlarge",
		"ml.m5d.24xlarge",
		"ml.c5.large",
		"ml.c5.xlarge",
		"ml.c5.2xlarge",
		"ml.c5.4xlarge",
		"ml.c5.9xlarge",
		"ml.c5.12xlarge",
		"ml.c5.18xlarge",
		"ml.c5.24xlarge",
		"ml.p3.2xlarge",
		"ml.p3.8xlarge",
		"ml.p3.16xlarge",
		"ml.p3dn.24xlarge",
		"ml.g4dn.xlarge",
		"ml.g4dn.2xlarge",
		"ml.g4dn.4xlarge",
		"ml.g4dn.8xlarge",
		"ml.g4dn.12xlarge",
		"ml.g4dn.16xlarge",
		"ml.r5.large",
		"ml.r5.xlarge",
		"ml.r5.2xlarge",
		"ml.r5.4xlarge",
		"ml.r5.8xlarge",
		"ml.r5.12xlarge",
		"ml.r5.16xlarge",
		"ml.r5.24xlarge",
	}
}

type AppNetworkAccessType string

// Enum values for AppNetworkAccessType
const (
	AppNetworkAccessTypePublicInternetOnly AppNetworkAccessType = "PublicInternetOnly"
	AppNetworkAccessTypeVpcOnly            AppNetworkAccessType = "VpcOnly"
)

// Values returns all known values for AppNetworkAccessType. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (AppNetworkAccessType) Values() []AppNetworkAccessType {
	return []AppNetworkAccessType{
		"PublicInternetOnly",
		"VpcOnly",
	}
}

type AppSecurityGroupManagement string

// Enum values for AppSecurityGroupManagement
const (
	AppSecurityGroupManagementService  AppSecurityGroupManagement = "Service"
	AppSecurityGroupManagementCustomer AppSecurityGroupManagement = "Customer"
)

// Values returns all known values for AppSecurityGroupManagement. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
// The ordering of this slice is not guaranteed to be stable across updates.
func (AppSecurityGroupManagement) Values() []AppSecurityGroupManagement {
	return []AppSecurityGroupManagement{
		"Service",
		"Customer",
	}
}

type AppSortKey string

// Enum values for AppSortKey
const (
	AppSortKeyCreationTime AppSortKey = "CreationTime"
)

// Values returns all known values for AppSortKey. Note that this can be expanded
// in the future, and so it is only as up to date as the client. The ordering of
// this slice is not guaranteed to be stable across updates.
func (AppSortKey) Values() []AppSortKey {
	return []AppSortKey{
		"CreationTime",
	}
}

type AppStatus string

// Enum values for AppStatus
const (
	AppStatusDeleted   AppStatus = "Deleted"
	AppStatusDeleting  AppStatus = "Deleting"
	AppStatusFailed    AppStatus = "Failed"
	AppStatusInService AppStatus = "InService"
	AppStatusPending   AppStatus = "Pending"
)

// Values returns all known values for AppStatus. Note that this can be expanded in
// the future, and so it is only as up to date as the client. The ordering of this
// slice is not guaranteed to be stable across updates.
func (AppStatus) Values() []AppStatus {
	return []AppStatus{
		"Deleted",
		"Deleting",
		"Failed",
		"InService",
		"Pending",
	}
}

type AppType string

// Enum values for AppType
const (
	AppTypeJupyterServer    AppType = "JupyterServer"
	AppTypeKernelGateway    AppType = "KernelGateway"
	AppTypeTensorBoard      AppType = "TensorBoard"
	AppTypeRStudioServerPro AppType = "RStudioServerPro"
	AppTypeRSessionGateway  AppType = "RSessionGateway"
)

// Values returns all known values for AppType. Note that this can be expanded in
// the future, and so it is only as up to date as the client. The ordering of this
// slice is not guaranteed to be stable across updates.
func (AppType) Values() []AppType {
	return []AppType{
		"JupyterServer",
		"KernelGateway",
		"TensorBoard",
		"RStudioServerPro",
		"RSessionGateway",
	}
}

type ArtifactSourceIdType string

// Enum values for ArtifactSourceIdType
const (
	ArtifactSourceIdTypeMd5Hash   ArtifactSourceIdType = "MD5Hash"
	ArtifactSourceIdTypeS3Etag    ArtifactSourceIdType = "S3ETag"
	ArtifactSourceIdTypeS3Version ArtifactSourceIdType = "S3Version"
	ArtifactSourceIdTypeCustom    ArtifactSourceIdType = "Custom"
)

// Values returns all known values for ArtifactSourceIdType. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (ArtifactSourceIdType) Values() []ArtifactSourceIdType {
	return []ArtifactSourceIdType{
		"MD5Hash",
		"S3ETag",
		"S3Version",
		"Custom",
	}
}

type AssemblyType string

// Enum values for AssemblyType
const (
	AssemblyTypeNone AssemblyType = "None"
	AssemblyTypeLine AssemblyType = "Line"
)

// Values returns all known values for AssemblyType. Note that this can be expanded
// in the future, and so it is only as up to date as the client. The ordering of
// this slice is not guaranteed to be stable across updates.
func (AssemblyType) Values() []AssemblyType {
	return []AssemblyType{
		"None",
		"Line",
	}
}

type AssociationEdgeType string

// Enum values for AssociationEdgeType
const (
	AssociationEdgeTypeContributedTo  AssociationEdgeType = "ContributedTo"
	AssociationEdgeTypeAssociatedWith AssociationEdgeType = "AssociatedWith"
	AssociationEdgeTypeDerivedFrom    AssociationEdgeType = "DerivedFrom"
	AssociationEdgeTypeProduced       AssociationEdgeType = "Produced"
)

// Values returns all known values for AssociationEdgeType. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (AssociationEdgeType) Values() []AssociationEdgeType {
	return []AssociationEdgeType{
		"ContributedTo",
		"AssociatedWith",
		"DerivedFrom",
		"Produced",
	}
}

type AthenaResultCompressionType string

// Enum values for AthenaResultCompressionType
const (
	AthenaResultCompressionTypeGzip   AthenaResultCompressionType = "GZIP"
	AthenaResultCompressionTypeSnappy AthenaResultCompressionType = "SNAPPY"
	AthenaResultCompressionTypeZlib   AthenaResultCompressionType = "ZLIB"
)

// Values returns all known values for AthenaResultCompressionType. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
// The ordering of this slice is not guaranteed to be stable across updates.
func (AthenaResultCompressionType) Values() []AthenaResultCompressionType {
	return []AthenaResultCompressionType{
		"GZIP",
		"SNAPPY",
		"ZLIB",
	}
}

type AthenaResultFormat string

// Enum values for AthenaResultFormat
const (
	AthenaResultFormatParquet  AthenaResultFormat = "PARQUET"
	AthenaResultFormatOrc      AthenaResultFormat = "ORC"
	AthenaResultFormatAvro     AthenaResultFormat = "AVRO"
	AthenaResultFormatJson     AthenaResultFormat = "JSON"
	AthenaResultFormatTextfile AthenaResultFormat = "TEXTFILE"
)

// Values returns all known values for AthenaResultFormat. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (AthenaResultFormat) Values() []AthenaResultFormat {
	return []AthenaResultFormat{
		"PARQUET",
		"ORC",
		"AVRO",
		"JSON",
		"TEXTFILE",
	}
}

type AuthMode string

// Enum values for AuthMode
const (
	AuthModeSso AuthMode = "SSO"
	AuthModeIam AuthMode = "IAM"
)

// Values returns all known values for AuthMode. Note that this can be expanded in
// the future, and so it is only as up to date as the client. The ordering of this
// slice is not guaranteed to be stable across updates.
func (AuthMode) Values() []AuthMode {
	return []AuthMode{
		"SSO",
		"IAM",
	}
}

type AutoMLJobObjectiveType string

// Enum values for AutoMLJobObjectiveType
const (
	AutoMLJobObjectiveTypeMaximize AutoMLJobObjectiveType = "Maximize"
	AutoMLJobObjectiveTypeMinimize AutoMLJobObjectiveType = "Minimize"
)

// Values returns all known values for AutoMLJobObjectiveType. Note that this can
// be expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (AutoMLJobObjectiveType) Values() []AutoMLJobObjectiveType {
	return []AutoMLJobObjectiveType{
		"Maximize",
		"Minimize",
	}
}

type AutoMLJobSecondaryStatus string

// Enum values for AutoMLJobSecondaryStatus
const (
	AutoMLJobSecondaryStatusStarting                       AutoMLJobSecondaryStatus = "Starting"
	AutoMLJobSecondaryStatusAnalyzingData                  AutoMLJobSecondaryStatus = "AnalyzingData"
	AutoMLJobSecondaryStatusFeatureEngineering             AutoMLJobSecondaryStatus = "FeatureEngineering"
	AutoMLJobSecondaryStatusModelTuning                    AutoMLJobSecondaryStatus = "ModelTuning"
	AutoMLJobSecondaryStatusMaxCandidatesReached           AutoMLJobSecondaryStatus = "MaxCandidatesReached"
	AutoMLJobSecondaryStatusFailed                         AutoMLJobSecondaryStatus = "Failed"
	AutoMLJobSecondaryStatusStopped                        AutoMLJobSecondaryStatus = "Stopped"
	AutoMLJobSecondaryStatusMaxAutoMlJobRuntimeReached     AutoMLJobSecondaryStatus = "MaxAutoMLJobRuntimeReached"
	AutoMLJobSecondaryStatusStopping                       AutoMLJobSecondaryStatus = "Stopping"
	AutoMLJobSecondaryStatusCandidateDefinitionsGenerated  AutoMLJobSecondaryStatus = "CandidateDefinitionsGenerated"
	AutoMLJobSecondaryStatusGeneratingExplainabilityReport AutoMLJobSecondaryStatus = "GeneratingExplainabilityReport"
	AutoMLJobSecondaryStatusCompleted                      AutoMLJobSecondaryStatus = "Completed"
	AutoMLJobSecondaryStatusExplainabilityError            AutoMLJobSecondaryStatus = "ExplainabilityError"
	AutoMLJobSecondaryStatusDeployingModel                 AutoMLJobSecondaryStatus = "DeployingModel"
	AutoMLJobSecondaryStatusModelDeploymentError           AutoMLJobSecondaryStatus = "ModelDeploymentError"
)

// Values returns all known values for AutoMLJobSecondaryStatus. Note that this can
// be expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (AutoMLJobSecondaryStatus) Values() []AutoMLJobSecondaryStatus {
	return []AutoMLJobSecondaryStatus{
		"Starting",
		"AnalyzingData",
		"FeatureEngineering",
		"ModelTuning",
		"MaxCandidatesReached",
		"Failed",
		"Stopped",
		"MaxAutoMLJobRuntimeReached",
		"Stopping",
		"CandidateDefinitionsGenerated",
		"GeneratingExplainabilityReport",
		"Completed",
		"ExplainabilityError",
		"DeployingModel",
		"ModelDeploymentError",
	}
}

type AutoMLJobStatus string

// Enum values for AutoMLJobStatus
const (
	AutoMLJobStatusCompleted  AutoMLJobStatus = "Completed"
	AutoMLJobStatusInProgress AutoMLJobStatus = "InProgress"
	AutoMLJobStatusFailed     AutoMLJobStatus = "Failed"
	AutoMLJobStatusStopped    AutoMLJobStatus = "Stopped"
	AutoMLJobStatusStopping   AutoMLJobStatus = "Stopping"
)

// Values returns all known values for AutoMLJobStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (AutoMLJobStatus) Values() []AutoMLJobStatus {
	return []AutoMLJobStatus{
		"Completed",
		"InProgress",
		"Failed",
		"Stopped",
		"Stopping",
	}
}

type AutoMLMetricEnum string

// Enum values for AutoMLMetricEnum
const (
	AutoMLMetricEnumAccuracy AutoMLMetricEnum = "Accuracy"
	AutoMLMetricEnumMse      AutoMLMetricEnum = "MSE"
	AutoMLMetricEnumF1       AutoMLMetricEnum = "F1"
	AutoMLMetricEnumF1Macro  AutoMLMetricEnum = "F1macro"
	AutoMLMetricEnumAuc      AutoMLMetricEnum = "AUC"
)

// Values returns all known values for AutoMLMetricEnum. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (AutoMLMetricEnum) Values() []AutoMLMetricEnum {
	return []AutoMLMetricEnum{
		"Accuracy",
		"MSE",
		"F1",
		"F1macro",
		"AUC",
	}
}

type AutoMLS3DataType string

// Enum values for AutoMLS3DataType
const (
	AutoMLS3DataTypeManifestFile AutoMLS3DataType = "ManifestFile"
	AutoMLS3DataTypeS3Prefix     AutoMLS3DataType = "S3Prefix"
)

// Values returns all known values for AutoMLS3DataType. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (AutoMLS3DataType) Values() []AutoMLS3DataType {
	return []AutoMLS3DataType{
		"ManifestFile",
		"S3Prefix",
	}
}

type AutoMLSortBy string

// Enum values for AutoMLSortBy
const (
	AutoMLSortByName         AutoMLSortBy = "Name"
	AutoMLSortByCreationTime AutoMLSortBy = "CreationTime"
	AutoMLSortByStatus       AutoMLSortBy = "Status"
)

// Values returns all known values for AutoMLSortBy. Note that this can be expanded
// in the future, and so it is only as up to date as the client. The ordering of
// this slice is not guaranteed to be stable across updates.
func (AutoMLSortBy) Values() []AutoMLSortBy {
	return []AutoMLSortBy{
		"Name",
		"CreationTime",
		"Status",
	}
}

type AutoMLSortOrder string

// Enum values for AutoMLSortOrder
const (
	AutoMLSortOrderAscending  AutoMLSortOrder = "Ascending"
	AutoMLSortOrderDescending AutoMLSortOrder = "Descending"
)

// Values returns all known values for AutoMLSortOrder. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (AutoMLSortOrder) Values() []AutoMLSortOrder {
	return []AutoMLSortOrder{
		"Ascending",
		"Descending",
	}
}

type AwsManagedHumanLoopRequestSource string

// Enum values for AwsManagedHumanLoopRequestSource
const (
	AwsManagedHumanLoopRequestSourceRekognitionDetectModerationLabelsImageV3 AwsManagedHumanLoopRequestSource = "AWS/Rekognition/DetectModerationLabels/Image/V3"
	AwsManagedHumanLoopRequestSourceTextractAnalyzeDocumentFormsV1           AwsManagedHumanLoopRequestSource = "AWS/Textract/AnalyzeDocument/Forms/V1"
)

// Values returns all known values for AwsManagedHumanLoopRequestSource. Note that
// this can be expanded in the future, and so it is only as up to date as the
// client. The ordering of this slice is not guaranteed to be stable across
// updates.
func (AwsManagedHumanLoopRequestSource) Values() []AwsManagedHumanLoopRequestSource {
	return []AwsManagedHumanLoopRequestSource{
		"AWS/Rekognition/DetectModerationLabels/Image/V3",
		"AWS/Textract/AnalyzeDocument/Forms/V1",
	}
}

type BatchStrategy string

// Enum values for BatchStrategy
const (
	BatchStrategyMultiRecord  BatchStrategy = "MultiRecord"
	BatchStrategySingleRecord BatchStrategy = "SingleRecord"
)

// Values returns all known values for BatchStrategy. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (BatchStrategy) Values() []BatchStrategy {
	return []BatchStrategy{
		"MultiRecord",
		"SingleRecord",
	}
}

type BooleanOperator string

// Enum values for BooleanOperator
const (
	BooleanOperatorAnd BooleanOperator = "And"
	BooleanOperatorOr  BooleanOperator = "Or"
)

// Values returns all known values for BooleanOperator. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (BooleanOperator) Values() []BooleanOperator {
	return []BooleanOperator{
		"And",
		"Or",
	}
}

type CandidateSortBy string

// Enum values for CandidateSortBy
const (
	CandidateSortByCreationTime              CandidateSortBy = "CreationTime"
	CandidateSortByStatus                    CandidateSortBy = "Status"
	CandidateSortByFinalObjectiveMetricValue CandidateSortBy = "FinalObjectiveMetricValue"
)

// Values returns all known values for CandidateSortBy. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (CandidateSortBy) Values() []CandidateSortBy {
	return []CandidateSortBy{
		"CreationTime",
		"Status",
		"FinalObjectiveMetricValue",
	}
}

type CandidateStatus string

// Enum values for CandidateStatus
const (
	CandidateStatusCompleted  CandidateStatus = "Completed"
	CandidateStatusInProgress CandidateStatus = "InProgress"
	CandidateStatusFailed     CandidateStatus = "Failed"
	CandidateStatusStopped    CandidateStatus = "Stopped"
	CandidateStatusStopping   CandidateStatus = "Stopping"
)

// Values returns all known values for CandidateStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (CandidateStatus) Values() []CandidateStatus {
	return []CandidateStatus{
		"Completed",
		"InProgress",
		"Failed",
		"Stopped",
		"Stopping",
	}
}

type CandidateStepType string

// Enum values for CandidateStepType
const (
	CandidateStepTypeTraining   CandidateStepType = "AWS::SageMaker::TrainingJob"
	CandidateStepTypeTransform  CandidateStepType = "AWS::SageMaker::TransformJob"
	CandidateStepTypeProcessing CandidateStepType = "AWS::SageMaker::ProcessingJob"
)

// Values returns all known values for CandidateStepType. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (CandidateStepType) Values() []CandidateStepType {
	return []CandidateStepType{
		"AWS::SageMaker::TrainingJob",
		"AWS::SageMaker::TransformJob",
		"AWS::SageMaker::ProcessingJob",
	}
}

type CapacitySizeType string

// Enum values for CapacitySizeType
const (
	CapacitySizeTypeInstanceCount   CapacitySizeType = "INSTANCE_COUNT"
	CapacitySizeTypeCapacityPercent CapacitySizeType = "CAPACITY_PERCENT"
)

// Values returns all known values for CapacitySizeType. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (CapacitySizeType) Values() []CapacitySizeType {
	return []CapacitySizeType{
		"INSTANCE_COUNT",
		"CAPACITY_PERCENT",
	}
}

type CaptureMode string

// Enum values for CaptureMode
const (
	CaptureModeInput  CaptureMode = "Input"
	CaptureModeOutput CaptureMode = "Output"
)

// Values returns all known values for CaptureMode. Note that this can be expanded
// in the future, and so it is only as up to date as the client. The ordering of
// this slice is not guaranteed to be stable across updates.
func (CaptureMode) Values() []CaptureMode {
	return []CaptureMode{
		"Input",
		"Output",
	}
}

type CaptureStatus string

// Enum values for CaptureStatus
const (
	CaptureStatusStarted CaptureStatus = "Started"
	CaptureStatusStopped CaptureStatus = "Stopped"
)

// Values returns all known values for CaptureStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (CaptureStatus) Values() []CaptureStatus {
	return []CaptureStatus{
		"Started",
		"Stopped",
	}
}

type CodeRepositorySortBy string

// Enum values for CodeRepositorySortBy
const (
	CodeRepositorySortByName             CodeRepositorySortBy = "Name"
	CodeRepositorySortByCreationTime     CodeRepositorySortBy = "CreationTime"
	CodeRepositorySortByLastModifiedTime CodeRepositorySortBy = "LastModifiedTime"
)

// Values returns all known values for CodeRepositorySortBy. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (CodeRepositorySortBy) Values() []CodeRepositorySortBy {
	return []CodeRepositorySortBy{
		"Name",
		"CreationTime",
		"LastModifiedTime",
	}
}

type CodeRepositorySortOrder string

// Enum values for CodeRepositorySortOrder
const (
	CodeRepositorySortOrderAscending  CodeRepositorySortOrder = "Ascending"
	CodeRepositorySortOrderDescending CodeRepositorySortOrder = "Descending"
)

// Values returns all known values for CodeRepositorySortOrder. Note that this can
// be expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (CodeRepositorySortOrder) Values() []CodeRepositorySortOrder {
	return []CodeRepositorySortOrder{
		"Ascending",
		"Descending",
	}
}

type CompilationJobStatus string

// Enum values for CompilationJobStatus
const (
	CompilationJobStatusInprogress CompilationJobStatus = "INPROGRESS"
	CompilationJobStatusCompleted  CompilationJobStatus = "COMPLETED"
	CompilationJobStatusFailed     CompilationJobStatus = "FAILED"
	CompilationJobStatusStarting   CompilationJobStatus = "STARTING"
	CompilationJobStatusStopping   CompilationJobStatus = "STOPPING"
	CompilationJobStatusStopped    CompilationJobStatus = "STOPPED"
)

// Values returns all known values for CompilationJobStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (CompilationJobStatus) Values() []CompilationJobStatus {
	return []CompilationJobStatus{
		"INPROGRESS",
		"COMPLETED",
		"FAILED",
		"STARTING",
		"STOPPING",
		"STOPPED",
	}
}

type CompressionType string

// Enum values for CompressionType
const (
	CompressionTypeNone CompressionType = "None"
	CompressionTypeGzip CompressionType = "Gzip"
)

// Values returns all known values for CompressionType. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (CompressionType) Values() []CompressionType {
	return []CompressionType{
		"None",
		"Gzip",
	}
}

type ConditionOutcome string

// Enum values for ConditionOutcome
const (
	ConditionOutcomeTrue  ConditionOutcome = "True"
	ConditionOutcomeFalse ConditionOutcome = "False"
)

// Values returns all known values for ConditionOutcome. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (ConditionOutcome) Values() []ConditionOutcome {
	return []ConditionOutcome{
		"True",
		"False",
	}
}

type ContainerMode string

// Enum values for ContainerMode
const (
	ContainerModeSingleModel ContainerMode = "SingleModel"
	ContainerModeMultiModel  ContainerMode = "MultiModel"
)

// Values returns all known values for ContainerMode. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (ContainerMode) Values() []ContainerMode {
	return []ContainerMode{
		"SingleModel",
		"MultiModel",
	}
}

type ContentClassifier string

// Enum values for ContentClassifier
const (
	ContentClassifierFreeOfPersonallyIdentifiableInformation ContentClassifier = "FreeOfPersonallyIdentifiableInformation"
	ContentClassifierFreeOfAdultContent                      ContentClassifier = "FreeOfAdultContent"
)

// Values returns all known values for ContentClassifier. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (ContentClassifier) Values() []ContentClassifier {
	return []ContentClassifier{
		"FreeOfPersonallyIdentifiableInformation",
		"FreeOfAdultContent",
	}
}

type DataDistributionType string

// Enum values for DataDistributionType
const (
	DataDistributionTypeFullyreplicated DataDistributionType = "FullyReplicated"
	DataDistributionTypeShardedbys3key  DataDistributionType = "ShardedByS3Key"
)

// Values returns all known values for DataDistributionType. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (DataDistributionType) Values() []DataDistributionType {
	return []DataDistributionType{
		"FullyReplicated",
		"ShardedByS3Key",
	}
}

type DetailedAlgorithmStatus string

// Enum values for DetailedAlgorithmStatus
const (
	DetailedAlgorithmStatusNotStarted DetailedAlgorithmStatus = "NotStarted"
	DetailedAlgorithmStatusInProgress DetailedAlgorithmStatus = "InProgress"
	DetailedAlgorithmStatusCompleted  DetailedAlgorithmStatus = "Completed"
	DetailedAlgorithmStatusFailed     DetailedAlgorithmStatus = "Failed"
)

// Values returns all known values for DetailedAlgorithmStatus. Note that this can
// be expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (DetailedAlgorithmStatus) Values() []DetailedAlgorithmStatus {
	return []DetailedAlgorithmStatus{
		"NotStarted",
		"InProgress",
		"Completed",
		"Failed",
	}
}

type DetailedModelPackageStatus string

// Enum values for DetailedModelPackageStatus
const (
	DetailedModelPackageStatusNotStarted DetailedModelPackageStatus = "NotStarted"
	DetailedModelPackageStatusInProgress DetailedModelPackageStatus = "InProgress"
	DetailedModelPackageStatusCompleted  DetailedModelPackageStatus = "Completed"
	DetailedModelPackageStatusFailed     DetailedModelPackageStatus = "Failed"
)

// Values returns all known values for DetailedModelPackageStatus. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
// The ordering of this slice is not guaranteed to be stable across updates.
func (DetailedModelPackageStatus) Values() []DetailedModelPackageStatus {
	return []DetailedModelPackageStatus{
		"NotStarted",
		"InProgress",
		"Completed",
		"Failed",
	}
}

type DirectInternetAccess string

// Enum values for DirectInternetAccess
const (
	DirectInternetAccessEnabled  DirectInternetAccess = "Enabled"
	DirectInternetAccessDisabled DirectInternetAccess = "Disabled"
)

// Values returns all known values for DirectInternetAccess. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (DirectInternetAccess) Values() []DirectInternetAccess {
	return []DirectInternetAccess{
		"Enabled",
		"Disabled",
	}
}

type DomainStatus string

// Enum values for DomainStatus
const (
	DomainStatusDeleting     DomainStatus = "Deleting"
	DomainStatusFailed       DomainStatus = "Failed"
	DomainStatusInService    DomainStatus = "InService"
	DomainStatusPending      DomainStatus = "Pending"
	DomainStatusUpdating     DomainStatus = "Updating"
	DomainStatusUpdateFailed DomainStatus = "Update_Failed"
	DomainStatusDeleteFailed DomainStatus = "Delete_Failed"
)

// Values returns all known values for DomainStatus. Note that this can be expanded
// in the future, and so it is only as up to date as the client. The ordering of
// this slice is not guaranteed to be stable across updates.
func (DomainStatus) Values() []DomainStatus {
	return []DomainStatus{
		"Deleting",
		"Failed",
		"InService",
		"Pending",
		"Updating",
		"Update_Failed",
		"Delete_Failed",
	}
}

type EdgePackagingJobStatus string

// Enum values for EdgePackagingJobStatus
const (
	EdgePackagingJobStatusStarting   EdgePackagingJobStatus = "STARTING"
	EdgePackagingJobStatusInProgress EdgePackagingJobStatus = "INPROGRESS"
	EdgePackagingJobStatusCompleted  EdgePackagingJobStatus = "COMPLETED"
	EdgePackagingJobStatusFailed     EdgePackagingJobStatus = "FAILED"
	EdgePackagingJobStatusStopping   EdgePackagingJobStatus = "STOPPING"
	EdgePackagingJobStatusStopped    EdgePackagingJobStatus = "STOPPED"
)

// Values returns all known values for EdgePackagingJobStatus. Note that this can
// be expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (EdgePackagingJobStatus) Values() []EdgePackagingJobStatus {
	return []EdgePackagingJobStatus{
		"STARTING",
		"INPROGRESS",
		"COMPLETED",
		"FAILED",
		"STOPPING",
		"STOPPED",
	}
}

type EdgePresetDeploymentStatus string

// Enum values for EdgePresetDeploymentStatus
const (
	EdgePresetDeploymentStatusCompleted EdgePresetDeploymentStatus = "COMPLETED"
	EdgePresetDeploymentStatusFailed    EdgePresetDeploymentStatus = "FAILED"
)

// Values returns all known values for EdgePresetDeploymentStatus. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
// The ordering of this slice is not guaranteed to be stable across updates.
func (EdgePresetDeploymentStatus) Values() []EdgePresetDeploymentStatus {
	return []EdgePresetDeploymentStatus{
		"COMPLETED",
		"FAILED",
	}
}

type EdgePresetDeploymentType string

// Enum values for EdgePresetDeploymentType
const (
	EdgePresetDeploymentTypeGreengrassV2Component EdgePresetDeploymentType = "GreengrassV2Component"
)

// Values returns all known values for EdgePresetDeploymentType. Note that this can
// be expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (EdgePresetDeploymentType) Values() []EdgePresetDeploymentType {
	return []EdgePresetDeploymentType{
		"GreengrassV2Component",
	}
}

type EndpointConfigSortKey string

// Enum values for EndpointConfigSortKey
const (
	EndpointConfigSortKeyName         EndpointConfigSortKey = "Name"
	EndpointConfigSortKeyCreationTime EndpointConfigSortKey = "CreationTime"
)

// Values returns all known values for EndpointConfigSortKey. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (EndpointConfigSortKey) Values() []EndpointConfigSortKey {
	return []EndpointConfigSortKey{
		"Name",
		"CreationTime",
	}
}

type EndpointSortKey string

// Enum values for EndpointSortKey
const (
	EndpointSortKeyName         EndpointSortKey = "Name"
	EndpointSortKeyCreationTime EndpointSortKey = "CreationTime"
	EndpointSortKeyStatus       EndpointSortKey = "Status"
)

// Values returns all known values for EndpointSortKey. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (EndpointSortKey) Values() []EndpointSortKey {
	return []EndpointSortKey{
		"Name",
		"CreationTime",
		"Status",
	}
}

type EndpointStatus string

// Enum values for EndpointStatus
const (
	EndpointStatusOutOfService   EndpointStatus = "OutOfService"
	EndpointStatusCreating       EndpointStatus = "Creating"
	EndpointStatusUpdating       EndpointStatus = "Updating"
	EndpointStatusSystemUpdating EndpointStatus = "SystemUpdating"
	EndpointStatusRollingBack    EndpointStatus = "RollingBack"
	EndpointStatusInService      EndpointStatus = "InService"
	EndpointStatusDeleting       EndpointStatus = "Deleting"
	EndpointStatusFailed         EndpointStatus = "Failed"
)

// Values returns all known values for EndpointStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (EndpointStatus) Values() []EndpointStatus {
	return []EndpointStatus{
		"OutOfService",
		"Creating",
		"Updating",
		"SystemUpdating",
		"RollingBack",
		"InService",
		"Deleting",
		"Failed",
	}
}

type ExecutionStatus string

// Enum values for ExecutionStatus
const (
	ExecutionStatusPending                 ExecutionStatus = "Pending"
	ExecutionStatusCompleted               ExecutionStatus = "Completed"
	ExecutionStatusCompletedWithViolations ExecutionStatus = "CompletedWithViolations"
	ExecutionStatusInProgress              ExecutionStatus = "InProgress"
	ExecutionStatusFailed                  ExecutionStatus = "Failed"
	ExecutionStatusStopping                ExecutionStatus = "Stopping"
	ExecutionStatusStopped                 ExecutionStatus = "Stopped"
)

// Values returns all known values for ExecutionStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (ExecutionStatus) Values() []ExecutionStatus {
	return []ExecutionStatus{
		"Pending",
		"Completed",
		"CompletedWithViolations",
		"InProgress",
		"Failed",
		"Stopping",
		"Stopped",
	}
}

type FeatureGroupSortBy string

// Enum values for FeatureGroupSortBy
const (
	FeatureGroupSortByName               FeatureGroupSortBy = "Name"
	FeatureGroupSortByFeatureGroupStatus FeatureGroupSortBy = "FeatureGroupStatus"
	FeatureGroupSortByOfflineStoreStatus FeatureGroupSortBy = "OfflineStoreStatus"
	FeatureGroupSortByCreationTime       FeatureGroupSortBy = "CreationTime"
)

// Values returns all known values for FeatureGroupSortBy. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (FeatureGroupSortBy) Values() []FeatureGroupSortBy {
	return []FeatureGroupSortBy{
		"Name",
		"FeatureGroupStatus",
		"OfflineStoreStatus",
		"CreationTime",
	}
}

type FeatureGroupSortOrder string

// Enum values for FeatureGroupSortOrder
const (
	FeatureGroupSortOrderAscending  FeatureGroupSortOrder = "Ascending"
	FeatureGroupSortOrderDescending FeatureGroupSortOrder = "Descending"
)

// Values returns all known values for FeatureGroupSortOrder. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (FeatureGroupSortOrder) Values() []FeatureGroupSortOrder {
	return []FeatureGroupSortOrder{
		"Ascending",
		"Descending",
	}
}

type FeatureGroupStatus string

// Enum values for FeatureGroupStatus
const (
	FeatureGroupStatusCreating     FeatureGroupStatus = "Creating"
	FeatureGroupStatusCreated      FeatureGroupStatus = "Created"
	FeatureGroupStatusCreateFailed FeatureGroupStatus = "CreateFailed"
	FeatureGroupStatusDeleting     FeatureGroupStatus = "Deleting"
	FeatureGroupStatusDeleteFailed FeatureGroupStatus = "DeleteFailed"
)

// Values returns all known values for FeatureGroupStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (FeatureGroupStatus) Values() []FeatureGroupStatus {
	return []FeatureGroupStatus{
		"Creating",
		"Created",
		"CreateFailed",
		"Deleting",
		"DeleteFailed",
	}
}

type FeatureType string

// Enum values for FeatureType
const (
	FeatureTypeIntegral   FeatureType = "Integral"
	FeatureTypeFractional FeatureType = "Fractional"
	FeatureTypeString     FeatureType = "String"
)

// Values returns all known values for FeatureType. Note that this can be expanded
// in the future, and so it is only as up to date as the client. The ordering of
// this slice is not guaranteed to be stable across updates.
func (FeatureType) Values() []FeatureType {
	return []FeatureType{
		"Integral",
		"Fractional",
		"String",
	}
}

type FileSystemAccessMode string

// Enum values for FileSystemAccessMode
const (
	FileSystemAccessModeRw FileSystemAccessMode = "rw"
	FileSystemAccessModeRo FileSystemAccessMode = "ro"
)

// Values returns all known values for FileSystemAccessMode. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (FileSystemAccessMode) Values() []FileSystemAccessMode {
	return []FileSystemAccessMode{
		"rw",
		"ro",
	}
}

type FileSystemType string

// Enum values for FileSystemType
const (
	FileSystemTypeEfs       FileSystemType = "EFS"
	FileSystemTypeFsxlustre FileSystemType = "FSxLustre"
)

// Values returns all known values for FileSystemType. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (FileSystemType) Values() []FileSystemType {
	return []FileSystemType{
		"EFS",
		"FSxLustre",
	}
}

type FlowDefinitionStatus string

// Enum values for FlowDefinitionStatus
const (
	FlowDefinitionStatusInitializing FlowDefinitionStatus = "Initializing"
	FlowDefinitionStatusActive       FlowDefinitionStatus = "Active"
	FlowDefinitionStatusFailed       FlowDefinitionStatus = "Failed"
	FlowDefinitionStatusDeleting     FlowDefinitionStatus = "Deleting"
)

// Values returns all known values for FlowDefinitionStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (FlowDefinitionStatus) Values() []FlowDefinitionStatus {
	return []FlowDefinitionStatus{
		"Initializing",
		"Active",
		"Failed",
		"Deleting",
	}
}

type Framework string

// Enum values for Framework
const (
	FrameworkTensorflow Framework = "TENSORFLOW"
	FrameworkKeras      Framework = "KERAS"
	FrameworkMxnet      Framework = "MXNET"
	FrameworkOnnx       Framework = "ONNX"
	FrameworkPytorch    Framework = "PYTORCH"
	FrameworkXgboost    Framework = "XGBOOST"
	FrameworkTflite     Framework = "TFLITE"
	FrameworkDarknet    Framework = "DARKNET"
	FrameworkSklearn    Framework = "SKLEARN"
)

// Values returns all known values for Framework. Note that this can be expanded in
// the future, and so it is only as up to date as the client. The ordering of this
// slice is not guaranteed to be stable across updates.
func (Framework) Values() []Framework {
	return []Framework{
		"TENSORFLOW",
		"KERAS",
		"MXNET",
		"ONNX",
		"PYTORCH",
		"XGBOOST",
		"TFLITE",
		"DARKNET",
		"SKLEARN",
	}
}

type HumanTaskUiStatus string

// Enum values for HumanTaskUiStatus
const (
	HumanTaskUiStatusActive   HumanTaskUiStatus = "Active"
	HumanTaskUiStatusDeleting HumanTaskUiStatus = "Deleting"
)

// Values returns all known values for HumanTaskUiStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (HumanTaskUiStatus) Values() []HumanTaskUiStatus {
	return []HumanTaskUiStatus{
		"Active",
		"Deleting",
	}
}

type HyperParameterScalingType string

// Enum values for HyperParameterScalingType
const (
	HyperParameterScalingTypeAuto               HyperParameterScalingType = "Auto"
	HyperParameterScalingTypeLinear             HyperParameterScalingType = "Linear"
	HyperParameterScalingTypeLogarithmic        HyperParameterScalingType = "Logarithmic"
	HyperParameterScalingTypeReverseLogarithmic HyperParameterScalingType = "ReverseLogarithmic"
)

// Values returns all known values for HyperParameterScalingType. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
// The ordering of this slice is not guaranteed to be stable across updates.
func (HyperParameterScalingType) Values() []HyperParameterScalingType {
	return []HyperParameterScalingType{
		"Auto",
		"Linear",
		"Logarithmic",
		"ReverseLogarithmic",
	}
}

type HyperParameterTuningJobObjectiveType string

// Enum values for HyperParameterTuningJobObjectiveType
const (
	HyperParameterTuningJobObjectiveTypeMaximize HyperParameterTuningJobObjectiveType = "Maximize"
	HyperParameterTuningJobObjectiveTypeMinimize HyperParameterTuningJobObjectiveType = "Minimize"
)

// Values returns all known values for HyperParameterTuningJobObjectiveType. Note
// that this can be expanded in the future, and so it is only as up to date as the
// client. The ordering of this slice is not guaranteed to be stable across
// updates.
func (HyperParameterTuningJobObjectiveType) Values() []HyperParameterTuningJobObjectiveType {
	return []HyperParameterTuningJobObjectiveType{
		"Maximize",
		"Minimize",
	}
}

type HyperParameterTuningJobSortByOptions string

// Enum values for HyperParameterTuningJobSortByOptions
const (
	HyperParameterTuningJobSortByOptionsName         HyperParameterTuningJobSortByOptions = "Name"
	HyperParameterTuningJobSortByOptionsStatus       HyperParameterTuningJobSortByOptions = "Status"
	HyperParameterTuningJobSortByOptionsCreationTime HyperParameterTuningJobSortByOptions = "CreationTime"
)

// Values returns all known values for HyperParameterTuningJobSortByOptions. Note
// that this can be expanded in the future, and so it is only as up to date as the
// client. The ordering of this slice is not guaranteed to be stable across
// updates.
func (HyperParameterTuningJobSortByOptions) Values() []HyperParameterTuningJobSortByOptions {
	return []HyperParameterTuningJobSortByOptions{
		"Name",
		"Status",
		"CreationTime",
	}
}

type HyperParameterTuningJobStatus string

// Enum values for HyperParameterTuningJobStatus
const (
	HyperParameterTuningJobStatusCompleted  HyperParameterTuningJobStatus = "Completed"
	HyperParameterTuningJobStatusInProgress HyperParameterTuningJobStatus = "InProgress"
	HyperParameterTuningJobStatusFailed     HyperParameterTuningJobStatus = "Failed"
	HyperParameterTuningJobStatusStopped    HyperParameterTuningJobStatus = "Stopped"
	HyperParameterTuningJobStatusStopping   HyperParameterTuningJobStatus = "Stopping"
)

// Values returns all known values for HyperParameterTuningJobStatus. Note that
// this can be expanded in the future, and so it is only as up to date as the
// client. The ordering of this slice is not guaranteed to be stable across
// updates.
func (HyperParameterTuningJobStatus) Values() []HyperParameterTuningJobStatus {
	return []HyperParameterTuningJobStatus{
		"Completed",
		"InProgress",
		"Failed",
		"Stopped",
		"Stopping",
	}
}

type HyperParameterTuningJobStrategyType string

// Enum values for HyperParameterTuningJobStrategyType
const (
	HyperParameterTuningJobStrategyTypeBayesian HyperParameterTuningJobStrategyType = "Bayesian"
	HyperParameterTuningJobStrategyTypeRandom   HyperParameterTuningJobStrategyType = "Random"
)

// Values returns all known values for HyperParameterTuningJobStrategyType. Note
// that this can be expanded in the future, and so it is only as up to date as the
// client. The ordering of this slice is not guaranteed to be stable across
// updates.
func (HyperParameterTuningJobStrategyType) Values() []HyperParameterTuningJobStrategyType {
	return []HyperParameterTuningJobStrategyType{
		"Bayesian",
		"Random",
	}
}

type HyperParameterTuningJobWarmStartType string

// Enum values for HyperParameterTuningJobWarmStartType
const (
	HyperParameterTuningJobWarmStartTypeIdenticalDataAndAlgorithm HyperParameterTuningJobWarmStartType = "IdenticalDataAndAlgorithm"
	HyperParameterTuningJobWarmStartTypeTransferLearning          HyperParameterTuningJobWarmStartType = "TransferLearning"
)

// Values returns all known values for HyperParameterTuningJobWarmStartType. Note
// that this can be expanded in the future, and so it is only as up to date as the
// client. The ordering of this slice is not guaranteed to be stable across
// updates.
func (HyperParameterTuningJobWarmStartType) Values() []HyperParameterTuningJobWarmStartType {
	return []HyperParameterTuningJobWarmStartType{
		"IdenticalDataAndAlgorithm",
		"TransferLearning",
	}
}

type ImageSortBy string

// Enum values for ImageSortBy
const (
	ImageSortByCreationTime     ImageSortBy = "CREATION_TIME"
	ImageSortByLastModifiedTime ImageSortBy = "LAST_MODIFIED_TIME"
	ImageSortByImageName        ImageSortBy = "IMAGE_NAME"
)

// Values returns all known values for ImageSortBy. Note that this can be expanded
// in the future, and so it is only as up to date as the client. The ordering of
// this slice is not guaranteed to be stable across updates.
func (ImageSortBy) Values() []ImageSortBy {
	return []ImageSortBy{
		"CREATION_TIME",
		"LAST_MODIFIED_TIME",
		"IMAGE_NAME",
	}
}

type ImageSortOrder string

// Enum values for ImageSortOrder
const (
	ImageSortOrderAscending  ImageSortOrder = "ASCENDING"
	ImageSortOrderDescending ImageSortOrder = "DESCENDING"
)

// Values returns all known values for ImageSortOrder. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (ImageSortOrder) Values() []ImageSortOrder {
	return []ImageSortOrder{
		"ASCENDING",
		"DESCENDING",
	}
}

type ImageStatus string

// Enum values for ImageStatus
const (
	ImageStatusCreating     ImageStatus = "CREATING"
	ImageStatusCreated      ImageStatus = "CREATED"
	ImageStatusCreateFailed ImageStatus = "CREATE_FAILED"
	ImageStatusUpdating     ImageStatus = "UPDATING"
	ImageStatusUpdateFailed ImageStatus = "UPDATE_FAILED"
	ImageStatusDeleting     ImageStatus = "DELETING"
	ImageStatusDeleteFailed ImageStatus = "DELETE_FAILED"
)

// Values returns all known values for ImageStatus. Note that this can be expanded
// in the future, and so it is only as up to date as the client. The ordering of
// this slice is not guaranteed to be stable across updates.
func (ImageStatus) Values() []ImageStatus {
	return []ImageStatus{
		"CREATING",
		"CREATED",
		"CREATE_FAILED",
		"UPDATING",
		"UPDATE_FAILED",
		"DELETING",
		"DELETE_FAILED",
	}
}

type ImageVersionSortBy string

// Enum values for ImageVersionSortBy
const (
	ImageVersionSortByCreationTime     ImageVersionSortBy = "CREATION_TIME"
	ImageVersionSortByLastModifiedTime ImageVersionSortBy = "LAST_MODIFIED_TIME"
	ImageVersionSortByVersion          ImageVersionSortBy = "VERSION"
)

// Values returns all known values for ImageVersionSortBy. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (ImageVersionSortBy) Values() []ImageVersionSortBy {
	return []ImageVersionSortBy{
		"CREATION_TIME",
		"LAST_MODIFIED_TIME",
		"VERSION",
	}
}

type ImageVersionSortOrder string

// Enum values for ImageVersionSortOrder
const (
	ImageVersionSortOrderAscending  ImageVersionSortOrder = "ASCENDING"
	ImageVersionSortOrderDescending ImageVersionSortOrder = "DESCENDING"
)

// Values returns all known values for ImageVersionSortOrder. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (ImageVersionSortOrder) Values() []ImageVersionSortOrder {
	return []ImageVersionSortOrder{
		"ASCENDING",
		"DESCENDING",
	}
}

type ImageVersionStatus string

// Enum values for ImageVersionStatus
const (
	ImageVersionStatusCreating     ImageVersionStatus = "CREATING"
	ImageVersionStatusCreated      ImageVersionStatus = "CREATED"
	ImageVersionStatusCreateFailed ImageVersionStatus = "CREATE_FAILED"
	ImageVersionStatusDeleting     ImageVersionStatus = "DELETING"
	ImageVersionStatusDeleteFailed ImageVersionStatus = "DELETE_FAILED"
)

// Values returns all known values for ImageVersionStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (ImageVersionStatus) Values() []ImageVersionStatus {
	return []ImageVersionStatus{
		"CREATING",
		"CREATED",
		"CREATE_FAILED",
		"DELETING",
		"DELETE_FAILED",
	}
}

type InferenceExecutionMode string

// Enum values for InferenceExecutionMode
const (
	InferenceExecutionModeSerial InferenceExecutionMode = "Serial"
	InferenceExecutionModeDirect InferenceExecutionMode = "Direct"
)

// Values returns all known values for InferenceExecutionMode. Note that this can
// be expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (InferenceExecutionMode) Values() []InferenceExecutionMode {
	return []InferenceExecutionMode{
		"Serial",
		"Direct",
	}
}

type InputMode string

// Enum values for InputMode
const (
	InputModePipe InputMode = "Pipe"
	InputModeFile InputMode = "File"
)

// Values returns all known values for InputMode. Note that this can be expanded in
// the future, and so it is only as up to date as the client. The ordering of this
// slice is not guaranteed to be stable across updates.
func (InputMode) Values() []InputMode {
	return []InputMode{
		"Pipe",
		"File",
	}
}

type InstanceType string

// Enum values for InstanceType
const (
	InstanceTypeMlT2Medium     InstanceType = "ml.t2.medium"
	InstanceTypeMlT2Large      InstanceType = "ml.t2.large"
	InstanceTypeMlT2Xlarge     InstanceType = "ml.t2.xlarge"
	InstanceTypeMlT22xlarge    InstanceType = "ml.t2.2xlarge"
	InstanceTypeMlT3Medium     InstanceType = "ml.t3.medium"
	InstanceTypeMlT3Large      InstanceType = "ml.t3.large"
	InstanceTypeMlT3Xlarge     InstanceType = "ml.t3.xlarge"
	InstanceTypeMlT32xlarge    InstanceType = "ml.t3.2xlarge"
	InstanceTypeMlM4Xlarge     InstanceType = "ml.m4.xlarge"
	InstanceTypeMlM42xlarge    InstanceType = "ml.m4.2xlarge"
	InstanceTypeMlM44xlarge    InstanceType = "ml.m4.4xlarge"
	InstanceTypeMlM410xlarge   InstanceType = "ml.m4.10xlarge"
	InstanceTypeMlM416xlarge   InstanceType = "ml.m4.16xlarge"
	InstanceTypeMlM5Xlarge     InstanceType = "ml.m5.xlarge"
	InstanceTypeMlM52xlarge    InstanceType = "ml.m5.2xlarge"
	InstanceTypeMlM54xlarge    InstanceType = "ml.m5.4xlarge"
	InstanceTypeMlM512xlarge   InstanceType = "ml.m5.12xlarge"
	InstanceTypeMlM524xlarge   InstanceType = "ml.m5.24xlarge"
	InstanceTypeMlM5dLarge     InstanceType = "ml.m5d.large"
	InstanceTypeMlM5dXlarge    InstanceType = "ml.m5d.xlarge"
	InstanceTypeMlM5d2xlarge   InstanceType = "ml.m5d.2xlarge"
	InstanceTypeMlM5d4xlarge   InstanceType = "ml.m5d.4xlarge"
	InstanceTypeMlM5d8xlarge   InstanceType = "ml.m5d.8xlarge"
	InstanceTypeMlM5d12xlarge  InstanceType = "ml.m5d.12xlarge"
	InstanceTypeMlM5d16xlarge  InstanceType = "ml.m5d.16xlarge"
	InstanceTypeMlM5d24xlarge  InstanceType = "ml.m5d.24xlarge"
	InstanceTypeMlC4Xlarge     InstanceType = "ml.c4.xlarge"
	InstanceTypeMlC42xlarge    InstanceType = "ml.c4.2xlarge"
	InstanceTypeMlC44xlarge    InstanceType = "ml.c4.4xlarge"
	InstanceTypeMlC48xlarge    InstanceType = "ml.c4.8xlarge"
	InstanceTypeMlC5Xlarge     InstanceType = "ml.c5.xlarge"
	InstanceTypeMlC52xlarge    InstanceType = "ml.c5.2xlarge"
	InstanceTypeMlC54xlarge    InstanceType = "ml.c5.4xlarge"
	InstanceTypeMlC59xlarge    InstanceType = "ml.c5.9xlarge"
	InstanceTypeMlC518xlarge   InstanceType = "ml.c5.18xlarge"
	InstanceTypeMlC5dXlarge    InstanceType = "ml.c5d.xlarge"
	InstanceTypeMlC5d2xlarge   InstanceType = "ml.c5d.2xlarge"
	InstanceTypeMlC5d4xlarge   InstanceType = "ml.c5d.4xlarge"
	InstanceTypeMlC5d9xlarge   InstanceType = "ml.c5d.9xlarge"
	InstanceTypeMlC5d18xlarge  InstanceType = "ml.c5d.18xlarge"
	InstanceTypeMlP2Xlarge     InstanceType = "ml.p2.xlarge"
	InstanceTypeMlP28xlarge    InstanceType = "ml.p2.8xlarge"
	InstanceTypeMlP216xlarge   InstanceType = "ml.p2.16xlarge"
	InstanceTypeMlP32xlarge    InstanceType = "ml.p3.2xlarge"
	InstanceTypeMlP38xlarge    InstanceType = "ml.p3.8xlarge"
	InstanceTypeMlP316xlarge   InstanceType = "ml.p3.16xlarge"
	InstanceTypeMlP3dn24xlarge InstanceType = "ml.p3dn.24xlarge"
	InstanceTypeMlG4dnXlarge   InstanceType = "ml.g4dn.xlarge"
	InstanceTypeMlG4dn2xlarge  InstanceType = "ml.g4dn.2xlarge"
	InstanceTypeMlG4dn4xlarge  InstanceType = "ml.g4dn.4xlarge"
	InstanceTypeMlG4dn8xlarge  InstanceType = "ml.g4dn.8xlarge"
	InstanceTypeMlG4dn12xlarge InstanceType = "ml.g4dn.12xlarge"
	InstanceTypeMlG4dn16xlarge InstanceType = "ml.g4dn.16xlarge"
	InstanceTypeMlR5Large      InstanceType = "ml.r5.large"
	InstanceTypeMlR5Xlarge     InstanceType = "ml.r5.xlarge"
	InstanceTypeMlR52xlarge    InstanceType = "ml.r5.2xlarge"
	InstanceTypeMlR54xlarge    InstanceType = "ml.r5.4xlarge"
	InstanceTypeMlR58xlarge    InstanceType = "ml.r5.8xlarge"
	InstanceTypeMlR512xlarge   InstanceType = "ml.r5.12xlarge"
	InstanceTypeMlR516xlarge   InstanceType = "ml.r5.16xlarge"
	InstanceTypeMlR524xlarge   InstanceType = "ml.r5.24xlarge"
)

// Values returns all known values for InstanceType. Note that this can be expanded
// in the future, and so it is only as up to date as the client. The ordering of
// this slice is not guaranteed to be stable across updates.
func (InstanceType) Values() []InstanceType {
	return []InstanceType{
		"ml.t2.medium",
		"ml.t2.large",
		"ml.t2.xlarge",
		"ml.t2.2xlarge",
		"ml.t3.medium",
		"ml.t3.large",
		"ml.t3.xlarge",
		"ml.t3.2xlarge",
		"ml.m4.xlarge",
		"ml.m4.2xlarge",
		"ml.m4.4xlarge",
		"ml.m4.10xlarge",
		"ml.m4.16xlarge",
		"ml.m5.xlarge",
		"ml.m5.2xlarge",
		"ml.m5.4xlarge",
		"ml.m5.12xlarge",
		"ml.m5.24xlarge",
		"ml.m5d.large",
		"ml.m5d.xlarge",
		"ml.m5d.2xlarge",
		"ml.m5d.4xlarge",
		"ml.m5d.8xlarge",
		"ml.m5d.12xlarge",
		"ml.m5d.16xlarge",
		"ml.m5d.24xlarge",
		"ml.c4.xlarge",
		"ml.c4.2xlarge",
		"ml.c4.4xlarge",
		"ml.c4.8xlarge",
		"ml.c5.xlarge",
		"ml.c5.2xlarge",
		"ml.c5.4xlarge",
		"ml.c5.9xlarge",
		"ml.c5.18xlarge",
		"ml.c5d.xlarge",
		"ml.c5d.2xlarge",
		"ml.c5d.4xlarge",
		"ml.c5d.9xlarge",
		"ml.c5d.18xlarge",
		"ml.p2.xlarge",
		"ml.p2.8xlarge",
		"ml.p2.16xlarge",
		"ml.p3.2xlarge",
		"ml.p3.8xlarge",
		"ml.p3.16xlarge",
		"ml.p3dn.24xlarge",
		"ml.g4dn.xlarge",
		"ml.g4dn.2xlarge",
		"ml.g4dn.4xlarge",
		"ml.g4dn.8xlarge",
		"ml.g4dn.12xlarge",
		"ml.g4dn.16xlarge",
		"ml.r5.large",
		"ml.r5.xlarge",
		"ml.r5.2xlarge",
		"ml.r5.4xlarge",
		"ml.r5.8xlarge",
		"ml.r5.12xlarge",
		"ml.r5.16xlarge",
		"ml.r5.24xlarge",
	}
}

type JoinSource string

// Enum values for JoinSource
const (
	JoinSourceInput JoinSource = "Input"
	JoinSourceNone  JoinSource = "None"
)

// Values returns all known values for JoinSource. Note that this can be expanded
// in the future, and so it is only as up to date as the client. The ordering of
// this slice is not guaranteed to be stable across updates.
func (JoinSource) Values() []JoinSource {
	return []JoinSource{
		"Input",
		"None",
	}
}

type LabelingJobStatus string

// Enum values for LabelingJobStatus
const (
	LabelingJobStatusInitializing LabelingJobStatus = "Initializing"
	LabelingJobStatusInProgress   LabelingJobStatus = "InProgress"
	LabelingJobStatusCompleted    LabelingJobStatus = "Completed"
	LabelingJobStatusFailed       LabelingJobStatus = "Failed"
	LabelingJobStatusStopping     LabelingJobStatus = "Stopping"
	LabelingJobStatusStopped      LabelingJobStatus = "Stopped"
)

// Values returns all known values for LabelingJobStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (LabelingJobStatus) Values() []LabelingJobStatus {
	return []LabelingJobStatus{
		"Initializing",
		"InProgress",
		"Completed",
		"Failed",
		"Stopping",
		"Stopped",
	}
}

type ListCompilationJobsSortBy string

// Enum values for ListCompilationJobsSortBy
const (
	ListCompilationJobsSortByName         ListCompilationJobsSortBy = "Name"
	ListCompilationJobsSortByCreationTime ListCompilationJobsSortBy = "CreationTime"
	ListCompilationJobsSortByStatus       ListCompilationJobsSortBy = "Status"
)

// Values returns all known values for ListCompilationJobsSortBy. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
// The ordering of this slice is not guaranteed to be stable across updates.
func (ListCompilationJobsSortBy) Values() []ListCompilationJobsSortBy {
	return []ListCompilationJobsSortBy{
		"Name",
		"CreationTime",
		"Status",
	}
}

type ListDeviceFleetsSortBy string

// Enum values for ListDeviceFleetsSortBy
const (
	ListDeviceFleetsSortByName             ListDeviceFleetsSortBy = "NAME"
	ListDeviceFleetsSortByCreationTime     ListDeviceFleetsSortBy = "CREATION_TIME"
	ListDeviceFleetsSortByLastModifiedTime ListDeviceFleetsSortBy = "LAST_MODIFIED_TIME"
)

// Values returns all known values for ListDeviceFleetsSortBy. Note that this can
// be expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (ListDeviceFleetsSortBy) Values() []ListDeviceFleetsSortBy {
	return []ListDeviceFleetsSortBy{
		"NAME",
		"CREATION_TIME",
		"LAST_MODIFIED_TIME",
	}
}

type ListEdgePackagingJobsSortBy string

// Enum values for ListEdgePackagingJobsSortBy
const (
	ListEdgePackagingJobsSortByName                   ListEdgePackagingJobsSortBy = "NAME"
	ListEdgePackagingJobsSortByModelName              ListEdgePackagingJobsSortBy = "MODEL_NAME"
	ListEdgePackagingJobsSortByCreationTime           ListEdgePackagingJobsSortBy = "CREATION_TIME"
	ListEdgePackagingJobsSortByLastModifiedTime       ListEdgePackagingJobsSortBy = "LAST_MODIFIED_TIME"
	ListEdgePackagingJobsSortByEdgePackagingJobStatus ListEdgePackagingJobsSortBy = "STATUS"
)

// Values returns all known values for ListEdgePackagingJobsSortBy. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
// The ordering of this slice is not guaranteed to be stable across updates.
func (ListEdgePackagingJobsSortBy) Values() []ListEdgePackagingJobsSortBy {
	return []ListEdgePackagingJobsSortBy{
		"NAME",
		"MODEL_NAME",
		"CREATION_TIME",
		"LAST_MODIFIED_TIME",
		"STATUS",
	}
}

type ListLabelingJobsForWorkteamSortByOptions string

// Enum values for ListLabelingJobsForWorkteamSortByOptions
const (
	ListLabelingJobsForWorkteamSortByOptionsCreationTime ListLabelingJobsForWorkteamSortByOptions = "CreationTime"
)

// Values returns all known values for ListLabelingJobsForWorkteamSortByOptions.
// Note that this can be expanded in the future, and so it is only as up to date as
// the client. The ordering of this slice is not guaranteed to be stable across
// updates.
func (ListLabelingJobsForWorkteamSortByOptions) Values() []ListLabelingJobsForWorkteamSortByOptions {
	return []ListLabelingJobsForWorkteamSortByOptions{
		"CreationTime",
	}
}

type ListWorkforcesSortByOptions string

// Enum values for ListWorkforcesSortByOptions
const (
	ListWorkforcesSortByOptionsName       ListWorkforcesSortByOptions = "Name"
	ListWorkforcesSortByOptionsCreateDate ListWorkforcesSortByOptions = "CreateDate"
)

// Values returns all known values for ListWorkforcesSortByOptions. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
// The ordering of this slice is not guaranteed to be stable across updates.
func (ListWorkforcesSortByOptions) Values() []ListWorkforcesSortByOptions {
	return []ListWorkforcesSortByOptions{
		"Name",
		"CreateDate",
	}
}

type ListWorkteamsSortByOptions string

// Enum values for ListWorkteamsSortByOptions
const (
	ListWorkteamsSortByOptionsName       ListWorkteamsSortByOptions = "Name"
	ListWorkteamsSortByOptionsCreateDate ListWorkteamsSortByOptions = "CreateDate"
)

// Values returns all known values for ListWorkteamsSortByOptions. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
// The ordering of this slice is not guaranteed to be stable across updates.
func (ListWorkteamsSortByOptions) Values() []ListWorkteamsSortByOptions {
	return []ListWorkteamsSortByOptions{
		"Name",
		"CreateDate",
	}
}

type MetricSetSource string

// Enum values for MetricSetSource
const (
	MetricSetSourceTrain      MetricSetSource = "Train"
	MetricSetSourceValidation MetricSetSource = "Validation"
	MetricSetSourceTest       MetricSetSource = "Test"
)

// Values returns all known values for MetricSetSource. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (MetricSetSource) Values() []MetricSetSource {
	return []MetricSetSource{
		"Train",
		"Validation",
		"Test",
	}
}

type ModelApprovalStatus string

// Enum values for ModelApprovalStatus
const (
	ModelApprovalStatusApproved              ModelApprovalStatus = "Approved"
	ModelApprovalStatusRejected              ModelApprovalStatus = "Rejected"
	ModelApprovalStatusPendingManualApproval ModelApprovalStatus = "PendingManualApproval"
)

// Values returns all known values for ModelApprovalStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (ModelApprovalStatus) Values() []ModelApprovalStatus {
	return []ModelApprovalStatus{
		"Approved",
		"Rejected",
		"PendingManualApproval",
	}
}

type ModelCacheSetting string

// Enum values for ModelCacheSetting
const (
	ModelCacheSettingEnabled  ModelCacheSetting = "Enabled"
	ModelCacheSettingDisabled ModelCacheSetting = "Disabled"
)

// Values returns all known values for ModelCacheSetting. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (ModelCacheSetting) Values() []ModelCacheSetting {
	return []ModelCacheSetting{
		"Enabled",
		"Disabled",
	}
}

type ModelPackageGroupSortBy string

// Enum values for ModelPackageGroupSortBy
const (
	ModelPackageGroupSortByName         ModelPackageGroupSortBy = "Name"
	ModelPackageGroupSortByCreationTime ModelPackageGroupSortBy = "CreationTime"
)

// Values returns all known values for ModelPackageGroupSortBy. Note that this can
// be expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (ModelPackageGroupSortBy) Values() []ModelPackageGroupSortBy {
	return []ModelPackageGroupSortBy{
		"Name",
		"CreationTime",
	}
}

type ModelPackageGroupStatus string

// Enum values for ModelPackageGroupStatus
const (
	ModelPackageGroupStatusPending      ModelPackageGroupStatus = "Pending"
	ModelPackageGroupStatusInProgress   ModelPackageGroupStatus = "InProgress"
	ModelPackageGroupStatusCompleted    ModelPackageGroupStatus = "Completed"
	ModelPackageGroupStatusFailed       ModelPackageGroupStatus = "Failed"
	ModelPackageGroupStatusDeleting     ModelPackageGroupStatus = "Deleting"
	ModelPackageGroupStatusDeleteFailed ModelPackageGroupStatus = "DeleteFailed"
)

// Values returns all known values for ModelPackageGroupStatus. Note that this can
// be expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (ModelPackageGroupStatus) Values() []ModelPackageGroupStatus {
	return []ModelPackageGroupStatus{
		"Pending",
		"InProgress",
		"Completed",
		"Failed",
		"Deleting",
		"DeleteFailed",
	}
}

type ModelPackageSortBy string

// Enum values for ModelPackageSortBy
const (
	ModelPackageSortByName         ModelPackageSortBy = "Name"
	ModelPackageSortByCreationTime ModelPackageSortBy = "CreationTime"
)

// Values returns all known values for ModelPackageSortBy. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (ModelPackageSortBy) Values() []ModelPackageSortBy {
	return []ModelPackageSortBy{
		"Name",
		"CreationTime",
	}
}

type ModelPackageStatus string

// Enum values for ModelPackageStatus
const (
	ModelPackageStatusPending    ModelPackageStatus = "Pending"
	ModelPackageStatusInProgress ModelPackageStatus = "InProgress"
	ModelPackageStatusCompleted  ModelPackageStatus = "Completed"
	ModelPackageStatusFailed     ModelPackageStatus = "Failed"
	ModelPackageStatusDeleting   ModelPackageStatus = "Deleting"
)

// Values returns all known values for ModelPackageStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (ModelPackageStatus) Values() []ModelPackageStatus {
	return []ModelPackageStatus{
		"Pending",
		"InProgress",
		"Completed",
		"Failed",
		"Deleting",
	}
}

type ModelPackageType string

// Enum values for ModelPackageType
const (
	ModelPackageTypeVersioned   ModelPackageType = "Versioned"
	ModelPackageTypeUnversioned ModelPackageType = "Unversioned"
	ModelPackageTypeBoth        ModelPackageType = "Both"
)

// Values returns all known values for ModelPackageType. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (ModelPackageType) Values() []ModelPackageType {
	return []ModelPackageType{
		"Versioned",
		"Unversioned",
		"Both",
	}
}

type ModelSortKey string

// Enum values for ModelSortKey
const (
	ModelSortKeyName         ModelSortKey = "Name"
	ModelSortKeyCreationTime ModelSortKey = "CreationTime"
)

// Values returns all known values for ModelSortKey. Note that this can be expanded
// in the future, and so it is only as up to date as the client. The ordering of
// this slice is not guaranteed to be stable across updates.
func (ModelSortKey) Values() []ModelSortKey {
	return []ModelSortKey{
		"Name",
		"CreationTime",
	}
}

type MonitoringExecutionSortKey string

// Enum values for MonitoringExecutionSortKey
const (
	MonitoringExecutionSortKeyCreationTime  MonitoringExecutionSortKey = "CreationTime"
	MonitoringExecutionSortKeyScheduledTime MonitoringExecutionSortKey = "ScheduledTime"
	MonitoringExecutionSortKeyStatus        MonitoringExecutionSortKey = "Status"
)

// Values returns all known values for MonitoringExecutionSortKey. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
// The ordering of this slice is not guaranteed to be stable across updates.
func (MonitoringExecutionSortKey) Values() []MonitoringExecutionSortKey {
	return []MonitoringExecutionSortKey{
		"CreationTime",
		"ScheduledTime",
		"Status",
	}
}

type MonitoringJobDefinitionSortKey string

// Enum values for MonitoringJobDefinitionSortKey
const (
	MonitoringJobDefinitionSortKeyName         MonitoringJobDefinitionSortKey = "Name"
	MonitoringJobDefinitionSortKeyCreationTime MonitoringJobDefinitionSortKey = "CreationTime"
)

// Values returns all known values for MonitoringJobDefinitionSortKey. Note that
// this can be expanded in the future, and so it is only as up to date as the
// client. The ordering of this slice is not guaranteed to be stable across
// updates.
func (MonitoringJobDefinitionSortKey) Values() []MonitoringJobDefinitionSortKey {
	return []MonitoringJobDefinitionSortKey{
		"Name",
		"CreationTime",
	}
}

type MonitoringProblemType string

// Enum values for MonitoringProblemType
const (
	MonitoringProblemTypeBinaryClassification     MonitoringProblemType = "BinaryClassification"
	MonitoringProblemTypeMulticlassClassification MonitoringProblemType = "MulticlassClassification"
	MonitoringProblemTypeRegression               MonitoringProblemType = "Regression"
)

// Values returns all known values for MonitoringProblemType. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (MonitoringProblemType) Values() []MonitoringProblemType {
	return []MonitoringProblemType{
		"BinaryClassification",
		"MulticlassClassification",
		"Regression",
	}
}

type MonitoringScheduleSortKey string

// Enum values for MonitoringScheduleSortKey
const (
	MonitoringScheduleSortKeyName         MonitoringScheduleSortKey = "Name"
	MonitoringScheduleSortKeyCreationTime MonitoringScheduleSortKey = "CreationTime"
	MonitoringScheduleSortKeyStatus       MonitoringScheduleSortKey = "Status"
)

// Values returns all known values for MonitoringScheduleSortKey. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
// The ordering of this slice is not guaranteed to be stable across updates.
func (MonitoringScheduleSortKey) Values() []MonitoringScheduleSortKey {
	return []MonitoringScheduleSortKey{
		"Name",
		"CreationTime",
		"Status",
	}
}

type MonitoringType string

// Enum values for MonitoringType
const (
	MonitoringTypeDataQuality         MonitoringType = "DataQuality"
	MonitoringTypeModelQuality        MonitoringType = "ModelQuality"
	MonitoringTypeModelBias           MonitoringType = "ModelBias"
	MonitoringTypeModelExplainability MonitoringType = "ModelExplainability"
)

// Values returns all known values for MonitoringType. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (MonitoringType) Values() []MonitoringType {
	return []MonitoringType{
		"DataQuality",
		"ModelQuality",
		"ModelBias",
		"ModelExplainability",
	}
}

type NotebookInstanceAcceleratorType string

// Enum values for NotebookInstanceAcceleratorType
const (
	NotebookInstanceAcceleratorTypeMlEia1Medium NotebookInstanceAcceleratorType = "ml.eia1.medium"
	NotebookInstanceAcceleratorTypeMlEia1Large  NotebookInstanceAcceleratorType = "ml.eia1.large"
	NotebookInstanceAcceleratorTypeMlEia1Xlarge NotebookInstanceAcceleratorType = "ml.eia1.xlarge"
	NotebookInstanceAcceleratorTypeMlEia2Medium NotebookInstanceAcceleratorType = "ml.eia2.medium"
	NotebookInstanceAcceleratorTypeMlEia2Large  NotebookInstanceAcceleratorType = "ml.eia2.large"
	NotebookInstanceAcceleratorTypeMlEia2Xlarge NotebookInstanceAcceleratorType = "ml.eia2.xlarge"
)

// Values returns all known values for NotebookInstanceAcceleratorType. Note that
// this can be expanded in the future, and so it is only as up to date as the
// client. The ordering of this slice is not guaranteed to be stable across
// updates.
func (NotebookInstanceAcceleratorType) Values() []NotebookInstanceAcceleratorType {
	return []NotebookInstanceAcceleratorType{
		"ml.eia1.medium",
		"ml.eia1.large",
		"ml.eia1.xlarge",
		"ml.eia2.medium",
		"ml.eia2.large",
		"ml.eia2.xlarge",
	}
}

type NotebookInstanceLifecycleConfigSortKey string

// Enum values for NotebookInstanceLifecycleConfigSortKey
const (
	NotebookInstanceLifecycleConfigSortKeyName             NotebookInstanceLifecycleConfigSortKey = "Name"
	NotebookInstanceLifecycleConfigSortKeyCreationTime     NotebookInstanceLifecycleConfigSortKey = "CreationTime"
	NotebookInstanceLifecycleConfigSortKeyLastModifiedTime NotebookInstanceLifecycleConfigSortKey = "LastModifiedTime"
)

// Values returns all known values for NotebookInstanceLifecycleConfigSortKey. Note
// that this can be expanded in the future, and so it is only as up to date as the
// client. The ordering of this slice is not guaranteed to be stable across
// updates.
func (NotebookInstanceLifecycleConfigSortKey) Values() []NotebookInstanceLifecycleConfigSortKey {
	return []NotebookInstanceLifecycleConfigSortKey{
		"Name",
		"CreationTime",
		"LastModifiedTime",
	}
}

type NotebookInstanceLifecycleConfigSortOrder string

// Enum values for NotebookInstanceLifecycleConfigSortOrder
const (
	NotebookInstanceLifecycleConfigSortOrderAscending  NotebookInstanceLifecycleConfigSortOrder = "Ascending"
	NotebookInstanceLifecycleConfigSortOrderDescending NotebookInstanceLifecycleConfigSortOrder = "Descending"
)

// Values returns all known values for NotebookInstanceLifecycleConfigSortOrder.
// Note that this can be expanded in the future, and so it is only as up to date as
// the client. The ordering of this slice is not guaranteed to be stable across
// updates.
func (NotebookInstanceLifecycleConfigSortOrder) Values() []NotebookInstanceLifecycleConfigSortOrder {
	return []NotebookInstanceLifecycleConfigSortOrder{
		"Ascending",
		"Descending",
	}
}

type NotebookInstanceSortKey string

// Enum values for NotebookInstanceSortKey
const (
	NotebookInstanceSortKeyName         NotebookInstanceSortKey = "Name"
	NotebookInstanceSortKeyCreationTime NotebookInstanceSortKey = "CreationTime"
	NotebookInstanceSortKeyStatus       NotebookInstanceSortKey = "Status"
)

// Values returns all known values for NotebookInstanceSortKey. Note that this can
// be expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (NotebookInstanceSortKey) Values() []NotebookInstanceSortKey {
	return []NotebookInstanceSortKey{
		"Name",
		"CreationTime",
		"Status",
	}
}

type NotebookInstanceSortOrder string

// Enum values for NotebookInstanceSortOrder
const (
	NotebookInstanceSortOrderAscending  NotebookInstanceSortOrder = "Ascending"
	NotebookInstanceSortOrderDescending NotebookInstanceSortOrder = "Descending"
)

// Values returns all known values for NotebookInstanceSortOrder. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
// The ordering of this slice is not guaranteed to be stable across updates.
func (NotebookInstanceSortOrder) Values() []NotebookInstanceSortOrder {
	return []NotebookInstanceSortOrder{
		"Ascending",
		"Descending",
	}
}

type NotebookInstanceStatus string

// Enum values for NotebookInstanceStatus
const (
	NotebookInstanceStatusPending   NotebookInstanceStatus = "Pending"
	NotebookInstanceStatusInService NotebookInstanceStatus = "InService"
	NotebookInstanceStatusStopping  NotebookInstanceStatus = "Stopping"
	NotebookInstanceStatusStopped   NotebookInstanceStatus = "Stopped"
	NotebookInstanceStatusFailed    NotebookInstanceStatus = "Failed"
	NotebookInstanceStatusDeleting  NotebookInstanceStatus = "Deleting"
	NotebookInstanceStatusUpdating  NotebookInstanceStatus = "Updating"
)

// Values returns all known values for NotebookInstanceStatus. Note that this can
// be expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (NotebookInstanceStatus) Values() []NotebookInstanceStatus {
	return []NotebookInstanceStatus{
		"Pending",
		"InService",
		"Stopping",
		"Stopped",
		"Failed",
		"Deleting",
		"Updating",
	}
}

type NotebookOutputOption string

// Enum values for NotebookOutputOption
const (
	NotebookOutputOptionAllowed  NotebookOutputOption = "Allowed"
	NotebookOutputOptionDisabled NotebookOutputOption = "Disabled"
)

// Values returns all known values for NotebookOutputOption. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (NotebookOutputOption) Values() []NotebookOutputOption {
	return []NotebookOutputOption{
		"Allowed",
		"Disabled",
	}
}

type ObjectiveStatus string

// Enum values for ObjectiveStatus
const (
	ObjectiveStatusSucceeded ObjectiveStatus = "Succeeded"
	ObjectiveStatusPending   ObjectiveStatus = "Pending"
	ObjectiveStatusFailed    ObjectiveStatus = "Failed"
)

// Values returns all known values for ObjectiveStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (ObjectiveStatus) Values() []ObjectiveStatus {
	return []ObjectiveStatus{
		"Succeeded",
		"Pending",
		"Failed",
	}
}

type OfflineStoreStatusValue string

// Enum values for OfflineStoreStatusValue
const (
	OfflineStoreStatusValueActive   OfflineStoreStatusValue = "Active"
	OfflineStoreStatusValueBlocked  OfflineStoreStatusValue = "Blocked"
	OfflineStoreStatusValueDisabled OfflineStoreStatusValue = "Disabled"
)

// Values returns all known values for OfflineStoreStatusValue. Note that this can
// be expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (OfflineStoreStatusValue) Values() []OfflineStoreStatusValue {
	return []OfflineStoreStatusValue{
		"Active",
		"Blocked",
		"Disabled",
	}
}

type Operator string

// Enum values for Operator
const (
	OperatorEquals               Operator = "Equals"
	OperatorNotEquals            Operator = "NotEquals"
	OperatorGreaterThan          Operator = "GreaterThan"
	OperatorGreaterThanOrEqualTo Operator = "GreaterThanOrEqualTo"
	OperatorLessThan             Operator = "LessThan"
	OperatorLessThanOrEqualTo    Operator = "LessThanOrEqualTo"
	OperatorContains             Operator = "Contains"
	OperatorExists               Operator = "Exists"
	OperatorNotExists            Operator = "NotExists"
	OperatorIn                   Operator = "In"
)

// Values returns all known values for Operator. Note that this can be expanded in
// the future, and so it is only as up to date as the client. The ordering of this
// slice is not guaranteed to be stable across updates.
func (Operator) Values() []Operator {
	return []Operator{
		"Equals",
		"NotEquals",
		"GreaterThan",
		"GreaterThanOrEqualTo",
		"LessThan",
		"LessThanOrEqualTo",
		"Contains",
		"Exists",
		"NotExists",
		"In",
	}
}

type OrderKey string

// Enum values for OrderKey
const (
	OrderKeyAscending  OrderKey = "Ascending"
	OrderKeyDescending OrderKey = "Descending"
)

// Values returns all known values for OrderKey. Note that this can be expanded in
// the future, and so it is only as up to date as the client. The ordering of this
// slice is not guaranteed to be stable across updates.
func (OrderKey) Values() []OrderKey {
	return []OrderKey{
		"Ascending",
		"Descending",
	}
}

type ParameterType string

// Enum values for ParameterType
const (
	ParameterTypeInteger     ParameterType = "Integer"
	ParameterTypeContinuous  ParameterType = "Continuous"
	ParameterTypeCategorical ParameterType = "Categorical"
	ParameterTypeFreeText    ParameterType = "FreeText"
)

// Values returns all known values for ParameterType. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (ParameterType) Values() []ParameterType {
	return []ParameterType{
		"Integer",
		"Continuous",
		"Categorical",
		"FreeText",
	}
}

type PipelineExecutionStatus string

// Enum values for PipelineExecutionStatus
const (
	PipelineExecutionStatusExecuting PipelineExecutionStatus = "Executing"
	PipelineExecutionStatusStopping  PipelineExecutionStatus = "Stopping"
	PipelineExecutionStatusStopped   PipelineExecutionStatus = "Stopped"
	PipelineExecutionStatusFailed    PipelineExecutionStatus = "Failed"
	PipelineExecutionStatusSucceeded PipelineExecutionStatus = "Succeeded"
)

// Values returns all known values for PipelineExecutionStatus. Note that this can
// be expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (PipelineExecutionStatus) Values() []PipelineExecutionStatus {
	return []PipelineExecutionStatus{
		"Executing",
		"Stopping",
		"Stopped",
		"Failed",
		"Succeeded",
	}
}

type PipelineStatus string

// Enum values for PipelineStatus
const (
	PipelineStatusActive PipelineStatus = "Active"
)

// Values returns all known values for PipelineStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (PipelineStatus) Values() []PipelineStatus {
	return []PipelineStatus{
		"Active",
	}
}

type ProblemType string

// Enum values for ProblemType
const (
	ProblemTypeBinaryClassification     ProblemType = "BinaryClassification"
	ProblemTypeMulticlassClassification ProblemType = "MulticlassClassification"
	ProblemTypeRegression               ProblemType = "Regression"
)

// Values returns all known values for ProblemType. Note that this can be expanded
// in the future, and so it is only as up to date as the client. The ordering of
// this slice is not guaranteed to be stable across updates.
func (ProblemType) Values() []ProblemType {
	return []ProblemType{
		"BinaryClassification",
		"MulticlassClassification",
		"Regression",
	}
}

type ProcessingInstanceType string

// Enum values for ProcessingInstanceType
const (
	ProcessingInstanceTypeMlT3Medium     ProcessingInstanceType = "ml.t3.medium"
	ProcessingInstanceTypeMlT3Large      ProcessingInstanceType = "ml.t3.large"
	ProcessingInstanceTypeMlT3Xlarge     ProcessingInstanceType = "ml.t3.xlarge"
	ProcessingInstanceTypeMlT32xlarge    ProcessingInstanceType = "ml.t3.2xlarge"
	ProcessingInstanceTypeMlM4Xlarge     ProcessingInstanceType = "ml.m4.xlarge"
	ProcessingInstanceTypeMlM42xlarge    ProcessingInstanceType = "ml.m4.2xlarge"
	ProcessingInstanceTypeMlM44xlarge    ProcessingInstanceType = "ml.m4.4xlarge"
	ProcessingInstanceTypeMlM410xlarge   ProcessingInstanceType = "ml.m4.10xlarge"
	ProcessingInstanceTypeMlM416xlarge   ProcessingInstanceType = "ml.m4.16xlarge"
	ProcessingInstanceTypeMlC4Xlarge     ProcessingInstanceType = "ml.c4.xlarge"
	ProcessingInstanceTypeMlC42xlarge    ProcessingInstanceType = "ml.c4.2xlarge"
	ProcessingInstanceTypeMlC44xlarge    ProcessingInstanceType = "ml.c4.4xlarge"
	ProcessingInstanceTypeMlC48xlarge    ProcessingInstanceType = "ml.c4.8xlarge"
	ProcessingInstanceTypeMlP2Xlarge     ProcessingInstanceType = "ml.p2.xlarge"
	ProcessingInstanceTypeMlP28xlarge    ProcessingInstanceType = "ml.p2.8xlarge"
	ProcessingInstanceTypeMlP216xlarge   ProcessingInstanceType = "ml.p2.16xlarge"
	ProcessingInstanceTypeMlP32xlarge    ProcessingInstanceType = "ml.p3.2xlarge"
	ProcessingInstanceTypeMlP38xlarge    ProcessingInstanceType = "ml.p3.8xlarge"
	ProcessingInstanceTypeMlP316xlarge   ProcessingInstanceType = "ml.p3.16xlarge"
	ProcessingInstanceTypeMlC5Xlarge     ProcessingInstanceType = "ml.c5.xlarge"
	ProcessingInstanceTypeMlC52xlarge    ProcessingInstanceType = "ml.c5.2xlarge"
	ProcessingInstanceTypeMlC54xlarge    ProcessingInstanceType = "ml.c5.4xlarge"
	ProcessingInstanceTypeMlC59xlarge    ProcessingInstanceType = "ml.c5.9xlarge"
	ProcessingInstanceTypeMlC518xlarge   ProcessingInstanceType = "ml.c5.18xlarge"
	ProcessingInstanceTypeMlM5Large      ProcessingInstanceType = "ml.m5.large"
	ProcessingInstanceTypeMlM5Xlarge     ProcessingInstanceType = "ml.m5.xlarge"
	ProcessingInstanceTypeMlM52xlarge    ProcessingInstanceType = "ml.m5.2xlarge"
	ProcessingInstanceTypeMlM54xlarge    ProcessingInstanceType = "ml.m5.4xlarge"
	ProcessingInstanceTypeMlM512xlarge   ProcessingInstanceType = "ml.m5.12xlarge"
	ProcessingInstanceTypeMlM524xlarge   ProcessingInstanceType = "ml.m5.24xlarge"
	ProcessingInstanceTypeMlR5Large      ProcessingInstanceType = "ml.r5.large"
	ProcessingInstanceTypeMlR5Xlarge     ProcessingInstanceType = "ml.r5.xlarge"
	ProcessingInstanceTypeMlR52xlarge    ProcessingInstanceType = "ml.r5.2xlarge"
	ProcessingInstanceTypeMlR54xlarge    ProcessingInstanceType = "ml.r5.4xlarge"
	ProcessingInstanceTypeMlR58xlarge    ProcessingInstanceType = "ml.r5.8xlarge"
	ProcessingInstanceTypeMlR512xlarge   ProcessingInstanceType = "ml.r5.12xlarge"
	ProcessingInstanceTypeMlR516xlarge   ProcessingInstanceType = "ml.r5.16xlarge"
	ProcessingInstanceTypeMlR524xlarge   ProcessingInstanceType = "ml.r5.24xlarge"
	ProcessingInstanceTypeMlG4dnXlarge   ProcessingInstanceType = "ml.g4dn.xlarge"
	ProcessingInstanceTypeMlG4dn2xlarge  ProcessingInstanceType = "ml.g4dn.2xlarge"
	ProcessingInstanceTypeMlG4dn4xlarge  ProcessingInstanceType = "ml.g4dn.4xlarge"
	ProcessingInstanceTypeMlG4dn8xlarge  ProcessingInstanceType = "ml.g4dn.8xlarge"
	ProcessingInstanceTypeMlG4dn12xlarge ProcessingInstanceType = "ml.g4dn.12xlarge"
	ProcessingInstanceTypeMlG4dn16xlarge ProcessingInstanceType = "ml.g4dn.16xlarge"
)

// Values returns all known values for ProcessingInstanceType. Note that this can
// be expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (ProcessingInstanceType) Values() []ProcessingInstanceType {
	return []ProcessingInstanceType{
		"ml.t3.medium",
		"ml.t3.large",
		"ml.t3.xlarge",
		"ml.t3.2xlarge",
		"ml.m4.xlarge",
		"ml.m4.2xlarge",
		"ml.m4.4xlarge",
		"ml.m4.10xlarge",
		"ml.m4.16xlarge",
		"ml.c4.xlarge",
		"ml.c4.2xlarge",
		"ml.c4.4xlarge",
		"ml.c4.8xlarge",
		"ml.p2.xlarge",
		"ml.p2.8xlarge",
		"ml.p2.16xlarge",
		"ml.p3.2xlarge",
		"ml.p3.8xlarge",
		"ml.p3.16xlarge",
		"ml.c5.xlarge",
		"ml.c5.2xlarge",
		"ml.c5.4xlarge",
		"ml.c5.9xlarge",
		"ml.c5.18xlarge",
		"ml.m5.large",
		"ml.m5.xlarge",
		"ml.m5.2xlarge",
		"ml.m5.4xlarge",
		"ml.m5.12xlarge",
		"ml.m5.24xlarge",
		"ml.r5.large",
		"ml.r5.xlarge",
		"ml.r5.2xlarge",
		"ml.r5.4xlarge",
		"ml.r5.8xlarge",
		"ml.r5.12xlarge",
		"ml.r5.16xlarge",
		"ml.r5.24xlarge",
		"ml.g4dn.xlarge",
		"ml.g4dn.2xlarge",
		"ml.g4dn.4xlarge",
		"ml.g4dn.8xlarge",
		"ml.g4dn.12xlarge",
		"ml.g4dn.16xlarge",
	}
}

type ProcessingJobStatus string

// Enum values for ProcessingJobStatus
const (
	ProcessingJobStatusInProgress ProcessingJobStatus = "InProgress"
	ProcessingJobStatusCompleted  ProcessingJobStatus = "Completed"
	ProcessingJobStatusFailed     ProcessingJobStatus = "Failed"
	ProcessingJobStatusStopping   ProcessingJobStatus = "Stopping"
	ProcessingJobStatusStopped    ProcessingJobStatus = "Stopped"
)

// Values returns all known values for ProcessingJobStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (ProcessingJobStatus) Values() []ProcessingJobStatus {
	return []ProcessingJobStatus{
		"InProgress",
		"Completed",
		"Failed",
		"Stopping",
		"Stopped",
	}
}

type ProcessingS3CompressionType string

// Enum values for ProcessingS3CompressionType
const (
	ProcessingS3CompressionTypeNone ProcessingS3CompressionType = "None"
	ProcessingS3CompressionTypeGzip ProcessingS3CompressionType = "Gzip"
)

// Values returns all known values for ProcessingS3CompressionType. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
// The ordering of this slice is not guaranteed to be stable across updates.
func (ProcessingS3CompressionType) Values() []ProcessingS3CompressionType {
	return []ProcessingS3CompressionType{
		"None",
		"Gzip",
	}
}

type ProcessingS3DataDistributionType string

// Enum values for ProcessingS3DataDistributionType
const (
	ProcessingS3DataDistributionTypeFullyreplicated ProcessingS3DataDistributionType = "FullyReplicated"
	ProcessingS3DataDistributionTypeShardedbys3key  ProcessingS3DataDistributionType = "ShardedByS3Key"
)

// Values returns all known values for ProcessingS3DataDistributionType. Note that
// this can be expanded in the future, and so it is only as up to date as the
// client. The ordering of this slice is not guaranteed to be stable across
// updates.
func (ProcessingS3DataDistributionType) Values() []ProcessingS3DataDistributionType {
	return []ProcessingS3DataDistributionType{
		"FullyReplicated",
		"ShardedByS3Key",
	}
}

type ProcessingS3DataType string

// Enum values for ProcessingS3DataType
const (
	ProcessingS3DataTypeManifestFile ProcessingS3DataType = "ManifestFile"
	ProcessingS3DataTypeS3Prefix     ProcessingS3DataType = "S3Prefix"
)

// Values returns all known values for ProcessingS3DataType. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (ProcessingS3DataType) Values() []ProcessingS3DataType {
	return []ProcessingS3DataType{
		"ManifestFile",
		"S3Prefix",
	}
}

type ProcessingS3InputMode string

// Enum values for ProcessingS3InputMode
const (
	ProcessingS3InputModePipe ProcessingS3InputMode = "Pipe"
	ProcessingS3InputModeFile ProcessingS3InputMode = "File"
)

// Values returns all known values for ProcessingS3InputMode. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (ProcessingS3InputMode) Values() []ProcessingS3InputMode {
	return []ProcessingS3InputMode{
		"Pipe",
		"File",
	}
}

type ProcessingS3UploadMode string

// Enum values for ProcessingS3UploadMode
const (
	ProcessingS3UploadModeContinuous ProcessingS3UploadMode = "Continuous"
	ProcessingS3UploadModeEndOfJob   ProcessingS3UploadMode = "EndOfJob"
)

// Values returns all known values for ProcessingS3UploadMode. Note that this can
// be expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (ProcessingS3UploadMode) Values() []ProcessingS3UploadMode {
	return []ProcessingS3UploadMode{
		"Continuous",
		"EndOfJob",
	}
}

type ProductionVariantAcceleratorType string

// Enum values for ProductionVariantAcceleratorType
const (
	ProductionVariantAcceleratorTypeMlEia1Medium ProductionVariantAcceleratorType = "ml.eia1.medium"
	ProductionVariantAcceleratorTypeMlEia1Large  ProductionVariantAcceleratorType = "ml.eia1.large"
	ProductionVariantAcceleratorTypeMlEia1Xlarge ProductionVariantAcceleratorType = "ml.eia1.xlarge"
	ProductionVariantAcceleratorTypeMlEia2Medium ProductionVariantAcceleratorType = "ml.eia2.medium"
	ProductionVariantAcceleratorTypeMlEia2Large  ProductionVariantAcceleratorType = "ml.eia2.large"
	ProductionVariantAcceleratorTypeMlEia2Xlarge ProductionVariantAcceleratorType = "ml.eia2.xlarge"
)

// Values returns all known values for ProductionVariantAcceleratorType. Note that
// this can be expanded in the future, and so it is only as up to date as the
// client. The ordering of this slice is not guaranteed to be stable across
// updates.
func (ProductionVariantAcceleratorType) Values() []ProductionVariantAcceleratorType {
	return []ProductionVariantAcceleratorType{
		"ml.eia1.medium",
		"ml.eia1.large",
		"ml.eia1.xlarge",
		"ml.eia2.medium",
		"ml.eia2.large",
		"ml.eia2.xlarge",
	}
}

type ProductionVariantInstanceType string

// Enum values for ProductionVariantInstanceType
const (
	ProductionVariantInstanceTypeMlT2Medium     ProductionVariantInstanceType = "ml.t2.medium"
	ProductionVariantInstanceTypeMlT2Large      ProductionVariantInstanceType = "ml.t2.large"
	ProductionVariantInstanceTypeMlT2Xlarge     ProductionVariantInstanceType = "ml.t2.xlarge"
	ProductionVariantInstanceTypeMlT22xlarge    ProductionVariantInstanceType = "ml.t2.2xlarge"
	ProductionVariantInstanceTypeMlM4Xlarge     ProductionVariantInstanceType = "ml.m4.xlarge"
	ProductionVariantInstanceTypeMlM42xlarge    ProductionVariantInstanceType = "ml.m4.2xlarge"
	ProductionVariantInstanceTypeMlM44xlarge    ProductionVariantInstanceType = "ml.m4.4xlarge"
	ProductionVariantInstanceTypeMlM410xlarge   ProductionVariantInstanceType = "ml.m4.10xlarge"
	ProductionVariantInstanceTypeMlM416xlarge   ProductionVariantInstanceType = "ml.m4.16xlarge"
	ProductionVariantInstanceTypeMlM5Large      ProductionVariantInstanceType = "ml.m5.large"
	ProductionVariantInstanceTypeMlM5Xlarge     ProductionVariantInstanceType = "ml.m5.xlarge"
	ProductionVariantInstanceTypeMlM52xlarge    ProductionVariantInstanceType = "ml.m5.2xlarge"
	ProductionVariantInstanceTypeMlM54xlarge    ProductionVariantInstanceType = "ml.m5.4xlarge"
	ProductionVariantInstanceTypeMlM512xlarge   ProductionVariantInstanceType = "ml.m5.12xlarge"
	ProductionVariantInstanceTypeMlM524xlarge   ProductionVariantInstanceType = "ml.m5.24xlarge"
	ProductionVariantInstanceTypeMlM5dLarge     ProductionVariantInstanceType = "ml.m5d.large"
	ProductionVariantInstanceTypeMlM5dXlarge    ProductionVariantInstanceType = "ml.m5d.xlarge"
	ProductionVariantInstanceTypeMlM5d2xlarge   ProductionVariantInstanceType = "ml.m5d.2xlarge"
	ProductionVariantInstanceTypeMlM5d4xlarge   ProductionVariantInstanceType = "ml.m5d.4xlarge"
	ProductionVariantInstanceTypeMlM5d12xlarge  ProductionVariantInstanceType = "ml.m5d.12xlarge"
	ProductionVariantInstanceTypeMlM5d24xlarge  ProductionVariantInstanceType = "ml.m5d.24xlarge"
	ProductionVariantInstanceTypeMlC4Large      ProductionVariantInstanceType = "ml.c4.large"
	ProductionVariantInstanceTypeMlC4Xlarge     ProductionVariantInstanceType = "ml.c4.xlarge"
	ProductionVariantInstanceTypeMlC42xlarge    ProductionVariantInstanceType = "ml.c4.2xlarge"
	ProductionVariantInstanceTypeMlC44xlarge    ProductionVariantInstanceType = "ml.c4.4xlarge"
	ProductionVariantInstanceTypeMlC48xlarge    ProductionVariantInstanceType = "ml.c4.8xlarge"
	ProductionVariantInstanceTypeMlP2Xlarge     ProductionVariantInstanceType = "ml.p2.xlarge"
	ProductionVariantInstanceTypeMlP28xlarge    ProductionVariantInstanceType = "ml.p2.8xlarge"
	ProductionVariantInstanceTypeMlP216xlarge   ProductionVariantInstanceType = "ml.p2.16xlarge"
	ProductionVariantInstanceTypeMlP32xlarge    ProductionVariantInstanceType = "ml.p3.2xlarge"
	ProductionVariantInstanceTypeMlP38xlarge    ProductionVariantInstanceType = "ml.p3.8xlarge"
	ProductionVariantInstanceTypeMlP316xlarge   ProductionVariantInstanceType = "ml.p3.16xlarge"
	ProductionVariantInstanceTypeMlC5Large      ProductionVariantInstanceType = "ml.c5.large"
	ProductionVariantInstanceTypeMlC5Xlarge     ProductionVariantInstanceType = "ml.c5.xlarge"
	ProductionVariantInstanceTypeMlC52xlarge    ProductionVariantInstanceType = "ml.c5.2xlarge"
	ProductionVariantInstanceTypeMlC54xlarge    ProductionVariantInstanceType = "ml.c5.4xlarge"
	ProductionVariantInstanceTypeMlC59xlarge    ProductionVariantInstanceType = "ml.c5.9xlarge"
	ProductionVariantInstanceTypeMlC518xlarge   ProductionVariantInstanceType = "ml.c5.18xlarge"
	ProductionVariantInstanceTypeMlC5dLarge     ProductionVariantInstanceType = "ml.c5d.large"
	ProductionVariantInstanceTypeMlC5dXlarge    ProductionVariantInstanceType = "ml.c5d.xlarge"
	ProductionVariantInstanceTypeMlC5d2xlarge   ProductionVariantInstanceType = "ml.c5d.2xlarge"
	ProductionVariantInstanceTypeMlC5d4xlarge   ProductionVariantInstanceType = "ml.c5d.4xlarge"
	ProductionVariantInstanceTypeMlC5d9xlarge   ProductionVariantInstanceType = "ml.c5d.9xlarge"
	ProductionVariantInstanceTypeMlC5d18xlarge  ProductionVariantInstanceType = "ml.c5d.18xlarge"
	ProductionVariantInstanceTypeMlG4dnXlarge   ProductionVariantInstanceType = "ml.g4dn.xlarge"
	ProductionVariantInstanceTypeMlG4dn2xlarge  ProductionVariantInstanceType = "ml.g4dn.2xlarge"
	ProductionVariantInstanceTypeMlG4dn4xlarge  ProductionVariantInstanceType = "ml.g4dn.4xlarge"
	ProductionVariantInstanceTypeMlG4dn8xlarge  ProductionVariantInstanceType = "ml.g4dn.8xlarge"
	ProductionVariantInstanceTypeMlG4dn12xlarge ProductionVariantInstanceType = "ml.g4dn.12xlarge"
	ProductionVariantInstanceTypeMlG4dn16xlarge ProductionVariantInstanceType = "ml.g4dn.16xlarge"
	ProductionVariantInstanceTypeMlR5Large      ProductionVariantInstanceType = "ml.r5.large"
	ProductionVariantInstanceTypeMlR5Xlarge     ProductionVariantInstanceType = "ml.r5.xlarge"
	ProductionVariantInstanceTypeMlR52xlarge    ProductionVariantInstanceType = "ml.r5.2xlarge"
	ProductionVariantInstanceTypeMlR54xlarge    ProductionVariantInstanceType = "ml.r5.4xlarge"
	ProductionVariantInstanceTypeMlR512xlarge   ProductionVariantInstanceType = "ml.r5.12xlarge"
	ProductionVariantInstanceTypeMlR524xlarge   ProductionVariantInstanceType = "ml.r5.24xlarge"
	ProductionVariantInstanceTypeMlR5dLarge     ProductionVariantInstanceType = "ml.r5d.large"
	ProductionVariantInstanceTypeMlR5dXlarge    ProductionVariantInstanceType = "ml.r5d.xlarge"
	ProductionVariantInstanceTypeMlR5d2xlarge   ProductionVariantInstanceType = "ml.r5d.2xlarge"
	ProductionVariantInstanceTypeMlR5d4xlarge   ProductionVariantInstanceType = "ml.r5d.4xlarge"
	ProductionVariantInstanceTypeMlR5d12xlarge  ProductionVariantInstanceType = "ml.r5d.12xlarge"
	ProductionVariantInstanceTypeMlR5d24xlarge  ProductionVariantInstanceType = "ml.r5d.24xlarge"
	ProductionVariantInstanceTypeMlInf1Xlarge   ProductionVariantInstanceType = "ml.inf1.xlarge"
	ProductionVariantInstanceTypeMlInf12xlarge  ProductionVariantInstanceType = "ml.inf1.2xlarge"
	ProductionVariantInstanceTypeMlInf16xlarge  ProductionVariantInstanceType = "ml.inf1.6xlarge"
	ProductionVariantInstanceTypeMlInf124xlarge ProductionVariantInstanceType = "ml.inf1.24xlarge"
)

// Values returns all known values for ProductionVariantInstanceType. Note that
// this can be expanded in the future, and so it is only as up to date as the
// client. The ordering of this slice is not guaranteed to be stable across
// updates.
func (ProductionVariantInstanceType) Values() []ProductionVariantInstanceType {
	return []ProductionVariantInstanceType{
		"ml.t2.medium",
		"ml.t2.large",
		"ml.t2.xlarge",
		"ml.t2.2xlarge",
		"ml.m4.xlarge",
		"ml.m4.2xlarge",
		"ml.m4.4xlarge",
		"ml.m4.10xlarge",
		"ml.m4.16xlarge",
		"ml.m5.large",
		"ml.m5.xlarge",
		"ml.m5.2xlarge",
		"ml.m5.4xlarge",
		"ml.m5.12xlarge",
		"ml.m5.24xlarge",
		"ml.m5d.large",
		"ml.m5d.xlarge",
		"ml.m5d.2xlarge",
		"ml.m5d.4xlarge",
		"ml.m5d.12xlarge",
		"ml.m5d.24xlarge",
		"ml.c4.large",
		"ml.c4.xlarge",
		"ml.c4.2xlarge",
		"ml.c4.4xlarge",
		"ml.c4.8xlarge",
		"ml.p2.xlarge",
		"ml.p2.8xlarge",
		"ml.p2.16xlarge",
		"ml.p3.2xlarge",
		"ml.p3.8xlarge",
		"ml.p3.16xlarge",
		"ml.c5.large",
		"ml.c5.xlarge",
		"ml.c5.2xlarge",
		"ml.c5.4xlarge",
		"ml.c5.9xlarge",
		"ml.c5.18xlarge",
		"ml.c5d.large",
		"ml.c5d.xlarge",
		"ml.c5d.2xlarge",
		"ml.c5d.4xlarge",
		"ml.c5d.9xlarge",
		"ml.c5d.18xlarge",
		"ml.g4dn.xlarge",
		"ml.g4dn.2xlarge",
		"ml.g4dn.4xlarge",
		"ml.g4dn.8xlarge",
		"ml.g4dn.12xlarge",
		"ml.g4dn.16xlarge",
		"ml.r5.large",
		"ml.r5.xlarge",
		"ml.r5.2xlarge",
		"ml.r5.4xlarge",
		"ml.r5.12xlarge",
		"ml.r5.24xlarge",
		"ml.r5d.large",
		"ml.r5d.xlarge",
		"ml.r5d.2xlarge",
		"ml.r5d.4xlarge",
		"ml.r5d.12xlarge",
		"ml.r5d.24xlarge",
		"ml.inf1.xlarge",
		"ml.inf1.2xlarge",
		"ml.inf1.6xlarge",
		"ml.inf1.24xlarge",
	}
}

type ProfilingStatus string

// Enum values for ProfilingStatus
const (
	ProfilingStatusEnabled  ProfilingStatus = "Enabled"
	ProfilingStatusDisabled ProfilingStatus = "Disabled"
)

// Values returns all known values for ProfilingStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (ProfilingStatus) Values() []ProfilingStatus {
	return []ProfilingStatus{
		"Enabled",
		"Disabled",
	}
}

type ProjectSortBy string

// Enum values for ProjectSortBy
const (
	ProjectSortByName         ProjectSortBy = "Name"
	ProjectSortByCreationTime ProjectSortBy = "CreationTime"
)

// Values returns all known values for ProjectSortBy. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (ProjectSortBy) Values() []ProjectSortBy {
	return []ProjectSortBy{
		"Name",
		"CreationTime",
	}
}

type ProjectSortOrder string

// Enum values for ProjectSortOrder
const (
	ProjectSortOrderAscending  ProjectSortOrder = "Ascending"
	ProjectSortOrderDescending ProjectSortOrder = "Descending"
)

// Values returns all known values for ProjectSortOrder. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (ProjectSortOrder) Values() []ProjectSortOrder {
	return []ProjectSortOrder{
		"Ascending",
		"Descending",
	}
}

type ProjectStatus string

// Enum values for ProjectStatus
const (
	ProjectStatusPending          ProjectStatus = "Pending"
	ProjectStatusCreateInProgress ProjectStatus = "CreateInProgress"
	ProjectStatusCreateCompleted  ProjectStatus = "CreateCompleted"
	ProjectStatusCreateFailed     ProjectStatus = "CreateFailed"
	ProjectStatusDeleteInProgress ProjectStatus = "DeleteInProgress"
	ProjectStatusDeleteFailed     ProjectStatus = "DeleteFailed"
	ProjectStatusDeleteCompleted  ProjectStatus = "DeleteCompleted"
	ProjectStatusUpdateInProgress ProjectStatus = "UpdateInProgress"
	ProjectStatusUpdateCompleted  ProjectStatus = "UpdateCompleted"
	ProjectStatusUpdateFailed     ProjectStatus = "UpdateFailed"
)

// Values returns all known values for ProjectStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (ProjectStatus) Values() []ProjectStatus {
	return []ProjectStatus{
		"Pending",
		"CreateInProgress",
		"CreateCompleted",
		"CreateFailed",
		"DeleteInProgress",
		"DeleteFailed",
		"DeleteCompleted",
		"UpdateInProgress",
		"UpdateCompleted",
		"UpdateFailed",
	}
}

type RecordWrapper string

// Enum values for RecordWrapper
const (
	RecordWrapperNone     RecordWrapper = "None"
	RecordWrapperRecordio RecordWrapper = "RecordIO"
)

// Values returns all known values for RecordWrapper. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (RecordWrapper) Values() []RecordWrapper {
	return []RecordWrapper{
		"None",
		"RecordIO",
	}
}

type RedshiftResultCompressionType string

// Enum values for RedshiftResultCompressionType
const (
	RedshiftResultCompressionTypeNone   RedshiftResultCompressionType = "None"
	RedshiftResultCompressionTypeGzip   RedshiftResultCompressionType = "GZIP"
	RedshiftResultCompressionTypeBzip2  RedshiftResultCompressionType = "BZIP2"
	RedshiftResultCompressionTypeZstd   RedshiftResultCompressionType = "ZSTD"
	RedshiftResultCompressionTypeSnappy RedshiftResultCompressionType = "SNAPPY"
)

// Values returns all known values for RedshiftResultCompressionType. Note that
// this can be expanded in the future, and so it is only as up to date as the
// client. The ordering of this slice is not guaranteed to be stable across
// updates.
func (RedshiftResultCompressionType) Values() []RedshiftResultCompressionType {
	return []RedshiftResultCompressionType{
		"None",
		"GZIP",
		"BZIP2",
		"ZSTD",
		"SNAPPY",
	}
}

type RedshiftResultFormat string

// Enum values for RedshiftResultFormat
const (
	RedshiftResultFormatParquet RedshiftResultFormat = "PARQUET"
	RedshiftResultFormatCsv     RedshiftResultFormat = "CSV"
)

// Values returns all known values for RedshiftResultFormat. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (RedshiftResultFormat) Values() []RedshiftResultFormat {
	return []RedshiftResultFormat{
		"PARQUET",
		"CSV",
	}
}

type RepositoryAccessMode string

// Enum values for RepositoryAccessMode
const (
	RepositoryAccessModePlatform RepositoryAccessMode = "Platform"
	RepositoryAccessModeVpc      RepositoryAccessMode = "Vpc"
)

// Values returns all known values for RepositoryAccessMode. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (RepositoryAccessMode) Values() []RepositoryAccessMode {
	return []RepositoryAccessMode{
		"Platform",
		"Vpc",
	}
}

type ResourceType string

// Enum values for ResourceType
const (
	ResourceTypeTrainingJob              ResourceType = "TrainingJob"
	ResourceTypeExperiment               ResourceType = "Experiment"
	ResourceTypeExperimentTrial          ResourceType = "ExperimentTrial"
	ResourceTypeExperimentTrialComponent ResourceType = "ExperimentTrialComponent"
	ResourceTypeEndpoint                 ResourceType = "Endpoint"
	ResourceTypeModelPackage             ResourceType = "ModelPackage"
	ResourceTypeModelPackageGroup        ResourceType = "ModelPackageGroup"
	ResourceTypePipeline                 ResourceType = "Pipeline"
	ResourceTypePipelineExecution        ResourceType = "PipelineExecution"
	ResourceTypeFeatureGroup             ResourceType = "FeatureGroup"
	ResourceTypeProject                  ResourceType = "Project"
)

// Values returns all known values for ResourceType. Note that this can be expanded
// in the future, and so it is only as up to date as the client. The ordering of
// this slice is not guaranteed to be stable across updates.
func (ResourceType) Values() []ResourceType {
	return []ResourceType{
		"TrainingJob",
		"Experiment",
		"ExperimentTrial",
		"ExperimentTrialComponent",
		"Endpoint",
		"ModelPackage",
		"ModelPackageGroup",
		"Pipeline",
		"PipelineExecution",
		"FeatureGroup",
		"Project",
	}
}

type RetentionType string

// Enum values for RetentionType
const (
	RetentionTypeRetain RetentionType = "Retain"
	RetentionTypeDelete RetentionType = "Delete"
)

// Values returns all known values for RetentionType. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (RetentionType) Values() []RetentionType {
	return []RetentionType{
		"Retain",
		"Delete",
	}
}

type RootAccess string

// Enum values for RootAccess
const (
	RootAccessEnabled  RootAccess = "Enabled"
	RootAccessDisabled RootAccess = "Disabled"
)

// Values returns all known values for RootAccess. Note that this can be expanded
// in the future, and so it is only as up to date as the client. The ordering of
// this slice is not guaranteed to be stable across updates.
func (RootAccess) Values() []RootAccess {
	return []RootAccess{
		"Enabled",
		"Disabled",
	}
}

type RStudioServerProAccessStatus string

// Enum values for RStudioServerProAccessStatus
const (
	RStudioServerProAccessStatusEnabled  RStudioServerProAccessStatus = "ENABLED"
	RStudioServerProAccessStatusDisabled RStudioServerProAccessStatus = "DISABLED"
)

// Values returns all known values for RStudioServerProAccessStatus. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
// The ordering of this slice is not guaranteed to be stable across updates.
func (RStudioServerProAccessStatus) Values() []RStudioServerProAccessStatus {
	return []RStudioServerProAccessStatus{
		"ENABLED",
		"DISABLED",
	}
}

type RStudioServerProUserGroup string

// Enum values for RStudioServerProUserGroup
const (
	RStudioServerProUserGroupAdmin RStudioServerProUserGroup = "R_STUDIO_ADMIN"
	RStudioServerProUserGroupUser  RStudioServerProUserGroup = "R_STUDIO_USER"
)

// Values returns all known values for RStudioServerProUserGroup. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
// The ordering of this slice is not guaranteed to be stable across updates.
func (RStudioServerProUserGroup) Values() []RStudioServerProUserGroup {
	return []RStudioServerProUserGroup{
		"R_STUDIO_ADMIN",
		"R_STUDIO_USER",
	}
}

type RuleEvaluationStatus string

// Enum values for RuleEvaluationStatus
const (
	RuleEvaluationStatusInProgress    RuleEvaluationStatus = "InProgress"
	RuleEvaluationStatusNoIssuesFound RuleEvaluationStatus = "NoIssuesFound"
	RuleEvaluationStatusIssuesFound   RuleEvaluationStatus = "IssuesFound"
	RuleEvaluationStatusError         RuleEvaluationStatus = "Error"
	RuleEvaluationStatusStopping      RuleEvaluationStatus = "Stopping"
	RuleEvaluationStatusStopped       RuleEvaluationStatus = "Stopped"
)

// Values returns all known values for RuleEvaluationStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (RuleEvaluationStatus) Values() []RuleEvaluationStatus {
	return []RuleEvaluationStatus{
		"InProgress",
		"NoIssuesFound",
		"IssuesFound",
		"Error",
		"Stopping",
		"Stopped",
	}
}

type S3DataDistribution string

// Enum values for S3DataDistribution
const (
	S3DataDistributionFullyReplicated S3DataDistribution = "FullyReplicated"
	S3DataDistributionShardedByS3Key  S3DataDistribution = "ShardedByS3Key"
)

// Values returns all known values for S3DataDistribution. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (S3DataDistribution) Values() []S3DataDistribution {
	return []S3DataDistribution{
		"FullyReplicated",
		"ShardedByS3Key",
	}
}

type S3DataType string

// Enum values for S3DataType
const (
	S3DataTypeManifestFile          S3DataType = "ManifestFile"
	S3DataTypeS3Prefix              S3DataType = "S3Prefix"
	S3DataTypeAugmentedManifestFile S3DataType = "AugmentedManifestFile"
)

// Values returns all known values for S3DataType. Note that this can be expanded
// in the future, and so it is only as up to date as the client. The ordering of
// this slice is not guaranteed to be stable across updates.
func (S3DataType) Values() []S3DataType {
	return []S3DataType{
		"ManifestFile",
		"S3Prefix",
		"AugmentedManifestFile",
	}
}

type SagemakerServicecatalogStatus string

// Enum values for SagemakerServicecatalogStatus
const (
	SagemakerServicecatalogStatusEnabled  SagemakerServicecatalogStatus = "Enabled"
	SagemakerServicecatalogStatusDisabled SagemakerServicecatalogStatus = "Disabled"
)

// Values returns all known values for SagemakerServicecatalogStatus. Note that
// this can be expanded in the future, and so it is only as up to date as the
// client. The ordering of this slice is not guaranteed to be stable across
// updates.
func (SagemakerServicecatalogStatus) Values() []SagemakerServicecatalogStatus {
	return []SagemakerServicecatalogStatus{
		"Enabled",
		"Disabled",
	}
}

type ScheduleStatus string

// Enum values for ScheduleStatus
const (
	ScheduleStatusPending   ScheduleStatus = "Pending"
	ScheduleStatusFailed    ScheduleStatus = "Failed"
	ScheduleStatusScheduled ScheduleStatus = "Scheduled"
	ScheduleStatusStopped   ScheduleStatus = "Stopped"
)

// Values returns all known values for ScheduleStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (ScheduleStatus) Values() []ScheduleStatus {
	return []ScheduleStatus{
		"Pending",
		"Failed",
		"Scheduled",
		"Stopped",
	}
}

type SearchSortOrder string

// Enum values for SearchSortOrder
const (
	SearchSortOrderAscending  SearchSortOrder = "Ascending"
	SearchSortOrderDescending SearchSortOrder = "Descending"
)

// Values returns all known values for SearchSortOrder. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (SearchSortOrder) Values() []SearchSortOrder {
	return []SearchSortOrder{
		"Ascending",
		"Descending",
	}
}

type SecondaryStatus string

// Enum values for SecondaryStatus
const (
	SecondaryStatusStarting                 SecondaryStatus = "Starting"
	SecondaryStatusLaunchingMlInstances     SecondaryStatus = "LaunchingMLInstances"
	SecondaryStatusPreparingTrainingStack   SecondaryStatus = "PreparingTrainingStack"
	SecondaryStatusDownloading              SecondaryStatus = "Downloading"
	SecondaryStatusDownloadingTrainingImage SecondaryStatus = "DownloadingTrainingImage"
	SecondaryStatusTraining                 SecondaryStatus = "Training"
	SecondaryStatusUploading                SecondaryStatus = "Uploading"
	SecondaryStatusStopping                 SecondaryStatus = "Stopping"
	SecondaryStatusStopped                  SecondaryStatus = "Stopped"
	SecondaryStatusMaxRuntimeExceeded       SecondaryStatus = "MaxRuntimeExceeded"
	SecondaryStatusCompleted                SecondaryStatus = "Completed"
	SecondaryStatusFailed                   SecondaryStatus = "Failed"
	SecondaryStatusInterrupted              SecondaryStatus = "Interrupted"
	SecondaryStatusMaxWaitTimeExceeded      SecondaryStatus = "MaxWaitTimeExceeded"
	SecondaryStatusUpdating                 SecondaryStatus = "Updating"
	SecondaryStatusRestarting               SecondaryStatus = "Restarting"
)

// Values returns all known values for SecondaryStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (SecondaryStatus) Values() []SecondaryStatus {
	return []SecondaryStatus{
		"Starting",
		"LaunchingMLInstances",
		"PreparingTrainingStack",
		"Downloading",
		"DownloadingTrainingImage",
		"Training",
		"Uploading",
		"Stopping",
		"Stopped",
		"MaxRuntimeExceeded",
		"Completed",
		"Failed",
		"Interrupted",
		"MaxWaitTimeExceeded",
		"Updating",
		"Restarting",
	}
}

type SortActionsBy string

// Enum values for SortActionsBy
const (
	SortActionsByName         SortActionsBy = "Name"
	SortActionsByCreationTime SortActionsBy = "CreationTime"
)

// Values returns all known values for SortActionsBy. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (SortActionsBy) Values() []SortActionsBy {
	return []SortActionsBy{
		"Name",
		"CreationTime",
	}
}

type SortArtifactsBy string

// Enum values for SortArtifactsBy
const (
	SortArtifactsByCreationTime SortArtifactsBy = "CreationTime"
)

// Values returns all known values for SortArtifactsBy. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (SortArtifactsBy) Values() []SortArtifactsBy {
	return []SortArtifactsBy{
		"CreationTime",
	}
}

type SortAssociationsBy string

// Enum values for SortAssociationsBy
const (
	SortAssociationsBySourceArn       SortAssociationsBy = "SourceArn"
	SortAssociationsByDestinationArn  SortAssociationsBy = "DestinationArn"
	SortAssociationsBySourceType      SortAssociationsBy = "SourceType"
	SortAssociationsByDestinationType SortAssociationsBy = "DestinationType"
	SortAssociationsByCreationTime    SortAssociationsBy = "CreationTime"
)

// Values returns all known values for SortAssociationsBy. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (SortAssociationsBy) Values() []SortAssociationsBy {
	return []SortAssociationsBy{
		"SourceArn",
		"DestinationArn",
		"SourceType",
		"DestinationType",
		"CreationTime",
	}
}

type SortBy string

// Enum values for SortBy
const (
	SortByName         SortBy = "Name"
	SortByCreationTime SortBy = "CreationTime"
	SortByStatus       SortBy = "Status"
)

// Values returns all known values for SortBy. Note that this can be expanded in
// the future, and so it is only as up to date as the client. The ordering of this
// slice is not guaranteed to be stable across updates.
func (SortBy) Values() []SortBy {
	return []SortBy{
		"Name",
		"CreationTime",
		"Status",
	}
}

type SortContextsBy string

// Enum values for SortContextsBy
const (
	SortContextsByName         SortContextsBy = "Name"
	SortContextsByCreationTime SortContextsBy = "CreationTime"
)

// Values returns all known values for SortContextsBy. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (SortContextsBy) Values() []SortContextsBy {
	return []SortContextsBy{
		"Name",
		"CreationTime",
	}
}

type SortExperimentsBy string

// Enum values for SortExperimentsBy
const (
	SortExperimentsByName         SortExperimentsBy = "Name"
	SortExperimentsByCreationTime SortExperimentsBy = "CreationTime"
)

// Values returns all known values for SortExperimentsBy. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (SortExperimentsBy) Values() []SortExperimentsBy {
	return []SortExperimentsBy{
		"Name",
		"CreationTime",
	}
}

type SortOrder string

// Enum values for SortOrder
const (
	SortOrderAscending  SortOrder = "Ascending"
	SortOrderDescending SortOrder = "Descending"
)

// Values returns all known values for SortOrder. Note that this can be expanded in
// the future, and so it is only as up to date as the client. The ordering of this
// slice is not guaranteed to be stable across updates.
func (SortOrder) Values() []SortOrder {
	return []SortOrder{
		"Ascending",
		"Descending",
	}
}

type SortPipelineExecutionsBy string

// Enum values for SortPipelineExecutionsBy
const (
	SortPipelineExecutionsByCreationTime         SortPipelineExecutionsBy = "CreationTime"
	SortPipelineExecutionsByPipelineExecutionArn SortPipelineExecutionsBy = "PipelineExecutionArn"
)

// Values returns all known values for SortPipelineExecutionsBy. Note that this can
// be expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (SortPipelineExecutionsBy) Values() []SortPipelineExecutionsBy {
	return []SortPipelineExecutionsBy{
		"CreationTime",
		"PipelineExecutionArn",
	}
}

type SortPipelinesBy string

// Enum values for SortPipelinesBy
const (
	SortPipelinesByName         SortPipelinesBy = "Name"
	SortPipelinesByCreationTime SortPipelinesBy = "CreationTime"
)

// Values returns all known values for SortPipelinesBy. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (SortPipelinesBy) Values() []SortPipelinesBy {
	return []SortPipelinesBy{
		"Name",
		"CreationTime",
	}
}

type SortTrialComponentsBy string

// Enum values for SortTrialComponentsBy
const (
	SortTrialComponentsByName         SortTrialComponentsBy = "Name"
	SortTrialComponentsByCreationTime SortTrialComponentsBy = "CreationTime"
)

// Values returns all known values for SortTrialComponentsBy. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (SortTrialComponentsBy) Values() []SortTrialComponentsBy {
	return []SortTrialComponentsBy{
		"Name",
		"CreationTime",
	}
}

type SortTrialsBy string

// Enum values for SortTrialsBy
const (
	SortTrialsByName         SortTrialsBy = "Name"
	SortTrialsByCreationTime SortTrialsBy = "CreationTime"
)

// Values returns all known values for SortTrialsBy. Note that this can be expanded
// in the future, and so it is only as up to date as the client. The ordering of
// this slice is not guaranteed to be stable across updates.
func (SortTrialsBy) Values() []SortTrialsBy {
	return []SortTrialsBy{
		"Name",
		"CreationTime",
	}
}

type SplitType string

// Enum values for SplitType
const (
	SplitTypeNone     SplitType = "None"
	SplitTypeLine     SplitType = "Line"
	SplitTypeRecordio SplitType = "RecordIO"
	SplitTypeTfrecord SplitType = "TFRecord"
)

// Values returns all known values for SplitType. Note that this can be expanded in
// the future, and so it is only as up to date as the client. The ordering of this
// slice is not guaranteed to be stable across updates.
func (SplitType) Values() []SplitType {
	return []SplitType{
		"None",
		"Line",
		"RecordIO",
		"TFRecord",
	}
}

type StepStatus string

// Enum values for StepStatus
const (
	StepStatusStarting  StepStatus = "Starting"
	StepStatusExecuting StepStatus = "Executing"
	StepStatusStopping  StepStatus = "Stopping"
	StepStatusStopped   StepStatus = "Stopped"
	StepStatusFailed    StepStatus = "Failed"
	StepStatusSucceeded StepStatus = "Succeeded"
)

// Values returns all known values for StepStatus. Note that this can be expanded
// in the future, and so it is only as up to date as the client. The ordering of
// this slice is not guaranteed to be stable across updates.
func (StepStatus) Values() []StepStatus {
	return []StepStatus{
		"Starting",
		"Executing",
		"Stopping",
		"Stopped",
		"Failed",
		"Succeeded",
	}
}

type StudioLifecycleConfigAppType string

// Enum values for StudioLifecycleConfigAppType
const (
	StudioLifecycleConfigAppTypeJupyterServer StudioLifecycleConfigAppType = "JupyterServer"
	StudioLifecycleConfigAppTypeKernelGateway StudioLifecycleConfigAppType = "KernelGateway"
)

// Values returns all known values for StudioLifecycleConfigAppType. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
// The ordering of this slice is not guaranteed to be stable across updates.
func (StudioLifecycleConfigAppType) Values() []StudioLifecycleConfigAppType {
	return []StudioLifecycleConfigAppType{
		"JupyterServer",
		"KernelGateway",
	}
}

type StudioLifecycleConfigSortKey string

// Enum values for StudioLifecycleConfigSortKey
const (
	StudioLifecycleConfigSortKeyCreationTime     StudioLifecycleConfigSortKey = "CreationTime"
	StudioLifecycleConfigSortKeyLastModifiedTime StudioLifecycleConfigSortKey = "LastModifiedTime"
	StudioLifecycleConfigSortKeyName             StudioLifecycleConfigSortKey = "Name"
)

// Values returns all known values for StudioLifecycleConfigSortKey. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
// The ordering of this slice is not guaranteed to be stable across updates.
func (StudioLifecycleConfigSortKey) Values() []StudioLifecycleConfigSortKey {
	return []StudioLifecycleConfigSortKey{
		"CreationTime",
		"LastModifiedTime",
		"Name",
	}
}

type TargetDevice string

// Enum values for TargetDevice
const (
	TargetDeviceLambda        TargetDevice = "lambda"
	TargetDeviceMlM4          TargetDevice = "ml_m4"
	TargetDeviceMlM5          TargetDevice = "ml_m5"
	TargetDeviceMlC4          TargetDevice = "ml_c4"
	TargetDeviceMlC5          TargetDevice = "ml_c5"
	TargetDeviceMlP2          TargetDevice = "ml_p2"
	TargetDeviceMlP3          TargetDevice = "ml_p3"
	TargetDeviceMlG4dn        TargetDevice = "ml_g4dn"
	TargetDeviceMlInf1        TargetDevice = "ml_inf1"
	TargetDeviceMlEia2        TargetDevice = "ml_eia2"
	TargetDeviceJetsonTx1     TargetDevice = "jetson_tx1"
	TargetDeviceJetsonTx2     TargetDevice = "jetson_tx2"
	TargetDeviceJetsonNano    TargetDevice = "jetson_nano"
	TargetDeviceJetsonXavier  TargetDevice = "jetson_xavier"
	TargetDeviceRasp3b        TargetDevice = "rasp3b"
	TargetDeviceImx8qm        TargetDevice = "imx8qm"
	TargetDeviceDeeplens      TargetDevice = "deeplens"
	TargetDeviceRk3399        TargetDevice = "rk3399"
	TargetDeviceRk3288        TargetDevice = "rk3288"
	TargetDeviceAisage        TargetDevice = "aisage"
	TargetDeviceSbeC          TargetDevice = "sbe_c"
	TargetDeviceQcs605        TargetDevice = "qcs605"
	TargetDeviceQcs603        TargetDevice = "qcs603"
	TargetDeviceSitaraAm57x   TargetDevice = "sitara_am57x"
	TargetDeviceAmbaCv22      TargetDevice = "amba_cv22"
	TargetDeviceAmbaCv25      TargetDevice = "amba_cv25"
	TargetDeviceX86Win32      TargetDevice = "x86_win32"
	TargetDeviceX86Win64      TargetDevice = "x86_win64"
	TargetDeviceCoreml        TargetDevice = "coreml"
	TargetDeviceJacintoTda4vm TargetDevice = "jacinto_tda4vm"
	TargetDeviceImx8mplus     TargetDevice = "imx8mplus"
)

// Values returns all known values for TargetDevice. Note that this can be expanded
// in the future, and so it is only as up to date as the client. The ordering of
// this slice is not guaranteed to be stable across updates.
func (TargetDevice) Values() []TargetDevice {
	return []TargetDevice{
		"lambda",
		"ml_m4",
		"ml_m5",
		"ml_c4",
		"ml_c5",
		"ml_p2",
		"ml_p3",
		"ml_g4dn",
		"ml_inf1",
		"ml_eia2",
		"jetson_tx1",
		"jetson_tx2",
		"jetson_nano",
		"jetson_xavier",
		"rasp3b",
		"imx8qm",
		"deeplens",
		"rk3399",
		"rk3288",
		"aisage",
		"sbe_c",
		"qcs605",
		"qcs603",
		"sitara_am57x",
		"amba_cv22",
		"amba_cv25",
		"x86_win32",
		"x86_win64",
		"coreml",
		"jacinto_tda4vm",
		"imx8mplus",
	}
}

type TargetPlatformAccelerator string

// Enum values for TargetPlatformAccelerator
const (
	TargetPlatformAcceleratorIntelGraphics TargetPlatformAccelerator = "INTEL_GRAPHICS"
	TargetPlatformAcceleratorMali          TargetPlatformAccelerator = "MALI"
	TargetPlatformAcceleratorNvidia        TargetPlatformAccelerator = "NVIDIA"
)

// Values returns all known values for TargetPlatformAccelerator. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
// The ordering of this slice is not guaranteed to be stable across updates.
func (TargetPlatformAccelerator) Values() []TargetPlatformAccelerator {
	return []TargetPlatformAccelerator{
		"INTEL_GRAPHICS",
		"MALI",
		"NVIDIA",
	}
}

type TargetPlatformArch string

// Enum values for TargetPlatformArch
const (
	TargetPlatformArchX8664     TargetPlatformArch = "X86_64"
	TargetPlatformArchX86       TargetPlatformArch = "X86"
	TargetPlatformArchArm64     TargetPlatformArch = "ARM64"
	TargetPlatformArchArmEabi   TargetPlatformArch = "ARM_EABI"
	TargetPlatformArchArmEabihf TargetPlatformArch = "ARM_EABIHF"
)

// Values returns all known values for TargetPlatformArch. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (TargetPlatformArch) Values() []TargetPlatformArch {
	return []TargetPlatformArch{
		"X86_64",
		"X86",
		"ARM64",
		"ARM_EABI",
		"ARM_EABIHF",
	}
}

type TargetPlatformOs string

// Enum values for TargetPlatformOs
const (
	TargetPlatformOsAndroid TargetPlatformOs = "ANDROID"
	TargetPlatformOsLinux   TargetPlatformOs = "LINUX"
)

// Values returns all known values for TargetPlatformOs. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (TargetPlatformOs) Values() []TargetPlatformOs {
	return []TargetPlatformOs{
		"ANDROID",
		"LINUX",
	}
}

type TrafficRoutingConfigType string

// Enum values for TrafficRoutingConfigType
const (
	TrafficRoutingConfigTypeAllAtOnce TrafficRoutingConfigType = "ALL_AT_ONCE"
	TrafficRoutingConfigTypeCanary    TrafficRoutingConfigType = "CANARY"
	TrafficRoutingConfigTypeLinear    TrafficRoutingConfigType = "LINEAR"
)

// Values returns all known values for TrafficRoutingConfigType. Note that this can
// be expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (TrafficRoutingConfigType) Values() []TrafficRoutingConfigType {
	return []TrafficRoutingConfigType{
		"ALL_AT_ONCE",
		"CANARY",
		"LINEAR",
	}
}

type TrainingInputMode string

// Enum values for TrainingInputMode
const (
	TrainingInputModePipe     TrainingInputMode = "Pipe"
	TrainingInputModeFile     TrainingInputMode = "File"
	TrainingInputModeFastfile TrainingInputMode = "FastFile"
)

// Values returns all known values for TrainingInputMode. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (TrainingInputMode) Values() []TrainingInputMode {
	return []TrainingInputMode{
		"Pipe",
		"File",
		"FastFile",
	}
}

type TrainingInstanceType string

// Enum values for TrainingInstanceType
const (
	TrainingInstanceTypeMlM4Xlarge     TrainingInstanceType = "ml.m4.xlarge"
	TrainingInstanceTypeMlM42xlarge    TrainingInstanceType = "ml.m4.2xlarge"
	TrainingInstanceTypeMlM44xlarge    TrainingInstanceType = "ml.m4.4xlarge"
	TrainingInstanceTypeMlM410xlarge   TrainingInstanceType = "ml.m4.10xlarge"
	TrainingInstanceTypeMlM416xlarge   TrainingInstanceType = "ml.m4.16xlarge"
	TrainingInstanceTypeMlG4dnXlarge   TrainingInstanceType = "ml.g4dn.xlarge"
	TrainingInstanceTypeMlG4dn2xlarge  TrainingInstanceType = "ml.g4dn.2xlarge"
	TrainingInstanceTypeMlG4dn4xlarge  TrainingInstanceType = "ml.g4dn.4xlarge"
	TrainingInstanceTypeMlG4dn8xlarge  TrainingInstanceType = "ml.g4dn.8xlarge"
	TrainingInstanceTypeMlG4dn12xlarge TrainingInstanceType = "ml.g4dn.12xlarge"
	TrainingInstanceTypeMlG4dn16xlarge TrainingInstanceType = "ml.g4dn.16xlarge"
	TrainingInstanceTypeMlM5Large      TrainingInstanceType = "ml.m5.large"
	TrainingInstanceTypeMlM5Xlarge     TrainingInstanceType = "ml.m5.xlarge"
	TrainingInstanceTypeMlM52xlarge    TrainingInstanceType = "ml.m5.2xlarge"
	TrainingInstanceTypeMlM54xlarge    TrainingInstanceType = "ml.m5.4xlarge"
	TrainingInstanceTypeMlM512xlarge   TrainingInstanceType = "ml.m5.12xlarge"
	TrainingInstanceTypeMlM524xlarge   TrainingInstanceType = "ml.m5.24xlarge"
	TrainingInstanceTypeMlC4Xlarge     TrainingInstanceType = "ml.c4.xlarge"
	TrainingInstanceTypeMlC42xlarge    TrainingInstanceType = "ml.c4.2xlarge"
	TrainingInstanceTypeMlC44xlarge    TrainingInstanceType = "ml.c4.4xlarge"
	TrainingInstanceTypeMlC48xlarge    TrainingInstanceType = "ml.c4.8xlarge"
	TrainingInstanceTypeMlP2Xlarge     TrainingInstanceType = "ml.p2.xlarge"
	TrainingInstanceTypeMlP28xlarge    TrainingInstanceType = "ml.p2.8xlarge"
	TrainingInstanceTypeMlP216xlarge   TrainingInstanceType = "ml.p2.16xlarge"
	TrainingInstanceTypeMlP32xlarge    TrainingInstanceType = "ml.p3.2xlarge"
	TrainingInstanceTypeMlP38xlarge    TrainingInstanceType = "ml.p3.8xlarge"
	TrainingInstanceTypeMlP316xlarge   TrainingInstanceType = "ml.p3.16xlarge"
	TrainingInstanceTypeMlP3dn24xlarge TrainingInstanceType = "ml.p3dn.24xlarge"
	TrainingInstanceTypeMlP4d24xlarge  TrainingInstanceType = "ml.p4d.24xlarge"
	TrainingInstanceTypeMlC5Xlarge     TrainingInstanceType = "ml.c5.xlarge"
	TrainingInstanceTypeMlC52xlarge    TrainingInstanceType = "ml.c5.2xlarge"
	TrainingInstanceTypeMlC54xlarge    TrainingInstanceType = "ml.c5.4xlarge"
	TrainingInstanceTypeMlC59xlarge    TrainingInstanceType = "ml.c5.9xlarge"
	TrainingInstanceTypeMlC518xlarge   TrainingInstanceType = "ml.c5.18xlarge"
	TrainingInstanceTypeMlC5nXlarge    TrainingInstanceType = "ml.c5n.xlarge"
	TrainingInstanceTypeMlC5n2xlarge   TrainingInstanceType = "ml.c5n.2xlarge"
	TrainingInstanceTypeMlC5n4xlarge   TrainingInstanceType = "ml.c5n.4xlarge"
	TrainingInstanceTypeMlC5n9xlarge   TrainingInstanceType = "ml.c5n.9xlarge"
	TrainingInstanceTypeMlC5n18xlarge  TrainingInstanceType = "ml.c5n.18xlarge"
)

// Values returns all known values for TrainingInstanceType. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (TrainingInstanceType) Values() []TrainingInstanceType {
	return []TrainingInstanceType{
		"ml.m4.xlarge",
		"ml.m4.2xlarge",
		"ml.m4.4xlarge",
		"ml.m4.10xlarge",
		"ml.m4.16xlarge",
		"ml.g4dn.xlarge",
		"ml.g4dn.2xlarge",
		"ml.g4dn.4xlarge",
		"ml.g4dn.8xlarge",
		"ml.g4dn.12xlarge",
		"ml.g4dn.16xlarge",
		"ml.m5.large",
		"ml.m5.xlarge",
		"ml.m5.2xlarge",
		"ml.m5.4xlarge",
		"ml.m5.12xlarge",
		"ml.m5.24xlarge",
		"ml.c4.xlarge",
		"ml.c4.2xlarge",
		"ml.c4.4xlarge",
		"ml.c4.8xlarge",
		"ml.p2.xlarge",
		"ml.p2.8xlarge",
		"ml.p2.16xlarge",
		"ml.p3.2xlarge",
		"ml.p3.8xlarge",
		"ml.p3.16xlarge",
		"ml.p3dn.24xlarge",
		"ml.p4d.24xlarge",
		"ml.c5.xlarge",
		"ml.c5.2xlarge",
		"ml.c5.4xlarge",
		"ml.c5.9xlarge",
		"ml.c5.18xlarge",
		"ml.c5n.xlarge",
		"ml.c5n.2xlarge",
		"ml.c5n.4xlarge",
		"ml.c5n.9xlarge",
		"ml.c5n.18xlarge",
	}
}

type TrainingJobEarlyStoppingType string

// Enum values for TrainingJobEarlyStoppingType
const (
	TrainingJobEarlyStoppingTypeOff  TrainingJobEarlyStoppingType = "Off"
	TrainingJobEarlyStoppingTypeAuto TrainingJobEarlyStoppingType = "Auto"
)

// Values returns all known values for TrainingJobEarlyStoppingType. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
// The ordering of this slice is not guaranteed to be stable across updates.
func (TrainingJobEarlyStoppingType) Values() []TrainingJobEarlyStoppingType {
	return []TrainingJobEarlyStoppingType{
		"Off",
		"Auto",
	}
}

type TrainingJobSortByOptions string

// Enum values for TrainingJobSortByOptions
const (
	TrainingJobSortByOptionsName                      TrainingJobSortByOptions = "Name"
	TrainingJobSortByOptionsCreationTime              TrainingJobSortByOptions = "CreationTime"
	TrainingJobSortByOptionsStatus                    TrainingJobSortByOptions = "Status"
	TrainingJobSortByOptionsFinalObjectiveMetricValue TrainingJobSortByOptions = "FinalObjectiveMetricValue"
)

// Values returns all known values for TrainingJobSortByOptions. Note that this can
// be expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (TrainingJobSortByOptions) Values() []TrainingJobSortByOptions {
	return []TrainingJobSortByOptions{
		"Name",
		"CreationTime",
		"Status",
		"FinalObjectiveMetricValue",
	}
}

type TrainingJobStatus string

// Enum values for TrainingJobStatus
const (
	TrainingJobStatusInProgress TrainingJobStatus = "InProgress"
	TrainingJobStatusCompleted  TrainingJobStatus = "Completed"
	TrainingJobStatusFailed     TrainingJobStatus = "Failed"
	TrainingJobStatusStopping   TrainingJobStatus = "Stopping"
	TrainingJobStatusStopped    TrainingJobStatus = "Stopped"
)

// Values returns all known values for TrainingJobStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (TrainingJobStatus) Values() []TrainingJobStatus {
	return []TrainingJobStatus{
		"InProgress",
		"Completed",
		"Failed",
		"Stopping",
		"Stopped",
	}
}

type TransformInstanceType string

// Enum values for TransformInstanceType
const (
	TransformInstanceTypeMlM4Xlarge     TransformInstanceType = "ml.m4.xlarge"
	TransformInstanceTypeMlM42xlarge    TransformInstanceType = "ml.m4.2xlarge"
	TransformInstanceTypeMlM44xlarge    TransformInstanceType = "ml.m4.4xlarge"
	TransformInstanceTypeMlM410xlarge   TransformInstanceType = "ml.m4.10xlarge"
	TransformInstanceTypeMlM416xlarge   TransformInstanceType = "ml.m4.16xlarge"
	TransformInstanceTypeMlC4Xlarge     TransformInstanceType = "ml.c4.xlarge"
	TransformInstanceTypeMlC42xlarge    TransformInstanceType = "ml.c4.2xlarge"
	TransformInstanceTypeMlC44xlarge    TransformInstanceType = "ml.c4.4xlarge"
	TransformInstanceTypeMlC48xlarge    TransformInstanceType = "ml.c4.8xlarge"
	TransformInstanceTypeMlP2Xlarge     TransformInstanceType = "ml.p2.xlarge"
	TransformInstanceTypeMlP28xlarge    TransformInstanceType = "ml.p2.8xlarge"
	TransformInstanceTypeMlP216xlarge   TransformInstanceType = "ml.p2.16xlarge"
	TransformInstanceTypeMlP32xlarge    TransformInstanceType = "ml.p3.2xlarge"
	TransformInstanceTypeMlP38xlarge    TransformInstanceType = "ml.p3.8xlarge"
	TransformInstanceTypeMlP316xlarge   TransformInstanceType = "ml.p3.16xlarge"
	TransformInstanceTypeMlC5Xlarge     TransformInstanceType = "ml.c5.xlarge"
	TransformInstanceTypeMlC52xlarge    TransformInstanceType = "ml.c5.2xlarge"
	TransformInstanceTypeMlC54xlarge    TransformInstanceType = "ml.c5.4xlarge"
	TransformInstanceTypeMlC59xlarge    TransformInstanceType = "ml.c5.9xlarge"
	TransformInstanceTypeMlC518xlarge   TransformInstanceType = "ml.c5.18xlarge"
	TransformInstanceTypeMlM5Large      TransformInstanceType = "ml.m5.large"
	TransformInstanceTypeMlM5Xlarge     TransformInstanceType = "ml.m5.xlarge"
	TransformInstanceTypeMlM52xlarge    TransformInstanceType = "ml.m5.2xlarge"
	TransformInstanceTypeMlM54xlarge    TransformInstanceType = "ml.m5.4xlarge"
	TransformInstanceTypeMlM512xlarge   TransformInstanceType = "ml.m5.12xlarge"
	TransformInstanceTypeMlM524xlarge   TransformInstanceType = "ml.m5.24xlarge"
	TransformInstanceTypeMlG4dnXlarge   TransformInstanceType = "ml.g4dn.xlarge"
	TransformInstanceTypeMlG4dn2xlarge  TransformInstanceType = "ml.g4dn.2xlarge"
	TransformInstanceTypeMlG4dn4xlarge  TransformInstanceType = "ml.g4dn.4xlarge"
	TransformInstanceTypeMlG4dn8xlarge  TransformInstanceType = "ml.g4dn.8xlarge"
	TransformInstanceTypeMlG4dn12xlarge TransformInstanceType = "ml.g4dn.12xlarge"
	TransformInstanceTypeMlG4dn16xlarge TransformInstanceType = "ml.g4dn.16xlarge"
)

// Values returns all known values for TransformInstanceType. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (TransformInstanceType) Values() []TransformInstanceType {
	return []TransformInstanceType{
		"ml.m4.xlarge",
		"ml.m4.2xlarge",
		"ml.m4.4xlarge",
		"ml.m4.10xlarge",
		"ml.m4.16xlarge",
		"ml.c4.xlarge",
		"ml.c4.2xlarge",
		"ml.c4.4xlarge",
		"ml.c4.8xlarge",
		"ml.p2.xlarge",
		"ml.p2.8xlarge",
		"ml.p2.16xlarge",
		"ml.p3.2xlarge",
		"ml.p3.8xlarge",
		"ml.p3.16xlarge",
		"ml.c5.xlarge",
		"ml.c5.2xlarge",
		"ml.c5.4xlarge",
		"ml.c5.9xlarge",
		"ml.c5.18xlarge",
		"ml.m5.large",
		"ml.m5.xlarge",
		"ml.m5.2xlarge",
		"ml.m5.4xlarge",
		"ml.m5.12xlarge",
		"ml.m5.24xlarge",
		"ml.g4dn.xlarge",
		"ml.g4dn.2xlarge",
		"ml.g4dn.4xlarge",
		"ml.g4dn.8xlarge",
		"ml.g4dn.12xlarge",
		"ml.g4dn.16xlarge",
	}
}

type TransformJobStatus string

// Enum values for TransformJobStatus
const (
	TransformJobStatusInProgress TransformJobStatus = "InProgress"
	TransformJobStatusCompleted  TransformJobStatus = "Completed"
	TransformJobStatusFailed     TransformJobStatus = "Failed"
	TransformJobStatusStopping   TransformJobStatus = "Stopping"
	TransformJobStatusStopped    TransformJobStatus = "Stopped"
)

// Values returns all known values for TransformJobStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (TransformJobStatus) Values() []TransformJobStatus {
	return []TransformJobStatus{
		"InProgress",
		"Completed",
		"Failed",
		"Stopping",
		"Stopped",
	}
}

type TrialComponentPrimaryStatus string

// Enum values for TrialComponentPrimaryStatus
const (
	TrialComponentPrimaryStatusInProgress TrialComponentPrimaryStatus = "InProgress"
	TrialComponentPrimaryStatusCompleted  TrialComponentPrimaryStatus = "Completed"
	TrialComponentPrimaryStatusFailed     TrialComponentPrimaryStatus = "Failed"
	TrialComponentPrimaryStatusStopping   TrialComponentPrimaryStatus = "Stopping"
	TrialComponentPrimaryStatusStopped    TrialComponentPrimaryStatus = "Stopped"
)

// Values returns all known values for TrialComponentPrimaryStatus. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
// The ordering of this slice is not guaranteed to be stable across updates.
func (TrialComponentPrimaryStatus) Values() []TrialComponentPrimaryStatus {
	return []TrialComponentPrimaryStatus{
		"InProgress",
		"Completed",
		"Failed",
		"Stopping",
		"Stopped",
	}
}

type UserProfileSortKey string

// Enum values for UserProfileSortKey
const (
	UserProfileSortKeyCreationTime     UserProfileSortKey = "CreationTime"
	UserProfileSortKeyLastModifiedTime UserProfileSortKey = "LastModifiedTime"
)

// Values returns all known values for UserProfileSortKey. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (UserProfileSortKey) Values() []UserProfileSortKey {
	return []UserProfileSortKey{
		"CreationTime",
		"LastModifiedTime",
	}
}

type UserProfileStatus string

// Enum values for UserProfileStatus
const (
	UserProfileStatusDeleting     UserProfileStatus = "Deleting"
	UserProfileStatusFailed       UserProfileStatus = "Failed"
	UserProfileStatusInService    UserProfileStatus = "InService"
	UserProfileStatusPending      UserProfileStatus = "Pending"
	UserProfileStatusUpdating     UserProfileStatus = "Updating"
	UserProfileStatusUpdateFailed UserProfileStatus = "Update_Failed"
	UserProfileStatusDeleteFailed UserProfileStatus = "Delete_Failed"
)

// Values returns all known values for UserProfileStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (UserProfileStatus) Values() []UserProfileStatus {
	return []UserProfileStatus{
		"Deleting",
		"Failed",
		"InService",
		"Pending",
		"Updating",
		"Update_Failed",
		"Delete_Failed",
	}
}

type VariantPropertyType string

// Enum values for VariantPropertyType
const (
	VariantPropertyTypeDesiredInstanceCount VariantPropertyType = "DesiredInstanceCount"
	VariantPropertyTypeDesiredWeight        VariantPropertyType = "DesiredWeight"
	VariantPropertyTypeDataCaptureConfig    VariantPropertyType = "DataCaptureConfig"
)

// Values returns all known values for VariantPropertyType. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (VariantPropertyType) Values() []VariantPropertyType {
	return []VariantPropertyType{
		"DesiredInstanceCount",
		"DesiredWeight",
		"DataCaptureConfig",
	}
}

type VariantStatus string

// Enum values for VariantStatus
const (
	VariantStatusCreating          VariantStatus = "Creating"
	VariantStatusUpdating          VariantStatus = "Updating"
	VariantStatusDeleting          VariantStatus = "Deleting"
	VariantStatusActivatingTraffic VariantStatus = "ActivatingTraffic"
	VariantStatusBaking            VariantStatus = "Baking"
)

// Values returns all known values for VariantStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (VariantStatus) Values() []VariantStatus {
	return []VariantStatus{
		"Creating",
		"Updating",
		"Deleting",
		"ActivatingTraffic",
		"Baking",
	}
}
