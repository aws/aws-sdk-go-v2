// Code generated by smithy-go-codegen DO NOT EDIT.

package sagemaker

import (
	"context"
	awsmiddleware "github.com/aws/aws-sdk-go-v2/aws/middleware"
	"github.com/aws/aws-sdk-go-v2/aws/signer/v4"
	"github.com/aws/aws-sdk-go-v2/service/sagemaker/types"
	smithy "github.com/awslabs/smithy-go"
	"github.com/awslabs/smithy-go/middleware"
	smithyhttp "github.com/awslabs/smithy-go/transport/http"
	"time"
)

// Returns information about the requested human task user interface (worker task
// template).
func (c *Client) DescribeHumanTaskUi(ctx context.Context, params *DescribeHumanTaskUiInput, optFns ...func(*Options)) (*DescribeHumanTaskUiOutput, error) {
	stack := middleware.NewStack("DescribeHumanTaskUi", smithyhttp.NewStackRequest)
	options := c.options.Copy()
	for _, fn := range optFns {
		fn(&options)
	}
	addawsAwsjson11_serdeOpDescribeHumanTaskUiMiddlewares(stack)
	awsmiddleware.AddRequestInvocationIDMiddleware(stack)
	smithyhttp.AddContentLengthMiddleware(stack)
	addResolveEndpointMiddleware(stack, options)
	v4.AddComputePayloadSHA256Middleware(stack)
	addRetryMiddlewares(stack, options)
	addHTTPSignerV4Middleware(stack, options)
	awsmiddleware.AddAttemptClockSkewMiddleware(stack)
	addClientUserAgent(stack)
	smithyhttp.AddErrorCloseResponseBodyMiddleware(stack)
	smithyhttp.AddCloseResponseBodyMiddleware(stack)
	addOpDescribeHumanTaskUiValidationMiddleware(stack)
	stack.Initialize.Add(newServiceMetadataMiddleware_opDescribeHumanTaskUi(options.Region), middleware.Before)
	addRequestIDRetrieverMiddleware(stack)
	addResponseErrorMiddleware(stack)

	for _, fn := range options.APIOptions {
		if err := fn(stack); err != nil {
			return nil, err
		}
	}
	handler := middleware.DecorateHandler(smithyhttp.NewClientHandler(options.HTTPClient), stack)
	result, metadata, err := handler.Handle(ctx, params)
	if err != nil {
		return nil, &smithy.OperationError{
			ServiceID:     ServiceID,
			OperationName: "DescribeHumanTaskUi",
			Err:           err,
		}
	}
	out := result.(*DescribeHumanTaskUiOutput)
	out.ResultMetadata = metadata
	return out, nil
}

type DescribeHumanTaskUiInput struct {

	// The name of the human task user interface (worker task template) you want
	// information about.
	//
	// This member is required.
	HumanTaskUiName *string
}

type DescribeHumanTaskUiOutput struct {

	// The timestamp when the human task user interface was created.
	//
	// This member is required.
	CreationTime *time.Time

	// The Amazon Resource Name (ARN) of the human task user interface (worker task
	// template).
	//
	// This member is required.
	HumanTaskUiArn *string

	// The name of the human task user interface (worker task template).
	//
	// This member is required.
	HumanTaskUiName *string

	// Container for user interface template information.
	//
	// This member is required.
	UiTemplate *types.UiTemplateInfo

	// The status of the human task user interface (worker task template). Valid values
	// are listed below.
	HumanTaskUiStatus types.HumanTaskUiStatus

	// Metadata pertaining to the operation's result.
	ResultMetadata middleware.Metadata
}

func addawsAwsjson11_serdeOpDescribeHumanTaskUiMiddlewares(stack *middleware.Stack) {
	stack.Serialize.Add(&awsAwsjson11_serializeOpDescribeHumanTaskUi{}, middleware.After)
	stack.Deserialize.Add(&awsAwsjson11_deserializeOpDescribeHumanTaskUi{}, middleware.After)
}

func newServiceMetadataMiddleware_opDescribeHumanTaskUi(region string) awsmiddleware.RegisterServiceMetadata {
	return awsmiddleware.RegisterServiceMetadata{
		Region:        region,
		ServiceID:     ServiceID,
		SigningName:   "sagemaker",
		OperationName: "DescribeHumanTaskUi",
	}
}
