// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package sagemaker

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/sagemaker/types"
)

const opCreateLabelingJob = "CreateLabelingJob"

// CreateLabelingJobRequest returns a request value for making API operation for
// Amazon SageMaker Service.
//
// Creates a job that uses workers to label the data objects in your input dataset.
// You can use the labeled data to train machine learning models.
//
// You can select your workforce from one of three providers:
//
//    * A private workforce that you create. It can include employees, contractors,
//    and outside experts. Use a private workforce when want the data to stay
//    within your organization or when a specific set of skills is required.
//
//    * One or more vendors that you select from the AWS Marketplace. Vendors
//    provide expertise in specific areas.
//
//    * The Amazon Mechanical Turk workforce. This is the largest workforce,
//    but it should only be used for public data or data that has been stripped
//    of any personally identifiable information.
//
// You can also use automated data labeling to reduce the number of data objects
// that need to be labeled by a human. Automated data labeling uses active learning
// to determine if a data object can be labeled by machine or if it needs to
// be sent to a human worker. For more information, see Using Automated Data
// Labeling (https://docs.aws.amazon.com/sagemaker/latest/dg/sms-automated-labeling.html).
//
// The data objects to be labeled are contained in an Amazon S3 bucket. You
// create a manifest file that describes the location of each object. For more
// information, see Using Input and Output Data (https://docs.aws.amazon.com/sagemaker/latest/dg/sms-data.html).
//
// The output can be used as the manifest file for another labeling job or as
// training data for your machine learning models.
//
//    // Example sending a request using CreateLabelingJobRequest.
//    req := client.CreateLabelingJobRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/sagemaker-2017-07-24/CreateLabelingJob
func (c *Client) CreateLabelingJobRequest(input *types.CreateLabelingJobInput) CreateLabelingJobRequest {
	op := &aws.Operation{
		Name:       opCreateLabelingJob,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &types.CreateLabelingJobInput{}
	}

	req := c.newRequest(op, input, &types.CreateLabelingJobOutput{})
	return CreateLabelingJobRequest{Request: req, Input: input, Copy: c.CreateLabelingJobRequest}
}

// CreateLabelingJobRequest is the request type for the
// CreateLabelingJob API operation.
type CreateLabelingJobRequest struct {
	*aws.Request
	Input *types.CreateLabelingJobInput
	Copy  func(*types.CreateLabelingJobInput) CreateLabelingJobRequest
}

// Send marshals and sends the CreateLabelingJob API request.
func (r CreateLabelingJobRequest) Send(ctx context.Context) (*CreateLabelingJobResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &CreateLabelingJobResponse{
		CreateLabelingJobOutput: r.Request.Data.(*types.CreateLabelingJobOutput),
		response:                &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// CreateLabelingJobResponse is the response type for the
// CreateLabelingJob API operation.
type CreateLabelingJobResponse struct {
	*types.CreateLabelingJobOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// CreateLabelingJob request.
func (r *CreateLabelingJobResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
