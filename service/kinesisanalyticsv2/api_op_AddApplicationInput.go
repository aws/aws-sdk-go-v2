// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package kinesisanalyticsv2

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/kinesisanalyticsv2/types"
)

const opAddApplicationInput = "AddApplicationInput"

// AddApplicationInputRequest returns a request value for making API operation for
// Amazon Kinesis Analytics.
//
// Adds a streaming source to your SQL-based Amazon Kinesis Data Analytics application.
//
// You can add a streaming source when you create an application, or you can
// use this operation to add a streaming source after you create an application.
// For more information, see CreateApplication.
//
// Any configuration update, including adding a streaming source using this
// operation, results in a new version of the application. You can use the DescribeApplication
// operation to find the current application version.
//
//    // Example sending a request using AddApplicationInputRequest.
//    req := client.AddApplicationInputRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/kinesisanalyticsv2-2018-05-23/AddApplicationInput
func (c *Client) AddApplicationInputRequest(input *types.AddApplicationInputInput) AddApplicationInputRequest {
	op := &aws.Operation{
		Name:       opAddApplicationInput,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &types.AddApplicationInputInput{}
	}

	req := c.newRequest(op, input, &types.AddApplicationInputOutput{})
	return AddApplicationInputRequest{Request: req, Input: input, Copy: c.AddApplicationInputRequest}
}

// AddApplicationInputRequest is the request type for the
// AddApplicationInput API operation.
type AddApplicationInputRequest struct {
	*aws.Request
	Input *types.AddApplicationInputInput
	Copy  func(*types.AddApplicationInputInput) AddApplicationInputRequest
}

// Send marshals and sends the AddApplicationInput API request.
func (r AddApplicationInputRequest) Send(ctx context.Context) (*AddApplicationInputResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &AddApplicationInputResponse{
		AddApplicationInputOutput: r.Request.Data.(*types.AddApplicationInputOutput),
		response:                  &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// AddApplicationInputResponse is the response type for the
// AddApplicationInput API operation.
type AddApplicationInputResponse struct {
	*types.AddApplicationInputOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// AddApplicationInput request.
func (r *AddApplicationInputResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
