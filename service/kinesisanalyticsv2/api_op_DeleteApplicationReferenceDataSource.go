// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package kinesisanalyticsv2

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/kinesisanalyticsv2/types"
)

const opDeleteApplicationReferenceDataSource = "DeleteApplicationReferenceDataSource"

// DeleteApplicationReferenceDataSourceRequest returns a request value for making API operation for
// Amazon Kinesis Analytics.
//
// Deletes a reference data source configuration from the specified SQL-based
// Amazon Kinesis Data Analytics application's configuration.
//
// If the application is running, Kinesis Data Analytics immediately removes
// the in-application table that you created using the AddApplicationReferenceDataSource
// operation.
//
//    // Example sending a request using DeleteApplicationReferenceDataSourceRequest.
//    req := client.DeleteApplicationReferenceDataSourceRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/kinesisanalyticsv2-2018-05-23/DeleteApplicationReferenceDataSource
func (c *Client) DeleteApplicationReferenceDataSourceRequest(input *types.DeleteApplicationReferenceDataSourceInput) DeleteApplicationReferenceDataSourceRequest {
	op := &aws.Operation{
		Name:       opDeleteApplicationReferenceDataSource,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &types.DeleteApplicationReferenceDataSourceInput{}
	}

	req := c.newRequest(op, input, &types.DeleteApplicationReferenceDataSourceOutput{})
	return DeleteApplicationReferenceDataSourceRequest{Request: req, Input: input, Copy: c.DeleteApplicationReferenceDataSourceRequest}
}

// DeleteApplicationReferenceDataSourceRequest is the request type for the
// DeleteApplicationReferenceDataSource API operation.
type DeleteApplicationReferenceDataSourceRequest struct {
	*aws.Request
	Input *types.DeleteApplicationReferenceDataSourceInput
	Copy  func(*types.DeleteApplicationReferenceDataSourceInput) DeleteApplicationReferenceDataSourceRequest
}

// Send marshals and sends the DeleteApplicationReferenceDataSource API request.
func (r DeleteApplicationReferenceDataSourceRequest) Send(ctx context.Context) (*DeleteApplicationReferenceDataSourceResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &DeleteApplicationReferenceDataSourceResponse{
		DeleteApplicationReferenceDataSourceOutput: r.Request.Data.(*types.DeleteApplicationReferenceDataSourceOutput),
		response: &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// DeleteApplicationReferenceDataSourceResponse is the response type for the
// DeleteApplicationReferenceDataSource API operation.
type DeleteApplicationReferenceDataSourceResponse struct {
	*types.DeleteApplicationReferenceDataSourceOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// DeleteApplicationReferenceDataSource request.
func (r *DeleteApplicationReferenceDataSourceResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
