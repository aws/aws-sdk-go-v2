// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package kinesisanalyticsv2

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/kinesisanalyticsv2/types"
)

const opAddApplicationOutput = "AddApplicationOutput"

// AddApplicationOutputRequest returns a request value for making API operation for
// Amazon Kinesis Analytics.
//
// Adds an external destination to your SQL-based Amazon Kinesis Data Analytics
// application.
//
// If you want Kinesis Data Analytics to deliver data from an in-application
// stream within your application to an external destination (such as an Kinesis
// data stream, a Kinesis Data Firehose delivery stream, or an AWS Lambda function),
// you add the relevant configuration to your application using this operation.
// You can configure one or more outputs for your application. Each output configuration
// maps an in-application stream and an external destination.
//
// You can use one of the output configurations to deliver data from your in-application
// error stream to an external destination so that you can analyze the errors.
//
// Any configuration update, including adding a streaming source using this
// operation, results in a new version of the application. You can use the DescribeApplication
// operation to find the current application version.
//
//    // Example sending a request using AddApplicationOutputRequest.
//    req := client.AddApplicationOutputRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/kinesisanalyticsv2-2018-05-23/AddApplicationOutput
func (c *Client) AddApplicationOutputRequest(input *types.AddApplicationOutputInput) AddApplicationOutputRequest {
	op := &aws.Operation{
		Name:       opAddApplicationOutput,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &types.AddApplicationOutputInput{}
	}

	req := c.newRequest(op, input, &types.AddApplicationOutputOutput{})
	return AddApplicationOutputRequest{Request: req, Input: input, Copy: c.AddApplicationOutputRequest}
}

// AddApplicationOutputRequest is the request type for the
// AddApplicationOutput API operation.
type AddApplicationOutputRequest struct {
	*aws.Request
	Input *types.AddApplicationOutputInput
	Copy  func(*types.AddApplicationOutputInput) AddApplicationOutputRequest
}

// Send marshals and sends the AddApplicationOutput API request.
func (r AddApplicationOutputRequest) Send(ctx context.Context) (*AddApplicationOutputResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &AddApplicationOutputResponse{
		AddApplicationOutputOutput: r.Request.Data.(*types.AddApplicationOutputOutput),
		response:                   &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// AddApplicationOutputResponse is the response type for the
// AddApplicationOutput API operation.
type AddApplicationOutputResponse struct {
	*types.AddApplicationOutputOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// AddApplicationOutput request.
func (r *AddApplicationOutputResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
