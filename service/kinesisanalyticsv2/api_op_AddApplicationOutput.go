// Code generated by smithy-go-codegen DO NOT EDIT.

package kinesisanalyticsv2

import (
	"context"
	awsmiddleware "github.com/aws/aws-sdk-go-v2/aws/middleware"
	"github.com/aws/aws-sdk-go-v2/aws/retry"
	"github.com/aws/aws-sdk-go-v2/aws/signer/v4"
	"github.com/aws/aws-sdk-go-v2/service/kinesisanalyticsv2/types"
	smithy "github.com/awslabs/smithy-go"
	"github.com/awslabs/smithy-go/middleware"
	smithyhttp "github.com/awslabs/smithy-go/transport/http"
)

// Adds an external destination to your SQL-based Amazon Kinesis Data Analytics
// application. If you want Kinesis Data Analytics to deliver data from an
// in-application stream within your application to an external destination (such
// as an Kinesis data stream, a Kinesis Data Firehose delivery stream, or an AWS
// Lambda function), you add the relevant configuration to your application using
// this operation. You can configure one or more outputs for your application. Each
// output configuration maps an in-application stream and an external destination.
// You can use one of the output configurations to deliver data from your
// in-application error stream to an external destination so that you can analyze
// the errors. Any configuration update, including adding a streaming source using
// this operation, results in a new version of the application. You can use the
// DescribeApplication () operation to find the current application version.
func (c *Client) AddApplicationOutput(ctx context.Context, params *AddApplicationOutputInput, optFns ...func(*Options)) (*AddApplicationOutputOutput, error) {
	stack := middleware.NewStack("AddApplicationOutput", smithyhttp.NewStackRequest)
	options := c.options.Copy()
	for _, fn := range optFns {
		fn(&options)
	}
	addawsAwsjson11_serdeOpAddApplicationOutputMiddlewares(stack)
	awsmiddleware.AddRequestInvocationIDMiddleware(stack)
	smithyhttp.AddContentLengthMiddleware(stack)
	AddResolveEndpointMiddleware(stack, options)
	v4.AddComputePayloadSHA256Middleware(stack)
	retry.AddRetryMiddlewares(stack, options)
	addHTTPSignerV4Middleware(stack, options)
	awsmiddleware.AddAttemptClockSkewMiddleware(stack)
	addClientUserAgent(stack)
	smithyhttp.AddErrorCloseResponseBodyMiddleware(stack)
	smithyhttp.AddCloseResponseBodyMiddleware(stack)
	addOpAddApplicationOutputValidationMiddleware(stack)
	stack.Initialize.Add(newServiceMetadataMiddleware_opAddApplicationOutput(options.Region), middleware.Before)

	for _, fn := range options.APIOptions {
		if err := fn(stack); err != nil {
			return nil, err
		}
	}
	handler := middleware.DecorateHandler(smithyhttp.NewClientHandler(options.HTTPClient), stack)
	result, metadata, err := handler.Handle(ctx, params)
	if err != nil {
		return nil, &smithy.OperationError{
			ServiceID:     ServiceID,
			OperationName: "AddApplicationOutput",
			Err:           err,
		}
	}
	out := result.(*AddApplicationOutputOutput)
	out.ResultMetadata = metadata
	return out, nil
}

type AddApplicationOutputInput struct {
	// The name of the application to which you want to add the output configuration.
	ApplicationName *string
	// An array of objects, each describing one output configuration. In the output
	// configuration, you specify the name of an in-application stream, a destination
	// (that is, a Kinesis data stream, a Kinesis Data Firehose delivery stream, or an
	// AWS Lambda function), and record the formation to use when writing to the
	// destination.
	Output *types.Output
	// The version of the application to which you want to add the output
	// configuration. You can use the DescribeApplication () operation to get the
	// current application version. If the version specified is not the current
	// version, the ConcurrentModificationException is returned.
	CurrentApplicationVersionId *int64
}

type AddApplicationOutputOutput struct {
	// The updated application version ID. Kinesis Data Analytics increments this ID
	// when the application is updated.
	ApplicationVersionId *int64
	// The application Amazon Resource Name (ARN).
	ApplicationARN *string
	// Describes the application output configuration. For more information, see
	// Configuring Application Output
	// (https://docs.aws.amazon.com/kinesisanalytics/latest/dev/how-it-works-output.html).
	// </p>
	OutputDescriptions []*types.OutputDescription

	// Metadata pertaining to the operation's result.
	ResultMetadata middleware.Metadata
}

func addawsAwsjson11_serdeOpAddApplicationOutputMiddlewares(stack *middleware.Stack) {
	stack.Serialize.Add(&awsAwsjson11_serializeOpAddApplicationOutput{}, middleware.After)
	stack.Deserialize.Add(&awsAwsjson11_deserializeOpAddApplicationOutput{}, middleware.After)
}

func newServiceMetadataMiddleware_opAddApplicationOutput(region string) awsmiddleware.RegisterServiceMetadata {
	return awsmiddleware.RegisterServiceMetadata{
		Region:        region,
		ServiceID:     ServiceID,
		SigningName:   "kinesisanalytics",
		OperationName: "AddApplicationOutput",
	}
}
