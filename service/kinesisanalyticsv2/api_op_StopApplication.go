// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package kinesisanalyticsv2

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/kinesisanalyticsv2/types"
)

const opStopApplication = "StopApplication"

// StopApplicationRequest returns a request value for making API operation for
// Amazon Kinesis Analytics.
//
// Stops the application from processing data. You can stop an application only
// if it is in the running state. You can use the DescribeApplication operation
// to find the application state.
//
//    // Example sending a request using StopApplicationRequest.
//    req := client.StopApplicationRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/kinesisanalyticsv2-2018-05-23/StopApplication
func (c *Client) StopApplicationRequest(input *types.StopApplicationInput) StopApplicationRequest {
	op := &aws.Operation{
		Name:       opStopApplication,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &types.StopApplicationInput{}
	}

	req := c.newRequest(op, input, &types.StopApplicationOutput{})
	return StopApplicationRequest{Request: req, Input: input, Copy: c.StopApplicationRequest}
}

// StopApplicationRequest is the request type for the
// StopApplication API operation.
type StopApplicationRequest struct {
	*aws.Request
	Input *types.StopApplicationInput
	Copy  func(*types.StopApplicationInput) StopApplicationRequest
}

// Send marshals and sends the StopApplication API request.
func (r StopApplicationRequest) Send(ctx context.Context) (*StopApplicationResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &StopApplicationResponse{
		StopApplicationOutput: r.Request.Data.(*types.StopApplicationOutput),
		response:              &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// StopApplicationResponse is the response type for the
// StopApplication API operation.
type StopApplicationResponse struct {
	*types.StopApplicationOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// StopApplication request.
func (r *StopApplicationResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
