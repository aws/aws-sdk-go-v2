// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package neptune

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/neptune/types"
)

const opRebootDBInstance = "RebootDBInstance"

// RebootDBInstanceRequest returns a request value for making API operation for
// Amazon Neptune.
//
// You might need to reboot your DB instance, usually for maintenance reasons.
// For example, if you make certain modifications, or if you change the DB parameter
// group associated with the DB instance, you must reboot the instance for the
// changes to take effect.
//
// Rebooting a DB instance restarts the database engine service. Rebooting a
// DB instance results in a momentary outage, during which the DB instance status
// is set to rebooting.
//
//    // Example sending a request using RebootDBInstanceRequest.
//    req := client.RebootDBInstanceRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/RebootDBInstance
func (c *Client) RebootDBInstanceRequest(input *types.RebootDBInstanceInput) RebootDBInstanceRequest {
	op := &aws.Operation{
		Name:       opRebootDBInstance,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &types.RebootDBInstanceInput{}
	}

	req := c.newRequest(op, input, &types.RebootDBInstanceOutput{})
	return RebootDBInstanceRequest{Request: req, Input: input, Copy: c.RebootDBInstanceRequest}
}

// RebootDBInstanceRequest is the request type for the
// RebootDBInstance API operation.
type RebootDBInstanceRequest struct {
	*aws.Request
	Input *types.RebootDBInstanceInput
	Copy  func(*types.RebootDBInstanceInput) RebootDBInstanceRequest
}

// Send marshals and sends the RebootDBInstance API request.
func (r RebootDBInstanceRequest) Send(ctx context.Context) (*RebootDBInstanceResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &RebootDBInstanceResponse{
		RebootDBInstanceOutput: r.Request.Data.(*types.RebootDBInstanceOutput),
		response:               &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// RebootDBInstanceResponse is the response type for the
// RebootDBInstance API operation.
type RebootDBInstanceResponse struct {
	*types.RebootDBInstanceOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// RebootDBInstance request.
func (r *RebootDBInstanceResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
