// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package neptune

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/neptune/types"
)

const opDescribePendingMaintenanceActions = "DescribePendingMaintenanceActions"

// DescribePendingMaintenanceActionsRequest returns a request value for making API operation for
// Amazon Neptune.
//
// Returns a list of resources (for example, DB instances) that have at least
// one pending maintenance action.
//
//    // Example sending a request using DescribePendingMaintenanceActionsRequest.
//    req := client.DescribePendingMaintenanceActionsRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/DescribePendingMaintenanceActions
func (c *Client) DescribePendingMaintenanceActionsRequest(input *types.DescribePendingMaintenanceActionsInput) DescribePendingMaintenanceActionsRequest {
	op := &aws.Operation{
		Name:       opDescribePendingMaintenanceActions,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &types.DescribePendingMaintenanceActionsInput{}
	}

	req := c.newRequest(op, input, &types.DescribePendingMaintenanceActionsOutput{})
	return DescribePendingMaintenanceActionsRequest{Request: req, Input: input, Copy: c.DescribePendingMaintenanceActionsRequest}
}

// DescribePendingMaintenanceActionsRequest is the request type for the
// DescribePendingMaintenanceActions API operation.
type DescribePendingMaintenanceActionsRequest struct {
	*aws.Request
	Input *types.DescribePendingMaintenanceActionsInput
	Copy  func(*types.DescribePendingMaintenanceActionsInput) DescribePendingMaintenanceActionsRequest
}

// Send marshals and sends the DescribePendingMaintenanceActions API request.
func (r DescribePendingMaintenanceActionsRequest) Send(ctx context.Context) (*DescribePendingMaintenanceActionsResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &DescribePendingMaintenanceActionsResponse{
		DescribePendingMaintenanceActionsOutput: r.Request.Data.(*types.DescribePendingMaintenanceActionsOutput),
		response:                                &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// DescribePendingMaintenanceActionsResponse is the response type for the
// DescribePendingMaintenanceActions API operation.
type DescribePendingMaintenanceActionsResponse struct {
	*types.DescribePendingMaintenanceActionsOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// DescribePendingMaintenanceActions request.
func (r *DescribePendingMaintenanceActionsResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
