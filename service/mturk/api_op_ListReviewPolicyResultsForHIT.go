// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package mturk

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/mturk/types"
)

const opListReviewPolicyResultsForHIT = "ListReviewPolicyResultsForHIT"

// ListReviewPolicyResultsForHITRequest returns a request value for making API operation for
// Amazon Mechanical Turk.
//
// The ListReviewPolicyResultsForHIT operation retrieves the computed results
// and the actions taken in the course of executing your Review Policies for
// a given HIT. For information about how to specify Review Policies when you
// call CreateHIT, see Review Policies. The ListReviewPolicyResultsForHIT operation
// can return results for both Assignment-level and HIT-level review results.
//
//    // Example sending a request using ListReviewPolicyResultsForHITRequest.
//    req := client.ListReviewPolicyResultsForHITRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/mturk-requester-2017-01-17/ListReviewPolicyResultsForHIT
func (c *Client) ListReviewPolicyResultsForHITRequest(input *types.ListReviewPolicyResultsForHITInput) ListReviewPolicyResultsForHITRequest {
	op := &aws.Operation{
		Name:       opListReviewPolicyResultsForHIT,
		HTTPMethod: "POST",
		HTTPPath:   "/",
		Paginator: &aws.Paginator{
			InputTokens:     []string{"NextToken"},
			OutputTokens:    []string{"NextToken"},
			LimitToken:      "MaxResults",
			TruncationToken: "",
		},
	}

	if input == nil {
		input = &types.ListReviewPolicyResultsForHITInput{}
	}

	req := c.newRequest(op, input, &types.ListReviewPolicyResultsForHITOutput{})
	return ListReviewPolicyResultsForHITRequest{Request: req, Input: input, Copy: c.ListReviewPolicyResultsForHITRequest}
}

// ListReviewPolicyResultsForHITRequest is the request type for the
// ListReviewPolicyResultsForHIT API operation.
type ListReviewPolicyResultsForHITRequest struct {
	*aws.Request
	Input *types.ListReviewPolicyResultsForHITInput
	Copy  func(*types.ListReviewPolicyResultsForHITInput) ListReviewPolicyResultsForHITRequest
}

// Send marshals and sends the ListReviewPolicyResultsForHIT API request.
func (r ListReviewPolicyResultsForHITRequest) Send(ctx context.Context) (*ListReviewPolicyResultsForHITResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &ListReviewPolicyResultsForHITResponse{
		ListReviewPolicyResultsForHITOutput: r.Request.Data.(*types.ListReviewPolicyResultsForHITOutput),
		response:                            &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// NewListReviewPolicyResultsForHITRequestPaginator returns a paginator for ListReviewPolicyResultsForHIT.
// Use Next method to get the next page, and CurrentPage to get the current
// response page from the paginator. Next will return false, if there are
// no more pages, or an error was encountered.
//
// Note: This operation can generate multiple requests to a service.
//
//   // Example iterating over pages.
//   req := client.ListReviewPolicyResultsForHITRequest(input)
//   p := mturk.NewListReviewPolicyResultsForHITRequestPaginator(req)
//
//   for p.Next(context.TODO()) {
//       page := p.CurrentPage()
//   }
//
//   if err := p.Err(); err != nil {
//       return err
//   }
//
func NewListReviewPolicyResultsForHITPaginator(req ListReviewPolicyResultsForHITRequest) ListReviewPolicyResultsForHITPaginator {
	return ListReviewPolicyResultsForHITPaginator{
		Pager: aws.Pager{
			NewRequest: func(ctx context.Context) (*aws.Request, error) {
				var inCpy *types.ListReviewPolicyResultsForHITInput
				if req.Input != nil {
					tmp := *req.Input
					inCpy = &tmp
				}

				newReq := req.Copy(inCpy)
				newReq.SetContext(ctx)
				return newReq.Request, nil
			},
		},
	}
}

// ListReviewPolicyResultsForHITPaginator is used to paginate the request. This can be done by
// calling Next and CurrentPage.
type ListReviewPolicyResultsForHITPaginator struct {
	aws.Pager
}

func (p *ListReviewPolicyResultsForHITPaginator) CurrentPage() *types.ListReviewPolicyResultsForHITOutput {
	return p.Pager.CurrentPage().(*types.ListReviewPolicyResultsForHITOutput)
}

// ListReviewPolicyResultsForHITResponse is the response type for the
// ListReviewPolicyResultsForHIT API operation.
type ListReviewPolicyResultsForHITResponse struct {
	*types.ListReviewPolicyResultsForHITOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// ListReviewPolicyResultsForHIT request.
func (r *ListReviewPolicyResultsForHITResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
