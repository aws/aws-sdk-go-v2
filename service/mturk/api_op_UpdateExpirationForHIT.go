// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package mturk

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/mturk/types"
)

const opUpdateExpirationForHIT = "UpdateExpirationForHIT"

// UpdateExpirationForHITRequest returns a request value for making API operation for
// Amazon Mechanical Turk.
//
// The UpdateExpirationForHIT operation allows you update the expiration time
// of a HIT. If you update it to a time in the past, the HIT will be immediately
// expired.
//
//    // Example sending a request using UpdateExpirationForHITRequest.
//    req := client.UpdateExpirationForHITRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/mturk-requester-2017-01-17/UpdateExpirationForHIT
func (c *Client) UpdateExpirationForHITRequest(input *types.UpdateExpirationForHITInput) UpdateExpirationForHITRequest {
	op := &aws.Operation{
		Name:       opUpdateExpirationForHIT,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &types.UpdateExpirationForHITInput{}
	}

	req := c.newRequest(op, input, &types.UpdateExpirationForHITOutput{})
	return UpdateExpirationForHITRequest{Request: req, Input: input, Copy: c.UpdateExpirationForHITRequest}
}

// UpdateExpirationForHITRequest is the request type for the
// UpdateExpirationForHIT API operation.
type UpdateExpirationForHITRequest struct {
	*aws.Request
	Input *types.UpdateExpirationForHITInput
	Copy  func(*types.UpdateExpirationForHITInput) UpdateExpirationForHITRequest
}

// Send marshals and sends the UpdateExpirationForHIT API request.
func (r UpdateExpirationForHITRequest) Send(ctx context.Context) (*UpdateExpirationForHITResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &UpdateExpirationForHITResponse{
		UpdateExpirationForHITOutput: r.Request.Data.(*types.UpdateExpirationForHITOutput),
		response:                     &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// UpdateExpirationForHITResponse is the response type for the
// UpdateExpirationForHIT API operation.
type UpdateExpirationForHITResponse struct {
	*types.UpdateExpirationForHITOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// UpdateExpirationForHIT request.
func (r *UpdateExpirationForHITResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
