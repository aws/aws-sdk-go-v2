// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package lexmodelbuildingservice

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/private/protocol"
	"github.com/aws/aws-sdk-go-v2/private/protocol/restjson"
	"github.com/aws/aws-sdk-go-v2/service/lexmodelbuildingservice/types"
)

const opDeleteIntent = "DeleteIntent"

// DeleteIntentRequest returns a request value for making API operation for
// Amazon Lex Model Building Service.
//
// Deletes all versions of the intent, including the $LATEST version. To delete
// a specific version of the intent, use the DeleteIntentVersion operation.
//
// You can delete a version of an intent only if it is not referenced. To delete
// an intent that is referred to in one or more bots (see how-it-works), you
// must remove those references first.
//
// If you get the ResourceInUseException exception, it provides an example reference
// that shows where the intent is referenced. To remove the reference to the
// intent, either update the bot or delete it. If you get the same exception
// when you attempt to delete the intent again, repeat until the intent has
// no references and the call to DeleteIntent is successful.
//
// This operation requires permission for the lex:DeleteIntent action.
//
//    // Example sending a request using DeleteIntentRequest.
//    req := client.DeleteIntentRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/DeleteIntent
func (c *Client) DeleteIntentRequest(input *types.DeleteIntentInput) DeleteIntentRequest {
	op := &aws.Operation{
		Name:       opDeleteIntent,
		HTTPMethod: "DELETE",
		HTTPPath:   "/intents/{name}",
	}

	if input == nil {
		input = &types.DeleteIntentInput{}
	}

	req := c.newRequest(op, input, &types.DeleteIntentOutput{})
	req.Handlers.Unmarshal.Remove(restjson.UnmarshalHandler)
	req.Handlers.Unmarshal.PushBackNamed(protocol.UnmarshalDiscardBodyHandler)
	return DeleteIntentRequest{Request: req, Input: input, Copy: c.DeleteIntentRequest}
}

// DeleteIntentRequest is the request type for the
// DeleteIntent API operation.
type DeleteIntentRequest struct {
	*aws.Request
	Input *types.DeleteIntentInput
	Copy  func(*types.DeleteIntentInput) DeleteIntentRequest
}

// Send marshals and sends the DeleteIntent API request.
func (r DeleteIntentRequest) Send(ctx context.Context) (*DeleteIntentResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &DeleteIntentResponse{
		DeleteIntentOutput: r.Request.Data.(*types.DeleteIntentOutput),
		response:           &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// DeleteIntentResponse is the response type for the
// DeleteIntent API operation.
type DeleteIntentResponse struct {
	*types.DeleteIntentOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// DeleteIntent request.
func (r *DeleteIntentResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
