// Code generated by smithy-go-codegen DO NOT EDIT.

package types

type ChannelStatus string

// Enum values for ChannelStatus
const (
	ChannelStatusIn_progress ChannelStatus = "IN_PROGRESS"
	ChannelStatusCreated     ChannelStatus = "CREATED"
	ChannelStatusFailed      ChannelStatus = "FAILED"
)

// Values returns all known values for ChannelStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (ChannelStatus) Values() []ChannelStatus {
	return []ChannelStatus{
		"IN_PROGRESS",
		"CREATED",
		"FAILED",
	}
}

type ChannelType string

// Enum values for ChannelType
const (
	ChannelTypeFacebook   ChannelType = "Facebook"
	ChannelTypeSlack      ChannelType = "Slack"
	ChannelTypeTwilio_sms ChannelType = "Twilio-Sms"
	ChannelTypeKik        ChannelType = "Kik"
)

// Values returns all known values for ChannelType. Note that this can be expanded
// in the future, and so it is only as up to date as the client. The ordering of
// this slice is not guaranteed to be stable across updates.
func (ChannelType) Values() []ChannelType {
	return []ChannelType{
		"Facebook",
		"Slack",
		"Twilio-Sms",
		"Kik",
	}
}

type ContentType string

// Enum values for ContentType
const (
	ContentTypePlain_text     ContentType = "PlainText"
	ContentTypeSsml           ContentType = "SSML"
	ContentTypeCustom_payload ContentType = "CustomPayload"
)

// Values returns all known values for ContentType. Note that this can be expanded
// in the future, and so it is only as up to date as the client. The ordering of
// this slice is not guaranteed to be stable across updates.
func (ContentType) Values() []ContentType {
	return []ContentType{
		"PlainText",
		"SSML",
		"CustomPayload",
	}
}

type Destination string

// Enum values for Destination
const (
	DestinationCloudwatch_logs Destination = "CLOUDWATCH_LOGS"
	DestinationS3              Destination = "S3"
)

// Values returns all known values for Destination. Note that this can be expanded
// in the future, and so it is only as up to date as the client. The ordering of
// this slice is not guaranteed to be stable across updates.
func (Destination) Values() []Destination {
	return []Destination{
		"CLOUDWATCH_LOGS",
		"S3",
	}
}

type ExportStatus string

// Enum values for ExportStatus
const (
	ExportStatusIn_progress ExportStatus = "IN_PROGRESS"
	ExportStatusReady       ExportStatus = "READY"
	ExportStatusFailed      ExportStatus = "FAILED"
)

// Values returns all known values for ExportStatus. Note that this can be expanded
// in the future, and so it is only as up to date as the client. The ordering of
// this slice is not guaranteed to be stable across updates.
func (ExportStatus) Values() []ExportStatus {
	return []ExportStatus{
		"IN_PROGRESS",
		"READY",
		"FAILED",
	}
}

type ExportType string

// Enum values for ExportType
const (
	ExportTypeAlexa_skills_kit ExportType = "ALEXA_SKILLS_KIT"
	ExportTypeLex              ExportType = "LEX"
)

// Values returns all known values for ExportType. Note that this can be expanded
// in the future, and so it is only as up to date as the client. The ordering of
// this slice is not guaranteed to be stable across updates.
func (ExportType) Values() []ExportType {
	return []ExportType{
		"ALEXA_SKILLS_KIT",
		"LEX",
	}
}

type FulfillmentActivityType string

// Enum values for FulfillmentActivityType
const (
	FulfillmentActivityTypeReturn_intent FulfillmentActivityType = "ReturnIntent"
	FulfillmentActivityTypeCode_hook     FulfillmentActivityType = "CodeHook"
)

// Values returns all known values for FulfillmentActivityType. Note that this can
// be expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (FulfillmentActivityType) Values() []FulfillmentActivityType {
	return []FulfillmentActivityType{
		"ReturnIntent",
		"CodeHook",
	}
}

type ImportStatus string

// Enum values for ImportStatus
const (
	ImportStatusIn_progress ImportStatus = "IN_PROGRESS"
	ImportStatusComplete    ImportStatus = "COMPLETE"
	ImportStatusFailed      ImportStatus = "FAILED"
)

// Values returns all known values for ImportStatus. Note that this can be expanded
// in the future, and so it is only as up to date as the client. The ordering of
// this slice is not guaranteed to be stable across updates.
func (ImportStatus) Values() []ImportStatus {
	return []ImportStatus{
		"IN_PROGRESS",
		"COMPLETE",
		"FAILED",
	}
}

type Locale string

// Enum values for Locale
const (
	LocaleDe_de Locale = "de-DE"
	LocaleEn_au Locale = "en-AU"
	LocaleEn_gb Locale = "en-GB"
	LocaleEn_us Locale = "en-US"
	LocaleEs_us Locale = "es-US"
)

// Values returns all known values for Locale. Note that this can be expanded in
// the future, and so it is only as up to date as the client. The ordering of this
// slice is not guaranteed to be stable across updates.
func (Locale) Values() []Locale {
	return []Locale{
		"de-DE",
		"en-AU",
		"en-GB",
		"en-US",
		"es-US",
	}
}

type LogType string

// Enum values for LogType
const (
	LogTypeAudio LogType = "AUDIO"
	LogTypeText  LogType = "TEXT"
)

// Values returns all known values for LogType. Note that this can be expanded in
// the future, and so it is only as up to date as the client. The ordering of this
// slice is not guaranteed to be stable across updates.
func (LogType) Values() []LogType {
	return []LogType{
		"AUDIO",
		"TEXT",
	}
}

type MergeStrategy string

// Enum values for MergeStrategy
const (
	MergeStrategyOverwrite_latest MergeStrategy = "OVERWRITE_LATEST"
	MergeStrategyFail_on_conflict MergeStrategy = "FAIL_ON_CONFLICT"
)

// Values returns all known values for MergeStrategy. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (MergeStrategy) Values() []MergeStrategy {
	return []MergeStrategy{
		"OVERWRITE_LATEST",
		"FAIL_ON_CONFLICT",
	}
}

type ObfuscationSetting string

// Enum values for ObfuscationSetting
const (
	ObfuscationSettingNone                ObfuscationSetting = "NONE"
	ObfuscationSettingDefault_obfuscation ObfuscationSetting = "DEFAULT_OBFUSCATION"
)

// Values returns all known values for ObfuscationSetting. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (ObfuscationSetting) Values() []ObfuscationSetting {
	return []ObfuscationSetting{
		"NONE",
		"DEFAULT_OBFUSCATION",
	}
}

type ProcessBehavior string

// Enum values for ProcessBehavior
const (
	ProcessBehaviorSave  ProcessBehavior = "SAVE"
	ProcessBehaviorBuild ProcessBehavior = "BUILD"
)

// Values returns all known values for ProcessBehavior. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (ProcessBehavior) Values() []ProcessBehavior {
	return []ProcessBehavior{
		"SAVE",
		"BUILD",
	}
}

type ReferenceType string

// Enum values for ReferenceType
const (
	ReferenceTypeIntent     ReferenceType = "Intent"
	ReferenceTypeBot        ReferenceType = "Bot"
	ReferenceTypeBotalias   ReferenceType = "BotAlias"
	ReferenceTypeBotchannel ReferenceType = "BotChannel"
)

// Values returns all known values for ReferenceType. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (ReferenceType) Values() []ReferenceType {
	return []ReferenceType{
		"Intent",
		"Bot",
		"BotAlias",
		"BotChannel",
	}
}

type ResourceType string

// Enum values for ResourceType
const (
	ResourceTypeBot       ResourceType = "BOT"
	ResourceTypeIntent    ResourceType = "INTENT"
	ResourceTypeSlot_type ResourceType = "SLOT_TYPE"
)

// Values returns all known values for ResourceType. Note that this can be expanded
// in the future, and so it is only as up to date as the client. The ordering of
// this slice is not guaranteed to be stable across updates.
func (ResourceType) Values() []ResourceType {
	return []ResourceType{
		"BOT",
		"INTENT",
		"SLOT_TYPE",
	}
}

type SlotConstraint string

// Enum values for SlotConstraint
const (
	SlotConstraintRequired SlotConstraint = "Required"
	SlotConstraintOptional SlotConstraint = "Optional"
)

// Values returns all known values for SlotConstraint. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (SlotConstraint) Values() []SlotConstraint {
	return []SlotConstraint{
		"Required",
		"Optional",
	}
}

type SlotValueSelectionStrategy string

// Enum values for SlotValueSelectionStrategy
const (
	SlotValueSelectionStrategyOriginal_value SlotValueSelectionStrategy = "ORIGINAL_VALUE"
	SlotValueSelectionStrategyTop_resolution SlotValueSelectionStrategy = "TOP_RESOLUTION"
)

// Values returns all known values for SlotValueSelectionStrategy. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
// The ordering of this slice is not guaranteed to be stable across updates.
func (SlotValueSelectionStrategy) Values() []SlotValueSelectionStrategy {
	return []SlotValueSelectionStrategy{
		"ORIGINAL_VALUE",
		"TOP_RESOLUTION",
	}
}

type Status string

// Enum values for Status
const (
	StatusBuilding            Status = "BUILDING"
	StatusReady               Status = "READY"
	StatusReady_basic_testing Status = "READY_BASIC_TESTING"
	StatusFailed              Status = "FAILED"
	StatusNot_built           Status = "NOT_BUILT"
)

// Values returns all known values for Status. Note that this can be expanded in
// the future, and so it is only as up to date as the client. The ordering of this
// slice is not guaranteed to be stable across updates.
func (Status) Values() []Status {
	return []Status{
		"BUILDING",
		"READY",
		"READY_BASIC_TESTING",
		"FAILED",
		"NOT_BUILT",
	}
}

type StatusType string

// Enum values for StatusType
const (
	StatusTypeDetected StatusType = "Detected"
	StatusTypeMissed   StatusType = "Missed"
)

// Values returns all known values for StatusType. Note that this can be expanded
// in the future, and so it is only as up to date as the client. The ordering of
// this slice is not guaranteed to be stable across updates.
func (StatusType) Values() []StatusType {
	return []StatusType{
		"Detected",
		"Missed",
	}
}
