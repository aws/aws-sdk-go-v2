// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package lexmodelbuildingservice

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/private/protocol"
	"github.com/aws/aws-sdk-go-v2/private/protocol/restjson"
	"github.com/aws/aws-sdk-go-v2/service/lexmodelbuildingservice/types"
)

const opDeleteBotChannelAssociation = "DeleteBotChannelAssociation"

// DeleteBotChannelAssociationRequest returns a request value for making API operation for
// Amazon Lex Model Building Service.
//
// Deletes the association between an Amazon Lex bot and a messaging platform.
//
// This operation requires permission for the lex:DeleteBotChannelAssociation
// action.
//
//    // Example sending a request using DeleteBotChannelAssociationRequest.
//    req := client.DeleteBotChannelAssociationRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/DeleteBotChannelAssociation
func (c *Client) DeleteBotChannelAssociationRequest(input *types.DeleteBotChannelAssociationInput) DeleteBotChannelAssociationRequest {
	op := &aws.Operation{
		Name:       opDeleteBotChannelAssociation,
		HTTPMethod: "DELETE",
		HTTPPath:   "/bots/{botName}/aliases/{aliasName}/channels/{name}",
	}

	if input == nil {
		input = &types.DeleteBotChannelAssociationInput{}
	}

	req := c.newRequest(op, input, &types.DeleteBotChannelAssociationOutput{})
	req.Handlers.Unmarshal.Remove(restjson.UnmarshalHandler)
	req.Handlers.Unmarshal.PushBackNamed(protocol.UnmarshalDiscardBodyHandler)
	return DeleteBotChannelAssociationRequest{Request: req, Input: input, Copy: c.DeleteBotChannelAssociationRequest}
}

// DeleteBotChannelAssociationRequest is the request type for the
// DeleteBotChannelAssociation API operation.
type DeleteBotChannelAssociationRequest struct {
	*aws.Request
	Input *types.DeleteBotChannelAssociationInput
	Copy  func(*types.DeleteBotChannelAssociationInput) DeleteBotChannelAssociationRequest
}

// Send marshals and sends the DeleteBotChannelAssociation API request.
func (r DeleteBotChannelAssociationRequest) Send(ctx context.Context) (*DeleteBotChannelAssociationResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &DeleteBotChannelAssociationResponse{
		DeleteBotChannelAssociationOutput: r.Request.Data.(*types.DeleteBotChannelAssociationOutput),
		response:                          &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// DeleteBotChannelAssociationResponse is the response type for the
// DeleteBotChannelAssociation API operation.
type DeleteBotChannelAssociationResponse struct {
	*types.DeleteBotChannelAssociationOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// DeleteBotChannelAssociation request.
func (r *DeleteBotChannelAssociationResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
