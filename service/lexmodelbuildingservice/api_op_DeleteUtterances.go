// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package lexmodelbuildingservice

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/private/protocol"
	"github.com/aws/aws-sdk-go-v2/private/protocol/restjson"
	"github.com/aws/aws-sdk-go-v2/service/lexmodelbuildingservice/types"
)

const opDeleteUtterances = "DeleteUtterances"

// DeleteUtterancesRequest returns a request value for making API operation for
// Amazon Lex Model Building Service.
//
// Deletes stored utterances.
//
// Amazon Lex stores the utterances that users send to your bot. Utterances
// are stored for 15 days for use with the GetUtterancesView operation, and
// then stored indefinitely for use in improving the ability of your bot to
// respond to user input.
//
// Use the DeleteStoredUtterances operation to manually delete stored utterances
// for a specific user.
//
// This operation requires permissions for the lex:DeleteUtterances action.
//
//    // Example sending a request using DeleteUtterancesRequest.
//    req := client.DeleteUtterancesRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/DeleteUtterances
func (c *Client) DeleteUtterancesRequest(input *types.DeleteUtterancesInput) DeleteUtterancesRequest {
	op := &aws.Operation{
		Name:       opDeleteUtterances,
		HTTPMethod: "DELETE",
		HTTPPath:   "/bots/{botName}/utterances/{userId}",
	}

	if input == nil {
		input = &types.DeleteUtterancesInput{}
	}

	req := c.newRequest(op, input, &types.DeleteUtterancesOutput{})
	req.Handlers.Unmarshal.Remove(restjson.UnmarshalHandler)
	req.Handlers.Unmarshal.PushBackNamed(protocol.UnmarshalDiscardBodyHandler)
	return DeleteUtterancesRequest{Request: req, Input: input, Copy: c.DeleteUtterancesRequest}
}

// DeleteUtterancesRequest is the request type for the
// DeleteUtterances API operation.
type DeleteUtterancesRequest struct {
	*aws.Request
	Input *types.DeleteUtterancesInput
	Copy  func(*types.DeleteUtterancesInput) DeleteUtterancesRequest
}

// Send marshals and sends the DeleteUtterances API request.
func (r DeleteUtterancesRequest) Send(ctx context.Context) (*DeleteUtterancesResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &DeleteUtterancesResponse{
		DeleteUtterancesOutput: r.Request.Data.(*types.DeleteUtterancesOutput),
		response:               &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// DeleteUtterancesResponse is the response type for the
// DeleteUtterances API operation.
type DeleteUtterancesResponse struct {
	*types.DeleteUtterancesOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// DeleteUtterances request.
func (r *DeleteUtterancesResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
