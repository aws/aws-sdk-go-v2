// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package lexmodelbuildingservice

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/lexmodelbuildingservice/types"
)

const opGetBotVersions = "GetBotVersions"

// GetBotVersionsRequest returns a request value for making API operation for
// Amazon Lex Model Building Service.
//
// Gets information about all of the versions of a bot.
//
// The GetBotVersions operation returns a BotMetadata object for each version
// of a bot. For example, if a bot has three numbered versions, the GetBotVersions
// operation returns four BotMetadata objects in the response, one for each
// numbered version and one for the $LATEST version.
//
// The GetBotVersions operation always returns at least one version, the $LATEST
// version.
//
// This operation requires permissions for the lex:GetBotVersions action.
//
//    // Example sending a request using GetBotVersionsRequest.
//    req := client.GetBotVersionsRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/GetBotVersions
func (c *Client) GetBotVersionsRequest(input *types.GetBotVersionsInput) GetBotVersionsRequest {
	op := &aws.Operation{
		Name:       opGetBotVersions,
		HTTPMethod: "GET",
		HTTPPath:   "/bots/{name}/versions/",
		Paginator: &aws.Paginator{
			InputTokens:     []string{"nextToken"},
			OutputTokens:    []string{"nextToken"},
			LimitToken:      "maxResults",
			TruncationToken: "",
		},
	}

	if input == nil {
		input = &types.GetBotVersionsInput{}
	}

	req := c.newRequest(op, input, &types.GetBotVersionsOutput{})
	return GetBotVersionsRequest{Request: req, Input: input, Copy: c.GetBotVersionsRequest}
}

// GetBotVersionsRequest is the request type for the
// GetBotVersions API operation.
type GetBotVersionsRequest struct {
	*aws.Request
	Input *types.GetBotVersionsInput
	Copy  func(*types.GetBotVersionsInput) GetBotVersionsRequest
}

// Send marshals and sends the GetBotVersions API request.
func (r GetBotVersionsRequest) Send(ctx context.Context) (*GetBotVersionsResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &GetBotVersionsResponse{
		GetBotVersionsOutput: r.Request.Data.(*types.GetBotVersionsOutput),
		response:             &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// NewGetBotVersionsRequestPaginator returns a paginator for GetBotVersions.
// Use Next method to get the next page, and CurrentPage to get the current
// response page from the paginator. Next will return false, if there are
// no more pages, or an error was encountered.
//
// Note: This operation can generate multiple requests to a service.
//
//   // Example iterating over pages.
//   req := client.GetBotVersionsRequest(input)
//   p := lexmodelbuildingservice.NewGetBotVersionsRequestPaginator(req)
//
//   for p.Next(context.TODO()) {
//       page := p.CurrentPage()
//   }
//
//   if err := p.Err(); err != nil {
//       return err
//   }
//
func NewGetBotVersionsPaginator(req GetBotVersionsRequest) GetBotVersionsPaginator {
	return GetBotVersionsPaginator{
		Pager: aws.Pager{
			NewRequest: func(ctx context.Context) (*aws.Request, error) {
				var inCpy *types.GetBotVersionsInput
				if req.Input != nil {
					tmp := *req.Input
					inCpy = &tmp
				}

				newReq := req.Copy(inCpy)
				newReq.SetContext(ctx)
				return newReq.Request, nil
			},
		},
	}
}

// GetBotVersionsPaginator is used to paginate the request. This can be done by
// calling Next and CurrentPage.
type GetBotVersionsPaginator struct {
	aws.Pager
}

func (p *GetBotVersionsPaginator) CurrentPage() *types.GetBotVersionsOutput {
	return p.Pager.CurrentPage().(*types.GetBotVersionsOutput)
}

// GetBotVersionsResponse is the response type for the
// GetBotVersions API operation.
type GetBotVersionsResponse struct {
	*types.GetBotVersionsOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// GetBotVersions request.
func (r *GetBotVersionsResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
