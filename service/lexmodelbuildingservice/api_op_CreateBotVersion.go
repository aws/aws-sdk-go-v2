// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package lexmodelbuildingservice

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/lexmodelbuildingservice/types"
)

const opCreateBotVersion = "CreateBotVersion"

// CreateBotVersionRequest returns a request value for making API operation for
// Amazon Lex Model Building Service.
//
// Creates a new version of the bot based on the $LATEST version. If the $LATEST
// version of this resource hasn't changed since you created the last version,
// Amazon Lex doesn't create a new version. It returns the last created version.
//
// You can update only the $LATEST version of the bot. You can't update the
// numbered versions that you create with the CreateBotVersion operation.
//
// When you create the first version of a bot, Amazon Lex sets the version to
// 1. Subsequent versions increment by 1. For more information, see versioning-intro.
//
// This operation requires permission for the lex:CreateBotVersion action.
//
//    // Example sending a request using CreateBotVersionRequest.
//    req := client.CreateBotVersionRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/CreateBotVersion
func (c *Client) CreateBotVersionRequest(input *types.CreateBotVersionInput) CreateBotVersionRequest {
	op := &aws.Operation{
		Name:       opCreateBotVersion,
		HTTPMethod: "POST",
		HTTPPath:   "/bots/{name}/versions",
	}

	if input == nil {
		input = &types.CreateBotVersionInput{}
	}

	req := c.newRequest(op, input, &types.CreateBotVersionOutput{})
	return CreateBotVersionRequest{Request: req, Input: input, Copy: c.CreateBotVersionRequest}
}

// CreateBotVersionRequest is the request type for the
// CreateBotVersion API operation.
type CreateBotVersionRequest struct {
	*aws.Request
	Input *types.CreateBotVersionInput
	Copy  func(*types.CreateBotVersionInput) CreateBotVersionRequest
}

// Send marshals and sends the CreateBotVersion API request.
func (r CreateBotVersionRequest) Send(ctx context.Context) (*CreateBotVersionResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &CreateBotVersionResponse{
		CreateBotVersionOutput: r.Request.Data.(*types.CreateBotVersionOutput),
		response:               &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// CreateBotVersionResponse is the response type for the
// CreateBotVersion API operation.
type CreateBotVersionResponse struct {
	*types.CreateBotVersionOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// CreateBotVersion request.
func (r *CreateBotVersionResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
