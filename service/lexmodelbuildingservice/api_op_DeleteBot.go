// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package lexmodelbuildingservice

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/private/protocol"
	"github.com/aws/aws-sdk-go-v2/private/protocol/restjson"
	"github.com/aws/aws-sdk-go-v2/service/lexmodelbuildingservice/types"
)

const opDeleteBot = "DeleteBot"

// DeleteBotRequest returns a request value for making API operation for
// Amazon Lex Model Building Service.
//
// Deletes all versions of the bot, including the $LATEST version. To delete
// a specific version of the bot, use the DeleteBotVersion operation.
//
// If a bot has an alias, you can't delete it. Instead, the DeleteBot operation
// returns a ResourceInUseException exception that includes a reference to the
// alias that refers to the bot. To remove the reference to the bot, delete
// the alias. If you get the same exception again, delete the referring alias
// until the DeleteBot operation is successful.
//
// This operation requires permissions for the lex:DeleteBot action.
//
//    // Example sending a request using DeleteBotRequest.
//    req := client.DeleteBotRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/lex-models-2017-04-19/DeleteBot
func (c *Client) DeleteBotRequest(input *types.DeleteBotInput) DeleteBotRequest {
	op := &aws.Operation{
		Name:       opDeleteBot,
		HTTPMethod: "DELETE",
		HTTPPath:   "/bots/{name}",
	}

	if input == nil {
		input = &types.DeleteBotInput{}
	}

	req := c.newRequest(op, input, &types.DeleteBotOutput{})
	req.Handlers.Unmarshal.Remove(restjson.UnmarshalHandler)
	req.Handlers.Unmarshal.PushBackNamed(protocol.UnmarshalDiscardBodyHandler)
	return DeleteBotRequest{Request: req, Input: input, Copy: c.DeleteBotRequest}
}

// DeleteBotRequest is the request type for the
// DeleteBot API operation.
type DeleteBotRequest struct {
	*aws.Request
	Input *types.DeleteBotInput
	Copy  func(*types.DeleteBotInput) DeleteBotRequest
}

// Send marshals and sends the DeleteBot API request.
func (r DeleteBotRequest) Send(ctx context.Context) (*DeleteBotResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &DeleteBotResponse{
		DeleteBotOutput: r.Request.Data.(*types.DeleteBotOutput),
		response:        &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// DeleteBotResponse is the response type for the
// DeleteBot API operation.
type DeleteBotResponse struct {
	*types.DeleteBotOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// DeleteBot request.
func (r *DeleteBotResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
