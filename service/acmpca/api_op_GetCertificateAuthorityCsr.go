// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package acmpca

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/acmpca/types"
)

const opGetCertificateAuthorityCsr = "GetCertificateAuthorityCsr"

// GetCertificateAuthorityCsrRequest returns a request value for making API operation for
// AWS Certificate Manager Private Certificate Authority.
//
// Retrieves the certificate signing request (CSR) for your private certificate
// authority (CA). The CSR is created when you call the CreateCertificateAuthority
// action. Sign the CSR with your ACM Private CA-hosted or on-premises root
// or subordinate CA. Then import the signed certificate back into ACM Private
// CA by calling the ImportCertificateAuthorityCertificate action. The CSR is
// returned as a base64 PEM-encoded string.
//
//    // Example sending a request using GetCertificateAuthorityCsrRequest.
//    req := client.GetCertificateAuthorityCsrRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/acm-pca-2017-08-22/GetCertificateAuthorityCsr
func (c *Client) GetCertificateAuthorityCsrRequest(input *types.GetCertificateAuthorityCsrInput) GetCertificateAuthorityCsrRequest {
	op := &aws.Operation{
		Name:       opGetCertificateAuthorityCsr,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &types.GetCertificateAuthorityCsrInput{}
	}

	req := c.newRequest(op, input, &types.GetCertificateAuthorityCsrOutput{})
	return GetCertificateAuthorityCsrRequest{Request: req, Input: input, Copy: c.GetCertificateAuthorityCsrRequest}
}

// GetCertificateAuthorityCsrRequest is the request type for the
// GetCertificateAuthorityCsr API operation.
type GetCertificateAuthorityCsrRequest struct {
	*aws.Request
	Input *types.GetCertificateAuthorityCsrInput
	Copy  func(*types.GetCertificateAuthorityCsrInput) GetCertificateAuthorityCsrRequest
}

// Send marshals and sends the GetCertificateAuthorityCsr API request.
func (r GetCertificateAuthorityCsrRequest) Send(ctx context.Context) (*GetCertificateAuthorityCsrResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &GetCertificateAuthorityCsrResponse{
		GetCertificateAuthorityCsrOutput: r.Request.Data.(*types.GetCertificateAuthorityCsrOutput),
		response:                         &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// GetCertificateAuthorityCsrResponse is the response type for the
// GetCertificateAuthorityCsr API operation.
type GetCertificateAuthorityCsrResponse struct {
	*types.GetCertificateAuthorityCsrOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// GetCertificateAuthorityCsr request.
func (r *GetCertificateAuthorityCsrResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
