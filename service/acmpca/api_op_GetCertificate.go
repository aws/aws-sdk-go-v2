// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package acmpca

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/acmpca/types"
)

const opGetCertificate = "GetCertificate"

// GetCertificateRequest returns a request value for making API operation for
// AWS Certificate Manager Private Certificate Authority.
//
// Retrieves a certificate from your private CA. The ARN of the certificate
// is returned when you call the IssueCertificate action. You must specify both
// the ARN of your private CA and the ARN of the issued certificate when calling
// the GetCertificate action. You can retrieve the certificate if it is in the
// ISSUED state. You can call the CreateCertificateAuthorityAuditReport action
// to create a report that contains information about all of the certificates
// issued and revoked by your private CA.
//
//    // Example sending a request using GetCertificateRequest.
//    req := client.GetCertificateRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/acm-pca-2017-08-22/GetCertificate
func (c *Client) GetCertificateRequest(input *types.GetCertificateInput) GetCertificateRequest {
	op := &aws.Operation{
		Name:       opGetCertificate,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &types.GetCertificateInput{}
	}

	req := c.newRequest(op, input, &types.GetCertificateOutput{})
	return GetCertificateRequest{Request: req, Input: input, Copy: c.GetCertificateRequest}
}

// GetCertificateRequest is the request type for the
// GetCertificate API operation.
type GetCertificateRequest struct {
	*aws.Request
	Input *types.GetCertificateInput
	Copy  func(*types.GetCertificateInput) GetCertificateRequest
}

// Send marshals and sends the GetCertificate API request.
func (r GetCertificateRequest) Send(ctx context.Context) (*GetCertificateResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &GetCertificateResponse{
		GetCertificateOutput: r.Request.Data.(*types.GetCertificateOutput),
		response:             &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// GetCertificateResponse is the response type for the
// GetCertificate API operation.
type GetCertificateResponse struct {
	*types.GetCertificateOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// GetCertificate request.
func (r *GetCertificateResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
