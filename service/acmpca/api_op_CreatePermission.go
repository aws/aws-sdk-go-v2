// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package acmpca

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/private/protocol"
	"github.com/aws/aws-sdk-go-v2/private/protocol/jsonrpc"
	"github.com/aws/aws-sdk-go-v2/service/acmpca/types"
)

const opCreatePermission = "CreatePermission"

// CreatePermissionRequest returns a request value for making API operation for
// AWS Certificate Manager Private Certificate Authority.
//
// Assigns permissions from a private CA to a designated AWS service. Services
// are specified by their service principals and can be given permission to
// create and retrieve certificates on a private CA. Services can also be given
// permission to list the active permissions that the private CA has granted.
// For ACM to automatically renew your private CA's certificates, you must assign
// all possible permissions from the CA to the ACM service principal.
//
// At this time, you can only assign permissions to ACM (acm.amazonaws.com).
// Permissions can be revoked with the DeletePermission action and listed with
// the ListPermissions action.
//
//    // Example sending a request using CreatePermissionRequest.
//    req := client.CreatePermissionRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/acm-pca-2017-08-22/CreatePermission
func (c *Client) CreatePermissionRequest(input *types.CreatePermissionInput) CreatePermissionRequest {
	op := &aws.Operation{
		Name:       opCreatePermission,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &types.CreatePermissionInput{}
	}

	req := c.newRequest(op, input, &types.CreatePermissionOutput{})
	req.Handlers.Unmarshal.Remove(jsonrpc.UnmarshalHandler)
	req.Handlers.Unmarshal.PushBackNamed(protocol.UnmarshalDiscardBodyHandler)
	return CreatePermissionRequest{Request: req, Input: input, Copy: c.CreatePermissionRequest}
}

// CreatePermissionRequest is the request type for the
// CreatePermission API operation.
type CreatePermissionRequest struct {
	*aws.Request
	Input *types.CreatePermissionInput
	Copy  func(*types.CreatePermissionInput) CreatePermissionRequest
}

// Send marshals and sends the CreatePermission API request.
func (r CreatePermissionRequest) Send(ctx context.Context) (*CreatePermissionResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &CreatePermissionResponse{
		CreatePermissionOutput: r.Request.Data.(*types.CreatePermissionOutput),
		response:               &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// CreatePermissionResponse is the response type for the
// CreatePermission API operation.
type CreatePermissionResponse struct {
	*types.CreatePermissionOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// CreatePermission request.
func (r *CreatePermissionResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
