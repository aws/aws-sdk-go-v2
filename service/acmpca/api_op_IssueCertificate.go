// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package acmpca

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/acmpca/types"
)

const opIssueCertificate = "IssueCertificate"

// IssueCertificateRequest returns a request value for making API operation for
// AWS Certificate Manager Private Certificate Authority.
//
// Uses your private certificate authority (CA) to issue a client certificate.
// This action returns the Amazon Resource Name (ARN) of the certificate. You
// can retrieve the certificate by calling the GetCertificate action and specifying
// the ARN.
//
// You cannot use the ACM ListCertificateAuthorities action to retrieve the
// ARNs of the certificates that you issue by using ACM Private CA.
//
//    // Example sending a request using IssueCertificateRequest.
//    req := client.IssueCertificateRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/acm-pca-2017-08-22/IssueCertificate
func (c *Client) IssueCertificateRequest(input *types.IssueCertificateInput) IssueCertificateRequest {
	op := &aws.Operation{
		Name:       opIssueCertificate,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &types.IssueCertificateInput{}
	}

	req := c.newRequest(op, input, &types.IssueCertificateOutput{})
	return IssueCertificateRequest{Request: req, Input: input, Copy: c.IssueCertificateRequest}
}

// IssueCertificateRequest is the request type for the
// IssueCertificate API operation.
type IssueCertificateRequest struct {
	*aws.Request
	Input *types.IssueCertificateInput
	Copy  func(*types.IssueCertificateInput) IssueCertificateRequest
}

// Send marshals and sends the IssueCertificate API request.
func (r IssueCertificateRequest) Send(ctx context.Context) (*IssueCertificateResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &IssueCertificateResponse{
		IssueCertificateOutput: r.Request.Data.(*types.IssueCertificateOutput),
		response:               &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// IssueCertificateResponse is the response type for the
// IssueCertificate API operation.
type IssueCertificateResponse struct {
	*types.IssueCertificateOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// IssueCertificate request.
func (r *IssueCertificateResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
