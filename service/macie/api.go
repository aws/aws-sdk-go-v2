// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package macie

import (
	"fmt"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/internal/awsutil"
	"github.com/aws/aws-sdk-go-v2/private/protocol"
	"github.com/aws/aws-sdk-go-v2/private/protocol/jsonrpc"
)

const opAssociateMemberAccount = "AssociateMemberAccount"

// AssociateMemberAccountRequest is a API request type for the AssociateMemberAccount API operation.
type AssociateMemberAccountRequest struct {
	*aws.Request
	Input *AssociateMemberAccountInput
	Copy  func(*AssociateMemberAccountInput) AssociateMemberAccountRequest
}

// Send marshals and sends the AssociateMemberAccount API request.
func (r AssociateMemberAccountRequest) Send() (*AssociateMemberAccountOutput, error) {
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	return r.Request.Data.(*AssociateMemberAccountOutput), nil
}

// AssociateMemberAccountRequest returns a request value for making API operation for
// Amazon Macie.
//
// Associates a specified AWS account with Amazon Macie as a member account.
//
//    // Example sending a request using the AssociateMemberAccountRequest method.
//    req := client.AssociateMemberAccountRequest(params)
//    resp, err := req.Send()
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/macie-2017-12-19/AssociateMemberAccount
func (c *Macie) AssociateMemberAccountRequest(input *AssociateMemberAccountInput) AssociateMemberAccountRequest {
	op := &aws.Operation{
		Name:       opAssociateMemberAccount,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &AssociateMemberAccountInput{}
	}

	output := &AssociateMemberAccountOutput{}
	req := c.newRequest(op, input, output)
	req.Handlers.Unmarshal.Remove(jsonrpc.UnmarshalHandler)
	req.Handlers.Unmarshal.PushBackNamed(protocol.UnmarshalDiscardBodyHandler)
	output.responseMetadata = aws.Response{Request: req}

	return AssociateMemberAccountRequest{Request: req, Input: input, Copy: c.AssociateMemberAccountRequest}
}

const opAssociateS3Resources = "AssociateS3Resources"

// AssociateS3ResourcesRequest is a API request type for the AssociateS3Resources API operation.
type AssociateS3ResourcesRequest struct {
	*aws.Request
	Input *AssociateS3ResourcesInput
	Copy  func(*AssociateS3ResourcesInput) AssociateS3ResourcesRequest
}

// Send marshals and sends the AssociateS3Resources API request.
func (r AssociateS3ResourcesRequest) Send() (*AssociateS3ResourcesOutput, error) {
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	return r.Request.Data.(*AssociateS3ResourcesOutput), nil
}

// AssociateS3ResourcesRequest returns a request value for making API operation for
// Amazon Macie.
//
// Associates specified S3 resources with Amazon Macie for monitoring and data
// classification. If memberAccountId isn't specified, the action associates
// specified S3 resources with Macie for the current master account. If memberAccountId
// is specified, the action associates specified S3 resources with Macie for
// the specified member account.
//
//    // Example sending a request using the AssociateS3ResourcesRequest method.
//    req := client.AssociateS3ResourcesRequest(params)
//    resp, err := req.Send()
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/macie-2017-12-19/AssociateS3Resources
func (c *Macie) AssociateS3ResourcesRequest(input *AssociateS3ResourcesInput) AssociateS3ResourcesRequest {
	op := &aws.Operation{
		Name:       opAssociateS3Resources,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &AssociateS3ResourcesInput{}
	}

	output := &AssociateS3ResourcesOutput{}
	req := c.newRequest(op, input, output)
	output.responseMetadata = aws.Response{Request: req}

	return AssociateS3ResourcesRequest{Request: req, Input: input, Copy: c.AssociateS3ResourcesRequest}
}

const opDisassociateMemberAccount = "DisassociateMemberAccount"

// DisassociateMemberAccountRequest is a API request type for the DisassociateMemberAccount API operation.
type DisassociateMemberAccountRequest struct {
	*aws.Request
	Input *DisassociateMemberAccountInput
	Copy  func(*DisassociateMemberAccountInput) DisassociateMemberAccountRequest
}

// Send marshals and sends the DisassociateMemberAccount API request.
func (r DisassociateMemberAccountRequest) Send() (*DisassociateMemberAccountOutput, error) {
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	return r.Request.Data.(*DisassociateMemberAccountOutput), nil
}

// DisassociateMemberAccountRequest returns a request value for making API operation for
// Amazon Macie.
//
// Removes the specified member account from Amazon Macie.
//
//    // Example sending a request using the DisassociateMemberAccountRequest method.
//    req := client.DisassociateMemberAccountRequest(params)
//    resp, err := req.Send()
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/macie-2017-12-19/DisassociateMemberAccount
func (c *Macie) DisassociateMemberAccountRequest(input *DisassociateMemberAccountInput) DisassociateMemberAccountRequest {
	op := &aws.Operation{
		Name:       opDisassociateMemberAccount,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DisassociateMemberAccountInput{}
	}

	output := &DisassociateMemberAccountOutput{}
	req := c.newRequest(op, input, output)
	req.Handlers.Unmarshal.Remove(jsonrpc.UnmarshalHandler)
	req.Handlers.Unmarshal.PushBackNamed(protocol.UnmarshalDiscardBodyHandler)
	output.responseMetadata = aws.Response{Request: req}

	return DisassociateMemberAccountRequest{Request: req, Input: input, Copy: c.DisassociateMemberAccountRequest}
}

const opDisassociateS3Resources = "DisassociateS3Resources"

// DisassociateS3ResourcesRequest is a API request type for the DisassociateS3Resources API operation.
type DisassociateS3ResourcesRequest struct {
	*aws.Request
	Input *DisassociateS3ResourcesInput
	Copy  func(*DisassociateS3ResourcesInput) DisassociateS3ResourcesRequest
}

// Send marshals and sends the DisassociateS3Resources API request.
func (r DisassociateS3ResourcesRequest) Send() (*DisassociateS3ResourcesOutput, error) {
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	return r.Request.Data.(*DisassociateS3ResourcesOutput), nil
}

// DisassociateS3ResourcesRequest returns a request value for making API operation for
// Amazon Macie.
//
// Removes specified S3 resources from being monitored by Amazon Macie. If memberAccountId
// isn't specified, the action removes specified S3 resources from Macie for
// the current master account. If memberAccountId is specified, the action removes
// specified S3 resources from Macie for the specified member account.
//
//    // Example sending a request using the DisassociateS3ResourcesRequest method.
//    req := client.DisassociateS3ResourcesRequest(params)
//    resp, err := req.Send()
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/macie-2017-12-19/DisassociateS3Resources
func (c *Macie) DisassociateS3ResourcesRequest(input *DisassociateS3ResourcesInput) DisassociateS3ResourcesRequest {
	op := &aws.Operation{
		Name:       opDisassociateS3Resources,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DisassociateS3ResourcesInput{}
	}

	output := &DisassociateS3ResourcesOutput{}
	req := c.newRequest(op, input, output)
	output.responseMetadata = aws.Response{Request: req}

	return DisassociateS3ResourcesRequest{Request: req, Input: input, Copy: c.DisassociateS3ResourcesRequest}
}

const opListMemberAccounts = "ListMemberAccounts"

// ListMemberAccountsRequest is a API request type for the ListMemberAccounts API operation.
type ListMemberAccountsRequest struct {
	*aws.Request
	Input *ListMemberAccountsInput
	Copy  func(*ListMemberAccountsInput) ListMemberAccountsRequest
}

// Send marshals and sends the ListMemberAccounts API request.
func (r ListMemberAccountsRequest) Send() (*ListMemberAccountsOutput, error) {
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	return r.Request.Data.(*ListMemberAccountsOutput), nil
}

// ListMemberAccountsRequest returns a request value for making API operation for
// Amazon Macie.
//
// Lists all Amazon Macie member accounts for the current Amazon Macie master
// account.
//
//    // Example sending a request using the ListMemberAccountsRequest method.
//    req := client.ListMemberAccountsRequest(params)
//    resp, err := req.Send()
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/macie-2017-12-19/ListMemberAccounts
func (c *Macie) ListMemberAccountsRequest(input *ListMemberAccountsInput) ListMemberAccountsRequest {
	op := &aws.Operation{
		Name:       opListMemberAccounts,
		HTTPMethod: "POST",
		HTTPPath:   "/",
		Paginator: &aws.Paginator{
			InputTokens:     []string{"nextToken"},
			OutputTokens:    []string{"nextToken"},
			LimitToken:      "maxResults",
			TruncationToken: "",
		},
	}

	if input == nil {
		input = &ListMemberAccountsInput{}
	}

	output := &ListMemberAccountsOutput{}
	req := c.newRequest(op, input, output)
	output.responseMetadata = aws.Response{Request: req}

	return ListMemberAccountsRequest{Request: req, Input: input, Copy: c.ListMemberAccountsRequest}
}

// Paginate pages iterates over the pages of a ListMemberAccountsRequest operation,
// calling the Next method for each page. Using the paginators Next
// method will depict whether or not there are more pages.
//
// Note: This operation can generate multiple requests to a service.
//
//    // Example iterating over at most 3 pages of a ListMemberAccounts operation.
//		req := client.ListMemberAccountsRequest(input)
//		p := req.Paginate()
//		for p.Next() {
//			page := p.CurrentPage()
//		}
//
//		if err := p.Err(); err != nil {
//			return err
//		}
//
func (p *ListMemberAccountsRequest) Paginate(opts ...aws.Option) ListMemberAccountsPager {
	return ListMemberAccountsPager{
		Pager: aws.Pager{
			NewRequest: func() (*aws.Request, error) {
				var inCpy *ListMemberAccountsInput
				if p.Input != nil {
					tmp := *p.Input
					inCpy = &tmp
				}

				req := p.Copy(inCpy)
				req.ApplyOptions(opts...)

				return req.Request, nil
			},
		},
	}
}

// ListMemberAccountsPager is used to paginate the request. This can be done by
// calling Next and CurrentPage.
type ListMemberAccountsPager struct {
	aws.Pager
}

func (p *ListMemberAccountsPager) CurrentPage() *ListMemberAccountsOutput {
	return p.Pager.CurrentPage().(*ListMemberAccountsOutput)
}

const opListS3Resources = "ListS3Resources"

// ListS3ResourcesRequest is a API request type for the ListS3Resources API operation.
type ListS3ResourcesRequest struct {
	*aws.Request
	Input *ListS3ResourcesInput
	Copy  func(*ListS3ResourcesInput) ListS3ResourcesRequest
}

// Send marshals and sends the ListS3Resources API request.
func (r ListS3ResourcesRequest) Send() (*ListS3ResourcesOutput, error) {
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	return r.Request.Data.(*ListS3ResourcesOutput), nil
}

// ListS3ResourcesRequest returns a request value for making API operation for
// Amazon Macie.
//
// Lists all the S3 resources associated with Amazon Macie. If memberAccountId
// isn't specified, the action lists the S3 resources associated with Amazon
// Macie for the current master account. If memberAccountId is specified, the
// action lists the S3 resources associated with Amazon Macie for the specified
// member account.
//
//    // Example sending a request using the ListS3ResourcesRequest method.
//    req := client.ListS3ResourcesRequest(params)
//    resp, err := req.Send()
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/macie-2017-12-19/ListS3Resources
func (c *Macie) ListS3ResourcesRequest(input *ListS3ResourcesInput) ListS3ResourcesRequest {
	op := &aws.Operation{
		Name:       opListS3Resources,
		HTTPMethod: "POST",
		HTTPPath:   "/",
		Paginator: &aws.Paginator{
			InputTokens:     []string{"nextToken"},
			OutputTokens:    []string{"nextToken"},
			LimitToken:      "maxResults",
			TruncationToken: "",
		},
	}

	if input == nil {
		input = &ListS3ResourcesInput{}
	}

	output := &ListS3ResourcesOutput{}
	req := c.newRequest(op, input, output)
	output.responseMetadata = aws.Response{Request: req}

	return ListS3ResourcesRequest{Request: req, Input: input, Copy: c.ListS3ResourcesRequest}
}

// Paginate pages iterates over the pages of a ListS3ResourcesRequest operation,
// calling the Next method for each page. Using the paginators Next
// method will depict whether or not there are more pages.
//
// Note: This operation can generate multiple requests to a service.
//
//    // Example iterating over at most 3 pages of a ListS3Resources operation.
//		req := client.ListS3ResourcesRequest(input)
//		p := req.Paginate()
//		for p.Next() {
//			page := p.CurrentPage()
//		}
//
//		if err := p.Err(); err != nil {
//			return err
//		}
//
func (p *ListS3ResourcesRequest) Paginate(opts ...aws.Option) ListS3ResourcesPager {
	return ListS3ResourcesPager{
		Pager: aws.Pager{
			NewRequest: func() (*aws.Request, error) {
				var inCpy *ListS3ResourcesInput
				if p.Input != nil {
					tmp := *p.Input
					inCpy = &tmp
				}

				req := p.Copy(inCpy)
				req.ApplyOptions(opts...)

				return req.Request, nil
			},
		},
	}
}

// ListS3ResourcesPager is used to paginate the request. This can be done by
// calling Next and CurrentPage.
type ListS3ResourcesPager struct {
	aws.Pager
}

func (p *ListS3ResourcesPager) CurrentPage() *ListS3ResourcesOutput {
	return p.Pager.CurrentPage().(*ListS3ResourcesOutput)
}

const opUpdateS3Resources = "UpdateS3Resources"

// UpdateS3ResourcesRequest is a API request type for the UpdateS3Resources API operation.
type UpdateS3ResourcesRequest struct {
	*aws.Request
	Input *UpdateS3ResourcesInput
	Copy  func(*UpdateS3ResourcesInput) UpdateS3ResourcesRequest
}

// Send marshals and sends the UpdateS3Resources API request.
func (r UpdateS3ResourcesRequest) Send() (*UpdateS3ResourcesOutput, error) {
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	return r.Request.Data.(*UpdateS3ResourcesOutput), nil
}

// UpdateS3ResourcesRequest returns a request value for making API operation for
// Amazon Macie.
//
// Updates the classification types for the specified S3 resources. If memberAccountId
// isn't specified, the action updates the classification types of the S3 resources
// associated with Amazon Macie for the current master account. If memberAccountId
// is specified, the action updates the classification types of the S3 resources
// associated with Amazon Macie for the specified member account.
//
//    // Example sending a request using the UpdateS3ResourcesRequest method.
//    req := client.UpdateS3ResourcesRequest(params)
//    resp, err := req.Send()
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/macie-2017-12-19/UpdateS3Resources
func (c *Macie) UpdateS3ResourcesRequest(input *UpdateS3ResourcesInput) UpdateS3ResourcesRequest {
	op := &aws.Operation{
		Name:       opUpdateS3Resources,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &UpdateS3ResourcesInput{}
	}

	output := &UpdateS3ResourcesOutput{}
	req := c.newRequest(op, input, output)
	output.responseMetadata = aws.Response{Request: req}

	return UpdateS3ResourcesRequest{Request: req, Input: input, Copy: c.UpdateS3ResourcesRequest}
}

// Please also see https://docs.aws.amazon.com/goto/WebAPI/macie-2017-12-19/AssociateMemberAccountRequest
type AssociateMemberAccountInput struct {
	_ struct{} `type:"structure"`

	// The ID of the AWS account that you want to associate with Amazon Macie as
	// a member account.
	//
	// MemberAccountId is a required field
	MemberAccountId *string `locationName:"memberAccountId" type:"string" required:"true"`
}

// String returns the string representation
func (s AssociateMemberAccountInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s AssociateMemberAccountInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *AssociateMemberAccountInput) Validate() error {
	invalidParams := aws.ErrInvalidParams{Context: "AssociateMemberAccountInput"}

	if s.MemberAccountId == nil {
		invalidParams.Add(aws.NewErrParamRequired("MemberAccountId"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// Please also see https://docs.aws.amazon.com/goto/WebAPI/macie-2017-12-19/AssociateMemberAccountOutput
type AssociateMemberAccountOutput struct {
	_ struct{} `type:"structure"`

	responseMetadata aws.Response
}

// String returns the string representation
func (s AssociateMemberAccountOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s AssociateMemberAccountOutput) GoString() string {
	return s.String()
}

// SDKResponseMetdata return sthe response metadata for the API.
func (s AssociateMemberAccountOutput) SDKResponseMetadata() aws.Response {
	return s.responseMetadata
}

// Please also see https://docs.aws.amazon.com/goto/WebAPI/macie-2017-12-19/AssociateS3ResourcesRequest
type AssociateS3ResourcesInput struct {
	_ struct{} `type:"structure"`

	// The ID of the Amazon Macie member account whose resources you want to associate
	// with Macie.
	MemberAccountId *string `locationName:"memberAccountId" type:"string"`

	// The S3 resources that you want to associate with Amazon Macie for monitoring
	// and data classification.
	//
	// S3Resources is a required field
	S3Resources []S3ResourceClassification `locationName:"s3Resources" type:"list" required:"true"`
}

// String returns the string representation
func (s AssociateS3ResourcesInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s AssociateS3ResourcesInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *AssociateS3ResourcesInput) Validate() error {
	invalidParams := aws.ErrInvalidParams{Context: "AssociateS3ResourcesInput"}

	if s.S3Resources == nil {
		invalidParams.Add(aws.NewErrParamRequired("S3Resources"))
	}
	if s.S3Resources != nil {
		for i, v := range s.S3Resources {
			if err := v.Validate(); err != nil {
				invalidParams.AddNested(fmt.Sprintf("%s[%v]", "S3Resources", i), err.(aws.ErrInvalidParams))
			}
		}
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// Please also see https://docs.aws.amazon.com/goto/WebAPI/macie-2017-12-19/AssociateS3ResourcesResult
type AssociateS3ResourcesOutput struct {
	_ struct{} `type:"structure"`

	responseMetadata aws.Response

	// S3 resources that couldn't be associated with Amazon Macie. An error code
	// and an error message are provided for each failed item.
	FailedS3Resources []FailedS3Resource `locationName:"failedS3Resources" type:"list"`
}

// String returns the string representation
func (s AssociateS3ResourcesOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s AssociateS3ResourcesOutput) GoString() string {
	return s.String()
}

// SDKResponseMetdata return sthe response metadata for the API.
func (s AssociateS3ResourcesOutput) SDKResponseMetadata() aws.Response {
	return s.responseMetadata
}

// The classification type that Amazon Macie applies to the associated S3 resources.
// Please also see https://docs.aws.amazon.com/goto/WebAPI/macie-2017-12-19/ClassificationType
type ClassificationType struct {
	_ struct{} `type:"structure"`

	// A continuous classification of the objects that are added to a specified
	// S3 bucket. Amazon Macie begins performing continuous classification after
	// a bucket is successfully associated with Amazon Macie.
	//
	// Continuous is a required field
	Continuous S3ContinuousClassificationType `locationName:"continuous" type:"string" required:"true" enum:"true"`

	// A one-time classification of all of the existing objects in a specified S3
	// bucket.
	//
	// OneTime is a required field
	OneTime S3OneTimeClassificationType `locationName:"oneTime" type:"string" required:"true" enum:"true"`
}

// String returns the string representation
func (s ClassificationType) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s ClassificationType) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *ClassificationType) Validate() error {
	invalidParams := aws.ErrInvalidParams{Context: "ClassificationType"}
	if len(s.Continuous) == 0 {
		invalidParams.Add(aws.NewErrParamRequired("Continuous"))
	}
	if len(s.OneTime) == 0 {
		invalidParams.Add(aws.NewErrParamRequired("OneTime"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// The classification type that Amazon Macie applies to the associated S3 resources.
// At least one of the classification types (oneTime or continuous) must be
// specified.
// Please also see https://docs.aws.amazon.com/goto/WebAPI/macie-2017-12-19/ClassificationTypeUpdate
type ClassificationTypeUpdate struct {
	_ struct{} `type:"structure"`

	// A continuous classification of the objects that are added to a specified
	// S3 bucket. Amazon Macie begins performing continuous classification after
	// a bucket is successfully associated with Amazon Macie.
	Continuous S3ContinuousClassificationType `locationName:"continuous" type:"string" enum:"true"`

	// A one-time classification of all of the existing objects in a specified S3
	// bucket.
	OneTime S3OneTimeClassificationType `locationName:"oneTime" type:"string" enum:"true"`
}

// String returns the string representation
func (s ClassificationTypeUpdate) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s ClassificationTypeUpdate) GoString() string {
	return s.String()
}

// Please also see https://docs.aws.amazon.com/goto/WebAPI/macie-2017-12-19/DisassociateMemberAccountRequest
type DisassociateMemberAccountInput struct {
	_ struct{} `type:"structure"`

	// The ID of the member account that you want to remove from Amazon Macie.
	//
	// MemberAccountId is a required field
	MemberAccountId *string `locationName:"memberAccountId" type:"string" required:"true"`
}

// String returns the string representation
func (s DisassociateMemberAccountInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DisassociateMemberAccountInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *DisassociateMemberAccountInput) Validate() error {
	invalidParams := aws.ErrInvalidParams{Context: "DisassociateMemberAccountInput"}

	if s.MemberAccountId == nil {
		invalidParams.Add(aws.NewErrParamRequired("MemberAccountId"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// Please also see https://docs.aws.amazon.com/goto/WebAPI/macie-2017-12-19/DisassociateMemberAccountOutput
type DisassociateMemberAccountOutput struct {
	_ struct{} `type:"structure"`

	responseMetadata aws.Response
}

// String returns the string representation
func (s DisassociateMemberAccountOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DisassociateMemberAccountOutput) GoString() string {
	return s.String()
}

// SDKResponseMetdata return sthe response metadata for the API.
func (s DisassociateMemberAccountOutput) SDKResponseMetadata() aws.Response {
	return s.responseMetadata
}

// Please also see https://docs.aws.amazon.com/goto/WebAPI/macie-2017-12-19/DisassociateS3ResourcesRequest
type DisassociateS3ResourcesInput struct {
	_ struct{} `type:"structure"`

	// The S3 resources (buckets or prefixes) that you want to remove from being
	// monitored and classified by Amazon Macie.
	//
	// AssociatedS3Resources is a required field
	AssociatedS3Resources []S3Resource `locationName:"associatedS3Resources" type:"list" required:"true"`

	// The ID of the Amazon Macie member account whose resources you want to remove
	// from being monitored by Amazon Macie.
	MemberAccountId *string `locationName:"memberAccountId" type:"string"`
}

// String returns the string representation
func (s DisassociateS3ResourcesInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DisassociateS3ResourcesInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *DisassociateS3ResourcesInput) Validate() error {
	invalidParams := aws.ErrInvalidParams{Context: "DisassociateS3ResourcesInput"}

	if s.AssociatedS3Resources == nil {
		invalidParams.Add(aws.NewErrParamRequired("AssociatedS3Resources"))
	}
	if s.AssociatedS3Resources != nil {
		for i, v := range s.AssociatedS3Resources {
			if err := v.Validate(); err != nil {
				invalidParams.AddNested(fmt.Sprintf("%s[%v]", "AssociatedS3Resources", i), err.(aws.ErrInvalidParams))
			}
		}
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// Please also see https://docs.aws.amazon.com/goto/WebAPI/macie-2017-12-19/DisassociateS3ResourcesResult
type DisassociateS3ResourcesOutput struct {
	_ struct{} `type:"structure"`

	responseMetadata aws.Response

	// S3 resources that couldn't be removed from being monitored and classified
	// by Amazon Macie. An error code and an error message are provided for each
	// failed item.
	FailedS3Resources []FailedS3Resource `locationName:"failedS3Resources" type:"list"`
}

// String returns the string representation
func (s DisassociateS3ResourcesOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DisassociateS3ResourcesOutput) GoString() string {
	return s.String()
}

// SDKResponseMetdata return sthe response metadata for the API.
func (s DisassociateS3ResourcesOutput) SDKResponseMetadata() aws.Response {
	return s.responseMetadata
}

// Includes details about the failed S3 resources.
// Please also see https://docs.aws.amazon.com/goto/WebAPI/macie-2017-12-19/FailedS3Resource
type FailedS3Resource struct {
	_ struct{} `type:"structure"`

	// The status code of a failed item.
	ErrorCode *string `locationName:"errorCode" type:"string"`

	// The error message of a failed item.
	ErrorMessage *string `locationName:"errorMessage" type:"string"`

	// The failed S3 resources.
	FailedItem *S3Resource `locationName:"failedItem" type:"structure"`
}

// String returns the string representation
func (s FailedS3Resource) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s FailedS3Resource) GoString() string {
	return s.String()
}

// Please also see https://docs.aws.amazon.com/goto/WebAPI/macie-2017-12-19/ListMemberAccountsRequest
type ListMemberAccountsInput struct {
	_ struct{} `type:"structure"`

	// Use this parameter to indicate the maximum number of items that you want
	// in the response. The default value is 250.
	MaxResults *int64 `locationName:"maxResults" type:"integer"`

	// Use this parameter when paginating results. Set the value of this parameter
	// to null on your first call to the ListMemberAccounts action. Subsequent calls
	// to the action fill nextToken in the request with the value of nextToken from
	// the previous response to continue listing data.
	NextToken *string `locationName:"nextToken" type:"string"`
}

// String returns the string representation
func (s ListMemberAccountsInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s ListMemberAccountsInput) GoString() string {
	return s.String()
}

// Please also see https://docs.aws.amazon.com/goto/WebAPI/macie-2017-12-19/ListMemberAccountsResult
type ListMemberAccountsOutput struct {
	_ struct{} `type:"structure"`

	responseMetadata aws.Response

	// A list of the Amazon Macie member accounts returned by the action. The current
	// master account is also included in this list.
	MemberAccounts []MemberAccount `locationName:"memberAccounts" type:"list"`

	// When a response is generated, if there is more data to be listed, this parameter
	// is present in the response and contains the value to use for the nextToken
	// parameter in a subsequent pagination request. If there is no more data to
	// be listed, this parameter is set to null.
	NextToken *string `locationName:"nextToken" type:"string"`
}

// String returns the string representation
func (s ListMemberAccountsOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s ListMemberAccountsOutput) GoString() string {
	return s.String()
}

// SDKResponseMetdata return sthe response metadata for the API.
func (s ListMemberAccountsOutput) SDKResponseMetadata() aws.Response {
	return s.responseMetadata
}

// Please also see https://docs.aws.amazon.com/goto/WebAPI/macie-2017-12-19/ListS3ResourcesRequest
type ListS3ResourcesInput struct {
	_ struct{} `type:"structure"`

	// Use this parameter to indicate the maximum number of items that you want
	// in the response. The default value is 250.
	MaxResults *int64 `locationName:"maxResults" type:"integer"`

	// The Amazon Macie member account ID whose associated S3 resources you want
	// to list.
	MemberAccountId *string `locationName:"memberAccountId" type:"string"`

	// Use this parameter when paginating results. Set its value to null on your
	// first call to the ListS3Resources action. Subsequent calls to the action
	// fill nextToken in the request with the value of nextToken from the previous
	// response to continue listing data.
	NextToken *string `locationName:"nextToken" type:"string"`
}

// String returns the string representation
func (s ListS3ResourcesInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s ListS3ResourcesInput) GoString() string {
	return s.String()
}

// Please also see https://docs.aws.amazon.com/goto/WebAPI/macie-2017-12-19/ListS3ResourcesResult
type ListS3ResourcesOutput struct {
	_ struct{} `type:"structure"`

	responseMetadata aws.Response

	// When a response is generated, if there is more data to be listed, this parameter
	// is present in the response and contains the value to use for the nextToken
	// parameter in a subsequent pagination request. If there is no more data to
	// be listed, this parameter is set to null.
	NextToken *string `locationName:"nextToken" type:"string"`

	// A list of the associated S3 resources returned by the action.
	S3Resources []S3ResourceClassification `locationName:"s3Resources" type:"list"`
}

// String returns the string representation
func (s ListS3ResourcesOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s ListS3ResourcesOutput) GoString() string {
	return s.String()
}

// SDKResponseMetdata return sthe response metadata for the API.
func (s ListS3ResourcesOutput) SDKResponseMetadata() aws.Response {
	return s.responseMetadata
}

// Contains information about the Amazon Macie member account.
// Please also see https://docs.aws.amazon.com/goto/WebAPI/macie-2017-12-19/MemberAccount
type MemberAccount struct {
	_ struct{} `type:"structure"`

	// The AWS account ID of the Amazon Macie member account.
	AccountId *string `locationName:"accountId" type:"string"`
}

// String returns the string representation
func (s MemberAccount) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s MemberAccount) GoString() string {
	return s.String()
}

// Contains information about the S3 resource. This data type is used as a request
// parameter in the DisassociateS3Resources action and can be used as a response
// parameter in the AssociateS3Resources and UpdateS3Resources actions.
// Please also see https://docs.aws.amazon.com/goto/WebAPI/macie-2017-12-19/S3Resource
type S3Resource struct {
	_ struct{} `type:"structure"`

	// The name of the S3 bucket.
	//
	// BucketName is a required field
	BucketName *string `locationName:"bucketName" type:"string" required:"true"`

	// The prefix of the S3 bucket.
	Prefix *string `locationName:"prefix" type:"string"`
}

// String returns the string representation
func (s S3Resource) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s S3Resource) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *S3Resource) Validate() error {
	invalidParams := aws.ErrInvalidParams{Context: "S3Resource"}

	if s.BucketName == nil {
		invalidParams.Add(aws.NewErrParamRequired("BucketName"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// The S3 resources that you want to associate with Amazon Macie for monitoring
// and data classification. This data type is used as a request parameter in
// the AssociateS3Resources action and a response parameter in the ListS3Resources
// action.
// Please also see https://docs.aws.amazon.com/goto/WebAPI/macie-2017-12-19/S3ResourceClassification
type S3ResourceClassification struct {
	_ struct{} `type:"structure"`

	// The name of the S3 bucket that you want to associate with Amazon Macie.
	//
	// BucketName is a required field
	BucketName *string `locationName:"bucketName" type:"string" required:"true"`

	// The classification type that you want to specify for the resource associated
	// with Amazon Macie.
	//
	// ClassificationType is a required field
	ClassificationType *ClassificationType `locationName:"classificationType" type:"structure" required:"true"`

	// The prefix of the S3 bucket that you want to associate with Amazon Macie.
	Prefix *string `locationName:"prefix" type:"string"`
}

// String returns the string representation
func (s S3ResourceClassification) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s S3ResourceClassification) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *S3ResourceClassification) Validate() error {
	invalidParams := aws.ErrInvalidParams{Context: "S3ResourceClassification"}

	if s.BucketName == nil {
		invalidParams.Add(aws.NewErrParamRequired("BucketName"))
	}

	if s.ClassificationType == nil {
		invalidParams.Add(aws.NewErrParamRequired("ClassificationType"))
	}
	if s.ClassificationType != nil {
		if err := s.ClassificationType.Validate(); err != nil {
			invalidParams.AddNested("ClassificationType", err.(aws.ErrInvalidParams))
		}
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// The S3 resources whose classification types you want to update. This data
// type is used as a request parameter in the UpdateS3Resources action.
// Please also see https://docs.aws.amazon.com/goto/WebAPI/macie-2017-12-19/S3ResourceClassificationUpdate
type S3ResourceClassificationUpdate struct {
	_ struct{} `type:"structure"`

	// The name of the S3 bucket whose classification types you want to update.
	//
	// BucketName is a required field
	BucketName *string `locationName:"bucketName" type:"string" required:"true"`

	// The classification type that you want to update for the resource associated
	// with Amazon Macie.
	//
	// ClassificationTypeUpdate is a required field
	ClassificationTypeUpdate *ClassificationTypeUpdate `locationName:"classificationTypeUpdate" type:"structure" required:"true"`

	// The prefix of the S3 bucket whose classification types you want to update.
	Prefix *string `locationName:"prefix" type:"string"`
}

// String returns the string representation
func (s S3ResourceClassificationUpdate) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s S3ResourceClassificationUpdate) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *S3ResourceClassificationUpdate) Validate() error {
	invalidParams := aws.ErrInvalidParams{Context: "S3ResourceClassificationUpdate"}

	if s.BucketName == nil {
		invalidParams.Add(aws.NewErrParamRequired("BucketName"))
	}

	if s.ClassificationTypeUpdate == nil {
		invalidParams.Add(aws.NewErrParamRequired("ClassificationTypeUpdate"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// Please also see https://docs.aws.amazon.com/goto/WebAPI/macie-2017-12-19/UpdateS3ResourcesRequest
type UpdateS3ResourcesInput struct {
	_ struct{} `type:"structure"`

	// The AWS ID of the Amazon Macie member account whose S3 resources' classification
	// types you want to update.
	MemberAccountId *string `locationName:"memberAccountId" type:"string"`

	// The S3 resources whose classification types you want to update.
	//
	// S3ResourcesUpdate is a required field
	S3ResourcesUpdate []S3ResourceClassificationUpdate `locationName:"s3ResourcesUpdate" type:"list" required:"true"`
}

// String returns the string representation
func (s UpdateS3ResourcesInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s UpdateS3ResourcesInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *UpdateS3ResourcesInput) Validate() error {
	invalidParams := aws.ErrInvalidParams{Context: "UpdateS3ResourcesInput"}

	if s.S3ResourcesUpdate == nil {
		invalidParams.Add(aws.NewErrParamRequired("S3ResourcesUpdate"))
	}
	if s.S3ResourcesUpdate != nil {
		for i, v := range s.S3ResourcesUpdate {
			if err := v.Validate(); err != nil {
				invalidParams.AddNested(fmt.Sprintf("%s[%v]", "S3ResourcesUpdate", i), err.(aws.ErrInvalidParams))
			}
		}
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// Please also see https://docs.aws.amazon.com/goto/WebAPI/macie-2017-12-19/UpdateS3ResourcesResult
type UpdateS3ResourcesOutput struct {
	_ struct{} `type:"structure"`

	responseMetadata aws.Response

	// The S3 resources whose classification types can't be updated. An error code
	// and an error message are provided for each failed item.
	FailedS3Resources []FailedS3Resource `locationName:"failedS3Resources" type:"list"`
}

// String returns the string representation
func (s UpdateS3ResourcesOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s UpdateS3ResourcesOutput) GoString() string {
	return s.String()
}

// SDKResponseMetdata return sthe response metadata for the API.
func (s UpdateS3ResourcesOutput) SDKResponseMetadata() aws.Response {
	return s.responseMetadata
}

type S3ContinuousClassificationType string

// Enum values for S3ContinuousClassificationType
const (
	S3ContinuousClassificationTypeFull S3ContinuousClassificationType = "FULL"
)

func (enum S3ContinuousClassificationType) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum S3ContinuousClassificationType) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type S3OneTimeClassificationType string

// Enum values for S3OneTimeClassificationType
const (
	S3OneTimeClassificationTypeFull S3OneTimeClassificationType = "FULL"
	S3OneTimeClassificationTypeNone S3OneTimeClassificationType = "NONE"
)

func (enum S3OneTimeClassificationType) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum S3OneTimeClassificationType) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}
