// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package health

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/health/types"
)

const opDescribeAffectedEntities = "DescribeAffectedEntities"

// DescribeAffectedEntitiesRequest returns a request value for making API operation for
// AWS Health APIs and Notifications.
//
// Returns a list of entities that have been affected by the specified events,
// based on the specified filter criteria. Entities can refer to individual
// customer resources, groups of customer resources, or any other construct,
// depending on the AWS service. Events that have impact beyond that of the
// affected entities, or where the extent of impact is unknown, include at least
// one entity indicating this.
//
// At least one event ARN is required. Results are sorted by the lastUpdatedTime
// of the entity, starting with the most recent.
//
//    // Example sending a request using DescribeAffectedEntitiesRequest.
//    req := client.DescribeAffectedEntitiesRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/health-2016-08-04/DescribeAffectedEntities
func (c *Client) DescribeAffectedEntitiesRequest(input *types.DescribeAffectedEntitiesInput) DescribeAffectedEntitiesRequest {
	op := &aws.Operation{
		Name:       opDescribeAffectedEntities,
		HTTPMethod: "POST",
		HTTPPath:   "/",
		Paginator: &aws.Paginator{
			InputTokens:     []string{"nextToken"},
			OutputTokens:    []string{"nextToken"},
			LimitToken:      "maxResults",
			TruncationToken: "",
		},
	}

	if input == nil {
		input = &types.DescribeAffectedEntitiesInput{}
	}

	req := c.newRequest(op, input, &types.DescribeAffectedEntitiesOutput{})
	return DescribeAffectedEntitiesRequest{Request: req, Input: input, Copy: c.DescribeAffectedEntitiesRequest}
}

// DescribeAffectedEntitiesRequest is the request type for the
// DescribeAffectedEntities API operation.
type DescribeAffectedEntitiesRequest struct {
	*aws.Request
	Input *types.DescribeAffectedEntitiesInput
	Copy  func(*types.DescribeAffectedEntitiesInput) DescribeAffectedEntitiesRequest
}

// Send marshals and sends the DescribeAffectedEntities API request.
func (r DescribeAffectedEntitiesRequest) Send(ctx context.Context) (*DescribeAffectedEntitiesResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &DescribeAffectedEntitiesResponse{
		DescribeAffectedEntitiesOutput: r.Request.Data.(*types.DescribeAffectedEntitiesOutput),
		response:                       &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// NewDescribeAffectedEntitiesRequestPaginator returns a paginator for DescribeAffectedEntities.
// Use Next method to get the next page, and CurrentPage to get the current
// response page from the paginator. Next will return false, if there are
// no more pages, or an error was encountered.
//
// Note: This operation can generate multiple requests to a service.
//
//   // Example iterating over pages.
//   req := client.DescribeAffectedEntitiesRequest(input)
//   p := health.NewDescribeAffectedEntitiesRequestPaginator(req)
//
//   for p.Next(context.TODO()) {
//       page := p.CurrentPage()
//   }
//
//   if err := p.Err(); err != nil {
//       return err
//   }
//
func NewDescribeAffectedEntitiesPaginator(req DescribeAffectedEntitiesRequest) DescribeAffectedEntitiesPaginator {
	return DescribeAffectedEntitiesPaginator{
		Pager: aws.Pager{
			NewRequest: func(ctx context.Context) (*aws.Request, error) {
				var inCpy *types.DescribeAffectedEntitiesInput
				if req.Input != nil {
					tmp := *req.Input
					inCpy = &tmp
				}

				newReq := req.Copy(inCpy)
				newReq.SetContext(ctx)
				return newReq.Request, nil
			},
		},
	}
}

// DescribeAffectedEntitiesPaginator is used to paginate the request. This can be done by
// calling Next and CurrentPage.
type DescribeAffectedEntitiesPaginator struct {
	aws.Pager
}

func (p *DescribeAffectedEntitiesPaginator) CurrentPage() *types.DescribeAffectedEntitiesOutput {
	return p.Pager.CurrentPage().(*types.DescribeAffectedEntitiesOutput)
}

// DescribeAffectedEntitiesResponse is the response type for the
// DescribeAffectedEntities API operation.
type DescribeAffectedEntitiesResponse struct {
	*types.DescribeAffectedEntitiesOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// DescribeAffectedEntities request.
func (r *DescribeAffectedEntitiesResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
