// Code generated by smithy-go-codegen DO NOT EDIT.

package health

import (
	"context"
	awsmiddleware "github.com/aws/aws-sdk-go-v2/aws/middleware"
	"github.com/aws/aws-sdk-go-v2/aws/retry"
	"github.com/aws/aws-sdk-go-v2/aws/signer/v4"
	"github.com/aws/aws-sdk-go-v2/service/health/types"
	smithy "github.com/awslabs/smithy-go"
	"github.com/awslabs/smithy-go/middleware"
	smithyhttp "github.com/awslabs/smithy-go/transport/http"
)

// Returns a list of entities that have been affected by one or more events for one
// or more accounts in your organization in AWS Organizations, based on the filter
// criteria. Entities can refer to individual customer resources, groups of
// customer resources, or any other construct, depending on the AWS service. At
// least one event ARN and account ID are required. Results are sorted by the
// lastUpdatedTime of the entity, starting with the most recent. Before you can
// call this operation, you must first enable AWS Health to work with AWS
// Organizations. To do this, call the EnableHealthServiceAccessForOrganization ()
// operation from your organization's master account.
func (c *Client) DescribeAffectedEntitiesForOrganization(ctx context.Context, params *DescribeAffectedEntitiesForOrganizationInput, optFns ...func(*Options)) (*DescribeAffectedEntitiesForOrganizationOutput, error) {
	stack := middleware.NewStack("DescribeAffectedEntitiesForOrganization", smithyhttp.NewStackRequest)
	options := c.options.Copy()
	for _, fn := range optFns {
		fn(&options)
	}
	addawsAwsjson11_serdeOpDescribeAffectedEntitiesForOrganizationMiddlewares(stack)
	awsmiddleware.AddRequestInvocationIDMiddleware(stack)
	smithyhttp.AddContentLengthMiddleware(stack)
	AddResolveEndpointMiddleware(stack, options)
	v4.AddComputePayloadSHA256Middleware(stack)
	retry.AddRetryMiddlewares(stack, options)
	addHTTPSignerV4Middleware(stack, options)
	awsmiddleware.AddAttemptClockSkewMiddleware(stack)
	addClientUserAgent(stack)
	smithyhttp.AddErrorCloseResponseBodyMiddleware(stack)
	smithyhttp.AddCloseResponseBodyMiddleware(stack)
	addOpDescribeAffectedEntitiesForOrganizationValidationMiddleware(stack)
	stack.Initialize.Add(newServiceMetadataMiddleware_opDescribeAffectedEntitiesForOrganization(options.Region), middleware.Before)

	for _, fn := range options.APIOptions {
		if err := fn(stack); err != nil {
			return nil, err
		}
	}
	handler := middleware.DecorateHandler(smithyhttp.NewClientHandler(options.HTTPClient), stack)
	result, metadata, err := handler.Handle(ctx, params)
	if err != nil {
		return nil, &smithy.OperationError{
			ServiceID:     ServiceID,
			OperationName: "DescribeAffectedEntitiesForOrganization",
			Err:           err,
		}
	}
	out := result.(*DescribeAffectedEntitiesForOrganizationOutput)
	out.ResultMetadata = metadata
	return out, nil
}

type DescribeAffectedEntitiesForOrganizationInput struct {
	// The locale (language) to return information in. English (en) is the default and
	// the only supported value at this time.
	Locale *string
	// A JSON set of elements including the awsAccountId and the eventArn.
	OrganizationEntityFilters []*types.EventAccountFilter
	// If the results of a search are large, only a portion of the results are
	// returned, and a nextToken pagination token is returned in the response. To
	// retrieve the next batch of results, reissue the search request and include the
	// returned token. When all results have been returned, the response does not
	// contain a pagination token value.
	NextToken *string
	// The maximum number of items to return in one batch, between 10 and 100,
	// inclusive.
	MaxResults *int32
}

type DescribeAffectedEntitiesForOrganizationOutput struct {
	// If the results of a search are large, only a portion of the results are
	// returned, and a nextToken pagination token is returned in the response. To
	// retrieve the next batch of results, reissue the search request and include the
	// returned token. When all results have been returned, the response does not
	// contain a pagination token value.
	NextToken *string
	// A JSON set of elements including the awsAccountId and its entityArn, entityValue
	// and its entityArn, lastUpdatedTime, statusCode, and tags.
	Entities []*types.AffectedEntity
	// A JSON set of elements of the failed response, including the awsAccountId,
	// errorMessage, errorName, and eventArn.
	FailedSet []*types.OrganizationAffectedEntitiesErrorItem

	// Metadata pertaining to the operation's result.
	ResultMetadata middleware.Metadata
}

func addawsAwsjson11_serdeOpDescribeAffectedEntitiesForOrganizationMiddlewares(stack *middleware.Stack) {
	stack.Serialize.Add(&awsAwsjson11_serializeOpDescribeAffectedEntitiesForOrganization{}, middleware.After)
	stack.Deserialize.Add(&awsAwsjson11_deserializeOpDescribeAffectedEntitiesForOrganization{}, middleware.After)
}

func newServiceMetadataMiddleware_opDescribeAffectedEntitiesForOrganization(region string) awsmiddleware.RegisterServiceMetadata {
	return awsmiddleware.RegisterServiceMetadata{
		Region:        region,
		ServiceID:     ServiceID,
		SigningName:   "health",
		OperationName: "DescribeAffectedEntitiesForOrganization",
	}
}
