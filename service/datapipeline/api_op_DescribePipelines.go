// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package datapipeline

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/datapipeline/types"
)

const opDescribePipelines = "DescribePipelines"

// DescribePipelinesRequest returns a request value for making API operation for
// AWS Data Pipeline.
//
// Retrieves metadata about one or more pipelines. The information retrieved
// includes the name of the pipeline, the pipeline identifier, its current state,
// and the user account that owns the pipeline. Using account credentials, you
// can retrieve metadata about pipelines that you or your IAM users have created.
// If you are using an IAM user account, you can retrieve metadata about only
// those pipelines for which you have read permissions.
//
// To retrieve the full pipeline definition instead of metadata about the pipeline,
// call GetPipelineDefinition.
//
//    // Example sending a request using DescribePipelinesRequest.
//    req := client.DescribePipelinesRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/datapipeline-2012-10-29/DescribePipelines
func (c *Client) DescribePipelinesRequest(input *types.DescribePipelinesInput) DescribePipelinesRequest {
	op := &aws.Operation{
		Name:       opDescribePipelines,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &types.DescribePipelinesInput{}
	}

	req := c.newRequest(op, input, &types.DescribePipelinesOutput{})
	return DescribePipelinesRequest{Request: req, Input: input, Copy: c.DescribePipelinesRequest}
}

// DescribePipelinesRequest is the request type for the
// DescribePipelines API operation.
type DescribePipelinesRequest struct {
	*aws.Request
	Input *types.DescribePipelinesInput
	Copy  func(*types.DescribePipelinesInput) DescribePipelinesRequest
}

// Send marshals and sends the DescribePipelines API request.
func (r DescribePipelinesRequest) Send(ctx context.Context) (*DescribePipelinesResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &DescribePipelinesResponse{
		DescribePipelinesOutput: r.Request.Data.(*types.DescribePipelinesOutput),
		response:                &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// DescribePipelinesResponse is the response type for the
// DescribePipelines API operation.
type DescribePipelinesResponse struct {
	*types.DescribePipelinesOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// DescribePipelines request.
func (r *DescribePipelinesResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
