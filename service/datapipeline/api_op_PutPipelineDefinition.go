// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package datapipeline

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/datapipeline/types"
)

const opPutPipelineDefinition = "PutPipelineDefinition"

// PutPipelineDefinitionRequest returns a request value for making API operation for
// AWS Data Pipeline.
//
// Adds tasks, schedules, and preconditions to the specified pipeline. You can
// use PutPipelineDefinition to populate a new pipeline.
//
// PutPipelineDefinition also validates the configuration as it adds it to the
// pipeline. Changes to the pipeline are saved unless one of the following three
// validation errors exists in the pipeline.
//   An object is missing a name or identifier field. A string or reference
//   field is empty. The number of objects in the pipeline exceeds the maximum
//   allowed objects. The pipeline is in a FINISHED state.
// Pipeline object definitions are passed to the PutPipelineDefinition action
// and returned by the GetPipelineDefinition action.
//
//    // Example sending a request using PutPipelineDefinitionRequest.
//    req := client.PutPipelineDefinitionRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/datapipeline-2012-10-29/PutPipelineDefinition
func (c *Client) PutPipelineDefinitionRequest(input *types.PutPipelineDefinitionInput) PutPipelineDefinitionRequest {
	op := &aws.Operation{
		Name:       opPutPipelineDefinition,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &types.PutPipelineDefinitionInput{}
	}

	req := c.newRequest(op, input, &types.PutPipelineDefinitionOutput{})
	return PutPipelineDefinitionRequest{Request: req, Input: input, Copy: c.PutPipelineDefinitionRequest}
}

// PutPipelineDefinitionRequest is the request type for the
// PutPipelineDefinition API operation.
type PutPipelineDefinitionRequest struct {
	*aws.Request
	Input *types.PutPipelineDefinitionInput
	Copy  func(*types.PutPipelineDefinitionInput) PutPipelineDefinitionRequest
}

// Send marshals and sends the PutPipelineDefinition API request.
func (r PutPipelineDefinitionRequest) Send(ctx context.Context) (*PutPipelineDefinitionResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &PutPipelineDefinitionResponse{
		PutPipelineDefinitionOutput: r.Request.Data.(*types.PutPipelineDefinitionOutput),
		response:                    &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// PutPipelineDefinitionResponse is the response type for the
// PutPipelineDefinition API operation.
type PutPipelineDefinitionResponse struct {
	*types.PutPipelineDefinitionOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// PutPipelineDefinition request.
func (r *PutPipelineDefinitionResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
