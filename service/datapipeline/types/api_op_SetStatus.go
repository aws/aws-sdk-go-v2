// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package types

import (
	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/internal/awsutil"
)

// Contains the parameters for SetStatus.
type SetStatusInput struct {
	_ struct{} `type:"structure"`

	// The IDs of the objects. The corresponding objects can be either physical
	// or components, but not a mix of both types.
	//
	// ObjectIds is a required field
	ObjectIds []string `locationName:"objectIds" type:"list" required:"true"`

	// The ID of the pipeline that contains the objects.
	//
	// PipelineId is a required field
	PipelineId *string `locationName:"pipelineId" min:"1" type:"string" required:"true"`

	// The status to be set on all the objects specified in objectIds. For components,
	// use PAUSE or RESUME. For instances, use TRY_CANCEL, RERUN, or MARK_FINISHED.
	//
	// Status is a required field
	Status *string `locationName:"status" type:"string" required:"true"`
}

// String returns the string representation
func (s SetStatusInput) String() string {
	return awsutil.Prettify(s)
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *SetStatusInput) Validate() error {
	invalidParams := aws.ErrInvalidParams{Context: "SetStatusInput"}

	if s.ObjectIds == nil {
		invalidParams.Add(aws.NewErrParamRequired("ObjectIds"))
	}

	if s.PipelineId == nil {
		invalidParams.Add(aws.NewErrParamRequired("PipelineId"))
	}
	if s.PipelineId != nil && len(*s.PipelineId) < 1 {
		invalidParams.Add(aws.NewErrParamMinLen("PipelineId", 1))
	}

	if s.Status == nil {
		invalidParams.Add(aws.NewErrParamRequired("Status"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

type SetStatusOutput struct {
	_ struct{} `type:"structure"`
}

// String returns the string representation
func (s SetStatusOutput) String() string {
	return awsutil.Prettify(s)
}
