// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package pinpoint

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/pinpoint/types"
)

const opGetApps = "GetApps"

// GetAppsRequest returns a request value for making API operation for
// Amazon Pinpoint.
//
// Retrieves information about all of your applications.
//
//    // Example sending a request using GetAppsRequest.
//    req := client.GetAppsRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/pinpoint-2016-12-01/GetApps
func (c *Client) GetAppsRequest(input *types.GetAppsInput) GetAppsRequest {
	op := &aws.Operation{
		Name:       opGetApps,
		HTTPMethod: "GET",
		HTTPPath:   "/v1/apps",
	}

	if input == nil {
		input = &types.GetAppsInput{}
	}

	req := c.newRequest(op, input, &types.GetAppsOutput{})
	return GetAppsRequest{Request: req, Input: input, Copy: c.GetAppsRequest}
}

// GetAppsRequest is the request type for the
// GetApps API operation.
type GetAppsRequest struct {
	*aws.Request
	Input *types.GetAppsInput
	Copy  func(*types.GetAppsInput) GetAppsRequest
}

// Send marshals and sends the GetApps API request.
func (r GetAppsRequest) Send(ctx context.Context) (*GetAppsResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &GetAppsResponse{
		GetAppsOutput: r.Request.Data.(*types.GetAppsOutput),
		response:      &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// GetAppsResponse is the response type for the
// GetApps API operation.
type GetAppsResponse struct {
	*types.GetAppsOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// GetApps request.
func (r *GetAppsResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
