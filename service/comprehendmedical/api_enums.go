// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package comprehendmedical

type AttributeName string

// Enum values for AttributeName
const (
	AttributeNameSign      AttributeName = "SIGN"
	AttributeNameSymptom   AttributeName = "SYMPTOM"
	AttributeNameDiagnosis AttributeName = "DIAGNOSIS"
	AttributeNameNegation  AttributeName = "NEGATION"
)

func (enum AttributeName) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum AttributeName) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type EntitySubType string

// Enum values for EntitySubType
const (
	EntitySubTypeName            EntitySubType = "NAME"
	EntitySubTypeDosage          EntitySubType = "DOSAGE"
	EntitySubTypeRouteOrMode     EntitySubType = "ROUTE_OR_MODE"
	EntitySubTypeForm            EntitySubType = "FORM"
	EntitySubTypeFrequency       EntitySubType = "FREQUENCY"
	EntitySubTypeDuration        EntitySubType = "DURATION"
	EntitySubTypeGenericName     EntitySubType = "GENERIC_NAME"
	EntitySubTypeBrandName       EntitySubType = "BRAND_NAME"
	EntitySubTypeStrength        EntitySubType = "STRENGTH"
	EntitySubTypeRate            EntitySubType = "RATE"
	EntitySubTypeAcuity          EntitySubType = "ACUITY"
	EntitySubTypeTestName        EntitySubType = "TEST_NAME"
	EntitySubTypeTestValue       EntitySubType = "TEST_VALUE"
	EntitySubTypeTestUnits       EntitySubType = "TEST_UNITS"
	EntitySubTypeProcedureName   EntitySubType = "PROCEDURE_NAME"
	EntitySubTypeTreatmentName   EntitySubType = "TREATMENT_NAME"
	EntitySubTypeDate            EntitySubType = "DATE"
	EntitySubTypeAge             EntitySubType = "AGE"
	EntitySubTypeContactPoint    EntitySubType = "CONTACT_POINT"
	EntitySubTypeEmail           EntitySubType = "EMAIL"
	EntitySubTypeIdentifier      EntitySubType = "IDENTIFIER"
	EntitySubTypeUrl             EntitySubType = "URL"
	EntitySubTypeAddress         EntitySubType = "ADDRESS"
	EntitySubTypeProfession      EntitySubType = "PROFESSION"
	EntitySubTypeSystemOrganSite EntitySubType = "SYSTEM_ORGAN_SITE"
	EntitySubTypeDirection       EntitySubType = "DIRECTION"
	EntitySubTypeQuality         EntitySubType = "QUALITY"
	EntitySubTypeQuantity        EntitySubType = "QUANTITY"
)

func (enum EntitySubType) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum EntitySubType) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type EntityType string

// Enum values for EntityType
const (
	EntityTypeMedication                 EntityType = "MEDICATION"
	EntityTypeMedicalCondition           EntityType = "MEDICAL_CONDITION"
	EntityTypeProtectedHealthInformation EntityType = "PROTECTED_HEALTH_INFORMATION"
	EntityTypeTestTreatmentProcedure     EntityType = "TEST_TREATMENT_PROCEDURE"
	EntityTypeAnatomy                    EntityType = "ANATOMY"
)

func (enum EntityType) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum EntityType) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type ICD10CMAttributeType string

// Enum values for ICD10CMAttributeType
const (
	ICD10CMAttributeTypeAcuity          ICD10CMAttributeType = "ACUITY"
	ICD10CMAttributeTypeDirection       ICD10CMAttributeType = "DIRECTION"
	ICD10CMAttributeTypeSystemOrganSite ICD10CMAttributeType = "SYSTEM_ORGAN_SITE"
	ICD10CMAttributeTypeQuality         ICD10CMAttributeType = "QUALITY"
	ICD10CMAttributeTypeQuantity        ICD10CMAttributeType = "QUANTITY"
)

func (enum ICD10CMAttributeType) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum ICD10CMAttributeType) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type ICD10CMEntityCategory string

// Enum values for ICD10CMEntityCategory
const (
	ICD10CMEntityCategoryMedicalCondition ICD10CMEntityCategory = "MEDICAL_CONDITION"
)

func (enum ICD10CMEntityCategory) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum ICD10CMEntityCategory) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type ICD10CMEntityType string

// Enum values for ICD10CMEntityType
const (
	ICD10CMEntityTypeDxName ICD10CMEntityType = "DX_NAME"
)

func (enum ICD10CMEntityType) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum ICD10CMEntityType) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type ICD10CMTraitName string

// Enum values for ICD10CMTraitName
const (
	ICD10CMTraitNameNegation  ICD10CMTraitName = "NEGATION"
	ICD10CMTraitNameDiagnosis ICD10CMTraitName = "DIAGNOSIS"
	ICD10CMTraitNameSign      ICD10CMTraitName = "SIGN"
	ICD10CMTraitNameSymptom   ICD10CMTraitName = "SYMPTOM"
)

func (enum ICD10CMTraitName) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum ICD10CMTraitName) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type JobStatus string

// Enum values for JobStatus
const (
	JobStatusSubmitted      JobStatus = "SUBMITTED"
	JobStatusInProgress     JobStatus = "IN_PROGRESS"
	JobStatusCompleted      JobStatus = "COMPLETED"
	JobStatusPartialSuccess JobStatus = "PARTIAL_SUCCESS"
	JobStatusFailed         JobStatus = "FAILED"
	JobStatusStopRequested  JobStatus = "STOP_REQUESTED"
	JobStatusStopped        JobStatus = "STOPPED"
)

func (enum JobStatus) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum JobStatus) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type LanguageCode string

// Enum values for LanguageCode
const (
	LanguageCodeEn LanguageCode = "en"
)

func (enum LanguageCode) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum LanguageCode) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type RxNormAttributeType string

// Enum values for RxNormAttributeType
const (
	RxNormAttributeTypeDosage      RxNormAttributeType = "DOSAGE"
	RxNormAttributeTypeDuration    RxNormAttributeType = "DURATION"
	RxNormAttributeTypeForm        RxNormAttributeType = "FORM"
	RxNormAttributeTypeFrequency   RxNormAttributeType = "FREQUENCY"
	RxNormAttributeTypeRate        RxNormAttributeType = "RATE"
	RxNormAttributeTypeRouteOrMode RxNormAttributeType = "ROUTE_OR_MODE"
	RxNormAttributeTypeStrength    RxNormAttributeType = "STRENGTH"
)

func (enum RxNormAttributeType) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum RxNormAttributeType) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type RxNormEntityCategory string

// Enum values for RxNormEntityCategory
const (
	RxNormEntityCategoryMedication RxNormEntityCategory = "MEDICATION"
)

func (enum RxNormEntityCategory) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum RxNormEntityCategory) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type RxNormEntityType string

// Enum values for RxNormEntityType
const (
	RxNormEntityTypeBrandName   RxNormEntityType = "BRAND_NAME"
	RxNormEntityTypeGenericName RxNormEntityType = "GENERIC_NAME"
)

func (enum RxNormEntityType) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum RxNormEntityType) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type RxNormTraitName string

// Enum values for RxNormTraitName
const (
	RxNormTraitNameNegation RxNormTraitName = "NEGATION"
)

func (enum RxNormTraitName) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum RxNormTraitName) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}
