// Code generated by smithy-go-codegen DO NOT EDIT.

package types

type AccountSortBy string

// Enum values for AccountSortBy
const (
	AccountSortByCritical AccountSortBy = "CRITICAL"
	AccountSortByHigh     AccountSortBy = "HIGH"
	AccountSortByAll      AccountSortBy = "ALL"
)

// Values returns all known values for AccountSortBy. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (AccountSortBy) Values() []AccountSortBy {
	return []AccountSortBy{
		"CRITICAL",
		"HIGH",
		"ALL",
	}
}

type AggregationFindingType string

// Enum values for AggregationFindingType
const (
	AggregationFindingTypeNetworkReachability  AggregationFindingType = "NETWORK_REACHABILITY"
	AggregationFindingTypePackageVulnerability AggregationFindingType = "PACKAGE_VULNERABILITY"
)

// Values returns all known values for AggregationFindingType. Note that this can
// be expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (AggregationFindingType) Values() []AggregationFindingType {
	return []AggregationFindingType{
		"NETWORK_REACHABILITY",
		"PACKAGE_VULNERABILITY",
	}
}

type AggregationResourceType string

// Enum values for AggregationResourceType
const (
	AggregationResourceTypeAwsEc2Instance       AggregationResourceType = "AWS_EC2_INSTANCE"
	AggregationResourceTypeAwsEcrContainerImage AggregationResourceType = "AWS_ECR_CONTAINER_IMAGE"
)

// Values returns all known values for AggregationResourceType. Note that this can
// be expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (AggregationResourceType) Values() []AggregationResourceType {
	return []AggregationResourceType{
		"AWS_EC2_INSTANCE",
		"AWS_ECR_CONTAINER_IMAGE",
	}
}

type AggregationType string

// Enum values for AggregationType
const (
	AggregationTypeFindingType     AggregationType = "FINDING_TYPE"
	AggregationTypePackage         AggregationType = "PACKAGE"
	AggregationTypeTitle           AggregationType = "TITLE"
	AggregationTypeRepository      AggregationType = "REPOSITORY"
	AggregationTypeAmi             AggregationType = "AMI"
	AggregationTypeAwsEc2Instance  AggregationType = "AWS_EC2_INSTANCE"
	AggregationTypeAwsEcrContainer AggregationType = "AWS_ECR_CONTAINER"
	AggregationTypeImageLayer      AggregationType = "IMAGE_LAYER"
	AggregationTypeAccount         AggregationType = "ACCOUNT"
)

// Values returns all known values for AggregationType. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (AggregationType) Values() []AggregationType {
	return []AggregationType{
		"FINDING_TYPE",
		"PACKAGE",
		"TITLE",
		"REPOSITORY",
		"AMI",
		"AWS_EC2_INSTANCE",
		"AWS_ECR_CONTAINER",
		"IMAGE_LAYER",
		"ACCOUNT",
	}
}

type AmiSortBy string

// Enum values for AmiSortBy
const (
	AmiSortByCritical          AmiSortBy = "CRITICAL"
	AmiSortByHigh              AmiSortBy = "HIGH"
	AmiSortByAll               AmiSortBy = "ALL"
	AmiSortByAffectedInstances AmiSortBy = "AFFECTED_INSTANCES"
)

// Values returns all known values for AmiSortBy. Note that this can be expanded in
// the future, and so it is only as up to date as the client. The ordering of this
// slice is not guaranteed to be stable across updates.
func (AmiSortBy) Values() []AmiSortBy {
	return []AmiSortBy{
		"CRITICAL",
		"HIGH",
		"ALL",
		"AFFECTED_INSTANCES",
	}
}

type AwsEcrContainerSortBy string

// Enum values for AwsEcrContainerSortBy
const (
	AwsEcrContainerSortByCritical AwsEcrContainerSortBy = "CRITICAL"
	AwsEcrContainerSortByHigh     AwsEcrContainerSortBy = "HIGH"
	AwsEcrContainerSortByAll      AwsEcrContainerSortBy = "ALL"
)

// Values returns all known values for AwsEcrContainerSortBy. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (AwsEcrContainerSortBy) Values() []AwsEcrContainerSortBy {
	return []AwsEcrContainerSortBy{
		"CRITICAL",
		"HIGH",
		"ALL",
	}
}

type CoverageMapComparison string

// Enum values for CoverageMapComparison
const (
	CoverageMapComparisonEquals CoverageMapComparison = "EQUALS"
)

// Values returns all known values for CoverageMapComparison. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (CoverageMapComparison) Values() []CoverageMapComparison {
	return []CoverageMapComparison{
		"EQUALS",
	}
}

type CoverageResourceType string

// Enum values for CoverageResourceType
const (
	CoverageResourceTypeAwsEc2Instance       CoverageResourceType = "AWS_EC2_INSTANCE"
	CoverageResourceTypeAwsEcrContainerImage CoverageResourceType = "AWS_ECR_CONTAINER_IMAGE"
	CoverageResourceTypeAwsEcrRepository     CoverageResourceType = "AWS_ECR_REPOSITORY"
)

// Values returns all known values for CoverageResourceType. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (CoverageResourceType) Values() []CoverageResourceType {
	return []CoverageResourceType{
		"AWS_EC2_INSTANCE",
		"AWS_ECR_CONTAINER_IMAGE",
		"AWS_ECR_REPOSITORY",
	}
}

type CoverageStringComparison string

// Enum values for CoverageStringComparison
const (
	CoverageStringComparisonEquals    CoverageStringComparison = "EQUALS"
	CoverageStringComparisonNotEquals CoverageStringComparison = "NOT_EQUALS"
)

// Values returns all known values for CoverageStringComparison. Note that this can
// be expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (CoverageStringComparison) Values() []CoverageStringComparison {
	return []CoverageStringComparison{
		"EQUALS",
		"NOT_EQUALS",
	}
}

type Currency string

// Enum values for Currency
const (
	CurrencyUsd Currency = "USD"
)

// Values returns all known values for Currency. Note that this can be expanded in
// the future, and so it is only as up to date as the client. The ordering of this
// slice is not guaranteed to be stable across updates.
func (Currency) Values() []Currency {
	return []Currency{
		"USD",
	}
}

type DelegatedAdminStatus string

// Enum values for DelegatedAdminStatus
const (
	DelegatedAdminStatusEnabled           DelegatedAdminStatus = "ENABLED"
	DelegatedAdminStatusDisableInProgress DelegatedAdminStatus = "DISABLE_IN_PROGRESS"
)

// Values returns all known values for DelegatedAdminStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (DelegatedAdminStatus) Values() []DelegatedAdminStatus {
	return []DelegatedAdminStatus{
		"ENABLED",
		"DISABLE_IN_PROGRESS",
	}
}

type Ec2InstanceSortBy string

// Enum values for Ec2InstanceSortBy
const (
	Ec2InstanceSortByNetworkFindings Ec2InstanceSortBy = "NETWORK_FINDINGS"
	Ec2InstanceSortByCritical        Ec2InstanceSortBy = "CRITICAL"
	Ec2InstanceSortByHigh            Ec2InstanceSortBy = "HIGH"
	Ec2InstanceSortByAll             Ec2InstanceSortBy = "ALL"
)

// Values returns all known values for Ec2InstanceSortBy. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (Ec2InstanceSortBy) Values() []Ec2InstanceSortBy {
	return []Ec2InstanceSortBy{
		"NETWORK_FINDINGS",
		"CRITICAL",
		"HIGH",
		"ALL",
	}
}

type Ec2Platform string

// Enum values for Ec2Platform
const (
	Ec2PlatformWindows Ec2Platform = "WINDOWS"
	Ec2PlatformLinux   Ec2Platform = "LINUX"
	Ec2PlatformUnknown Ec2Platform = "UNKNOWN"
)

// Values returns all known values for Ec2Platform. Note that this can be expanded
// in the future, and so it is only as up to date as the client. The ordering of
// this slice is not guaranteed to be stable across updates.
func (Ec2Platform) Values() []Ec2Platform {
	return []Ec2Platform{
		"WINDOWS",
		"LINUX",
		"UNKNOWN",
	}
}

type EcrRescanDuration string

// Enum values for EcrRescanDuration
const (
	EcrRescanDurationLifetime EcrRescanDuration = "LIFETIME"
	EcrRescanDurationDays30   EcrRescanDuration = "DAYS_30"
	EcrRescanDurationDays180  EcrRescanDuration = "DAYS_180"
)

// Values returns all known values for EcrRescanDuration. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (EcrRescanDuration) Values() []EcrRescanDuration {
	return []EcrRescanDuration{
		"LIFETIME",
		"DAYS_30",
		"DAYS_180",
	}
}

type EcrRescanDurationStatus string

// Enum values for EcrRescanDurationStatus
const (
	EcrRescanDurationStatusSuccess EcrRescanDurationStatus = "SUCCESS"
	EcrRescanDurationStatusPending EcrRescanDurationStatus = "PENDING"
	EcrRescanDurationStatusFailed  EcrRescanDurationStatus = "FAILED"
)

// Values returns all known values for EcrRescanDurationStatus. Note that this can
// be expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (EcrRescanDurationStatus) Values() []EcrRescanDurationStatus {
	return []EcrRescanDurationStatus{
		"SUCCESS",
		"PENDING",
		"FAILED",
	}
}

type EcrScanFrequency string

// Enum values for EcrScanFrequency
const (
	EcrScanFrequencyManual         EcrScanFrequency = "MANUAL"
	EcrScanFrequencyScanOnPush     EcrScanFrequency = "SCAN_ON_PUSH"
	EcrScanFrequencyContinuousScan EcrScanFrequency = "CONTINUOUS_SCAN"
)

// Values returns all known values for EcrScanFrequency. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (EcrScanFrequency) Values() []EcrScanFrequency {
	return []EcrScanFrequency{
		"MANUAL",
		"SCAN_ON_PUSH",
		"CONTINUOUS_SCAN",
	}
}

type ErrorCode string

// Enum values for ErrorCode
const (
	ErrorCodeAlreadyEnabled          ErrorCode = "ALREADY_ENABLED"
	ErrorCodeEnableInProgress        ErrorCode = "ENABLE_IN_PROGRESS"
	ErrorCodeDisableInProgress       ErrorCode = "DISABLE_IN_PROGRESS"
	ErrorCodeSuspendInProgress       ErrorCode = "SUSPEND_IN_PROGRESS"
	ErrorCodeResourceNotFound        ErrorCode = "RESOURCE_NOT_FOUND"
	ErrorCodeAccessDenied            ErrorCode = "ACCESS_DENIED"
	ErrorCodeInternalError           ErrorCode = "INTERNAL_ERROR"
	ErrorCodeSsmUnavailable          ErrorCode = "SSM_UNAVAILABLE"
	ErrorCodeSsmThrottled            ErrorCode = "SSM_THROTTLED"
	ErrorCodeEventbridgeUnavailable  ErrorCode = "EVENTBRIDGE_UNAVAILABLE"
	ErrorCodeEventbridgeThrottled    ErrorCode = "EVENTBRIDGE_THROTTLED"
	ErrorCodeResourceScanNotDisabled ErrorCode = "RESOURCE_SCAN_NOT_DISABLED"
	ErrorCodeDisassociateAllMembers  ErrorCode = "DISASSOCIATE_ALL_MEMBERS"
	ErrorCodeAccountIsIsolated       ErrorCode = "ACCOUNT_IS_ISOLATED"
)

// Values returns all known values for ErrorCode. Note that this can be expanded in
// the future, and so it is only as up to date as the client. The ordering of this
// slice is not guaranteed to be stable across updates.
func (ErrorCode) Values() []ErrorCode {
	return []ErrorCode{
		"ALREADY_ENABLED",
		"ENABLE_IN_PROGRESS",
		"DISABLE_IN_PROGRESS",
		"SUSPEND_IN_PROGRESS",
		"RESOURCE_NOT_FOUND",
		"ACCESS_DENIED",
		"INTERNAL_ERROR",
		"SSM_UNAVAILABLE",
		"SSM_THROTTLED",
		"EVENTBRIDGE_UNAVAILABLE",
		"EVENTBRIDGE_THROTTLED",
		"RESOURCE_SCAN_NOT_DISABLED",
		"DISASSOCIATE_ALL_MEMBERS",
		"ACCOUNT_IS_ISOLATED",
	}
}

type ExternalReportStatus string

// Enum values for ExternalReportStatus
const (
	ExternalReportStatusSucceeded  ExternalReportStatus = "SUCCEEDED"
	ExternalReportStatusInProgress ExternalReportStatus = "IN_PROGRESS"
	ExternalReportStatusCancelled  ExternalReportStatus = "CANCELLED"
	ExternalReportStatusFailed     ExternalReportStatus = "FAILED"
)

// Values returns all known values for ExternalReportStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (ExternalReportStatus) Values() []ExternalReportStatus {
	return []ExternalReportStatus{
		"SUCCEEDED",
		"IN_PROGRESS",
		"CANCELLED",
		"FAILED",
	}
}

type FilterAction string

// Enum values for FilterAction
const (
	FilterActionNone     FilterAction = "NONE"
	FilterActionSuppress FilterAction = "SUPPRESS"
)

// Values returns all known values for FilterAction. Note that this can be expanded
// in the future, and so it is only as up to date as the client. The ordering of
// this slice is not guaranteed to be stable across updates.
func (FilterAction) Values() []FilterAction {
	return []FilterAction{
		"NONE",
		"SUPPRESS",
	}
}

type FindingStatus string

// Enum values for FindingStatus
const (
	FindingStatusActive     FindingStatus = "ACTIVE"
	FindingStatusSuppressed FindingStatus = "SUPPRESSED"
	FindingStatusClosed     FindingStatus = "CLOSED"
)

// Values returns all known values for FindingStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (FindingStatus) Values() []FindingStatus {
	return []FindingStatus{
		"ACTIVE",
		"SUPPRESSED",
		"CLOSED",
	}
}

type FindingType string

// Enum values for FindingType
const (
	FindingTypeNetworkReachability  FindingType = "NETWORK_REACHABILITY"
	FindingTypePackageVulnerability FindingType = "PACKAGE_VULNERABILITY"
)

// Values returns all known values for FindingType. Note that this can be expanded
// in the future, and so it is only as up to date as the client. The ordering of
// this slice is not guaranteed to be stable across updates.
func (FindingType) Values() []FindingType {
	return []FindingType{
		"NETWORK_REACHABILITY",
		"PACKAGE_VULNERABILITY",
	}
}

type FindingTypeSortBy string

// Enum values for FindingTypeSortBy
const (
	FindingTypeSortByCritical FindingTypeSortBy = "CRITICAL"
	FindingTypeSortByHigh     FindingTypeSortBy = "HIGH"
	FindingTypeSortByAll      FindingTypeSortBy = "ALL"
)

// Values returns all known values for FindingTypeSortBy. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (FindingTypeSortBy) Values() []FindingTypeSortBy {
	return []FindingTypeSortBy{
		"CRITICAL",
		"HIGH",
		"ALL",
	}
}

type FixAvailable string

// Enum values for FixAvailable
const (
	FixAvailableYes     FixAvailable = "YES"
	FixAvailableNo      FixAvailable = "NO"
	FixAvailablePartial FixAvailable = "PARTIAL"
)

// Values returns all known values for FixAvailable. Note that this can be expanded
// in the future, and so it is only as up to date as the client. The ordering of
// this slice is not guaranteed to be stable across updates.
func (FixAvailable) Values() []FixAvailable {
	return []FixAvailable{
		"YES",
		"NO",
		"PARTIAL",
	}
}

type FreeTrialInfoErrorCode string

// Enum values for FreeTrialInfoErrorCode
const (
	FreeTrialInfoErrorCodeAccessDenied  FreeTrialInfoErrorCode = "ACCESS_DENIED"
	FreeTrialInfoErrorCodeInternalError FreeTrialInfoErrorCode = "INTERNAL_ERROR"
)

// Values returns all known values for FreeTrialInfoErrorCode. Note that this can
// be expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (FreeTrialInfoErrorCode) Values() []FreeTrialInfoErrorCode {
	return []FreeTrialInfoErrorCode{
		"ACCESS_DENIED",
		"INTERNAL_ERROR",
	}
}

type FreeTrialStatus string

// Enum values for FreeTrialStatus
const (
	FreeTrialStatusActive   FreeTrialStatus = "ACTIVE"
	FreeTrialStatusInactive FreeTrialStatus = "INACTIVE"
)

// Values returns all known values for FreeTrialStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (FreeTrialStatus) Values() []FreeTrialStatus {
	return []FreeTrialStatus{
		"ACTIVE",
		"INACTIVE",
	}
}

type FreeTrialType string

// Enum values for FreeTrialType
const (
	FreeTrialTypeEc2 FreeTrialType = "EC2"
	FreeTrialTypeEcr FreeTrialType = "ECR"
)

// Values returns all known values for FreeTrialType. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (FreeTrialType) Values() []FreeTrialType {
	return []FreeTrialType{
		"EC2",
		"ECR",
	}
}

type GroupKey string

// Enum values for GroupKey
const (
	GroupKeyScanStatusCode    GroupKey = "SCAN_STATUS_CODE"
	GroupKeyScanStatusReason  GroupKey = "SCAN_STATUS_REASON"
	GroupKeyAccountId         GroupKey = "ACCOUNT_ID"
	GroupKeyResourceType      GroupKey = "RESOURCE_TYPE"
	GroupKeyEcrRepositoryName GroupKey = "ECR_REPOSITORY_NAME"
)

// Values returns all known values for GroupKey. Note that this can be expanded in
// the future, and so it is only as up to date as the client. The ordering of this
// slice is not guaranteed to be stable across updates.
func (GroupKey) Values() []GroupKey {
	return []GroupKey{
		"SCAN_STATUS_CODE",
		"SCAN_STATUS_REASON",
		"ACCOUNT_ID",
		"RESOURCE_TYPE",
		"ECR_REPOSITORY_NAME",
	}
}

type ImageLayerSortBy string

// Enum values for ImageLayerSortBy
const (
	ImageLayerSortByCritical ImageLayerSortBy = "CRITICAL"
	ImageLayerSortByHigh     ImageLayerSortBy = "HIGH"
	ImageLayerSortByAll      ImageLayerSortBy = "ALL"
)

// Values returns all known values for ImageLayerSortBy. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (ImageLayerSortBy) Values() []ImageLayerSortBy {
	return []ImageLayerSortBy{
		"CRITICAL",
		"HIGH",
		"ALL",
	}
}

type MapComparison string

// Enum values for MapComparison
const (
	MapComparisonEquals MapComparison = "EQUALS"
)

// Values returns all known values for MapComparison. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (MapComparison) Values() []MapComparison {
	return []MapComparison{
		"EQUALS",
	}
}

type NetworkProtocol string

// Enum values for NetworkProtocol
const (
	NetworkProtocolTcp NetworkProtocol = "TCP"
	NetworkProtocolUdp NetworkProtocol = "UDP"
)

// Values returns all known values for NetworkProtocol. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (NetworkProtocol) Values() []NetworkProtocol {
	return []NetworkProtocol{
		"TCP",
		"UDP",
	}
}

type Operation string

// Enum values for Operation
const (
	OperationEnableScanning    Operation = "ENABLE_SCANNING"
	OperationDisableScanning   Operation = "DISABLE_SCANNING"
	OperationEnableRepository  Operation = "ENABLE_REPOSITORY"
	OperationDisableRepository Operation = "DISABLE_REPOSITORY"
)

// Values returns all known values for Operation. Note that this can be expanded in
// the future, and so it is only as up to date as the client. The ordering of this
// slice is not guaranteed to be stable across updates.
func (Operation) Values() []Operation {
	return []Operation{
		"ENABLE_SCANNING",
		"DISABLE_SCANNING",
		"ENABLE_REPOSITORY",
		"DISABLE_REPOSITORY",
	}
}

type PackageManager string

// Enum values for PackageManager
const (
	PackageManagerBundler   PackageManager = "BUNDLER"
	PackageManagerCargo     PackageManager = "CARGO"
	PackageManagerComposer  PackageManager = "COMPOSER"
	PackageManagerNpm       PackageManager = "NPM"
	PackageManagerNuget     PackageManager = "NUGET"
	PackageManagerPipenv    PackageManager = "PIPENV"
	PackageManagerPoetry    PackageManager = "POETRY"
	PackageManagerYarn      PackageManager = "YARN"
	PackageManagerGobinary  PackageManager = "GOBINARY"
	PackageManagerGomod     PackageManager = "GOMOD"
	PackageManagerJar       PackageManager = "JAR"
	PackageManagerOs        PackageManager = "OS"
	PackageManagerPip       PackageManager = "PIP"
	PackageManagerPythonpkg PackageManager = "PYTHONPKG"
	PackageManagerNodepkg   PackageManager = "NODEPKG"
	PackageManagerPom       PackageManager = "POM"
)

// Values returns all known values for PackageManager. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (PackageManager) Values() []PackageManager {
	return []PackageManager{
		"BUNDLER",
		"CARGO",
		"COMPOSER",
		"NPM",
		"NUGET",
		"PIPENV",
		"POETRY",
		"YARN",
		"GOBINARY",
		"GOMOD",
		"JAR",
		"OS",
		"PIP",
		"PYTHONPKG",
		"NODEPKG",
		"POM",
	}
}

type PackageSortBy string

// Enum values for PackageSortBy
const (
	PackageSortByCritical PackageSortBy = "CRITICAL"
	PackageSortByHigh     PackageSortBy = "HIGH"
	PackageSortByAll      PackageSortBy = "ALL"
)

// Values returns all known values for PackageSortBy. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (PackageSortBy) Values() []PackageSortBy {
	return []PackageSortBy{
		"CRITICAL",
		"HIGH",
		"ALL",
	}
}

type RelationshipStatus string

// Enum values for RelationshipStatus
const (
	RelationshipStatusCreated                         RelationshipStatus = "CREATED"
	RelationshipStatusInvited                         RelationshipStatus = "INVITED"
	RelationshipStatusDisabled                        RelationshipStatus = "DISABLED"
	RelationshipStatusEnabled                         RelationshipStatus = "ENABLED"
	RelationshipStatusRemoved                         RelationshipStatus = "REMOVED"
	RelationshipStatusResigned                        RelationshipStatus = "RESIGNED"
	RelationshipStatusDeleted                         RelationshipStatus = "DELETED"
	RelationshipStatusEmailVerificationInProgress     RelationshipStatus = "EMAIL_VERIFICATION_IN_PROGRESS"
	RelationshipStatusEmailVerificationFailed         RelationshipStatus = "EMAIL_VERIFICATION_FAILED"
	RelationshipStatusRegionDisabled                  RelationshipStatus = "REGION_DISABLED"
	RelationshipStatusAccountSuspended                RelationshipStatus = "ACCOUNT_SUSPENDED"
	RelationshipStatusCannotCreateDetectorInOrgMaster RelationshipStatus = "CANNOT_CREATE_DETECTOR_IN_ORG_MASTER"
)

// Values returns all known values for RelationshipStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (RelationshipStatus) Values() []RelationshipStatus {
	return []RelationshipStatus{
		"CREATED",
		"INVITED",
		"DISABLED",
		"ENABLED",
		"REMOVED",
		"RESIGNED",
		"DELETED",
		"EMAIL_VERIFICATION_IN_PROGRESS",
		"EMAIL_VERIFICATION_FAILED",
		"REGION_DISABLED",
		"ACCOUNT_SUSPENDED",
		"CANNOT_CREATE_DETECTOR_IN_ORG_MASTER",
	}
}

type ReportFormat string

// Enum values for ReportFormat
const (
	ReportFormatCsv  ReportFormat = "CSV"
	ReportFormatJson ReportFormat = "JSON"
)

// Values returns all known values for ReportFormat. Note that this can be expanded
// in the future, and so it is only as up to date as the client. The ordering of
// this slice is not guaranteed to be stable across updates.
func (ReportFormat) Values() []ReportFormat {
	return []ReportFormat{
		"CSV",
		"JSON",
	}
}

type ReportingErrorCode string

// Enum values for ReportingErrorCode
const (
	ReportingErrorCodeInternalError            ReportingErrorCode = "INTERNAL_ERROR"
	ReportingErrorCodeInvalidPermissions       ReportingErrorCode = "INVALID_PERMISSIONS"
	ReportingErrorCodeNoFindingsFound          ReportingErrorCode = "NO_FINDINGS_FOUND"
	ReportingErrorCodeBucketNotFound           ReportingErrorCode = "BUCKET_NOT_FOUND"
	ReportingErrorCodeIncompatibleBucketRegion ReportingErrorCode = "INCOMPATIBLE_BUCKET_REGION"
	ReportingErrorCodeMalformedKmsKey          ReportingErrorCode = "MALFORMED_KMS_KEY"
)

// Values returns all known values for ReportingErrorCode. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (ReportingErrorCode) Values() []ReportingErrorCode {
	return []ReportingErrorCode{
		"INTERNAL_ERROR",
		"INVALID_PERMISSIONS",
		"NO_FINDINGS_FOUND",
		"BUCKET_NOT_FOUND",
		"INCOMPATIBLE_BUCKET_REGION",
		"MALFORMED_KMS_KEY",
	}
}

type RepositorySortBy string

// Enum values for RepositorySortBy
const (
	RepositorySortByCritical       RepositorySortBy = "CRITICAL"
	RepositorySortByHigh           RepositorySortBy = "HIGH"
	RepositorySortByAll            RepositorySortBy = "ALL"
	RepositorySortByAffectedImages RepositorySortBy = "AFFECTED_IMAGES"
)

// Values returns all known values for RepositorySortBy. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (RepositorySortBy) Values() []RepositorySortBy {
	return []RepositorySortBy{
		"CRITICAL",
		"HIGH",
		"ALL",
		"AFFECTED_IMAGES",
	}
}

type ResourceScanType string

// Enum values for ResourceScanType
const (
	ResourceScanTypeEc2 ResourceScanType = "EC2"
	ResourceScanTypeEcr ResourceScanType = "ECR"
)

// Values returns all known values for ResourceScanType. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (ResourceScanType) Values() []ResourceScanType {
	return []ResourceScanType{
		"EC2",
		"ECR",
	}
}

type ResourceType string

// Enum values for ResourceType
const (
	ResourceTypeAwsEc2Instance       ResourceType = "AWS_EC2_INSTANCE"
	ResourceTypeAwsEcrContainerImage ResourceType = "AWS_ECR_CONTAINER_IMAGE"
	ResourceTypeAwsEcrRepository     ResourceType = "AWS_ECR_REPOSITORY"
)

// Values returns all known values for ResourceType. Note that this can be expanded
// in the future, and so it is only as up to date as the client. The ordering of
// this slice is not guaranteed to be stable across updates.
func (ResourceType) Values() []ResourceType {
	return []ResourceType{
		"AWS_EC2_INSTANCE",
		"AWS_ECR_CONTAINER_IMAGE",
		"AWS_ECR_REPOSITORY",
	}
}

type ScanStatusCode string

// Enum values for ScanStatusCode
const (
	ScanStatusCodeActive   ScanStatusCode = "ACTIVE"
	ScanStatusCodeInactive ScanStatusCode = "INACTIVE"
)

// Values returns all known values for ScanStatusCode. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (ScanStatusCode) Values() []ScanStatusCode {
	return []ScanStatusCode{
		"ACTIVE",
		"INACTIVE",
	}
}

type ScanStatusReason string

// Enum values for ScanStatusReason
const (
	ScanStatusReasonPendingInitialScan      ScanStatusReason = "PENDING_INITIAL_SCAN"
	ScanStatusReasonAccessDenied            ScanStatusReason = "ACCESS_DENIED"
	ScanStatusReasonInternalError           ScanStatusReason = "INTERNAL_ERROR"
	ScanStatusReasonUnmanagedEc2Instance    ScanStatusReason = "UNMANAGED_EC2_INSTANCE"
	ScanStatusReasonUnsupportedOs           ScanStatusReason = "UNSUPPORTED_OS"
	ScanStatusReasonScanEligibilityExpired  ScanStatusReason = "SCAN_ELIGIBILITY_EXPIRED"
	ScanStatusReasonResourceTerminated      ScanStatusReason = "RESOURCE_TERMINATED"
	ScanStatusReasonSuccessful              ScanStatusReason = "SUCCESSFUL"
	ScanStatusReasonNoResourcesFound        ScanStatusReason = "NO_RESOURCES_FOUND"
	ScanStatusReasonImageSizeExceeded       ScanStatusReason = "IMAGE_SIZE_EXCEEDED"
	ScanStatusReasonScanFrequencyManual     ScanStatusReason = "SCAN_FREQUENCY_MANUAL"
	ScanStatusReasonScanFrequencyScanOnPush ScanStatusReason = "SCAN_FREQUENCY_SCAN_ON_PUSH"
	ScanStatusReasonEc2InstanceStopped      ScanStatusReason = "EC2_INSTANCE_STOPPED"
	ScanStatusReasonPendingDisable          ScanStatusReason = "PENDING_DISABLE"
	ScanStatusReasonNoInventory             ScanStatusReason = "NO_INVENTORY"
	ScanStatusReasonStaleInventory          ScanStatusReason = "STALE_INVENTORY"
)

// Values returns all known values for ScanStatusReason. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (ScanStatusReason) Values() []ScanStatusReason {
	return []ScanStatusReason{
		"PENDING_INITIAL_SCAN",
		"ACCESS_DENIED",
		"INTERNAL_ERROR",
		"UNMANAGED_EC2_INSTANCE",
		"UNSUPPORTED_OS",
		"SCAN_ELIGIBILITY_EXPIRED",
		"RESOURCE_TERMINATED",
		"SUCCESSFUL",
		"NO_RESOURCES_FOUND",
		"IMAGE_SIZE_EXCEEDED",
		"SCAN_FREQUENCY_MANUAL",
		"SCAN_FREQUENCY_SCAN_ON_PUSH",
		"EC2_INSTANCE_STOPPED",
		"PENDING_DISABLE",
		"NO_INVENTORY",
		"STALE_INVENTORY",
	}
}

type ScanType string

// Enum values for ScanType
const (
	ScanTypeNetwork ScanType = "NETWORK"
	ScanTypePackage ScanType = "PACKAGE"
)

// Values returns all known values for ScanType. Note that this can be expanded in
// the future, and so it is only as up to date as the client. The ordering of this
// slice is not guaranteed to be stable across updates.
func (ScanType) Values() []ScanType {
	return []ScanType{
		"NETWORK",
		"PACKAGE",
	}
}

type Service string

// Enum values for Service
const (
	ServiceEc2 Service = "EC2"
	ServiceEcr Service = "ECR"
)

// Values returns all known values for Service. Note that this can be expanded in
// the future, and so it is only as up to date as the client. The ordering of this
// slice is not guaranteed to be stable across updates.
func (Service) Values() []Service {
	return []Service{
		"EC2",
		"ECR",
	}
}

type Severity string

// Enum values for Severity
const (
	SeverityInformational Severity = "INFORMATIONAL"
	SeverityLow           Severity = "LOW"
	SeverityMedium        Severity = "MEDIUM"
	SeverityHigh          Severity = "HIGH"
	SeverityCritical      Severity = "CRITICAL"
	SeverityUntriaged     Severity = "UNTRIAGED"
)

// Values returns all known values for Severity. Note that this can be expanded in
// the future, and so it is only as up to date as the client. The ordering of this
// slice is not guaranteed to be stable across updates.
func (Severity) Values() []Severity {
	return []Severity{
		"INFORMATIONAL",
		"LOW",
		"MEDIUM",
		"HIGH",
		"CRITICAL",
		"UNTRIAGED",
	}
}

type SortField string

// Enum values for SortField
const (
	SortFieldAwsAccountId           SortField = "AWS_ACCOUNT_ID"
	SortFieldFindingType            SortField = "FINDING_TYPE"
	SortFieldSeverity               SortField = "SEVERITY"
	SortFieldFirstObservedAt        SortField = "FIRST_OBSERVED_AT"
	SortFieldLastObservedAt         SortField = "LAST_OBSERVED_AT"
	SortFieldFindingStatus          SortField = "FINDING_STATUS"
	SortFieldResourceType           SortField = "RESOURCE_TYPE"
	SortFieldEcrImagePushedAt       SortField = "ECR_IMAGE_PUSHED_AT"
	SortFieldEcrImageRepositoryName SortField = "ECR_IMAGE_REPOSITORY_NAME"
	SortFieldEcrImageRegistry       SortField = "ECR_IMAGE_REGISTRY"
	SortFieldNetworkProtocol        SortField = "NETWORK_PROTOCOL"
	SortFieldComponentType          SortField = "COMPONENT_TYPE"
	SortFieldVulnerabilityId        SortField = "VULNERABILITY_ID"
	SortFieldVulnerabilitySource    SortField = "VULNERABILITY_SOURCE"
	SortFieldInspectorScore         SortField = "INSPECTOR_SCORE"
	SortFieldVendorSeverity         SortField = "VENDOR_SEVERITY"
)

// Values returns all known values for SortField. Note that this can be expanded in
// the future, and so it is only as up to date as the client. The ordering of this
// slice is not guaranteed to be stable across updates.
func (SortField) Values() []SortField {
	return []SortField{
		"AWS_ACCOUNT_ID",
		"FINDING_TYPE",
		"SEVERITY",
		"FIRST_OBSERVED_AT",
		"LAST_OBSERVED_AT",
		"FINDING_STATUS",
		"RESOURCE_TYPE",
		"ECR_IMAGE_PUSHED_AT",
		"ECR_IMAGE_REPOSITORY_NAME",
		"ECR_IMAGE_REGISTRY",
		"NETWORK_PROTOCOL",
		"COMPONENT_TYPE",
		"VULNERABILITY_ID",
		"VULNERABILITY_SOURCE",
		"INSPECTOR_SCORE",
		"VENDOR_SEVERITY",
	}
}

type SortOrder string

// Enum values for SortOrder
const (
	SortOrderAsc  SortOrder = "ASC"
	SortOrderDesc SortOrder = "DESC"
)

// Values returns all known values for SortOrder. Note that this can be expanded in
// the future, and so it is only as up to date as the client. The ordering of this
// slice is not guaranteed to be stable across updates.
func (SortOrder) Values() []SortOrder {
	return []SortOrder{
		"ASC",
		"DESC",
	}
}

type Status string

// Enum values for Status
const (
	StatusEnabling   Status = "ENABLING"
	StatusEnabled    Status = "ENABLED"
	StatusDisabling  Status = "DISABLING"
	StatusDisabled   Status = "DISABLED"
	StatusSuspending Status = "SUSPENDING"
	StatusSuspended  Status = "SUSPENDED"
)

// Values returns all known values for Status. Note that this can be expanded in
// the future, and so it is only as up to date as the client. The ordering of this
// slice is not guaranteed to be stable across updates.
func (Status) Values() []Status {
	return []Status{
		"ENABLING",
		"ENABLED",
		"DISABLING",
		"DISABLED",
		"SUSPENDING",
		"SUSPENDED",
	}
}

type StringComparison string

// Enum values for StringComparison
const (
	StringComparisonEquals    StringComparison = "EQUALS"
	StringComparisonPrefix    StringComparison = "PREFIX"
	StringComparisonNotEquals StringComparison = "NOT_EQUALS"
)

// Values returns all known values for StringComparison. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (StringComparison) Values() []StringComparison {
	return []StringComparison{
		"EQUALS",
		"PREFIX",
		"NOT_EQUALS",
	}
}

type TitleSortBy string

// Enum values for TitleSortBy
const (
	TitleSortByCritical TitleSortBy = "CRITICAL"
	TitleSortByHigh     TitleSortBy = "HIGH"
	TitleSortByAll      TitleSortBy = "ALL"
)

// Values returns all known values for TitleSortBy. Note that this can be expanded
// in the future, and so it is only as up to date as the client. The ordering of
// this slice is not guaranteed to be stable across updates.
func (TitleSortBy) Values() []TitleSortBy {
	return []TitleSortBy{
		"CRITICAL",
		"HIGH",
		"ALL",
	}
}

type UsageType string

// Enum values for UsageType
const (
	UsageTypeEc2InstanceHours UsageType = "EC2_INSTANCE_HOURS"
	UsageTypeEcrInitialScan   UsageType = "ECR_INITIAL_SCAN"
	UsageTypeEcrRescan        UsageType = "ECR_RESCAN"
)

// Values returns all known values for UsageType. Note that this can be expanded in
// the future, and so it is only as up to date as the client. The ordering of this
// slice is not guaranteed to be stable across updates.
func (UsageType) Values() []UsageType {
	return []UsageType{
		"EC2_INSTANCE_HOURS",
		"ECR_INITIAL_SCAN",
		"ECR_RESCAN",
	}
}

type ValidationExceptionReason string

// Enum values for ValidationExceptionReason
const (
	ValidationExceptionReasonCannotParse           ValidationExceptionReason = "CANNOT_PARSE"
	ValidationExceptionReasonFieldValidationFailed ValidationExceptionReason = "FIELD_VALIDATION_FAILED"
	ValidationExceptionReasonOther                 ValidationExceptionReason = "OTHER"
)

// Values returns all known values for ValidationExceptionReason. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
// The ordering of this slice is not guaranteed to be stable across updates.
func (ValidationExceptionReason) Values() []ValidationExceptionReason {
	return []ValidationExceptionReason{
		"CANNOT_PARSE",
		"FIELD_VALIDATION_FAILED",
		"OTHER",
	}
}
