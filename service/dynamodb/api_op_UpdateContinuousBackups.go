// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package dynamodb

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/dynamodb/types"
)

const opUpdateContinuousBackups = "UpdateContinuousBackups"

// UpdateContinuousBackupsRequest returns a request value for making API operation for
// Amazon DynamoDB.
//
// UpdateContinuousBackups enables or disables point in time recovery for the
// specified table. A successful UpdateContinuousBackups call returns the current
// ContinuousBackupsDescription. Continuous backups are ENABLED on all tables
// at table creation. If point in time recovery is enabled, PointInTimeRecoveryStatus
// will be set to ENABLED.
//
// Once continuous backups and point in time recovery are enabled, you can restore
// to any point in time within EarliestRestorableDateTime and LatestRestorableDateTime.
//
// LatestRestorableDateTime is typically 5 minutes before the current time.
// You can restore your table to any point in time during the last 35 days.
//
//    // Example sending a request using UpdateContinuousBackupsRequest.
//    req := client.UpdateContinuousBackupsRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/UpdateContinuousBackups
func (c *Client) UpdateContinuousBackupsRequest(input *types.UpdateContinuousBackupsInput) UpdateContinuousBackupsRequest {
	op := &aws.Operation{
		Name:       opUpdateContinuousBackups,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &types.UpdateContinuousBackupsInput{}
	}

	req := c.newRequest(op, input, &types.UpdateContinuousBackupsOutput{})
	return UpdateContinuousBackupsRequest{Request: req, Input: input, Copy: c.UpdateContinuousBackupsRequest}
}

// UpdateContinuousBackupsRequest is the request type for the
// UpdateContinuousBackups API operation.
type UpdateContinuousBackupsRequest struct {
	*aws.Request
	Input *types.UpdateContinuousBackupsInput
	Copy  func(*types.UpdateContinuousBackupsInput) UpdateContinuousBackupsRequest
}

// Send marshals and sends the UpdateContinuousBackups API request.
func (r UpdateContinuousBackupsRequest) Send(ctx context.Context) (*UpdateContinuousBackupsResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &UpdateContinuousBackupsResponse{
		UpdateContinuousBackupsOutput: r.Request.Data.(*types.UpdateContinuousBackupsOutput),
		response:                      &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// UpdateContinuousBackupsResponse is the response type for the
// UpdateContinuousBackups API operation.
type UpdateContinuousBackupsResponse struct {
	*types.UpdateContinuousBackupsOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// UpdateContinuousBackups request.
func (r *UpdateContinuousBackupsResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
