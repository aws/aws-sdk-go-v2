// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package dynamodb

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/dynamodb/types"
)

const opDeleteItem = "DeleteItem"

// DeleteItemRequest returns a request value for making API operation for
// Amazon DynamoDB.
//
// Deletes a single item in a table by primary key. You can perform a conditional
// delete operation that deletes the item if it exists, or if it has an expected
// attribute value.
//
// In addition to deleting an item, you can also return the item's attribute
// values in the same operation, using the ReturnValues parameter.
//
// Unless you specify conditions, the DeleteItem is an idempotent operation;
// running it multiple times on the same item or attribute does not result in
// an error response.
//
// Conditional deletes are useful for deleting items only if specific conditions
// are met. If those conditions are met, DynamoDB performs the delete. Otherwise,
// the item is not deleted.
//
//    // Example sending a request using DeleteItemRequest.
//    req := client.DeleteItemRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/dynamodb-2012-08-10/DeleteItem
func (c *Client) DeleteItemRequest(input *types.DeleteItemInput) DeleteItemRequest {
	op := &aws.Operation{
		Name:       opDeleteItem,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &types.DeleteItemInput{}
	}

	req := c.newRequest(op, input, &types.DeleteItemOutput{})
	return DeleteItemRequest{Request: req, Input: input, Copy: c.DeleteItemRequest}
}

// DeleteItemRequest is the request type for the
// DeleteItem API operation.
type DeleteItemRequest struct {
	*aws.Request
	Input *types.DeleteItemInput
	Copy  func(*types.DeleteItemInput) DeleteItemRequest
}

// Send marshals and sends the DeleteItem API request.
func (r DeleteItemRequest) Send(ctx context.Context) (*DeleteItemResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &DeleteItemResponse{
		DeleteItemOutput: r.Request.Data.(*types.DeleteItemOutput),
		response:         &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// DeleteItemResponse is the response type for the
// DeleteItem API operation.
type DeleteItemResponse struct {
	*types.DeleteItemOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// DeleteItem request.
func (r *DeleteItemResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
