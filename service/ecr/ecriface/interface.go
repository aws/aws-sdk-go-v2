// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

// Package ecriface provides an interface to enable mocking the Amazon EC2 Container Registry service client
// for testing your code.
//
// It is important to note that this interface will have breaking changes
// when the service model is updated and adds new API operations, paginators,
// and waiters.
package ecriface

import (
	"github.com/aws/aws-sdk-go-v2/service/ecr"
	"github.com/aws/aws-sdk-go-v2/service/ecr/types"
)

// ClientAPI provides an interface to enable mocking the
// ecr.Client methods. This make unit testing your code that
// calls out to the SDK's service client's calls easier.
//
// The best way to use this interface is so the SDK's service client's calls
// can be stubbed out for unit testing your code with the SDK without needing
// to inject custom request handlers into the SDK's request pipeline.
//
//    // myFunc uses an SDK service client to make a request to
//    // Amazon ECR.
//    func myFunc(svc ecriface.ClientAPI) bool {
//        // Make svc.BatchCheckLayerAvailability request
//    }
//
//    func main() {
//        cfg, err := external.LoadDefaultAWSConfig()
//        if err != nil {
//            panic("failed to load config, " + err.Error())
//        }
//
//        svc := ecr.New(cfg)
//
//        myFunc(svc)
//    }
//
// In your _test.go file:
//
//    // Define a mock struct to be used in your unit tests of myFunc.
//    type mockClientClient struct {
//        ecriface.ClientPI
//    }
//    func (m *mockClientClient) BatchCheckLayerAvailability(input *types.BatchCheckLayerAvailabilityInput) (*types.BatchCheckLayerAvailabilityOutput, error) {
//        // mock response/functionality
//    }
//
//    func TestMyFunc(t *testing.T) {
//        // Setup Test
//        mockSvc := &mockClientClient{}
//
//        myfunc(mockSvc)
//
//        // Verify myFunc's functionality
//    }
//
// It is important to note that this interface will have breaking changes
// when the service model is updated and adds new API operations, paginators,
// and waiters. Its suggested to use the pattern above for testing, or using
// tooling to generate mocks to satisfy the interfaces.
type ClientAPI interface {
	BatchCheckLayerAvailabilityRequest(*types.BatchCheckLayerAvailabilityInput) ecr.BatchCheckLayerAvailabilityRequest

	BatchDeleteImageRequest(*types.BatchDeleteImageInput) ecr.BatchDeleteImageRequest

	BatchGetImageRequest(*types.BatchGetImageInput) ecr.BatchGetImageRequest

	CompleteLayerUploadRequest(*types.CompleteLayerUploadInput) ecr.CompleteLayerUploadRequest

	CreateRepositoryRequest(*types.CreateRepositoryInput) ecr.CreateRepositoryRequest

	DeleteLifecyclePolicyRequest(*types.DeleteLifecyclePolicyInput) ecr.DeleteLifecyclePolicyRequest

	DeleteRepositoryRequest(*types.DeleteRepositoryInput) ecr.DeleteRepositoryRequest

	DeleteRepositoryPolicyRequest(*types.DeleteRepositoryPolicyInput) ecr.DeleteRepositoryPolicyRequest

	DescribeImageScanFindingsRequest(*types.DescribeImageScanFindingsInput) ecr.DescribeImageScanFindingsRequest

	DescribeImagesRequest(*types.DescribeImagesInput) ecr.DescribeImagesRequest

	DescribeRepositoriesRequest(*types.DescribeRepositoriesInput) ecr.DescribeRepositoriesRequest

	GetAuthorizationTokenRequest(*types.GetAuthorizationTokenInput) ecr.GetAuthorizationTokenRequest

	GetDownloadUrlForLayerRequest(*types.GetDownloadUrlForLayerInput) ecr.GetDownloadUrlForLayerRequest

	GetLifecyclePolicyRequest(*types.GetLifecyclePolicyInput) ecr.GetLifecyclePolicyRequest

	GetLifecyclePolicyPreviewRequest(*types.GetLifecyclePolicyPreviewInput) ecr.GetLifecyclePolicyPreviewRequest

	GetRepositoryPolicyRequest(*types.GetRepositoryPolicyInput) ecr.GetRepositoryPolicyRequest

	InitiateLayerUploadRequest(*types.InitiateLayerUploadInput) ecr.InitiateLayerUploadRequest

	ListImagesRequest(*types.ListImagesInput) ecr.ListImagesRequest

	ListTagsForResourceRequest(*types.ListTagsForResourceInput) ecr.ListTagsForResourceRequest

	PutImageRequest(*types.PutImageInput) ecr.PutImageRequest

	PutImageScanningConfigurationRequest(*types.PutImageScanningConfigurationInput) ecr.PutImageScanningConfigurationRequest

	PutImageTagMutabilityRequest(*types.PutImageTagMutabilityInput) ecr.PutImageTagMutabilityRequest

	PutLifecyclePolicyRequest(*types.PutLifecyclePolicyInput) ecr.PutLifecyclePolicyRequest

	SetRepositoryPolicyRequest(*types.SetRepositoryPolicyInput) ecr.SetRepositoryPolicyRequest

	StartImageScanRequest(*types.StartImageScanInput) ecr.StartImageScanRequest

	StartLifecyclePolicyPreviewRequest(*types.StartLifecyclePolicyPreviewInput) ecr.StartLifecyclePolicyPreviewRequest

	TagResourceRequest(*types.TagResourceInput) ecr.TagResourceRequest

	UntagResourceRequest(*types.UntagResourceInput) ecr.UntagResourceRequest

	UploadLayerPartRequest(*types.UploadLayerPartInput) ecr.UploadLayerPartRequest
}

var _ ClientAPI = (*ecr.Client)(nil)
