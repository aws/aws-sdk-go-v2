// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

// Package ecriface provides an interface to enable mocking the Amazon EC2 Container Registry service client
// for testing your code.
//
// It is important to note that this interface will have breaking changes
// when the service model is updated and adds new API operations, paginators,
// and waiters.
package ecriface

import (
	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/ecr"
)

// ECRAPI provides an interface to enable mocking the
// ecr.ECR service client's API operation,
// paginators, and waiters. This make unit testing your code that calls out
// to the SDK's service client's calls easier.
//
// The best way to use this interface is so the SDK's service client's calls
// can be stubbed out for unit testing your code with the SDK without needing
// to inject custom request handlers into the SDK's request pipeline.
//
//    // myFunc uses an SDK service client to make a request to
//    // Amazon EC2 Container Registry.
//    func myFunc(svc ecriface.ECRAPI) bool {
//        // Make svc.BatchCheckLayerAvailability request
//    }
//
//    func main() {
//        cfg, err := external.LoadDefaultAWSConfig()
//        if err != nil {
//            panic("failed to load config, " + err.Error())
//        }
//
//        svc := ecr.New(cfg)
//
//        myFunc(svc)
//    }
//
// In your _test.go file:
//
//    // Define a mock struct to be used in your unit tests of myFunc.
//    type mockECRClient struct {
//        ecriface.ECRAPI
//    }
//    func (m *mockECRClient) BatchCheckLayerAvailability(input *ecr.BatchCheckLayerAvailabilityInput) (*ecr.BatchCheckLayerAvailabilityOutput, error) {
//        // mock response/functionality
//    }
//
//    func TestMyFunc(t *testing.T) {
//        // Setup Test
//        mockSvc := &mockECRClient{}
//
//        myfunc(mockSvc)
//
//        // Verify myFunc's functionality
//    }
//
// It is important to note that this interface will have breaking changes
// when the service model is updated and adds new API operations, paginators,
// and waiters. Its suggested to use the pattern above for testing, or using
// tooling to generate mocks to satisfy the interfaces.
type ECRAPI interface {
	BatchCheckLayerAvailability(*ecr.BatchCheckLayerAvailabilityInput) (*ecr.BatchCheckLayerAvailabilityOutput, error)
	BatchCheckLayerAvailabilityWithContext(aws.Context, *ecr.BatchCheckLayerAvailabilityInput, ...aws.Option) (*ecr.BatchCheckLayerAvailabilityOutput, error)
	BatchCheckLayerAvailabilityRequest(*ecr.BatchCheckLayerAvailabilityInput) (*aws.Request, *ecr.BatchCheckLayerAvailabilityOutput)

	BatchDeleteImage(*ecr.BatchDeleteImageInput) (*ecr.BatchDeleteImageOutput, error)
	BatchDeleteImageWithContext(aws.Context, *ecr.BatchDeleteImageInput, ...aws.Option) (*ecr.BatchDeleteImageOutput, error)
	BatchDeleteImageRequest(*ecr.BatchDeleteImageInput) (*aws.Request, *ecr.BatchDeleteImageOutput)

	BatchGetImage(*ecr.BatchGetImageInput) (*ecr.BatchGetImageOutput, error)
	BatchGetImageWithContext(aws.Context, *ecr.BatchGetImageInput, ...aws.Option) (*ecr.BatchGetImageOutput, error)
	BatchGetImageRequest(*ecr.BatchGetImageInput) (*aws.Request, *ecr.BatchGetImageOutput)

	CompleteLayerUpload(*ecr.CompleteLayerUploadInput) (*ecr.CompleteLayerUploadOutput, error)
	CompleteLayerUploadWithContext(aws.Context, *ecr.CompleteLayerUploadInput, ...aws.Option) (*ecr.CompleteLayerUploadOutput, error)
	CompleteLayerUploadRequest(*ecr.CompleteLayerUploadInput) (*aws.Request, *ecr.CompleteLayerUploadOutput)

	CreateRepository(*ecr.CreateRepositoryInput) (*ecr.CreateRepositoryOutput, error)
	CreateRepositoryWithContext(aws.Context, *ecr.CreateRepositoryInput, ...aws.Option) (*ecr.CreateRepositoryOutput, error)
	CreateRepositoryRequest(*ecr.CreateRepositoryInput) (*aws.Request, *ecr.CreateRepositoryOutput)

	DeleteRepository(*ecr.DeleteRepositoryInput) (*ecr.DeleteRepositoryOutput, error)
	DeleteRepositoryWithContext(aws.Context, *ecr.DeleteRepositoryInput, ...aws.Option) (*ecr.DeleteRepositoryOutput, error)
	DeleteRepositoryRequest(*ecr.DeleteRepositoryInput) (*aws.Request, *ecr.DeleteRepositoryOutput)

	DeleteRepositoryPolicy(*ecr.DeleteRepositoryPolicyInput) (*ecr.DeleteRepositoryPolicyOutput, error)
	DeleteRepositoryPolicyWithContext(aws.Context, *ecr.DeleteRepositoryPolicyInput, ...aws.Option) (*ecr.DeleteRepositoryPolicyOutput, error)
	DeleteRepositoryPolicyRequest(*ecr.DeleteRepositoryPolicyInput) (*aws.Request, *ecr.DeleteRepositoryPolicyOutput)

	DescribeImages(*ecr.DescribeImagesInput) (*ecr.DescribeImagesOutput, error)
	DescribeImagesWithContext(aws.Context, *ecr.DescribeImagesInput, ...aws.Option) (*ecr.DescribeImagesOutput, error)
	DescribeImagesRequest(*ecr.DescribeImagesInput) (*aws.Request, *ecr.DescribeImagesOutput)

	DescribeImagesPages(*ecr.DescribeImagesInput, func(*ecr.DescribeImagesOutput, bool) bool) error
	DescribeImagesPagesWithContext(aws.Context, *ecr.DescribeImagesInput, func(*ecr.DescribeImagesOutput, bool) bool, ...aws.Option) error

	DescribeRepositories(*ecr.DescribeRepositoriesInput) (*ecr.DescribeRepositoriesOutput, error)
	DescribeRepositoriesWithContext(aws.Context, *ecr.DescribeRepositoriesInput, ...aws.Option) (*ecr.DescribeRepositoriesOutput, error)
	DescribeRepositoriesRequest(*ecr.DescribeRepositoriesInput) (*aws.Request, *ecr.DescribeRepositoriesOutput)

	DescribeRepositoriesPages(*ecr.DescribeRepositoriesInput, func(*ecr.DescribeRepositoriesOutput, bool) bool) error
	DescribeRepositoriesPagesWithContext(aws.Context, *ecr.DescribeRepositoriesInput, func(*ecr.DescribeRepositoriesOutput, bool) bool, ...aws.Option) error

	GetAuthorizationToken(*ecr.GetAuthorizationTokenInput) (*ecr.GetAuthorizationTokenOutput, error)
	GetAuthorizationTokenWithContext(aws.Context, *ecr.GetAuthorizationTokenInput, ...aws.Option) (*ecr.GetAuthorizationTokenOutput, error)
	GetAuthorizationTokenRequest(*ecr.GetAuthorizationTokenInput) (*aws.Request, *ecr.GetAuthorizationTokenOutput)

	GetDownloadUrlForLayer(*ecr.GetDownloadUrlForLayerInput) (*ecr.GetDownloadUrlForLayerOutput, error)
	GetDownloadUrlForLayerWithContext(aws.Context, *ecr.GetDownloadUrlForLayerInput, ...aws.Option) (*ecr.GetDownloadUrlForLayerOutput, error)
	GetDownloadUrlForLayerRequest(*ecr.GetDownloadUrlForLayerInput) (*aws.Request, *ecr.GetDownloadUrlForLayerOutput)

	GetRepositoryPolicy(*ecr.GetRepositoryPolicyInput) (*ecr.GetRepositoryPolicyOutput, error)
	GetRepositoryPolicyWithContext(aws.Context, *ecr.GetRepositoryPolicyInput, ...aws.Option) (*ecr.GetRepositoryPolicyOutput, error)
	GetRepositoryPolicyRequest(*ecr.GetRepositoryPolicyInput) (*aws.Request, *ecr.GetRepositoryPolicyOutput)

	InitiateLayerUpload(*ecr.InitiateLayerUploadInput) (*ecr.InitiateLayerUploadOutput, error)
	InitiateLayerUploadWithContext(aws.Context, *ecr.InitiateLayerUploadInput, ...aws.Option) (*ecr.InitiateLayerUploadOutput, error)
	InitiateLayerUploadRequest(*ecr.InitiateLayerUploadInput) (*aws.Request, *ecr.InitiateLayerUploadOutput)

	ListImages(*ecr.ListImagesInput) (*ecr.ListImagesOutput, error)
	ListImagesWithContext(aws.Context, *ecr.ListImagesInput, ...aws.Option) (*ecr.ListImagesOutput, error)
	ListImagesRequest(*ecr.ListImagesInput) (*aws.Request, *ecr.ListImagesOutput)

	ListImagesPages(*ecr.ListImagesInput, func(*ecr.ListImagesOutput, bool) bool) error
	ListImagesPagesWithContext(aws.Context, *ecr.ListImagesInput, func(*ecr.ListImagesOutput, bool) bool, ...aws.Option) error

	PutImage(*ecr.PutImageInput) (*ecr.PutImageOutput, error)
	PutImageWithContext(aws.Context, *ecr.PutImageInput, ...aws.Option) (*ecr.PutImageOutput, error)
	PutImageRequest(*ecr.PutImageInput) (*aws.Request, *ecr.PutImageOutput)

	SetRepositoryPolicy(*ecr.SetRepositoryPolicyInput) (*ecr.SetRepositoryPolicyOutput, error)
	SetRepositoryPolicyWithContext(aws.Context, *ecr.SetRepositoryPolicyInput, ...aws.Option) (*ecr.SetRepositoryPolicyOutput, error)
	SetRepositoryPolicyRequest(*ecr.SetRepositoryPolicyInput) (*aws.Request, *ecr.SetRepositoryPolicyOutput)

	UploadLayerPart(*ecr.UploadLayerPartInput) (*ecr.UploadLayerPartOutput, error)
	UploadLayerPartWithContext(aws.Context, *ecr.UploadLayerPartInput, ...aws.Option) (*ecr.UploadLayerPartOutput, error)
	UploadLayerPartRequest(*ecr.UploadLayerPartInput) (*aws.Request, *ecr.UploadLayerPartOutput)
}

var _ ECRAPI = (*ecr.ECR)(nil)
