// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package ecr

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/ecr/types"
)

const opGetDownloadUrlForLayer = "GetDownloadUrlForLayer"

// GetDownloadUrlForLayerRequest returns a request value for making API operation for
// Amazon EC2 Container Registry.
//
// Retrieves the pre-signed Amazon S3 download URL corresponding to an image
// layer. You can only get URLs for image layers that are referenced in an image.
//
// This operation is used by the Amazon ECR proxy, and it is not intended for
// general use by customers for pulling and pushing images. In most cases, you
// should use the docker CLI to pull, tag, and push images.
//
//    // Example sending a request using GetDownloadUrlForLayerRequest.
//    req := client.GetDownloadUrlForLayerRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/GetDownloadUrlForLayer
func (c *Client) GetDownloadUrlForLayerRequest(input *types.GetDownloadUrlForLayerInput) GetDownloadUrlForLayerRequest {
	op := &aws.Operation{
		Name:       opGetDownloadUrlForLayer,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &types.GetDownloadUrlForLayerInput{}
	}

	req := c.newRequest(op, input, &types.GetDownloadUrlForLayerOutput{})
	return GetDownloadUrlForLayerRequest{Request: req, Input: input, Copy: c.GetDownloadUrlForLayerRequest}
}

// GetDownloadUrlForLayerRequest is the request type for the
// GetDownloadUrlForLayer API operation.
type GetDownloadUrlForLayerRequest struct {
	*aws.Request
	Input *types.GetDownloadUrlForLayerInput
	Copy  func(*types.GetDownloadUrlForLayerInput) GetDownloadUrlForLayerRequest
}

// Send marshals and sends the GetDownloadUrlForLayer API request.
func (r GetDownloadUrlForLayerRequest) Send(ctx context.Context) (*GetDownloadUrlForLayerResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &GetDownloadUrlForLayerResponse{
		GetDownloadUrlForLayerOutput: r.Request.Data.(*types.GetDownloadUrlForLayerOutput),
		response:                     &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// GetDownloadUrlForLayerResponse is the response type for the
// GetDownloadUrlForLayer API operation.
type GetDownloadUrlForLayerResponse struct {
	*types.GetDownloadUrlForLayerOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// GetDownloadUrlForLayer request.
func (r *GetDownloadUrlForLayerResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
