// Code generated by smithy-go-codegen DO NOT EDIT.

package types_test

import (
	"fmt"
	"github.com/aws/aws-sdk-go-v2/service/connectcampaignsv2/types"
)

func ExampleChannelSubtypeParameters_outputUsage() {
	var union types.ChannelSubtypeParameters
	// type switches can be used to check the union value
	switch v := union.(type) {
	case *types.ChannelSubtypeParametersMemberEmail:
		_ = v.Value // Value is types.EmailChannelSubtypeParameters

	case *types.ChannelSubtypeParametersMemberSms:
		_ = v.Value // Value is types.SmsChannelSubtypeParameters

	case *types.ChannelSubtypeParametersMemberTelephony:
		_ = v.Value // Value is types.TelephonyChannelSubtypeParameters

	case *types.UnknownUnionMember:
		fmt.Println("unknown tag:", v.Tag)

	default:
		fmt.Println("union is nil or unknown type")

	}
}

var _ *types.TelephonyChannelSubtypeParameters
var _ *types.EmailChannelSubtypeParameters
var _ *types.SmsChannelSubtypeParameters

func ExampleCommunicationLimits_outputUsage() {
	var union types.CommunicationLimits
	// type switches can be used to check the union value
	switch v := union.(type) {
	case *types.CommunicationLimitsMemberCommunicationLimitsList:
		_ = v.Value // Value is []types.CommunicationLimit

	case *types.UnknownUnionMember:
		fmt.Println("unknown tag:", v.Tag)

	default:
		fmt.Println("union is nil or unknown type")

	}
}

var _ []types.CommunicationLimit

func ExampleEmailOutboundMode_outputUsage() {
	var union types.EmailOutboundMode
	// type switches can be used to check the union value
	switch v := union.(type) {
	case *types.EmailOutboundModeMemberAgentless:
		_ = v.Value // Value is types.AgentlessConfig

	case *types.UnknownUnionMember:
		fmt.Println("unknown tag:", v.Tag)

	default:
		fmt.Println("union is nil or unknown type")

	}
}

var _ *types.AgentlessConfig

func ExampleIntegrationConfig_outputUsage() {
	var union types.IntegrationConfig
	// type switches can be used to check the union value
	switch v := union.(type) {
	case *types.IntegrationConfigMemberCustomerProfiles:
		_ = v.Value // Value is types.CustomerProfilesIntegrationConfig

	case *types.IntegrationConfigMemberQConnect:
		_ = v.Value // Value is types.QConnectIntegrationConfig

	case *types.UnknownUnionMember:
		fmt.Println("unknown tag:", v.Tag)

	default:
		fmt.Println("union is nil or unknown type")

	}
}

var _ *types.CustomerProfilesIntegrationConfig
var _ *types.QConnectIntegrationConfig

func ExampleIntegrationIdentifier_outputUsage() {
	var union types.IntegrationIdentifier
	// type switches can be used to check the union value
	switch v := union.(type) {
	case *types.IntegrationIdentifierMemberCustomerProfiles:
		_ = v.Value // Value is types.CustomerProfilesIntegrationIdentifier

	case *types.IntegrationIdentifierMemberQConnect:
		_ = v.Value // Value is types.QConnectIntegrationIdentifier

	case *types.UnknownUnionMember:
		fmt.Println("unknown tag:", v.Tag)

	default:
		fmt.Println("union is nil or unknown type")

	}
}

var _ *types.CustomerProfilesIntegrationIdentifier
var _ *types.QConnectIntegrationIdentifier

func ExampleIntegrationSummary_outputUsage() {
	var union types.IntegrationSummary
	// type switches can be used to check the union value
	switch v := union.(type) {
	case *types.IntegrationSummaryMemberCustomerProfiles:
		_ = v.Value // Value is types.CustomerProfilesIntegrationSummary

	case *types.IntegrationSummaryMemberQConnect:
		_ = v.Value // Value is types.QConnectIntegrationSummary

	case *types.UnknownUnionMember:
		fmt.Println("unknown tag:", v.Tag)

	default:
		fmt.Println("union is nil or unknown type")

	}
}

var _ *types.CustomerProfilesIntegrationSummary
var _ *types.QConnectIntegrationSummary

func ExampleOpenHours_outputUsage() {
	var union types.OpenHours
	// type switches can be used to check the union value
	switch v := union.(type) {
	case *types.OpenHoursMemberDailyHours:
		_ = v.Value // Value is map[string][]types.TimeRange

	case *types.UnknownUnionMember:
		fmt.Println("unknown tag:", v.Tag)

	default:
		fmt.Println("union is nil or unknown type")

	}
}

var _ map[string][]types.TimeRange

func ExampleRestrictedPeriods_outputUsage() {
	var union types.RestrictedPeriods
	// type switches can be used to check the union value
	switch v := union.(type) {
	case *types.RestrictedPeriodsMemberRestrictedPeriodList:
		_ = v.Value // Value is []types.RestrictedPeriod

	case *types.UnknownUnionMember:
		fmt.Println("unknown tag:", v.Tag)

	default:
		fmt.Println("union is nil or unknown type")

	}
}

var _ []types.RestrictedPeriod

func ExampleSmsOutboundMode_outputUsage() {
	var union types.SmsOutboundMode
	// type switches can be used to check the union value
	switch v := union.(type) {
	case *types.SmsOutboundModeMemberAgentless:
		_ = v.Value // Value is types.AgentlessConfig

	case *types.UnknownUnionMember:
		fmt.Println("unknown tag:", v.Tag)

	default:
		fmt.Println("union is nil or unknown type")

	}
}

var _ *types.AgentlessConfig

func ExampleSource_outputUsage() {
	var union types.Source
	// type switches can be used to check the union value
	switch v := union.(type) {
	case *types.SourceMemberCustomerProfilesSegmentArn:
		_ = v.Value // Value is string

	case *types.SourceMemberEventTrigger:
		_ = v.Value // Value is types.EventTrigger

	case *types.UnknownUnionMember:
		fmt.Println("unknown tag:", v.Tag)

	default:
		fmt.Println("union is nil or unknown type")

	}
}

var _ *string
var _ *types.EventTrigger

func ExampleTelephonyOutboundMode_outputUsage() {
	var union types.TelephonyOutboundMode
	// type switches can be used to check the union value
	switch v := union.(type) {
	case *types.TelephonyOutboundModeMemberAgentless:
		_ = v.Value // Value is types.AgentlessConfig

	case *types.TelephonyOutboundModeMemberPredictive:
		_ = v.Value // Value is types.PredictiveConfig

	case *types.TelephonyOutboundModeMemberProgressive:
		_ = v.Value // Value is types.ProgressiveConfig

	case *types.UnknownUnionMember:
		fmt.Println("unknown tag:", v.Tag)

	default:
		fmt.Println("union is nil or unknown type")

	}
}

var _ *types.PredictiveConfig
var _ *types.AgentlessConfig
var _ *types.ProgressiveConfig
