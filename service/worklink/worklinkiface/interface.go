// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

// Package worklinkiface provides an interface to enable mocking the Amazon WorkLink service client
// for testing your code.
//
// It is important to note that this interface will have breaking changes
// when the service model is updated and adds new API operations, paginators,
// and waiters.
package worklinkiface

import (
	"github.com/aws/aws-sdk-go-v2/service/worklink"
)

// WorkLinkAPI provides an interface to enable mocking the
// worklink.WorkLink service client's API operation,
// paginators, and waiters. This make unit testing your code that calls out
// to the SDK's service client's calls easier.
//
// The best way to use this interface is so the SDK's service client's calls
// can be stubbed out for unit testing your code with the SDK without needing
// to inject custom request handlers into the SDK's request pipeline.
//
//    // myFunc uses an SDK service client to make a request to
//    // Amazon WorkLink.
//    func myFunc(svc worklinkiface.WorkLinkAPI) bool {
//        // Make svc.AssociateDomain request
//    }
//
//    func main() {
//        cfg, err := external.LoadDefaultAWSConfig()
//        if err != nil {
//            panic("failed to load config, " + err.Error())
//        }
//
//        svc := worklink.New(cfg)
//
//        myFunc(svc)
//    }
//
// In your _test.go file:
//
//    // Define a mock struct to be used in your unit tests of myFunc.
//    type mockWorkLinkClient struct {
//        worklinkiface.WorkLinkAPI
//    }
//    func (m *mockWorkLinkClient) AssociateDomain(input *worklink.AssociateDomainInput) (*worklink.AssociateDomainOutput, error) {
//        // mock response/functionality
//    }
//
//    func TestMyFunc(t *testing.T) {
//        // Setup Test
//        mockSvc := &mockWorkLinkClient{}
//
//        myfunc(mockSvc)
//
//        // Verify myFunc's functionality
//    }
//
// It is important to note that this interface will have breaking changes
// when the service model is updated and adds new API operations, paginators,
// and waiters. Its suggested to use the pattern above for testing, or using
// tooling to generate mocks to satisfy the interfaces.
type WorkLinkAPI interface {
	AssociateDomainRequest(*worklink.AssociateDomainInput) worklink.AssociateDomainRequest

	AssociateWebsiteCertificateAuthorityRequest(*worklink.AssociateWebsiteCertificateAuthorityInput) worklink.AssociateWebsiteCertificateAuthorityRequest

	CreateFleetRequest(*worklink.CreateFleetInput) worklink.CreateFleetRequest

	DeleteFleetRequest(*worklink.DeleteFleetInput) worklink.DeleteFleetRequest

	DescribeAuditStreamConfigurationRequest(*worklink.DescribeAuditStreamConfigurationInput) worklink.DescribeAuditStreamConfigurationRequest

	DescribeCompanyNetworkConfigurationRequest(*worklink.DescribeCompanyNetworkConfigurationInput) worklink.DescribeCompanyNetworkConfigurationRequest

	DescribeDeviceRequest(*worklink.DescribeDeviceInput) worklink.DescribeDeviceRequest

	DescribeDevicePolicyConfigurationRequest(*worklink.DescribeDevicePolicyConfigurationInput) worklink.DescribeDevicePolicyConfigurationRequest

	DescribeDomainRequest(*worklink.DescribeDomainInput) worklink.DescribeDomainRequest

	DescribeFleetMetadataRequest(*worklink.DescribeFleetMetadataInput) worklink.DescribeFleetMetadataRequest

	DescribeIdentityProviderConfigurationRequest(*worklink.DescribeIdentityProviderConfigurationInput) worklink.DescribeIdentityProviderConfigurationRequest

	DescribeWebsiteCertificateAuthorityRequest(*worklink.DescribeWebsiteCertificateAuthorityInput) worklink.DescribeWebsiteCertificateAuthorityRequest

	DisassociateDomainRequest(*worklink.DisassociateDomainInput) worklink.DisassociateDomainRequest

	DisassociateWebsiteCertificateAuthorityRequest(*worklink.DisassociateWebsiteCertificateAuthorityInput) worklink.DisassociateWebsiteCertificateAuthorityRequest

	ListDevicesRequest(*worklink.ListDevicesInput) worklink.ListDevicesRequest

	ListDomainsRequest(*worklink.ListDomainsInput) worklink.ListDomainsRequest

	ListFleetsRequest(*worklink.ListFleetsInput) worklink.ListFleetsRequest

	ListWebsiteCertificateAuthoritiesRequest(*worklink.ListWebsiteCertificateAuthoritiesInput) worklink.ListWebsiteCertificateAuthoritiesRequest

	RestoreDomainAccessRequest(*worklink.RestoreDomainAccessInput) worklink.RestoreDomainAccessRequest

	RevokeDomainAccessRequest(*worklink.RevokeDomainAccessInput) worklink.RevokeDomainAccessRequest

	SignOutUserRequest(*worklink.SignOutUserInput) worklink.SignOutUserRequest

	UpdateAuditStreamConfigurationRequest(*worklink.UpdateAuditStreamConfigurationInput) worklink.UpdateAuditStreamConfigurationRequest

	UpdateCompanyNetworkConfigurationRequest(*worklink.UpdateCompanyNetworkConfigurationInput) worklink.UpdateCompanyNetworkConfigurationRequest

	UpdateDevicePolicyConfigurationRequest(*worklink.UpdateDevicePolicyConfigurationInput) worklink.UpdateDevicePolicyConfigurationRequest

	UpdateDomainMetadataRequest(*worklink.UpdateDomainMetadataInput) worklink.UpdateDomainMetadataRequest

	UpdateFleetMetadataRequest(*worklink.UpdateFleetMetadataInput) worklink.UpdateFleetMetadataRequest

	UpdateIdentityProviderConfigurationRequest(*worklink.UpdateIdentityProviderConfigurationInput) worklink.UpdateIdentityProviderConfigurationRequest
}

var _ WorkLinkAPI = (*worklink.WorkLink)(nil)
