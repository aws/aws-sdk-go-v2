// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package worklink

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/worklink/types"
)

const opAssociateWebsiteAuthorizationProvider = "AssociateWebsiteAuthorizationProvider"

// AssociateWebsiteAuthorizationProviderRequest returns a request value for making API operation for
// Amazon WorkLink.
//
// Associates a website authorization provider with a specified fleet. This
// is used to authorize users against associated websites in the company network.
//
//    // Example sending a request using AssociateWebsiteAuthorizationProviderRequest.
//    req := client.AssociateWebsiteAuthorizationProviderRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/worklink-2018-09-25/AssociateWebsiteAuthorizationProvider
func (c *Client) AssociateWebsiteAuthorizationProviderRequest(input *types.AssociateWebsiteAuthorizationProviderInput) AssociateWebsiteAuthorizationProviderRequest {
	op := &aws.Operation{
		Name:       opAssociateWebsiteAuthorizationProvider,
		HTTPMethod: "POST",
		HTTPPath:   "/associateWebsiteAuthorizationProvider",
	}

	if input == nil {
		input = &types.AssociateWebsiteAuthorizationProviderInput{}
	}

	req := c.newRequest(op, input, &types.AssociateWebsiteAuthorizationProviderOutput{})
	return AssociateWebsiteAuthorizationProviderRequest{Request: req, Input: input, Copy: c.AssociateWebsiteAuthorizationProviderRequest}
}

// AssociateWebsiteAuthorizationProviderRequest is the request type for the
// AssociateWebsiteAuthorizationProvider API operation.
type AssociateWebsiteAuthorizationProviderRequest struct {
	*aws.Request
	Input *types.AssociateWebsiteAuthorizationProviderInput
	Copy  func(*types.AssociateWebsiteAuthorizationProviderInput) AssociateWebsiteAuthorizationProviderRequest
}

// Send marshals and sends the AssociateWebsiteAuthorizationProvider API request.
func (r AssociateWebsiteAuthorizationProviderRequest) Send(ctx context.Context) (*AssociateWebsiteAuthorizationProviderResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &AssociateWebsiteAuthorizationProviderResponse{
		AssociateWebsiteAuthorizationProviderOutput: r.Request.Data.(*types.AssociateWebsiteAuthorizationProviderOutput),
		response: &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// AssociateWebsiteAuthorizationProviderResponse is the response type for the
// AssociateWebsiteAuthorizationProvider API operation.
type AssociateWebsiteAuthorizationProviderResponse struct {
	*types.AssociateWebsiteAuthorizationProviderOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// AssociateWebsiteAuthorizationProvider request.
func (r *AssociateWebsiteAuthorizationProviderResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
