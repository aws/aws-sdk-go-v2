// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package iot

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/iot/types"
)

const opDeleteRoleAlias = "DeleteRoleAlias"

// DeleteRoleAliasRequest returns a request value for making API operation for
// AWS IoT.
//
// Deletes a role alias
//
//    // Example sending a request using DeleteRoleAliasRequest.
//    req := client.DeleteRoleAliasRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
func (c *Client) DeleteRoleAliasRequest(input *types.DeleteRoleAliasInput) DeleteRoleAliasRequest {
	op := &aws.Operation{
		Name:       opDeleteRoleAlias,
		HTTPMethod: "DELETE",
		HTTPPath:   "/role-aliases/{roleAlias}",
	}

	if input == nil {
		input = &types.DeleteRoleAliasInput{}
	}

	req := c.newRequest(op, input, &types.DeleteRoleAliasOutput{})
	return DeleteRoleAliasRequest{Request: req, Input: input, Copy: c.DeleteRoleAliasRequest}
}

// DeleteRoleAliasRequest is the request type for the
// DeleteRoleAlias API operation.
type DeleteRoleAliasRequest struct {
	*aws.Request
	Input *types.DeleteRoleAliasInput
	Copy  func(*types.DeleteRoleAliasInput) DeleteRoleAliasRequest
}

// Send marshals and sends the DeleteRoleAlias API request.
func (r DeleteRoleAliasRequest) Send(ctx context.Context) (*DeleteRoleAliasResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &DeleteRoleAliasResponse{
		DeleteRoleAliasOutput: r.Request.Data.(*types.DeleteRoleAliasOutput),
		response:              &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// DeleteRoleAliasResponse is the response type for the
// DeleteRoleAlias API operation.
type DeleteRoleAliasResponse struct {
	*types.DeleteRoleAliasOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// DeleteRoleAlias request.
func (r *DeleteRoleAliasResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
