// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package iot

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/private/protocol"
	"github.com/aws/aws-sdk-go-v2/private/protocol/restjson"
	"github.com/aws/aws-sdk-go-v2/service/iot/types"
)

const opReplaceTopicRule = "ReplaceTopicRule"

// ReplaceTopicRuleRequest returns a request value for making API operation for
// AWS IoT.
//
// Replaces the rule. You must specify all parameters for the new rule. Creating
// rules is an administrator-level action. Any user who has permission to create
// rules will be able to access data processed by the rule.
//
//    // Example sending a request using ReplaceTopicRuleRequest.
//    req := client.ReplaceTopicRuleRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
func (c *Client) ReplaceTopicRuleRequest(input *types.ReplaceTopicRuleInput) ReplaceTopicRuleRequest {
	op := &aws.Operation{
		Name:       opReplaceTopicRule,
		HTTPMethod: "PATCH",
		HTTPPath:   "/rules/{ruleName}",
	}

	if input == nil {
		input = &types.ReplaceTopicRuleInput{}
	}

	req := c.newRequest(op, input, &types.ReplaceTopicRuleOutput{})
	req.Handlers.Unmarshal.Remove(restjson.UnmarshalHandler)
	req.Handlers.Unmarshal.PushBackNamed(protocol.UnmarshalDiscardBodyHandler)
	return ReplaceTopicRuleRequest{Request: req, Input: input, Copy: c.ReplaceTopicRuleRequest}
}

// ReplaceTopicRuleRequest is the request type for the
// ReplaceTopicRule API operation.
type ReplaceTopicRuleRequest struct {
	*aws.Request
	Input *types.ReplaceTopicRuleInput
	Copy  func(*types.ReplaceTopicRuleInput) ReplaceTopicRuleRequest
}

// Send marshals and sends the ReplaceTopicRule API request.
func (r ReplaceTopicRuleRequest) Send(ctx context.Context) (*ReplaceTopicRuleResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &ReplaceTopicRuleResponse{
		ReplaceTopicRuleOutput: r.Request.Data.(*types.ReplaceTopicRuleOutput),
		response:               &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// ReplaceTopicRuleResponse is the response type for the
// ReplaceTopicRule API operation.
type ReplaceTopicRuleResponse struct {
	*types.ReplaceTopicRuleOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// ReplaceTopicRule request.
func (r *ReplaceTopicRuleResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
