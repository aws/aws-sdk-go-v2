// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package iot

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/iot/types"
)

const opListThingGroups = "ListThingGroups"

// ListThingGroupsRequest returns a request value for making API operation for
// AWS IoT.
//
// List the thing groups in your account.
//
//    // Example sending a request using ListThingGroupsRequest.
//    req := client.ListThingGroupsRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
func (c *Client) ListThingGroupsRequest(input *types.ListThingGroupsInput) ListThingGroupsRequest {
	op := &aws.Operation{
		Name:       opListThingGroups,
		HTTPMethod: "GET",
		HTTPPath:   "/thing-groups",
	}

	if input == nil {
		input = &types.ListThingGroupsInput{}
	}

	req := c.newRequest(op, input, &types.ListThingGroupsOutput{})
	return ListThingGroupsRequest{Request: req, Input: input, Copy: c.ListThingGroupsRequest}
}

// ListThingGroupsRequest is the request type for the
// ListThingGroups API operation.
type ListThingGroupsRequest struct {
	*aws.Request
	Input *types.ListThingGroupsInput
	Copy  func(*types.ListThingGroupsInput) ListThingGroupsRequest
}

// Send marshals and sends the ListThingGroups API request.
func (r ListThingGroupsRequest) Send(ctx context.Context) (*ListThingGroupsResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &ListThingGroupsResponse{
		ListThingGroupsOutput: r.Request.Data.(*types.ListThingGroupsOutput),
		response:              &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// ListThingGroupsResponse is the response type for the
// ListThingGroups API operation.
type ListThingGroupsResponse struct {
	*types.ListThingGroupsOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// ListThingGroups request.
func (r *ListThingGroupsResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
