// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package types

import (
	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/internal/awsutil"
	"github.com/aws/aws-sdk-go-v2/service/iot/enums"
)

type ListAuditMitigationActionsExecutionsInput struct {
	_ struct{} `type:"structure"`

	// Specify this filter to limit results to those with a specific status.
	ActionStatus enums.AuditMitigationActionsExecutionStatus `location:"querystring" locationName:"actionStatus" type:"string" enum:"true"`

	// Specify this filter to limit results to those that were applied to a specific
	// audit finding.
	//
	// FindingId is a required field
	FindingId *string `location:"querystring" locationName:"findingId" min:"1" type:"string" required:"true"`

	// The maximum number of results to return at one time. The default is 25.
	MaxResults *int64 `location:"querystring" locationName:"maxResults" min:"1" type:"integer"`

	// The token for the next set of results.
	NextToken *string `location:"querystring" locationName:"nextToken" type:"string"`

	// Specify this filter to limit results to actions for a specific audit mitigation
	// actions task.
	//
	// TaskId is a required field
	TaskId *string `location:"querystring" locationName:"taskId" min:"1" type:"string" required:"true"`
}

// String returns the string representation
func (s ListAuditMitigationActionsExecutionsInput) String() string {
	return awsutil.Prettify(s)
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *ListAuditMitigationActionsExecutionsInput) Validate() error {
	invalidParams := aws.ErrInvalidParams{Context: "ListAuditMitigationActionsExecutionsInput"}

	if s.FindingId == nil {
		invalidParams.Add(aws.NewErrParamRequired("FindingId"))
	}
	if s.FindingId != nil && len(*s.FindingId) < 1 {
		invalidParams.Add(aws.NewErrParamMinLen("FindingId", 1))
	}
	if s.MaxResults != nil && *s.MaxResults < 1 {
		invalidParams.Add(aws.NewErrParamMinValue("MaxResults", 1))
	}

	if s.TaskId == nil {
		invalidParams.Add(aws.NewErrParamRequired("TaskId"))
	}
	if s.TaskId != nil && len(*s.TaskId) < 1 {
		invalidParams.Add(aws.NewErrParamMinLen("TaskId", 1))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

type ListAuditMitigationActionsExecutionsOutput struct {
	_ struct{} `type:"structure"`

	// A set of task execution results based on the input parameters. Details include
	// the mitigation action applied, start time, and task status.
	ActionsExecutions []AuditMitigationActionExecutionMetadata `locationName:"actionsExecutions" type:"list"`

	// The token for the next set of results.
	NextToken *string `locationName:"nextToken" type:"string"`
}

// String returns the string representation
func (s ListAuditMitigationActionsExecutionsOutput) String() string {
	return awsutil.Prettify(s)
}
