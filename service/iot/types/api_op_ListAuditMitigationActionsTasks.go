// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package types

import (
	"time"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/internal/awsutil"
	"github.com/aws/aws-sdk-go-v2/service/iot/enums"
)

type ListAuditMitigationActionsTasksInput struct {
	_ struct{} `type:"structure"`

	// Specify this filter to limit results to tasks that were applied to results
	// for a specific audit.
	AuditTaskId *string `location:"querystring" locationName:"auditTaskId" min:"1" type:"string"`

	// Specify this filter to limit results to tasks that were completed or canceled
	// on or before a specific date and time.
	//
	// EndTime is a required field
	EndTime *time.Time `location:"querystring" locationName:"endTime" type:"timestamp" required:"true"`

	// Specify this filter to limit results to tasks that were applied to a specific
	// audit finding.
	FindingId *string `location:"querystring" locationName:"findingId" min:"1" type:"string"`

	// The maximum number of results to return at one time. The default is 25.
	MaxResults *int64 `location:"querystring" locationName:"maxResults" min:"1" type:"integer"`

	// The token for the next set of results.
	NextToken *string `location:"querystring" locationName:"nextToken" type:"string"`

	// Specify this filter to limit results to tasks that began on or after a specific
	// date and time.
	//
	// StartTime is a required field
	StartTime *time.Time `location:"querystring" locationName:"startTime" type:"timestamp" required:"true"`

	// Specify this filter to limit results to tasks that are in a specific state.
	TaskStatus enums.AuditMitigationActionsTaskStatus `location:"querystring" locationName:"taskStatus" type:"string" enum:"true"`
}

// String returns the string representation
func (s ListAuditMitigationActionsTasksInput) String() string {
	return awsutil.Prettify(s)
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *ListAuditMitigationActionsTasksInput) Validate() error {
	invalidParams := aws.ErrInvalidParams{Context: "ListAuditMitigationActionsTasksInput"}
	if s.AuditTaskId != nil && len(*s.AuditTaskId) < 1 {
		invalidParams.Add(aws.NewErrParamMinLen("AuditTaskId", 1))
	}

	if s.EndTime == nil {
		invalidParams.Add(aws.NewErrParamRequired("EndTime"))
	}
	if s.FindingId != nil && len(*s.FindingId) < 1 {
		invalidParams.Add(aws.NewErrParamMinLen("FindingId", 1))
	}
	if s.MaxResults != nil && *s.MaxResults < 1 {
		invalidParams.Add(aws.NewErrParamMinValue("MaxResults", 1))
	}

	if s.StartTime == nil {
		invalidParams.Add(aws.NewErrParamRequired("StartTime"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

type ListAuditMitigationActionsTasksOutput struct {
	_ struct{} `type:"structure"`

	// The token for the next set of results.
	NextToken *string `locationName:"nextToken" type:"string"`

	// The collection of audit mitigation tasks that matched the filter criteria.
	Tasks []AuditMitigationActionsTaskMetadata `locationName:"tasks" type:"list"`
}

// String returns the string representation
func (s ListAuditMitigationActionsTasksOutput) String() string {
	return awsutil.Prettify(s)
}
