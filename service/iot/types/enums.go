// Code generated by smithy-go-codegen DO NOT EDIT.

package types

type AbortAction string

// Enum values for AbortAction
const (
	AbortActionCancel AbortAction = "CANCEL"
)

// Values returns all known values for AbortAction. Note that this can be expanded
// in the future, and so it is only as up to date as the client. The ordering of
// this slice is not guaranteed to be stable across updates.
func (AbortAction) Values() []AbortAction {
	return []AbortAction{
		"CANCEL",
	}
}

type ActionType string

// Enum values for ActionType
const (
	ActionTypePublish   ActionType = "PUBLISH"
	ActionTypeSubscribe ActionType = "SUBSCRIBE"
	ActionTypeReceive   ActionType = "RECEIVE"
	ActionTypeConnect   ActionType = "CONNECT"
)

// Values returns all known values for ActionType. Note that this can be expanded
// in the future, and so it is only as up to date as the client. The ordering of
// this slice is not guaranteed to be stable across updates.
func (ActionType) Values() []ActionType {
	return []ActionType{
		"PUBLISH",
		"SUBSCRIBE",
		"RECEIVE",
		"CONNECT",
	}
}

type AlertTargetType string

// Enum values for AlertTargetType
const (
	AlertTargetTypeSns AlertTargetType = "SNS"
)

// Values returns all known values for AlertTargetType. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (AlertTargetType) Values() []AlertTargetType {
	return []AlertTargetType{
		"SNS",
	}
}

type AuditCheckRunStatus string

// Enum values for AuditCheckRunStatus
const (
	AuditCheckRunStatusIn_progress                 AuditCheckRunStatus = "IN_PROGRESS"
	AuditCheckRunStatusWaiting_for_data_collection AuditCheckRunStatus = "WAITING_FOR_DATA_COLLECTION"
	AuditCheckRunStatusCanceled                    AuditCheckRunStatus = "CANCELED"
	AuditCheckRunStatusCompleted_compliant         AuditCheckRunStatus = "COMPLETED_COMPLIANT"
	AuditCheckRunStatusCompleted_non_compliant     AuditCheckRunStatus = "COMPLETED_NON_COMPLIANT"
	AuditCheckRunStatusFailed                      AuditCheckRunStatus = "FAILED"
)

// Values returns all known values for AuditCheckRunStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (AuditCheckRunStatus) Values() []AuditCheckRunStatus {
	return []AuditCheckRunStatus{
		"IN_PROGRESS",
		"WAITING_FOR_DATA_COLLECTION",
		"CANCELED",
		"COMPLETED_COMPLIANT",
		"COMPLETED_NON_COMPLIANT",
		"FAILED",
	}
}

type AuditFindingSeverity string

// Enum values for AuditFindingSeverity
const (
	AuditFindingSeverityCritical AuditFindingSeverity = "CRITICAL"
	AuditFindingSeverityHigh     AuditFindingSeverity = "HIGH"
	AuditFindingSeverityMedium   AuditFindingSeverity = "MEDIUM"
	AuditFindingSeverityLow      AuditFindingSeverity = "LOW"
)

// Values returns all known values for AuditFindingSeverity. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (AuditFindingSeverity) Values() []AuditFindingSeverity {
	return []AuditFindingSeverity{
		"CRITICAL",
		"HIGH",
		"MEDIUM",
		"LOW",
	}
}

type AuditFrequency string

// Enum values for AuditFrequency
const (
	AuditFrequencyDaily    AuditFrequency = "DAILY"
	AuditFrequencyWeekly   AuditFrequency = "WEEKLY"
	AuditFrequencyBiweekly AuditFrequency = "BIWEEKLY"
	AuditFrequencyMonthly  AuditFrequency = "MONTHLY"
)

// Values returns all known values for AuditFrequency. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (AuditFrequency) Values() []AuditFrequency {
	return []AuditFrequency{
		"DAILY",
		"WEEKLY",
		"BIWEEKLY",
		"MONTHLY",
	}
}

type AuditMitigationActionsExecutionStatus string

// Enum values for AuditMitigationActionsExecutionStatus
const (
	AuditMitigationActionsExecutionStatusIn_progress AuditMitigationActionsExecutionStatus = "IN_PROGRESS"
	AuditMitigationActionsExecutionStatusCompleted   AuditMitigationActionsExecutionStatus = "COMPLETED"
	AuditMitigationActionsExecutionStatusFailed      AuditMitigationActionsExecutionStatus = "FAILED"
	AuditMitigationActionsExecutionStatusCanceled    AuditMitigationActionsExecutionStatus = "CANCELED"
	AuditMitigationActionsExecutionStatusSkipped     AuditMitigationActionsExecutionStatus = "SKIPPED"
	AuditMitigationActionsExecutionStatusPending     AuditMitigationActionsExecutionStatus = "PENDING"
)

// Values returns all known values for AuditMitigationActionsExecutionStatus. Note
// that this can be expanded in the future, and so it is only as up to date as the
// client. The ordering of this slice is not guaranteed to be stable across
// updates.
func (AuditMitigationActionsExecutionStatus) Values() []AuditMitigationActionsExecutionStatus {
	return []AuditMitigationActionsExecutionStatus{
		"IN_PROGRESS",
		"COMPLETED",
		"FAILED",
		"CANCELED",
		"SKIPPED",
		"PENDING",
	}
}

type AuditMitigationActionsTaskStatus string

// Enum values for AuditMitigationActionsTaskStatus
const (
	AuditMitigationActionsTaskStatusIn_progress AuditMitigationActionsTaskStatus = "IN_PROGRESS"
	AuditMitigationActionsTaskStatusCompleted   AuditMitigationActionsTaskStatus = "COMPLETED"
	AuditMitigationActionsTaskStatusFailed      AuditMitigationActionsTaskStatus = "FAILED"
	AuditMitigationActionsTaskStatusCanceled    AuditMitigationActionsTaskStatus = "CANCELED"
)

// Values returns all known values for AuditMitigationActionsTaskStatus. Note that
// this can be expanded in the future, and so it is only as up to date as the
// client. The ordering of this slice is not guaranteed to be stable across
// updates.
func (AuditMitigationActionsTaskStatus) Values() []AuditMitigationActionsTaskStatus {
	return []AuditMitigationActionsTaskStatus{
		"IN_PROGRESS",
		"COMPLETED",
		"FAILED",
		"CANCELED",
	}
}

type AuditNotificationType string

// Enum values for AuditNotificationType
const (
	AuditNotificationTypeSns AuditNotificationType = "SNS"
)

// Values returns all known values for AuditNotificationType. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (AuditNotificationType) Values() []AuditNotificationType {
	return []AuditNotificationType{
		"SNS",
	}
}

type AuditTaskStatus string

// Enum values for AuditTaskStatus
const (
	AuditTaskStatusIn_progress AuditTaskStatus = "IN_PROGRESS"
	AuditTaskStatusCompleted   AuditTaskStatus = "COMPLETED"
	AuditTaskStatusFailed      AuditTaskStatus = "FAILED"
	AuditTaskStatusCanceled    AuditTaskStatus = "CANCELED"
)

// Values returns all known values for AuditTaskStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (AuditTaskStatus) Values() []AuditTaskStatus {
	return []AuditTaskStatus{
		"IN_PROGRESS",
		"COMPLETED",
		"FAILED",
		"CANCELED",
	}
}

type AuditTaskType string

// Enum values for AuditTaskType
const (
	AuditTaskTypeOn_demand_audit_task AuditTaskType = "ON_DEMAND_AUDIT_TASK"
	AuditTaskTypeScheduled_audit_task AuditTaskType = "SCHEDULED_AUDIT_TASK"
)

// Values returns all known values for AuditTaskType. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (AuditTaskType) Values() []AuditTaskType {
	return []AuditTaskType{
		"ON_DEMAND_AUDIT_TASK",
		"SCHEDULED_AUDIT_TASK",
	}
}

type AuthDecision string

// Enum values for AuthDecision
const (
	AuthDecisionAllowed       AuthDecision = "ALLOWED"
	AuthDecisionExplicit_deny AuthDecision = "EXPLICIT_DENY"
	AuthDecisionImplicit_deny AuthDecision = "IMPLICIT_DENY"
)

// Values returns all known values for AuthDecision. Note that this can be expanded
// in the future, and so it is only as up to date as the client. The ordering of
// this slice is not guaranteed to be stable across updates.
func (AuthDecision) Values() []AuthDecision {
	return []AuthDecision{
		"ALLOWED",
		"EXPLICIT_DENY",
		"IMPLICIT_DENY",
	}
}

type AuthorizerStatus string

// Enum values for AuthorizerStatus
const (
	AuthorizerStatusActive   AuthorizerStatus = "ACTIVE"
	AuthorizerStatusInactive AuthorizerStatus = "INACTIVE"
)

// Values returns all known values for AuthorizerStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (AuthorizerStatus) Values() []AuthorizerStatus {
	return []AuthorizerStatus{
		"ACTIVE",
		"INACTIVE",
	}
}

type AutoRegistrationStatus string

// Enum values for AutoRegistrationStatus
const (
	AutoRegistrationStatusEnable  AutoRegistrationStatus = "ENABLE"
	AutoRegistrationStatusDisable AutoRegistrationStatus = "DISABLE"
)

// Values returns all known values for AutoRegistrationStatus. Note that this can
// be expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (AutoRegistrationStatus) Values() []AutoRegistrationStatus {
	return []AutoRegistrationStatus{
		"ENABLE",
		"DISABLE",
	}
}

type AwsJobAbortCriteriaAbortAction string

// Enum values for AwsJobAbortCriteriaAbortAction
const (
	AwsJobAbortCriteriaAbortActionCancel AwsJobAbortCriteriaAbortAction = "CANCEL"
)

// Values returns all known values for AwsJobAbortCriteriaAbortAction. Note that
// this can be expanded in the future, and so it is only as up to date as the
// client. The ordering of this slice is not guaranteed to be stable across
// updates.
func (AwsJobAbortCriteriaAbortAction) Values() []AwsJobAbortCriteriaAbortAction {
	return []AwsJobAbortCriteriaAbortAction{
		"CANCEL",
	}
}

type AwsJobAbortCriteriaFailureType string

// Enum values for AwsJobAbortCriteriaFailureType
const (
	AwsJobAbortCriteriaFailureTypeFailed    AwsJobAbortCriteriaFailureType = "FAILED"
	AwsJobAbortCriteriaFailureTypeRejected  AwsJobAbortCriteriaFailureType = "REJECTED"
	AwsJobAbortCriteriaFailureTypeTimed_out AwsJobAbortCriteriaFailureType = "TIMED_OUT"
	AwsJobAbortCriteriaFailureTypeAll       AwsJobAbortCriteriaFailureType = "ALL"
)

// Values returns all known values for AwsJobAbortCriteriaFailureType. Note that
// this can be expanded in the future, and so it is only as up to date as the
// client. The ordering of this slice is not guaranteed to be stable across
// updates.
func (AwsJobAbortCriteriaFailureType) Values() []AwsJobAbortCriteriaFailureType {
	return []AwsJobAbortCriteriaFailureType{
		"FAILED",
		"REJECTED",
		"TIMED_OUT",
		"ALL",
	}
}

type CACertificateStatus string

// Enum values for CACertificateStatus
const (
	CACertificateStatusActive   CACertificateStatus = "ACTIVE"
	CACertificateStatusInactive CACertificateStatus = "INACTIVE"
)

// Values returns all known values for CACertificateStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (CACertificateStatus) Values() []CACertificateStatus {
	return []CACertificateStatus{
		"ACTIVE",
		"INACTIVE",
	}
}

type CACertificateUpdateAction string

// Enum values for CACertificateUpdateAction
const (
	CACertificateUpdateActionDeactivate CACertificateUpdateAction = "DEACTIVATE"
)

// Values returns all known values for CACertificateUpdateAction. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
// The ordering of this slice is not guaranteed to be stable across updates.
func (CACertificateUpdateAction) Values() []CACertificateUpdateAction {
	return []CACertificateUpdateAction{
		"DEACTIVATE",
	}
}

type CannedAccessControlList string

// Enum values for CannedAccessControlList
const (
	CannedAccessControlListPrivate                CannedAccessControlList = "private"
	CannedAccessControlListPublicread             CannedAccessControlList = "public-read"
	CannedAccessControlListPublicreadwrite        CannedAccessControlList = "public-read-write"
	CannedAccessControlListAwsexecread            CannedAccessControlList = "aws-exec-read"
	CannedAccessControlListAuthenticatedread      CannedAccessControlList = "authenticated-read"
	CannedAccessControlListBucketownerread        CannedAccessControlList = "bucket-owner-read"
	CannedAccessControlListBucketownerfullcontrol CannedAccessControlList = "bucket-owner-full-control"
	CannedAccessControlListLogdeliverywrite       CannedAccessControlList = "log-delivery-write"
)

// Values returns all known values for CannedAccessControlList. Note that this can
// be expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (CannedAccessControlList) Values() []CannedAccessControlList {
	return []CannedAccessControlList{
		"private",
		"public-read",
		"public-read-write",
		"aws-exec-read",
		"authenticated-read",
		"bucket-owner-read",
		"bucket-owner-full-control",
		"log-delivery-write",
	}
}

type CertificateMode string

// Enum values for CertificateMode
const (
	CertificateModeDefault  CertificateMode = "DEFAULT"
	CertificateModeSni_only CertificateMode = "SNI_ONLY"
)

// Values returns all known values for CertificateMode. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (CertificateMode) Values() []CertificateMode {
	return []CertificateMode{
		"DEFAULT",
		"SNI_ONLY",
	}
}

type CertificateStatus string

// Enum values for CertificateStatus
const (
	CertificateStatusActive             CertificateStatus = "ACTIVE"
	CertificateStatusInactive           CertificateStatus = "INACTIVE"
	CertificateStatusRevoked            CertificateStatus = "REVOKED"
	CertificateStatusPending_transfer   CertificateStatus = "PENDING_TRANSFER"
	CertificateStatusRegister_inactive  CertificateStatus = "REGISTER_INACTIVE"
	CertificateStatusPending_activation CertificateStatus = "PENDING_ACTIVATION"
)

// Values returns all known values for CertificateStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (CertificateStatus) Values() []CertificateStatus {
	return []CertificateStatus{
		"ACTIVE",
		"INACTIVE",
		"REVOKED",
		"PENDING_TRANSFER",
		"REGISTER_INACTIVE",
		"PENDING_ACTIVATION",
	}
}

type ComparisonOperator string

// Enum values for ComparisonOperator
const (
	ComparisonOperatorLess_than           ComparisonOperator = "less-than"
	ComparisonOperatorLess_than_equals    ComparisonOperator = "less-than-equals"
	ComparisonOperatorGreater_than        ComparisonOperator = "greater-than"
	ComparisonOperatorGreater_than_equals ComparisonOperator = "greater-than-equals"
	ComparisonOperatorIn_cidr_set         ComparisonOperator = "in-cidr-set"
	ComparisonOperatorNot_in_cidr_set     ComparisonOperator = "not-in-cidr-set"
	ComparisonOperatorIn_port_set         ComparisonOperator = "in-port-set"
	ComparisonOperatorNot_in_port_set     ComparisonOperator = "not-in-port-set"
)

// Values returns all known values for ComparisonOperator. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (ComparisonOperator) Values() []ComparisonOperator {
	return []ComparisonOperator{
		"less-than",
		"less-than-equals",
		"greater-than",
		"greater-than-equals",
		"in-cidr-set",
		"not-in-cidr-set",
		"in-port-set",
		"not-in-port-set",
	}
}

type DayOfWeek string

// Enum values for DayOfWeek
const (
	DayOfWeekSun DayOfWeek = "SUN"
	DayOfWeekMon DayOfWeek = "MON"
	DayOfWeekTue DayOfWeek = "TUE"
	DayOfWeekWed DayOfWeek = "WED"
	DayOfWeekThu DayOfWeek = "THU"
	DayOfWeekFri DayOfWeek = "FRI"
	DayOfWeekSat DayOfWeek = "SAT"
)

// Values returns all known values for DayOfWeek. Note that this can be expanded in
// the future, and so it is only as up to date as the client. The ordering of this
// slice is not guaranteed to be stable across updates.
func (DayOfWeek) Values() []DayOfWeek {
	return []DayOfWeek{
		"SUN",
		"MON",
		"TUE",
		"WED",
		"THU",
		"FRI",
		"SAT",
	}
}

type DeviceCertificateUpdateAction string

// Enum values for DeviceCertificateUpdateAction
const (
	DeviceCertificateUpdateActionDeactivate DeviceCertificateUpdateAction = "DEACTIVATE"
)

// Values returns all known values for DeviceCertificateUpdateAction. Note that
// this can be expanded in the future, and so it is only as up to date as the
// client. The ordering of this slice is not guaranteed to be stable across
// updates.
func (DeviceCertificateUpdateAction) Values() []DeviceCertificateUpdateAction {
	return []DeviceCertificateUpdateAction{
		"DEACTIVATE",
	}
}

type DimensionType string

// Enum values for DimensionType
const (
	DimensionTypeTopic_filter DimensionType = "TOPIC_FILTER"
)

// Values returns all known values for DimensionType. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (DimensionType) Values() []DimensionType {
	return []DimensionType{
		"TOPIC_FILTER",
	}
}

type DimensionValueOperator string

// Enum values for DimensionValueOperator
const (
	DimensionValueOperatorIn     DimensionValueOperator = "IN"
	DimensionValueOperatorNot_in DimensionValueOperator = "NOT_IN"
)

// Values returns all known values for DimensionValueOperator. Note that this can
// be expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (DimensionValueOperator) Values() []DimensionValueOperator {
	return []DimensionValueOperator{
		"IN",
		"NOT_IN",
	}
}

type DomainConfigurationStatus string

// Enum values for DomainConfigurationStatus
const (
	DomainConfigurationStatusEnabled  DomainConfigurationStatus = "ENABLED"
	DomainConfigurationStatusDisabled DomainConfigurationStatus = "DISABLED"
)

// Values returns all known values for DomainConfigurationStatus. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
// The ordering of this slice is not guaranteed to be stable across updates.
func (DomainConfigurationStatus) Values() []DomainConfigurationStatus {
	return []DomainConfigurationStatus{
		"ENABLED",
		"DISABLED",
	}
}

type DomainType string

// Enum values for DomainType
const (
	DomainTypeEndpoint         DomainType = "ENDPOINT"
	DomainTypeAws_managed      DomainType = "AWS_MANAGED"
	DomainTypeCustomer_managed DomainType = "CUSTOMER_MANAGED"
)

// Values returns all known values for DomainType. Note that this can be expanded
// in the future, and so it is only as up to date as the client. The ordering of
// this slice is not guaranteed to be stable across updates.
func (DomainType) Values() []DomainType {
	return []DomainType{
		"ENDPOINT",
		"AWS_MANAGED",
		"CUSTOMER_MANAGED",
	}
}

type DynamicGroupStatus string

// Enum values for DynamicGroupStatus
const (
	DynamicGroupStatusActive     DynamicGroupStatus = "ACTIVE"
	DynamicGroupStatusBuilding   DynamicGroupStatus = "BUILDING"
	DynamicGroupStatusRebuilding DynamicGroupStatus = "REBUILDING"
)

// Values returns all known values for DynamicGroupStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (DynamicGroupStatus) Values() []DynamicGroupStatus {
	return []DynamicGroupStatus{
		"ACTIVE",
		"BUILDING",
		"REBUILDING",
	}
}

type DynamoKeyType string

// Enum values for DynamoKeyType
const (
	DynamoKeyTypeString DynamoKeyType = "STRING"
	DynamoKeyTypeNumber DynamoKeyType = "NUMBER"
)

// Values returns all known values for DynamoKeyType. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (DynamoKeyType) Values() []DynamoKeyType {
	return []DynamoKeyType{
		"STRING",
		"NUMBER",
	}
}

type EventType string

// Enum values for EventType
const (
	EventTypeThing                  EventType = "THING"
	EventTypeThing_group            EventType = "THING_GROUP"
	EventTypeThing_type             EventType = "THING_TYPE"
	EventTypeThing_group_membership EventType = "THING_GROUP_MEMBERSHIP"
	EventTypeThing_group_hierarchy  EventType = "THING_GROUP_HIERARCHY"
	EventTypeThing_type_association EventType = "THING_TYPE_ASSOCIATION"
	EventTypeJob                    EventType = "JOB"
	EventTypeJob_execution          EventType = "JOB_EXECUTION"
	EventTypePolicy                 EventType = "POLICY"
	EventTypeCertificate            EventType = "CERTIFICATE"
	EventTypeCa_certificate         EventType = "CA_CERTIFICATE"
)

// Values returns all known values for EventType. Note that this can be expanded in
// the future, and so it is only as up to date as the client. The ordering of this
// slice is not guaranteed to be stable across updates.
func (EventType) Values() []EventType {
	return []EventType{
		"THING",
		"THING_GROUP",
		"THING_TYPE",
		"THING_GROUP_MEMBERSHIP",
		"THING_GROUP_HIERARCHY",
		"THING_TYPE_ASSOCIATION",
		"JOB",
		"JOB_EXECUTION",
		"POLICY",
		"CERTIFICATE",
		"CA_CERTIFICATE",
	}
}

type FieldType string

// Enum values for FieldType
const (
	FieldTypeNumber  FieldType = "Number"
	FieldTypeString  FieldType = "String"
	FieldTypeBoolean FieldType = "Boolean"
)

// Values returns all known values for FieldType. Note that this can be expanded in
// the future, and so it is only as up to date as the client. The ordering of this
// slice is not guaranteed to be stable across updates.
func (FieldType) Values() []FieldType {
	return []FieldType{
		"Number",
		"String",
		"Boolean",
	}
}

type IndexStatus string

// Enum values for IndexStatus
const (
	IndexStatusActive     IndexStatus = "ACTIVE"
	IndexStatusBuilding   IndexStatus = "BUILDING"
	IndexStatusRebuilding IndexStatus = "REBUILDING"
)

// Values returns all known values for IndexStatus. Note that this can be expanded
// in the future, and so it is only as up to date as the client. The ordering of
// this slice is not guaranteed to be stable across updates.
func (IndexStatus) Values() []IndexStatus {
	return []IndexStatus{
		"ACTIVE",
		"BUILDING",
		"REBUILDING",
	}
}

type JobExecutionFailureType string

// Enum values for JobExecutionFailureType
const (
	JobExecutionFailureTypeFailed    JobExecutionFailureType = "FAILED"
	JobExecutionFailureTypeRejected  JobExecutionFailureType = "REJECTED"
	JobExecutionFailureTypeTimed_out JobExecutionFailureType = "TIMED_OUT"
	JobExecutionFailureTypeAll       JobExecutionFailureType = "ALL"
)

// Values returns all known values for JobExecutionFailureType. Note that this can
// be expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (JobExecutionFailureType) Values() []JobExecutionFailureType {
	return []JobExecutionFailureType{
		"FAILED",
		"REJECTED",
		"TIMED_OUT",
		"ALL",
	}
}

type JobExecutionStatus string

// Enum values for JobExecutionStatus
const (
	JobExecutionStatusQueued      JobExecutionStatus = "QUEUED"
	JobExecutionStatusIn_progress JobExecutionStatus = "IN_PROGRESS"
	JobExecutionStatusSucceeded   JobExecutionStatus = "SUCCEEDED"
	JobExecutionStatusFailed      JobExecutionStatus = "FAILED"
	JobExecutionStatusTimed_out   JobExecutionStatus = "TIMED_OUT"
	JobExecutionStatusRejected    JobExecutionStatus = "REJECTED"
	JobExecutionStatusRemoved     JobExecutionStatus = "REMOVED"
	JobExecutionStatusCanceled    JobExecutionStatus = "CANCELED"
)

// Values returns all known values for JobExecutionStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (JobExecutionStatus) Values() []JobExecutionStatus {
	return []JobExecutionStatus{
		"QUEUED",
		"IN_PROGRESS",
		"SUCCEEDED",
		"FAILED",
		"TIMED_OUT",
		"REJECTED",
		"REMOVED",
		"CANCELED",
	}
}

type JobStatus string

// Enum values for JobStatus
const (
	JobStatusIn_progress          JobStatus = "IN_PROGRESS"
	JobStatusCanceled             JobStatus = "CANCELED"
	JobStatusCompleted            JobStatus = "COMPLETED"
	JobStatusDeletion_in_progress JobStatus = "DELETION_IN_PROGRESS"
)

// Values returns all known values for JobStatus. Note that this can be expanded in
// the future, and so it is only as up to date as the client. The ordering of this
// slice is not guaranteed to be stable across updates.
func (JobStatus) Values() []JobStatus {
	return []JobStatus{
		"IN_PROGRESS",
		"CANCELED",
		"COMPLETED",
		"DELETION_IN_PROGRESS",
	}
}

type LogLevel string

// Enum values for LogLevel
const (
	LogLevelDebug    LogLevel = "DEBUG"
	LogLevelInfo     LogLevel = "INFO"
	LogLevelError    LogLevel = "ERROR"
	LogLevelWarn     LogLevel = "WARN"
	LogLevelDisabled LogLevel = "DISABLED"
)

// Values returns all known values for LogLevel. Note that this can be expanded in
// the future, and so it is only as up to date as the client. The ordering of this
// slice is not guaranteed to be stable across updates.
func (LogLevel) Values() []LogLevel {
	return []LogLevel{
		"DEBUG",
		"INFO",
		"ERROR",
		"WARN",
		"DISABLED",
	}
}

type LogTargetType string

// Enum values for LogTargetType
const (
	LogTargetTypeDefault     LogTargetType = "DEFAULT"
	LogTargetTypeThing_group LogTargetType = "THING_GROUP"
)

// Values returns all known values for LogTargetType. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (LogTargetType) Values() []LogTargetType {
	return []LogTargetType{
		"DEFAULT",
		"THING_GROUP",
	}
}

type MessageFormat string

// Enum values for MessageFormat
const (
	MessageFormatRaw  MessageFormat = "RAW"
	MessageFormatJson MessageFormat = "JSON"
)

// Values returns all known values for MessageFormat. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (MessageFormat) Values() []MessageFormat {
	return []MessageFormat{
		"RAW",
		"JSON",
	}
}

type MitigationActionType string

// Enum values for MitigationActionType
const (
	MitigationActionTypeUpdate_device_certificate      MitigationActionType = "UPDATE_DEVICE_CERTIFICATE"
	MitigationActionTypeUpdate_ca_certificate          MitigationActionType = "UPDATE_CA_CERTIFICATE"
	MitigationActionTypeAdd_things_to_thing_group      MitigationActionType = "ADD_THINGS_TO_THING_GROUP"
	MitigationActionTypeReplace_default_policy_version MitigationActionType = "REPLACE_DEFAULT_POLICY_VERSION"
	MitigationActionTypeEnable_iot_logging             MitigationActionType = "ENABLE_IOT_LOGGING"
	MitigationActionTypePublish_finding_to_sns         MitigationActionType = "PUBLISH_FINDING_TO_SNS"
)

// Values returns all known values for MitigationActionType. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (MitigationActionType) Values() []MitigationActionType {
	return []MitigationActionType{
		"UPDATE_DEVICE_CERTIFICATE",
		"UPDATE_CA_CERTIFICATE",
		"ADD_THINGS_TO_THING_GROUP",
		"REPLACE_DEFAULT_POLICY_VERSION",
		"ENABLE_IOT_LOGGING",
		"PUBLISH_FINDING_TO_SNS",
	}
}

type OTAUpdateStatus string

// Enum values for OTAUpdateStatus
const (
	OTAUpdateStatusCreate_pending     OTAUpdateStatus = "CREATE_PENDING"
	OTAUpdateStatusCreate_in_progress OTAUpdateStatus = "CREATE_IN_PROGRESS"
	OTAUpdateStatusCreate_complete    OTAUpdateStatus = "CREATE_COMPLETE"
	OTAUpdateStatusCreate_failed      OTAUpdateStatus = "CREATE_FAILED"
)

// Values returns all known values for OTAUpdateStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (OTAUpdateStatus) Values() []OTAUpdateStatus {
	return []OTAUpdateStatus{
		"CREATE_PENDING",
		"CREATE_IN_PROGRESS",
		"CREATE_COMPLETE",
		"CREATE_FAILED",
	}
}

type PolicyTemplateName string

// Enum values for PolicyTemplateName
const (
	PolicyTemplateNameBlank_policy PolicyTemplateName = "BLANK_POLICY"
)

// Values returns all known values for PolicyTemplateName. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (PolicyTemplateName) Values() []PolicyTemplateName {
	return []PolicyTemplateName{
		"BLANK_POLICY",
	}
}

type Protocol string

// Enum values for Protocol
const (
	ProtocolMqtt Protocol = "MQTT"
	ProtocolHttp Protocol = "HTTP"
)

// Values returns all known values for Protocol. Note that this can be expanded in
// the future, and so it is only as up to date as the client. The ordering of this
// slice is not guaranteed to be stable across updates.
func (Protocol) Values() []Protocol {
	return []Protocol{
		"MQTT",
		"HTTP",
	}
}

type ReportType string

// Enum values for ReportType
const (
	ReportTypeErrors  ReportType = "ERRORS"
	ReportTypeResults ReportType = "RESULTS"
)

// Values returns all known values for ReportType. Note that this can be expanded
// in the future, and so it is only as up to date as the client. The ordering of
// this slice is not guaranteed to be stable across updates.
func (ReportType) Values() []ReportType {
	return []ReportType{
		"ERRORS",
		"RESULTS",
	}
}

type ResourceType string

// Enum values for ResourceType
const (
	ResourceTypeDevice_certificate    ResourceType = "DEVICE_CERTIFICATE"
	ResourceTypeCa_certificate        ResourceType = "CA_CERTIFICATE"
	ResourceTypeIot_policy            ResourceType = "IOT_POLICY"
	ResourceTypeCognito_identity_pool ResourceType = "COGNITO_IDENTITY_POOL"
	ResourceTypeClient_id             ResourceType = "CLIENT_ID"
	ResourceTypeAccount_settings      ResourceType = "ACCOUNT_SETTINGS"
	ResourceTypeRole_alias            ResourceType = "ROLE_ALIAS"
	ResourceTypeIam_role              ResourceType = "IAM_ROLE"
)

// Values returns all known values for ResourceType. Note that this can be expanded
// in the future, and so it is only as up to date as the client. The ordering of
// this slice is not guaranteed to be stable across updates.
func (ResourceType) Values() []ResourceType {
	return []ResourceType{
		"DEVICE_CERTIFICATE",
		"CA_CERTIFICATE",
		"IOT_POLICY",
		"COGNITO_IDENTITY_POOL",
		"CLIENT_ID",
		"ACCOUNT_SETTINGS",
		"ROLE_ALIAS",
		"IAM_ROLE",
	}
}

type ServerCertificateStatus string

// Enum values for ServerCertificateStatus
const (
	ServerCertificateStatusInvalid ServerCertificateStatus = "INVALID"
	ServerCertificateStatusValid   ServerCertificateStatus = "VALID"
)

// Values returns all known values for ServerCertificateStatus. Note that this can
// be expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (ServerCertificateStatus) Values() []ServerCertificateStatus {
	return []ServerCertificateStatus{
		"INVALID",
		"VALID",
	}
}

type ServiceType string

// Enum values for ServiceType
const (
	ServiceTypeData                ServiceType = "DATA"
	ServiceTypeCredential_provider ServiceType = "CREDENTIAL_PROVIDER"
	ServiceTypeJobs                ServiceType = "JOBS"
)

// Values returns all known values for ServiceType. Note that this can be expanded
// in the future, and so it is only as up to date as the client. The ordering of
// this slice is not guaranteed to be stable across updates.
func (ServiceType) Values() []ServiceType {
	return []ServiceType{
		"DATA",
		"CREDENTIAL_PROVIDER",
		"JOBS",
	}
}

type Status string

// Enum values for Status
const (
	StatusInprogress Status = "InProgress"
	StatusCompleted  Status = "Completed"
	StatusFailed     Status = "Failed"
	StatusCancelled  Status = "Cancelled"
	StatusCancelling Status = "Cancelling"
)

// Values returns all known values for Status. Note that this can be expanded in
// the future, and so it is only as up to date as the client. The ordering of this
// slice is not guaranteed to be stable across updates.
func (Status) Values() []Status {
	return []Status{
		"InProgress",
		"Completed",
		"Failed",
		"Cancelled",
		"Cancelling",
	}
}

type TargetSelection string

// Enum values for TargetSelection
const (
	TargetSelectionContinuous TargetSelection = "CONTINUOUS"
	TargetSelectionSnapshot   TargetSelection = "SNAPSHOT"
)

// Values returns all known values for TargetSelection. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (TargetSelection) Values() []TargetSelection {
	return []TargetSelection{
		"CONTINUOUS",
		"SNAPSHOT",
	}
}

type ThingConnectivityIndexingMode string

// Enum values for ThingConnectivityIndexingMode
const (
	ThingConnectivityIndexingModeOff    ThingConnectivityIndexingMode = "OFF"
	ThingConnectivityIndexingModeStatus ThingConnectivityIndexingMode = "STATUS"
)

// Values returns all known values for ThingConnectivityIndexingMode. Note that
// this can be expanded in the future, and so it is only as up to date as the
// client. The ordering of this slice is not guaranteed to be stable across
// updates.
func (ThingConnectivityIndexingMode) Values() []ThingConnectivityIndexingMode {
	return []ThingConnectivityIndexingMode{
		"OFF",
		"STATUS",
	}
}

type ThingGroupIndexingMode string

// Enum values for ThingGroupIndexingMode
const (
	ThingGroupIndexingModeOff ThingGroupIndexingMode = "OFF"
	ThingGroupIndexingModeOn  ThingGroupIndexingMode = "ON"
)

// Values returns all known values for ThingGroupIndexingMode. Note that this can
// be expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (ThingGroupIndexingMode) Values() []ThingGroupIndexingMode {
	return []ThingGroupIndexingMode{
		"OFF",
		"ON",
	}
}

type ThingIndexingMode string

// Enum values for ThingIndexingMode
const (
	ThingIndexingModeOff                 ThingIndexingMode = "OFF"
	ThingIndexingModeRegistry            ThingIndexingMode = "REGISTRY"
	ThingIndexingModeRegistry_and_shadow ThingIndexingMode = "REGISTRY_AND_SHADOW"
)

// Values returns all known values for ThingIndexingMode. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (ThingIndexingMode) Values() []ThingIndexingMode {
	return []ThingIndexingMode{
		"OFF",
		"REGISTRY",
		"REGISTRY_AND_SHADOW",
	}
}

type TopicRuleDestinationStatus string

// Enum values for TopicRuleDestinationStatus
const (
	TopicRuleDestinationStatusEnabled     TopicRuleDestinationStatus = "ENABLED"
	TopicRuleDestinationStatusIn_progress TopicRuleDestinationStatus = "IN_PROGRESS"
	TopicRuleDestinationStatusDisabled    TopicRuleDestinationStatus = "DISABLED"
	TopicRuleDestinationStatusError       TopicRuleDestinationStatus = "ERROR"
)

// Values returns all known values for TopicRuleDestinationStatus. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
// The ordering of this slice is not guaranteed to be stable across updates.
func (TopicRuleDestinationStatus) Values() []TopicRuleDestinationStatus {
	return []TopicRuleDestinationStatus{
		"ENABLED",
		"IN_PROGRESS",
		"DISABLED",
		"ERROR",
	}
}

type ViolationEventType string

// Enum values for ViolationEventType
const (
	ViolationEventTypeIn_alarm          ViolationEventType = "in-alarm"
	ViolationEventTypeAlarm_cleared     ViolationEventType = "alarm-cleared"
	ViolationEventTypeAlarm_invalidated ViolationEventType = "alarm-invalidated"
)

// Values returns all known values for ViolationEventType. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (ViolationEventType) Values() []ViolationEventType {
	return []ViolationEventType{
		"in-alarm",
		"alarm-cleared",
		"alarm-invalidated",
	}
}
