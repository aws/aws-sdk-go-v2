// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package types

import (
	"time"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/internal/awsutil"
	"github.com/aws/aws-sdk-go-v2/service/iot/enums"
)

type ListAuditTasksInput struct {
	_ struct{} `type:"structure"`

	// The end of the time period.
	//
	// EndTime is a required field
	EndTime *time.Time `location:"querystring" locationName:"endTime" type:"timestamp" required:"true"`

	// The maximum number of results to return at one time. The default is 25.
	MaxResults *int64 `location:"querystring" locationName:"maxResults" min:"1" type:"integer"`

	// The token for the next set of results.
	NextToken *string `location:"querystring" locationName:"nextToken" type:"string"`

	// The beginning of the time period. Audit information is retained for a limited
	// time (180 days). Requesting a start time prior to what is retained results
	// in an "InvalidRequestException".
	//
	// StartTime is a required field
	StartTime *time.Time `location:"querystring" locationName:"startTime" type:"timestamp" required:"true"`

	// A filter to limit the output to audits with the specified completion status:
	// can be one of "IN_PROGRESS", "COMPLETED", "FAILED", or "CANCELED".
	TaskStatus enums.AuditTaskStatus `location:"querystring" locationName:"taskStatus" type:"string" enum:"true"`

	// A filter to limit the output to the specified type of audit: can be one of
	// "ON_DEMAND_AUDIT_TASK" or "SCHEDULED__AUDIT_TASK".
	TaskType enums.AuditTaskType `location:"querystring" locationName:"taskType" type:"string" enum:"true"`
}

// String returns the string representation
func (s ListAuditTasksInput) String() string {
	return awsutil.Prettify(s)
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *ListAuditTasksInput) Validate() error {
	invalidParams := aws.ErrInvalidParams{Context: "ListAuditTasksInput"}

	if s.EndTime == nil {
		invalidParams.Add(aws.NewErrParamRequired("EndTime"))
	}
	if s.MaxResults != nil && *s.MaxResults < 1 {
		invalidParams.Add(aws.NewErrParamMinValue("MaxResults", 1))
	}

	if s.StartTime == nil {
		invalidParams.Add(aws.NewErrParamRequired("StartTime"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

type ListAuditTasksOutput struct {
	_ struct{} `type:"structure"`

	// A token that can be used to retrieve the next set of results, or null if
	// there are no additional results.
	NextToken *string `locationName:"nextToken" type:"string"`

	// The audits that were performed during the specified time period.
	Tasks []AuditTaskMetadata `locationName:"tasks" type:"list"`
}

// String returns the string representation
func (s ListAuditTasksOutput) String() string {
	return awsutil.Prettify(s)
}
