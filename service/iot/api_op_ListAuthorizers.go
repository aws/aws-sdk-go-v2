// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package iot

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/iot/types"
)

const opListAuthorizers = "ListAuthorizers"

// ListAuthorizersRequest returns a request value for making API operation for
// AWS IoT.
//
// Lists the authorizers registered in your account.
//
//    // Example sending a request using ListAuthorizersRequest.
//    req := client.ListAuthorizersRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
func (c *Client) ListAuthorizersRequest(input *types.ListAuthorizersInput) ListAuthorizersRequest {
	op := &aws.Operation{
		Name:       opListAuthorizers,
		HTTPMethod: "GET",
		HTTPPath:   "/authorizers/",
	}

	if input == nil {
		input = &types.ListAuthorizersInput{}
	}

	req := c.newRequest(op, input, &types.ListAuthorizersOutput{})
	return ListAuthorizersRequest{Request: req, Input: input, Copy: c.ListAuthorizersRequest}
}

// ListAuthorizersRequest is the request type for the
// ListAuthorizers API operation.
type ListAuthorizersRequest struct {
	*aws.Request
	Input *types.ListAuthorizersInput
	Copy  func(*types.ListAuthorizersInput) ListAuthorizersRequest
}

// Send marshals and sends the ListAuthorizers API request.
func (r ListAuthorizersRequest) Send(ctx context.Context) (*ListAuthorizersResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &ListAuthorizersResponse{
		ListAuthorizersOutput: r.Request.Data.(*types.ListAuthorizersOutput),
		response:              &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// ListAuthorizersResponse is the response type for the
// ListAuthorizers API operation.
type ListAuthorizersResponse struct {
	*types.ListAuthorizersOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// ListAuthorizers request.
func (r *ListAuthorizersResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
