// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package iot

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/iot/types"
)

const opDeleteOTAUpdate = "DeleteOTAUpdate"

// DeleteOTAUpdateRequest returns a request value for making API operation for
// AWS IoT.
//
// Delete an OTA update.
//
//    // Example sending a request using DeleteOTAUpdateRequest.
//    req := client.DeleteOTAUpdateRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
func (c *Client) DeleteOTAUpdateRequest(input *types.DeleteOTAUpdateInput) DeleteOTAUpdateRequest {
	op := &aws.Operation{
		Name:       opDeleteOTAUpdate,
		HTTPMethod: "DELETE",
		HTTPPath:   "/otaUpdates/{otaUpdateId}",
	}

	if input == nil {
		input = &types.DeleteOTAUpdateInput{}
	}

	req := c.newRequest(op, input, &types.DeleteOTAUpdateOutput{})
	return DeleteOTAUpdateRequest{Request: req, Input: input, Copy: c.DeleteOTAUpdateRequest}
}

// DeleteOTAUpdateRequest is the request type for the
// DeleteOTAUpdate API operation.
type DeleteOTAUpdateRequest struct {
	*aws.Request
	Input *types.DeleteOTAUpdateInput
	Copy  func(*types.DeleteOTAUpdateInput) DeleteOTAUpdateRequest
}

// Send marshals and sends the DeleteOTAUpdate API request.
func (r DeleteOTAUpdateRequest) Send(ctx context.Context) (*DeleteOTAUpdateResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &DeleteOTAUpdateResponse{
		DeleteOTAUpdateOutput: r.Request.Data.(*types.DeleteOTAUpdateOutput),
		response:              &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// DeleteOTAUpdateResponse is the response type for the
// DeleteOTAUpdate API operation.
type DeleteOTAUpdateResponse struct {
	*types.DeleteOTAUpdateOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// DeleteOTAUpdate request.
func (r *DeleteOTAUpdateResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
