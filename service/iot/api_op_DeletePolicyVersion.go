// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package iot

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/private/protocol"
	"github.com/aws/aws-sdk-go-v2/private/protocol/restjson"
	"github.com/aws/aws-sdk-go-v2/service/iot/types"
)

const opDeletePolicyVersion = "DeletePolicyVersion"

// DeletePolicyVersionRequest returns a request value for making API operation for
// AWS IoT.
//
// Deletes the specified version of the specified policy. You cannot delete
// the default version of a policy using this API. To delete the default version
// of a policy, use DeletePolicy. To find out which version of a policy is marked
// as the default version, use ListPolicyVersions.
//
//    // Example sending a request using DeletePolicyVersionRequest.
//    req := client.DeletePolicyVersionRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
func (c *Client) DeletePolicyVersionRequest(input *types.DeletePolicyVersionInput) DeletePolicyVersionRequest {
	op := &aws.Operation{
		Name:       opDeletePolicyVersion,
		HTTPMethod: "DELETE",
		HTTPPath:   "/policies/{policyName}/version/{policyVersionId}",
	}

	if input == nil {
		input = &types.DeletePolicyVersionInput{}
	}

	req := c.newRequest(op, input, &types.DeletePolicyVersionOutput{})
	req.Handlers.Unmarshal.Remove(restjson.UnmarshalHandler)
	req.Handlers.Unmarshal.PushBackNamed(protocol.UnmarshalDiscardBodyHandler)
	return DeletePolicyVersionRequest{Request: req, Input: input, Copy: c.DeletePolicyVersionRequest}
}

// DeletePolicyVersionRequest is the request type for the
// DeletePolicyVersion API operation.
type DeletePolicyVersionRequest struct {
	*aws.Request
	Input *types.DeletePolicyVersionInput
	Copy  func(*types.DeletePolicyVersionInput) DeletePolicyVersionRequest
}

// Send marshals and sends the DeletePolicyVersion API request.
func (r DeletePolicyVersionRequest) Send(ctx context.Context) (*DeletePolicyVersionResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &DeletePolicyVersionResponse{
		DeletePolicyVersionOutput: r.Request.Data.(*types.DeletePolicyVersionOutput),
		response:                  &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// DeletePolicyVersionResponse is the response type for the
// DeletePolicyVersion API operation.
type DeletePolicyVersionResponse struct {
	*types.DeletePolicyVersionOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// DeletePolicyVersion request.
func (r *DeletePolicyVersionResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
