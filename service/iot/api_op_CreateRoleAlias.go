// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package iot

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/iot/types"
)

const opCreateRoleAlias = "CreateRoleAlias"

// CreateRoleAliasRequest returns a request value for making API operation for
// AWS IoT.
//
// Creates a role alias.
//
//    // Example sending a request using CreateRoleAliasRequest.
//    req := client.CreateRoleAliasRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
func (c *Client) CreateRoleAliasRequest(input *types.CreateRoleAliasInput) CreateRoleAliasRequest {
	op := &aws.Operation{
		Name:       opCreateRoleAlias,
		HTTPMethod: "POST",
		HTTPPath:   "/role-aliases/{roleAlias}",
	}

	if input == nil {
		input = &types.CreateRoleAliasInput{}
	}

	req := c.newRequest(op, input, &types.CreateRoleAliasOutput{})
	return CreateRoleAliasRequest{Request: req, Input: input, Copy: c.CreateRoleAliasRequest}
}

// CreateRoleAliasRequest is the request type for the
// CreateRoleAlias API operation.
type CreateRoleAliasRequest struct {
	*aws.Request
	Input *types.CreateRoleAliasInput
	Copy  func(*types.CreateRoleAliasInput) CreateRoleAliasRequest
}

// Send marshals and sends the CreateRoleAlias API request.
func (r CreateRoleAliasRequest) Send(ctx context.Context) (*CreateRoleAliasResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &CreateRoleAliasResponse{
		CreateRoleAliasOutput: r.Request.Data.(*types.CreateRoleAliasOutput),
		response:              &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// CreateRoleAliasResponse is the response type for the
// CreateRoleAlias API operation.
type CreateRoleAliasResponse struct {
	*types.CreateRoleAliasOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// CreateRoleAlias request.
func (r *CreateRoleAliasResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
