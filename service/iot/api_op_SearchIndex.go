// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package iot

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/iot/types"
)

const opSearchIndex = "SearchIndex"

// SearchIndexRequest returns a request value for making API operation for
// AWS IoT.
//
// The query search index.
//
//    // Example sending a request using SearchIndexRequest.
//    req := client.SearchIndexRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
func (c *Client) SearchIndexRequest(input *types.SearchIndexInput) SearchIndexRequest {
	op := &aws.Operation{
		Name:       opSearchIndex,
		HTTPMethod: "POST",
		HTTPPath:   "/indices/search",
	}

	if input == nil {
		input = &types.SearchIndexInput{}
	}

	req := c.newRequest(op, input, &types.SearchIndexOutput{})
	return SearchIndexRequest{Request: req, Input: input, Copy: c.SearchIndexRequest}
}

// SearchIndexRequest is the request type for the
// SearchIndex API operation.
type SearchIndexRequest struct {
	*aws.Request
	Input *types.SearchIndexInput
	Copy  func(*types.SearchIndexInput) SearchIndexRequest
}

// Send marshals and sends the SearchIndex API request.
func (r SearchIndexRequest) Send(ctx context.Context) (*SearchIndexResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &SearchIndexResponse{
		SearchIndexOutput: r.Request.Data.(*types.SearchIndexOutput),
		response:          &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// SearchIndexResponse is the response type for the
// SearchIndex API operation.
type SearchIndexResponse struct {
	*types.SearchIndexOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// SearchIndex request.
func (r *SearchIndexResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
