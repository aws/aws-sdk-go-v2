// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package iot

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/iot/types"
)

const opDescribeIndex = "DescribeIndex"

// DescribeIndexRequest returns a request value for making API operation for
// AWS IoT.
//
// Describes a search index.
//
//    // Example sending a request using DescribeIndexRequest.
//    req := client.DescribeIndexRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
func (c *Client) DescribeIndexRequest(input *types.DescribeIndexInput) DescribeIndexRequest {
	op := &aws.Operation{
		Name:       opDescribeIndex,
		HTTPMethod: "GET",
		HTTPPath:   "/indices/{indexName}",
	}

	if input == nil {
		input = &types.DescribeIndexInput{}
	}

	req := c.newRequest(op, input, &types.DescribeIndexOutput{})
	return DescribeIndexRequest{Request: req, Input: input, Copy: c.DescribeIndexRequest}
}

// DescribeIndexRequest is the request type for the
// DescribeIndex API operation.
type DescribeIndexRequest struct {
	*aws.Request
	Input *types.DescribeIndexInput
	Copy  func(*types.DescribeIndexInput) DescribeIndexRequest
}

// Send marshals and sends the DescribeIndex API request.
func (r DescribeIndexRequest) Send(ctx context.Context) (*DescribeIndexResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &DescribeIndexResponse{
		DescribeIndexOutput: r.Request.Data.(*types.DescribeIndexOutput),
		response:            &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// DescribeIndexResponse is the response type for the
// DescribeIndex API operation.
type DescribeIndexResponse struct {
	*types.DescribeIndexOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// DescribeIndex request.
func (r *DescribeIndexResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
