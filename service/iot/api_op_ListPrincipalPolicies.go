// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package iot

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/iot/types"
)

const opListPrincipalPolicies = "ListPrincipalPolicies"

// ListPrincipalPoliciesRequest returns a request value for making API operation for
// AWS IoT.
//
// Lists the policies attached to the specified principal. If you use an Cognito
// identity, the ID must be in AmazonCognito Identity format (https://docs.aws.amazon.com/cognitoidentity/latest/APIReference/API_GetCredentialsForIdentity.html#API_GetCredentialsForIdentity_RequestSyntax).
//
// Note: This API is deprecated. Please use ListAttachedPolicies instead.
//
//    // Example sending a request using ListPrincipalPoliciesRequest.
//    req := client.ListPrincipalPoliciesRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
func (c *Client) ListPrincipalPoliciesRequest(input *types.ListPrincipalPoliciesInput) ListPrincipalPoliciesRequest {
	if c.Client.Config.Logger != nil {
		c.Client.Config.Logger.Log("This operation, ListPrincipalPolicies, has been deprecated")
	}
	op := &aws.Operation{
		Name:       opListPrincipalPolicies,
		HTTPMethod: "GET",
		HTTPPath:   "/principal-policies",
	}

	if input == nil {
		input = &types.ListPrincipalPoliciesInput{}
	}

	req := c.newRequest(op, input, &types.ListPrincipalPoliciesOutput{})
	return ListPrincipalPoliciesRequest{Request: req, Input: input, Copy: c.ListPrincipalPoliciesRequest}
}

// ListPrincipalPoliciesRequest is the request type for the
// ListPrincipalPolicies API operation.
type ListPrincipalPoliciesRequest struct {
	*aws.Request
	Input *types.ListPrincipalPoliciesInput
	Copy  func(*types.ListPrincipalPoliciesInput) ListPrincipalPoliciesRequest
}

// Send marshals and sends the ListPrincipalPolicies API request.
func (r ListPrincipalPoliciesRequest) Send(ctx context.Context) (*ListPrincipalPoliciesResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &ListPrincipalPoliciesResponse{
		ListPrincipalPoliciesOutput: r.Request.Data.(*types.ListPrincipalPoliciesOutput),
		response:                    &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// ListPrincipalPoliciesResponse is the response type for the
// ListPrincipalPolicies API operation.
type ListPrincipalPoliciesResponse struct {
	*types.ListPrincipalPoliciesOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// ListPrincipalPolicies request.
func (r *ListPrincipalPoliciesResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
