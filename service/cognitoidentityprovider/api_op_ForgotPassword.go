// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package cognitoidentityprovider

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/cognitoidentityprovider/types"
)

const opForgotPassword = "ForgotPassword"

// ForgotPasswordRequest returns a request value for making API operation for
// Amazon Cognito Identity Provider.
//
// Calling this API causes a message to be sent to the end user with a confirmation
// code that is required to change the user's password. For the Username parameter,
// you can use the username or user alias. If a verified phone number exists
// for the user, the confirmation code is sent to the phone number. Otherwise,
// if a verified email exists, the confirmation code is sent to the email. If
// neither a verified phone number nor a verified email exists, InvalidParameterException
// is thrown. To use the confirmation code for resetting the password, call .
//
//    // Example sending a request using ForgotPasswordRequest.
//    req := client.ForgotPasswordRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/ForgotPassword
func (c *Client) ForgotPasswordRequest(input *types.ForgotPasswordInput) ForgotPasswordRequest {
	op := &aws.Operation{
		Name:       opForgotPassword,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &types.ForgotPasswordInput{}
	}

	req := c.newRequest(op, input, &types.ForgotPasswordOutput{})
	req.Config.Credentials = aws.AnonymousCredentials
	return ForgotPasswordRequest{Request: req, Input: input, Copy: c.ForgotPasswordRequest}
}

// ForgotPasswordRequest is the request type for the
// ForgotPassword API operation.
type ForgotPasswordRequest struct {
	*aws.Request
	Input *types.ForgotPasswordInput
	Copy  func(*types.ForgotPasswordInput) ForgotPasswordRequest
}

// Send marshals and sends the ForgotPassword API request.
func (r ForgotPasswordRequest) Send(ctx context.Context) (*ForgotPasswordResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &ForgotPasswordResponse{
		ForgotPasswordOutput: r.Request.Data.(*types.ForgotPasswordOutput),
		response:             &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// ForgotPasswordResponse is the response type for the
// ForgotPassword API operation.
type ForgotPasswordResponse struct {
	*types.ForgotPasswordOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// ForgotPassword request.
func (r *ForgotPasswordResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
