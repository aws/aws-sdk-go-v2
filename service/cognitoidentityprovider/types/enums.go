// Code generated by smithy-go-codegen DO NOT EDIT.

package types

type AccountTakeoverEventActionType string

// Enum values for AccountTakeoverEventActionType
const (
	AccountTakeoverEventActionTypeBlock             AccountTakeoverEventActionType = "BLOCK"
	AccountTakeoverEventActionTypeMfa_if_configured AccountTakeoverEventActionType = "MFA_IF_CONFIGURED"
	AccountTakeoverEventActionTypeMfa_required      AccountTakeoverEventActionType = "MFA_REQUIRED"
	AccountTakeoverEventActionTypeNo_action         AccountTakeoverEventActionType = "NO_ACTION"
)

// Values returns all known values for AccountTakeoverEventActionType. Note that
// this can be expanded in the future, and so it is only as up to date as the
// client. The ordering of this slice is not guaranteed to be stable across
// updates.
func (AccountTakeoverEventActionType) Values() []AccountTakeoverEventActionType {
	return []AccountTakeoverEventActionType{
		"BLOCK",
		"MFA_IF_CONFIGURED",
		"MFA_REQUIRED",
		"NO_ACTION",
	}
}

type AdvancedSecurityModeType string

// Enum values for AdvancedSecurityModeType
const (
	AdvancedSecurityModeTypeOff      AdvancedSecurityModeType = "OFF"
	AdvancedSecurityModeTypeAudit    AdvancedSecurityModeType = "AUDIT"
	AdvancedSecurityModeTypeEnforced AdvancedSecurityModeType = "ENFORCED"
)

// Values returns all known values for AdvancedSecurityModeType. Note that this can
// be expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (AdvancedSecurityModeType) Values() []AdvancedSecurityModeType {
	return []AdvancedSecurityModeType{
		"OFF",
		"AUDIT",
		"ENFORCED",
	}
}

type AliasAttributeType string

// Enum values for AliasAttributeType
const (
	AliasAttributeTypePhone_number       AliasAttributeType = "phone_number"
	AliasAttributeTypeEmail              AliasAttributeType = "email"
	AliasAttributeTypePreferred_username AliasAttributeType = "preferred_username"
)

// Values returns all known values for AliasAttributeType. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (AliasAttributeType) Values() []AliasAttributeType {
	return []AliasAttributeType{
		"phone_number",
		"email",
		"preferred_username",
	}
}

type AttributeDataType string

// Enum values for AttributeDataType
const (
	AttributeDataTypeString   AttributeDataType = "String"
	AttributeDataTypeNumber   AttributeDataType = "Number"
	AttributeDataTypeDatetime AttributeDataType = "DateTime"
	AttributeDataTypeBoolean  AttributeDataType = "Boolean"
)

// Values returns all known values for AttributeDataType. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (AttributeDataType) Values() []AttributeDataType {
	return []AttributeDataType{
		"String",
		"Number",
		"DateTime",
		"Boolean",
	}
}

type AuthFlowType string

// Enum values for AuthFlowType
const (
	AuthFlowTypeUser_srp_auth            AuthFlowType = "USER_SRP_AUTH"
	AuthFlowTypeRefresh_token_auth       AuthFlowType = "REFRESH_TOKEN_AUTH"
	AuthFlowTypeRefresh_token            AuthFlowType = "REFRESH_TOKEN"
	AuthFlowTypeCustom_auth              AuthFlowType = "CUSTOM_AUTH"
	AuthFlowTypeAdmin_no_srp_auth        AuthFlowType = "ADMIN_NO_SRP_AUTH"
	AuthFlowTypeUser_password_auth       AuthFlowType = "USER_PASSWORD_AUTH"
	AuthFlowTypeAdmin_user_password_auth AuthFlowType = "ADMIN_USER_PASSWORD_AUTH"
)

// Values returns all known values for AuthFlowType. Note that this can be expanded
// in the future, and so it is only as up to date as the client. The ordering of
// this slice is not guaranteed to be stable across updates.
func (AuthFlowType) Values() []AuthFlowType {
	return []AuthFlowType{
		"USER_SRP_AUTH",
		"REFRESH_TOKEN_AUTH",
		"REFRESH_TOKEN",
		"CUSTOM_AUTH",
		"ADMIN_NO_SRP_AUTH",
		"USER_PASSWORD_AUTH",
		"ADMIN_USER_PASSWORD_AUTH",
	}
}

type ChallengeName string

// Enum values for ChallengeName
const (
	ChallengeNamePassword ChallengeName = "Password"
	ChallengeNameMfa      ChallengeName = "Mfa"
)

// Values returns all known values for ChallengeName. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (ChallengeName) Values() []ChallengeName {
	return []ChallengeName{
		"Password",
		"Mfa",
	}
}

type ChallengeNameType string

// Enum values for ChallengeNameType
const (
	ChallengeNameTypeSms_mfa                  ChallengeNameType = "SMS_MFA"
	ChallengeNameTypeSoftware_token_mfa       ChallengeNameType = "SOFTWARE_TOKEN_MFA"
	ChallengeNameTypeSelect_mfa_type          ChallengeNameType = "SELECT_MFA_TYPE"
	ChallengeNameTypeMfa_setup                ChallengeNameType = "MFA_SETUP"
	ChallengeNameTypePassword_verifier        ChallengeNameType = "PASSWORD_VERIFIER"
	ChallengeNameTypeCustom_challenge         ChallengeNameType = "CUSTOM_CHALLENGE"
	ChallengeNameTypeDevice_srp_auth          ChallengeNameType = "DEVICE_SRP_AUTH"
	ChallengeNameTypeDevice_password_verifier ChallengeNameType = "DEVICE_PASSWORD_VERIFIER"
	ChallengeNameTypeAdmin_no_srp_auth        ChallengeNameType = "ADMIN_NO_SRP_AUTH"
	ChallengeNameTypeNew_password_required    ChallengeNameType = "NEW_PASSWORD_REQUIRED"
)

// Values returns all known values for ChallengeNameType. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (ChallengeNameType) Values() []ChallengeNameType {
	return []ChallengeNameType{
		"SMS_MFA",
		"SOFTWARE_TOKEN_MFA",
		"SELECT_MFA_TYPE",
		"MFA_SETUP",
		"PASSWORD_VERIFIER",
		"CUSTOM_CHALLENGE",
		"DEVICE_SRP_AUTH",
		"DEVICE_PASSWORD_VERIFIER",
		"ADMIN_NO_SRP_AUTH",
		"NEW_PASSWORD_REQUIRED",
	}
}

type ChallengeResponse string

// Enum values for ChallengeResponse
const (
	ChallengeResponseSuccess ChallengeResponse = "Success"
	ChallengeResponseFailure ChallengeResponse = "Failure"
)

// Values returns all known values for ChallengeResponse. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (ChallengeResponse) Values() []ChallengeResponse {
	return []ChallengeResponse{
		"Success",
		"Failure",
	}
}

type CompromisedCredentialsEventActionType string

// Enum values for CompromisedCredentialsEventActionType
const (
	CompromisedCredentialsEventActionTypeBlock     CompromisedCredentialsEventActionType = "BLOCK"
	CompromisedCredentialsEventActionTypeNo_action CompromisedCredentialsEventActionType = "NO_ACTION"
)

// Values returns all known values for CompromisedCredentialsEventActionType. Note
// that this can be expanded in the future, and so it is only as up to date as the
// client. The ordering of this slice is not guaranteed to be stable across
// updates.
func (CompromisedCredentialsEventActionType) Values() []CompromisedCredentialsEventActionType {
	return []CompromisedCredentialsEventActionType{
		"BLOCK",
		"NO_ACTION",
	}
}

type DefaultEmailOptionType string

// Enum values for DefaultEmailOptionType
const (
	DefaultEmailOptionTypeConfirm_with_link DefaultEmailOptionType = "CONFIRM_WITH_LINK"
	DefaultEmailOptionTypeConfirm_with_code DefaultEmailOptionType = "CONFIRM_WITH_CODE"
)

// Values returns all known values for DefaultEmailOptionType. Note that this can
// be expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (DefaultEmailOptionType) Values() []DefaultEmailOptionType {
	return []DefaultEmailOptionType{
		"CONFIRM_WITH_LINK",
		"CONFIRM_WITH_CODE",
	}
}

type DeliveryMediumType string

// Enum values for DeliveryMediumType
const (
	DeliveryMediumTypeSms   DeliveryMediumType = "SMS"
	DeliveryMediumTypeEmail DeliveryMediumType = "EMAIL"
)

// Values returns all known values for DeliveryMediumType. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (DeliveryMediumType) Values() []DeliveryMediumType {
	return []DeliveryMediumType{
		"SMS",
		"EMAIL",
	}
}

type DeviceRememberedStatusType string

// Enum values for DeviceRememberedStatusType
const (
	DeviceRememberedStatusTypeRemembered     DeviceRememberedStatusType = "remembered"
	DeviceRememberedStatusTypeNot_remembered DeviceRememberedStatusType = "not_remembered"
)

// Values returns all known values for DeviceRememberedStatusType. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
// The ordering of this slice is not guaranteed to be stable across updates.
func (DeviceRememberedStatusType) Values() []DeviceRememberedStatusType {
	return []DeviceRememberedStatusType{
		"remembered",
		"not_remembered",
	}
}

type DomainStatusType string

// Enum values for DomainStatusType
const (
	DomainStatusTypeCreating DomainStatusType = "CREATING"
	DomainStatusTypeDeleting DomainStatusType = "DELETING"
	DomainStatusTypeUpdating DomainStatusType = "UPDATING"
	DomainStatusTypeActive   DomainStatusType = "ACTIVE"
	DomainStatusTypeFailed   DomainStatusType = "FAILED"
)

// Values returns all known values for DomainStatusType. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (DomainStatusType) Values() []DomainStatusType {
	return []DomainStatusType{
		"CREATING",
		"DELETING",
		"UPDATING",
		"ACTIVE",
		"FAILED",
	}
}

type EmailSendingAccountType string

// Enum values for EmailSendingAccountType
const (
	EmailSendingAccountTypeCognito_default EmailSendingAccountType = "COGNITO_DEFAULT"
	EmailSendingAccountTypeDeveloper       EmailSendingAccountType = "DEVELOPER"
)

// Values returns all known values for EmailSendingAccountType. Note that this can
// be expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (EmailSendingAccountType) Values() []EmailSendingAccountType {
	return []EmailSendingAccountType{
		"COGNITO_DEFAULT",
		"DEVELOPER",
	}
}

type EventFilterType string

// Enum values for EventFilterType
const (
	EventFilterTypeSign_in         EventFilterType = "SIGN_IN"
	EventFilterTypePassword_change EventFilterType = "PASSWORD_CHANGE"
	EventFilterTypeSign_up         EventFilterType = "SIGN_UP"
)

// Values returns all known values for EventFilterType. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (EventFilterType) Values() []EventFilterType {
	return []EventFilterType{
		"SIGN_IN",
		"PASSWORD_CHANGE",
		"SIGN_UP",
	}
}

type EventResponseType string

// Enum values for EventResponseType
const (
	EventResponseTypeSuccess EventResponseType = "Success"
	EventResponseTypeFailure EventResponseType = "Failure"
)

// Values returns all known values for EventResponseType. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (EventResponseType) Values() []EventResponseType {
	return []EventResponseType{
		"Success",
		"Failure",
	}
}

type EventType string

// Enum values for EventType
const (
	EventTypeSignin         EventType = "SignIn"
	EventTypeSignup         EventType = "SignUp"
	EventTypeForgotpassword EventType = "ForgotPassword"
)

// Values returns all known values for EventType. Note that this can be expanded in
// the future, and so it is only as up to date as the client. The ordering of this
// slice is not guaranteed to be stable across updates.
func (EventType) Values() []EventType {
	return []EventType{
		"SignIn",
		"SignUp",
		"ForgotPassword",
	}
}

type ExplicitAuthFlowsType string

// Enum values for ExplicitAuthFlowsType
const (
	ExplicitAuthFlowsTypeAdmin_no_srp_auth              ExplicitAuthFlowsType = "ADMIN_NO_SRP_AUTH"
	ExplicitAuthFlowsTypeCustom_auth_flow_only          ExplicitAuthFlowsType = "CUSTOM_AUTH_FLOW_ONLY"
	ExplicitAuthFlowsTypeUser_password_auth             ExplicitAuthFlowsType = "USER_PASSWORD_AUTH"
	ExplicitAuthFlowsTypeAllow_admin_user_password_auth ExplicitAuthFlowsType = "ALLOW_ADMIN_USER_PASSWORD_AUTH"
	ExplicitAuthFlowsTypeAllow_custom_auth              ExplicitAuthFlowsType = "ALLOW_CUSTOM_AUTH"
	ExplicitAuthFlowsTypeAllow_user_password_auth       ExplicitAuthFlowsType = "ALLOW_USER_PASSWORD_AUTH"
	ExplicitAuthFlowsTypeAllow_user_srp_auth            ExplicitAuthFlowsType = "ALLOW_USER_SRP_AUTH"
	ExplicitAuthFlowsTypeAllow_refresh_token_auth       ExplicitAuthFlowsType = "ALLOW_REFRESH_TOKEN_AUTH"
)

// Values returns all known values for ExplicitAuthFlowsType. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (ExplicitAuthFlowsType) Values() []ExplicitAuthFlowsType {
	return []ExplicitAuthFlowsType{
		"ADMIN_NO_SRP_AUTH",
		"CUSTOM_AUTH_FLOW_ONLY",
		"USER_PASSWORD_AUTH",
		"ALLOW_ADMIN_USER_PASSWORD_AUTH",
		"ALLOW_CUSTOM_AUTH",
		"ALLOW_USER_PASSWORD_AUTH",
		"ALLOW_USER_SRP_AUTH",
		"ALLOW_REFRESH_TOKEN_AUTH",
	}
}

type FeedbackValueType string

// Enum values for FeedbackValueType
const (
	FeedbackValueTypeValid   FeedbackValueType = "Valid"
	FeedbackValueTypeInvalid FeedbackValueType = "Invalid"
)

// Values returns all known values for FeedbackValueType. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (FeedbackValueType) Values() []FeedbackValueType {
	return []FeedbackValueType{
		"Valid",
		"Invalid",
	}
}

type IdentityProviderTypeType string

// Enum values for IdentityProviderTypeType
const (
	IdentityProviderTypeTypeSaml            IdentityProviderTypeType = "SAML"
	IdentityProviderTypeTypeFacebook        IdentityProviderTypeType = "Facebook"
	IdentityProviderTypeTypeGoogle          IdentityProviderTypeType = "Google"
	IdentityProviderTypeTypeLoginwithamazon IdentityProviderTypeType = "LoginWithAmazon"
	IdentityProviderTypeTypeSigninwithapple IdentityProviderTypeType = "SignInWithApple"
	IdentityProviderTypeTypeOidc            IdentityProviderTypeType = "OIDC"
)

// Values returns all known values for IdentityProviderTypeType. Note that this can
// be expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (IdentityProviderTypeType) Values() []IdentityProviderTypeType {
	return []IdentityProviderTypeType{
		"SAML",
		"Facebook",
		"Google",
		"LoginWithAmazon",
		"SignInWithApple",
		"OIDC",
	}
}

type MessageActionType string

// Enum values for MessageActionType
const (
	MessageActionTypeResend   MessageActionType = "RESEND"
	MessageActionTypeSuppress MessageActionType = "SUPPRESS"
)

// Values returns all known values for MessageActionType. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (MessageActionType) Values() []MessageActionType {
	return []MessageActionType{
		"RESEND",
		"SUPPRESS",
	}
}

type OAuthFlowType string

// Enum values for OAuthFlowType
const (
	OAuthFlowTypeCode               OAuthFlowType = "code"
	OAuthFlowTypeImplicit           OAuthFlowType = "implicit"
	OAuthFlowTypeClient_credentials OAuthFlowType = "client_credentials"
)

// Values returns all known values for OAuthFlowType. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (OAuthFlowType) Values() []OAuthFlowType {
	return []OAuthFlowType{
		"code",
		"implicit",
		"client_credentials",
	}
}

type PreventUserExistenceErrorTypes string

// Enum values for PreventUserExistenceErrorTypes
const (
	PreventUserExistenceErrorTypesLegacy  PreventUserExistenceErrorTypes = "LEGACY"
	PreventUserExistenceErrorTypesEnabled PreventUserExistenceErrorTypes = "ENABLED"
)

// Values returns all known values for PreventUserExistenceErrorTypes. Note that
// this can be expanded in the future, and so it is only as up to date as the
// client. The ordering of this slice is not guaranteed to be stable across
// updates.
func (PreventUserExistenceErrorTypes) Values() []PreventUserExistenceErrorTypes {
	return []PreventUserExistenceErrorTypes{
		"LEGACY",
		"ENABLED",
	}
}

type RecoveryOptionNameType string

// Enum values for RecoveryOptionNameType
const (
	RecoveryOptionNameTypeVerified_email        RecoveryOptionNameType = "verified_email"
	RecoveryOptionNameTypeVerified_phone_number RecoveryOptionNameType = "verified_phone_number"
	RecoveryOptionNameTypeAdmin_only            RecoveryOptionNameType = "admin_only"
)

// Values returns all known values for RecoveryOptionNameType. Note that this can
// be expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (RecoveryOptionNameType) Values() []RecoveryOptionNameType {
	return []RecoveryOptionNameType{
		"verified_email",
		"verified_phone_number",
		"admin_only",
	}
}

type RiskDecisionType string

// Enum values for RiskDecisionType
const (
	RiskDecisionTypeNorisk          RiskDecisionType = "NoRisk"
	RiskDecisionTypeAccounttakeover RiskDecisionType = "AccountTakeover"
	RiskDecisionTypeBlock           RiskDecisionType = "Block"
)

// Values returns all known values for RiskDecisionType. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (RiskDecisionType) Values() []RiskDecisionType {
	return []RiskDecisionType{
		"NoRisk",
		"AccountTakeover",
		"Block",
	}
}

type RiskLevelType string

// Enum values for RiskLevelType
const (
	RiskLevelTypeLow    RiskLevelType = "Low"
	RiskLevelTypeMedium RiskLevelType = "Medium"
	RiskLevelTypeHigh   RiskLevelType = "High"
)

// Values returns all known values for RiskLevelType. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (RiskLevelType) Values() []RiskLevelType {
	return []RiskLevelType{
		"Low",
		"Medium",
		"High",
	}
}

type StatusType string

// Enum values for StatusType
const (
	StatusTypeEnabled  StatusType = "Enabled"
	StatusTypeDisabled StatusType = "Disabled"
)

// Values returns all known values for StatusType. Note that this can be expanded
// in the future, and so it is only as up to date as the client. The ordering of
// this slice is not guaranteed to be stable across updates.
func (StatusType) Values() []StatusType {
	return []StatusType{
		"Enabled",
		"Disabled",
	}
}

type TimeUnitsType string

// Enum values for TimeUnitsType
const (
	TimeUnitsTypeSeconds TimeUnitsType = "seconds"
	TimeUnitsTypeMinutes TimeUnitsType = "minutes"
	TimeUnitsTypeHours   TimeUnitsType = "hours"
	TimeUnitsTypeDays    TimeUnitsType = "days"
)

// Values returns all known values for TimeUnitsType. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (TimeUnitsType) Values() []TimeUnitsType {
	return []TimeUnitsType{
		"seconds",
		"minutes",
		"hours",
		"days",
	}
}

type UserImportJobStatusType string

// Enum values for UserImportJobStatusType
const (
	UserImportJobStatusTypeCreated    UserImportJobStatusType = "Created"
	UserImportJobStatusTypePending    UserImportJobStatusType = "Pending"
	UserImportJobStatusTypeInprogress UserImportJobStatusType = "InProgress"
	UserImportJobStatusTypeStopping   UserImportJobStatusType = "Stopping"
	UserImportJobStatusTypeExpired    UserImportJobStatusType = "Expired"
	UserImportJobStatusTypeStopped    UserImportJobStatusType = "Stopped"
	UserImportJobStatusTypeFailed     UserImportJobStatusType = "Failed"
	UserImportJobStatusTypeSucceeded  UserImportJobStatusType = "Succeeded"
)

// Values returns all known values for UserImportJobStatusType. Note that this can
// be expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (UserImportJobStatusType) Values() []UserImportJobStatusType {
	return []UserImportJobStatusType{
		"Created",
		"Pending",
		"InProgress",
		"Stopping",
		"Expired",
		"Stopped",
		"Failed",
		"Succeeded",
	}
}

type UsernameAttributeType string

// Enum values for UsernameAttributeType
const (
	UsernameAttributeTypePhone_number UsernameAttributeType = "phone_number"
	UsernameAttributeTypeEmail        UsernameAttributeType = "email"
)

// Values returns all known values for UsernameAttributeType. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (UsernameAttributeType) Values() []UsernameAttributeType {
	return []UsernameAttributeType{
		"phone_number",
		"email",
	}
}

type UserPoolMfaType string

// Enum values for UserPoolMfaType
const (
	UserPoolMfaTypeOff      UserPoolMfaType = "OFF"
	UserPoolMfaTypeOn       UserPoolMfaType = "ON"
	UserPoolMfaTypeOptional UserPoolMfaType = "OPTIONAL"
)

// Values returns all known values for UserPoolMfaType. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (UserPoolMfaType) Values() []UserPoolMfaType {
	return []UserPoolMfaType{
		"OFF",
		"ON",
		"OPTIONAL",
	}
}

type UserStatusType string

// Enum values for UserStatusType
const (
	UserStatusTypeUnconfirmed           UserStatusType = "UNCONFIRMED"
	UserStatusTypeConfirmed             UserStatusType = "CONFIRMED"
	UserStatusTypeArchived              UserStatusType = "ARCHIVED"
	UserStatusTypeCompromised           UserStatusType = "COMPROMISED"
	UserStatusTypeUnknown               UserStatusType = "UNKNOWN"
	UserStatusTypeReset_required        UserStatusType = "RESET_REQUIRED"
	UserStatusTypeForce_change_password UserStatusType = "FORCE_CHANGE_PASSWORD"
)

// Values returns all known values for UserStatusType. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (UserStatusType) Values() []UserStatusType {
	return []UserStatusType{
		"UNCONFIRMED",
		"CONFIRMED",
		"ARCHIVED",
		"COMPROMISED",
		"UNKNOWN",
		"RESET_REQUIRED",
		"FORCE_CHANGE_PASSWORD",
	}
}

type VerifiedAttributeType string

// Enum values for VerifiedAttributeType
const (
	VerifiedAttributeTypePhone_number VerifiedAttributeType = "phone_number"
	VerifiedAttributeTypeEmail        VerifiedAttributeType = "email"
)

// Values returns all known values for VerifiedAttributeType. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (VerifiedAttributeType) Values() []VerifiedAttributeType {
	return []VerifiedAttributeType{
		"phone_number",
		"email",
	}
}

type VerifySoftwareTokenResponseType string

// Enum values for VerifySoftwareTokenResponseType
const (
	VerifySoftwareTokenResponseTypeSuccess VerifySoftwareTokenResponseType = "SUCCESS"
	VerifySoftwareTokenResponseTypeError   VerifySoftwareTokenResponseType = "ERROR"
)

// Values returns all known values for VerifySoftwareTokenResponseType. Note that
// this can be expanded in the future, and so it is only as up to date as the
// client. The ordering of this slice is not guaranteed to be stable across
// updates.
func (VerifySoftwareTokenResponseType) Values() []VerifySoftwareTokenResponseType {
	return []VerifySoftwareTokenResponseType{
		"SUCCESS",
		"ERROR",
	}
}
