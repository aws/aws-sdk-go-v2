// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package cognitoidentityprovider

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/cognitoidentityprovider/types"
)

const opSetUserMFAPreference = "SetUserMFAPreference"

// SetUserMFAPreferenceRequest returns a request value for making API operation for
// Amazon Cognito Identity Provider.
//
// Set the user's multi-factor authentication (MFA) method preference, including
// which MFA factors are enabled and if any are preferred. Only one factor can
// be set as preferred. The preferred MFA factor will be used to authenticate
// a user if multiple factors are enabled. If multiple options are enabled and
// no preference is set, a challenge to choose an MFA option will be returned
// during sign in.
//
//    // Example sending a request using SetUserMFAPreferenceRequest.
//    req := client.SetUserMFAPreferenceRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/SetUserMFAPreference
func (c *Client) SetUserMFAPreferenceRequest(input *types.SetUserMFAPreferenceInput) SetUserMFAPreferenceRequest {
	op := &aws.Operation{
		Name:       opSetUserMFAPreference,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &types.SetUserMFAPreferenceInput{}
	}

	req := c.newRequest(op, input, &types.SetUserMFAPreferenceOutput{})
	return SetUserMFAPreferenceRequest{Request: req, Input: input, Copy: c.SetUserMFAPreferenceRequest}
}

// SetUserMFAPreferenceRequest is the request type for the
// SetUserMFAPreference API operation.
type SetUserMFAPreferenceRequest struct {
	*aws.Request
	Input *types.SetUserMFAPreferenceInput
	Copy  func(*types.SetUserMFAPreferenceInput) SetUserMFAPreferenceRequest
}

// Send marshals and sends the SetUserMFAPreference API request.
func (r SetUserMFAPreferenceRequest) Send(ctx context.Context) (*SetUserMFAPreferenceResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &SetUserMFAPreferenceResponse{
		SetUserMFAPreferenceOutput: r.Request.Data.(*types.SetUserMFAPreferenceOutput),
		response:                   &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// SetUserMFAPreferenceResponse is the response type for the
// SetUserMFAPreference API operation.
type SetUserMFAPreferenceResponse struct {
	*types.SetUserMFAPreferenceOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// SetUserMFAPreference request.
func (r *SetUserMFAPreferenceResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
