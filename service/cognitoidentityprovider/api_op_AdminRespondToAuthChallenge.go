// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package cognitoidentityprovider

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/cognitoidentityprovider/types"
)

const opAdminRespondToAuthChallenge = "AdminRespondToAuthChallenge"

// AdminRespondToAuthChallengeRequest returns a request value for making API operation for
// Amazon Cognito Identity Provider.
//
// Responds to an authentication challenge, as an administrator.
//
// Calling this action requires developer credentials.
//
//    // Example sending a request using AdminRespondToAuthChallengeRequest.
//    req := client.AdminRespondToAuthChallengeRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/AdminRespondToAuthChallenge
func (c *Client) AdminRespondToAuthChallengeRequest(input *types.AdminRespondToAuthChallengeInput) AdminRespondToAuthChallengeRequest {
	op := &aws.Operation{
		Name:       opAdminRespondToAuthChallenge,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &types.AdminRespondToAuthChallengeInput{}
	}

	req := c.newRequest(op, input, &types.AdminRespondToAuthChallengeOutput{})
	return AdminRespondToAuthChallengeRequest{Request: req, Input: input, Copy: c.AdminRespondToAuthChallengeRequest}
}

// AdminRespondToAuthChallengeRequest is the request type for the
// AdminRespondToAuthChallenge API operation.
type AdminRespondToAuthChallengeRequest struct {
	*aws.Request
	Input *types.AdminRespondToAuthChallengeInput
	Copy  func(*types.AdminRespondToAuthChallengeInput) AdminRespondToAuthChallengeRequest
}

// Send marshals and sends the AdminRespondToAuthChallenge API request.
func (r AdminRespondToAuthChallengeRequest) Send(ctx context.Context) (*AdminRespondToAuthChallengeResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &AdminRespondToAuthChallengeResponse{
		AdminRespondToAuthChallengeOutput: r.Request.Data.(*types.AdminRespondToAuthChallengeOutput),
		response:                          &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// AdminRespondToAuthChallengeResponse is the response type for the
// AdminRespondToAuthChallenge API operation.
type AdminRespondToAuthChallengeResponse struct {
	*types.AdminRespondToAuthChallengeOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// AdminRespondToAuthChallenge request.
func (r *AdminRespondToAuthChallengeResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
