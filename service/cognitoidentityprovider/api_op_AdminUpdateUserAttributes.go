// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package cognitoidentityprovider

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/cognitoidentityprovider/types"
)

const opAdminUpdateUserAttributes = "AdminUpdateUserAttributes"

// AdminUpdateUserAttributesRequest returns a request value for making API operation for
// Amazon Cognito Identity Provider.
//
// Updates the specified user's attributes, including developer attributes,
// as an administrator. Works on any user.
//
// For custom attributes, you must prepend the custom: prefix to the attribute
// name.
//
// In addition to updating user attributes, this API can also be used to mark
// phone and email as verified.
//
// Calling this action requires developer credentials.
//
//    // Example sending a request using AdminUpdateUserAttributesRequest.
//    req := client.AdminUpdateUserAttributesRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/AdminUpdateUserAttributes
func (c *Client) AdminUpdateUserAttributesRequest(input *types.AdminUpdateUserAttributesInput) AdminUpdateUserAttributesRequest {
	op := &aws.Operation{
		Name:       opAdminUpdateUserAttributes,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &types.AdminUpdateUserAttributesInput{}
	}

	req := c.newRequest(op, input, &types.AdminUpdateUserAttributesOutput{})
	return AdminUpdateUserAttributesRequest{Request: req, Input: input, Copy: c.AdminUpdateUserAttributesRequest}
}

// AdminUpdateUserAttributesRequest is the request type for the
// AdminUpdateUserAttributes API operation.
type AdminUpdateUserAttributesRequest struct {
	*aws.Request
	Input *types.AdminUpdateUserAttributesInput
	Copy  func(*types.AdminUpdateUserAttributesInput) AdminUpdateUserAttributesRequest
}

// Send marshals and sends the AdminUpdateUserAttributes API request.
func (r AdminUpdateUserAttributesRequest) Send(ctx context.Context) (*AdminUpdateUserAttributesResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &AdminUpdateUserAttributesResponse{
		AdminUpdateUserAttributesOutput: r.Request.Data.(*types.AdminUpdateUserAttributesOutput),
		response:                        &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// AdminUpdateUserAttributesResponse is the response type for the
// AdminUpdateUserAttributes API operation.
type AdminUpdateUserAttributesResponse struct {
	*types.AdminUpdateUserAttributesOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// AdminUpdateUserAttributes request.
func (r *AdminUpdateUserAttributesResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
