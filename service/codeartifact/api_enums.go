// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package codeartifact

type DomainStatus string

// Enum values for DomainStatus
const (
	DomainStatusActive  DomainStatus = "Active"
	DomainStatusDeleted DomainStatus = "Deleted"
)

func (enum DomainStatus) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum DomainStatus) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type ExternalConnectionStatus string

// Enum values for ExternalConnectionStatus
const (
	ExternalConnectionStatusAvailable ExternalConnectionStatus = "Available"
)

func (enum ExternalConnectionStatus) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum ExternalConnectionStatus) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type HashAlgorithm string

// Enum values for HashAlgorithm
const (
	HashAlgorithmMd5    HashAlgorithm = "MD5"
	HashAlgorithmSha1   HashAlgorithm = "SHA-1"
	HashAlgorithmSha256 HashAlgorithm = "SHA-256"
	HashAlgorithmSha512 HashAlgorithm = "SHA-512"
)

func (enum HashAlgorithm) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum HashAlgorithm) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type PackageFormat string

// Enum values for PackageFormat
const (
	PackageFormatNpm   PackageFormat = "npm"
	PackageFormatPypi  PackageFormat = "pypi"
	PackageFormatMaven PackageFormat = "maven"
)

func (enum PackageFormat) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum PackageFormat) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type PackageVersionErrorCode string

// Enum values for PackageVersionErrorCode
const (
	PackageVersionErrorCodeAlreadyExists      PackageVersionErrorCode = "ALREADY_EXISTS"
	PackageVersionErrorCodeMismatchedRevision PackageVersionErrorCode = "MISMATCHED_REVISION"
	PackageVersionErrorCodeMismatchedStatus   PackageVersionErrorCode = "MISMATCHED_STATUS"
	PackageVersionErrorCodeNotAllowed         PackageVersionErrorCode = "NOT_ALLOWED"
	PackageVersionErrorCodeNotFound           PackageVersionErrorCode = "NOT_FOUND"
	PackageVersionErrorCodeSkipped            PackageVersionErrorCode = "SKIPPED"
)

func (enum PackageVersionErrorCode) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum PackageVersionErrorCode) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type PackageVersionSortType string

// Enum values for PackageVersionSortType
const (
	PackageVersionSortTypePublishedTime PackageVersionSortType = "PUBLISHED_TIME"
)

func (enum PackageVersionSortType) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum PackageVersionSortType) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type PackageVersionStatus string

// Enum values for PackageVersionStatus
const (
	PackageVersionStatusPublished  PackageVersionStatus = "Published"
	PackageVersionStatusUnfinished PackageVersionStatus = "Unfinished"
	PackageVersionStatusUnlisted   PackageVersionStatus = "Unlisted"
	PackageVersionStatusArchived   PackageVersionStatus = "Archived"
	PackageVersionStatusDisposed   PackageVersionStatus = "Disposed"
	PackageVersionStatusDeleted    PackageVersionStatus = "Deleted"
)

func (enum PackageVersionStatus) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum PackageVersionStatus) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type ResourceType string

// Enum values for ResourceType
const (
	ResourceTypeDomain         ResourceType = "domain"
	ResourceTypeRepository     ResourceType = "repository"
	ResourceTypePackage        ResourceType = "package"
	ResourceTypePackageVersion ResourceType = "package-version"
	ResourceTypeAsset          ResourceType = "asset"
)

func (enum ResourceType) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum ResourceType) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type ValidationExceptionReason string

// Enum values for ValidationExceptionReason
const (
	ValidationExceptionReasonCannotParse           ValidationExceptionReason = "CANNOT_PARSE"
	ValidationExceptionReasonEncryptionKeyError    ValidationExceptionReason = "ENCRYPTION_KEY_ERROR"
	ValidationExceptionReasonFieldValidationFailed ValidationExceptionReason = "FIELD_VALIDATION_FAILED"
	ValidationExceptionReasonUnknownOperation      ValidationExceptionReason = "UNKNOWN_OPERATION"
	ValidationExceptionReasonOther                 ValidationExceptionReason = "OTHER"
)

func (enum ValidationExceptionReason) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum ValidationExceptionReason) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}
