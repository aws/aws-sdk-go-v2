// Code generated by smithy-go-codegen DO NOT EDIT.

package types

type DomainStatus string

// Enum values for DomainStatus
const (
	DomainStatusActive  DomainStatus = "Active"
	DomainStatusDeleted DomainStatus = "Deleted"
)

// Values returns all known values for DomainStatus. Note that this can be expanded
// in the future, and so it is only as up to date as the client. The ordering of
// this slice is not guaranteed to be stable across updates.
func (DomainStatus) Values() []DomainStatus {
	return []DomainStatus{
		"Active",
		"Deleted",
	}
}

type ExternalConnectionStatus string

// Enum values for ExternalConnectionStatus
const (
	ExternalConnectionStatusAvailable ExternalConnectionStatus = "Available"
)

// Values returns all known values for ExternalConnectionStatus. Note that this can
// be expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (ExternalConnectionStatus) Values() []ExternalConnectionStatus {
	return []ExternalConnectionStatus{
		"Available",
	}
}

type HashAlgorithm string

// Enum values for HashAlgorithm
const (
	HashAlgorithmMd5    HashAlgorithm = "MD5"
	HashAlgorithmSha1   HashAlgorithm = "SHA-1"
	HashAlgorithmSha256 HashAlgorithm = "SHA-256"
	HashAlgorithmSha512 HashAlgorithm = "SHA-512"
)

// Values returns all known values for HashAlgorithm. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (HashAlgorithm) Values() []HashAlgorithm {
	return []HashAlgorithm{
		"MD5",
		"SHA-1",
		"SHA-256",
		"SHA-512",
	}
}

type PackageFormat string

// Enum values for PackageFormat
const (
	PackageFormatNpm   PackageFormat = "npm"
	PackageFormatPypi  PackageFormat = "pypi"
	PackageFormatMaven PackageFormat = "maven"
)

// Values returns all known values for PackageFormat. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (PackageFormat) Values() []PackageFormat {
	return []PackageFormat{
		"npm",
		"pypi",
		"maven",
	}
}

type PackageVersionErrorCode string

// Enum values for PackageVersionErrorCode
const (
	PackageVersionErrorCodeAlready_exists      PackageVersionErrorCode = "ALREADY_EXISTS"
	PackageVersionErrorCodeMismatched_revision PackageVersionErrorCode = "MISMATCHED_REVISION"
	PackageVersionErrorCodeMismatched_status   PackageVersionErrorCode = "MISMATCHED_STATUS"
	PackageVersionErrorCodeNot_allowed         PackageVersionErrorCode = "NOT_ALLOWED"
	PackageVersionErrorCodeNot_found           PackageVersionErrorCode = "NOT_FOUND"
	PackageVersionErrorCodeSkipped             PackageVersionErrorCode = "SKIPPED"
)

// Values returns all known values for PackageVersionErrorCode. Note that this can
// be expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (PackageVersionErrorCode) Values() []PackageVersionErrorCode {
	return []PackageVersionErrorCode{
		"ALREADY_EXISTS",
		"MISMATCHED_REVISION",
		"MISMATCHED_STATUS",
		"NOT_ALLOWED",
		"NOT_FOUND",
		"SKIPPED",
	}
}

type PackageVersionSortType string

// Enum values for PackageVersionSortType
const (
	PackageVersionSortTypePublished_time PackageVersionSortType = "PUBLISHED_TIME"
)

// Values returns all known values for PackageVersionSortType. Note that this can
// be expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (PackageVersionSortType) Values() []PackageVersionSortType {
	return []PackageVersionSortType{
		"PUBLISHED_TIME",
	}
}

type PackageVersionStatus string

// Enum values for PackageVersionStatus
const (
	PackageVersionStatusPublished  PackageVersionStatus = "Published"
	PackageVersionStatusUnfinished PackageVersionStatus = "Unfinished"
	PackageVersionStatusUnlisted   PackageVersionStatus = "Unlisted"
	PackageVersionStatusArchived   PackageVersionStatus = "Archived"
	PackageVersionStatusDisposed   PackageVersionStatus = "Disposed"
	PackageVersionStatusDeleted    PackageVersionStatus = "Deleted"
)

// Values returns all known values for PackageVersionStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (PackageVersionStatus) Values() []PackageVersionStatus {
	return []PackageVersionStatus{
		"Published",
		"Unfinished",
		"Unlisted",
		"Archived",
		"Disposed",
		"Deleted",
	}
}

type ResourceType string

// Enum values for ResourceType
const (
	ResourceTypeDomain          ResourceType = "domain"
	ResourceTypeRepository      ResourceType = "repository"
	ResourceTypePackage         ResourceType = "package"
	ResourceTypePackage_version ResourceType = "package-version"
	ResourceTypeAsset           ResourceType = "asset"
)

// Values returns all known values for ResourceType. Note that this can be expanded
// in the future, and so it is only as up to date as the client. The ordering of
// this slice is not guaranteed to be stable across updates.
func (ResourceType) Values() []ResourceType {
	return []ResourceType{
		"domain",
		"repository",
		"package",
		"package-version",
		"asset",
	}
}

type ValidationExceptionReason string

// Enum values for ValidationExceptionReason
const (
	ValidationExceptionReasonCannot_parse            ValidationExceptionReason = "CANNOT_PARSE"
	ValidationExceptionReasonEncryption_key_error    ValidationExceptionReason = "ENCRYPTION_KEY_ERROR"
	ValidationExceptionReasonField_validation_failed ValidationExceptionReason = "FIELD_VALIDATION_FAILED"
	ValidationExceptionReasonUnknown_operation       ValidationExceptionReason = "UNKNOWN_OPERATION"
	ValidationExceptionReasonOther                   ValidationExceptionReason = "OTHER"
)

// Values returns all known values for ValidationExceptionReason. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
// The ordering of this slice is not guaranteed to be stable across updates.
func (ValidationExceptionReason) Values() []ValidationExceptionReason {
	return []ValidationExceptionReason{
		"CANNOT_PARSE",
		"ENCRYPTION_KEY_ERROR",
		"FIELD_VALIDATION_FAILED",
		"UNKNOWN_OPERATION",
		"OTHER",
	}
}
