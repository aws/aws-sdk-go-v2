// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package iam

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/iam/types"
)

const opListVirtualMFADevices = "ListVirtualMFADevices"

// ListVirtualMFADevicesRequest returns a request value for making API operation for
// AWS Identity and Access Management.
//
// Lists the virtual MFA devices defined in the AWS account by assignment status.
// If you do not specify an assignment status, the operation returns a list
// of all virtual MFA devices. Assignment status can be Assigned, Unassigned,
// or Any.
//
// You can paginate the results using the MaxItems and Marker parameters.
//
//    // Example sending a request using ListVirtualMFADevicesRequest.
//    req := client.ListVirtualMFADevicesRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/iam-2010-05-08/ListVirtualMFADevices
func (c *Client) ListVirtualMFADevicesRequest(input *types.ListVirtualMFADevicesInput) ListVirtualMFADevicesRequest {
	op := &aws.Operation{
		Name:       opListVirtualMFADevices,
		HTTPMethod: "POST",
		HTTPPath:   "/",
		Paginator: &aws.Paginator{
			InputTokens:     []string{"Marker"},
			OutputTokens:    []string{"Marker"},
			LimitToken:      "MaxItems",
			TruncationToken: "IsTruncated",
		},
	}

	if input == nil {
		input = &types.ListVirtualMFADevicesInput{}
	}

	req := c.newRequest(op, input, &types.ListVirtualMFADevicesOutput{})
	return ListVirtualMFADevicesRequest{Request: req, Input: input, Copy: c.ListVirtualMFADevicesRequest}
}

// ListVirtualMFADevicesRequest is the request type for the
// ListVirtualMFADevices API operation.
type ListVirtualMFADevicesRequest struct {
	*aws.Request
	Input *types.ListVirtualMFADevicesInput
	Copy  func(*types.ListVirtualMFADevicesInput) ListVirtualMFADevicesRequest
}

// Send marshals and sends the ListVirtualMFADevices API request.
func (r ListVirtualMFADevicesRequest) Send(ctx context.Context) (*ListVirtualMFADevicesResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &ListVirtualMFADevicesResponse{
		ListVirtualMFADevicesOutput: r.Request.Data.(*types.ListVirtualMFADevicesOutput),
		response:                    &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// NewListVirtualMFADevicesRequestPaginator returns a paginator for ListVirtualMFADevices.
// Use Next method to get the next page, and CurrentPage to get the current
// response page from the paginator. Next will return false, if there are
// no more pages, or an error was encountered.
//
// Note: This operation can generate multiple requests to a service.
//
//   // Example iterating over pages.
//   req := client.ListVirtualMFADevicesRequest(input)
//   p := iam.NewListVirtualMFADevicesRequestPaginator(req)
//
//   for p.Next(context.TODO()) {
//       page := p.CurrentPage()
//   }
//
//   if err := p.Err(); err != nil {
//       return err
//   }
//
func NewListVirtualMFADevicesPaginator(req ListVirtualMFADevicesRequest) ListVirtualMFADevicesPaginator {
	return ListVirtualMFADevicesPaginator{
		Pager: aws.Pager{
			NewRequest: func(ctx context.Context) (*aws.Request, error) {
				var inCpy *types.ListVirtualMFADevicesInput
				if req.Input != nil {
					tmp := *req.Input
					inCpy = &tmp
				}

				newReq := req.Copy(inCpy)
				newReq.SetContext(ctx)
				return newReq.Request, nil
			},
		},
	}
}

// ListVirtualMFADevicesPaginator is used to paginate the request. This can be done by
// calling Next and CurrentPage.
type ListVirtualMFADevicesPaginator struct {
	aws.Pager
}

func (p *ListVirtualMFADevicesPaginator) CurrentPage() *types.ListVirtualMFADevicesOutput {
	return p.Pager.CurrentPage().(*types.ListVirtualMFADevicesOutput)
}

// ListVirtualMFADevicesResponse is the response type for the
// ListVirtualMFADevices API operation.
type ListVirtualMFADevicesResponse struct {
	*types.ListVirtualMFADevicesOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// ListVirtualMFADevices request.
func (r *ListVirtualMFADevicesResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
