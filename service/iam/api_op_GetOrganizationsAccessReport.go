// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package iam

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/iam/types"
)

const opGetOrganizationsAccessReport = "GetOrganizationsAccessReport"

// GetOrganizationsAccessReportRequest returns a request value for making API operation for
// AWS Identity and Access Management.
//
// Retrieves the service last accessed data report for AWS Organizations that
// was previously generated using the GenerateOrganizationsAccessReport operation.
// This operation retrieves the status of your report job and the report contents.
//
// Depending on the parameters that you passed when you generated the report,
// the data returned could include different information. For details, see GenerateOrganizationsAccessReport.
//
// To call this operation, you must be signed in to the master account in your
// organization. SCPs must be enabled for your organization root. You must have
// permissions to perform this operation. For more information, see Refining
// Permissions Using Service Last Accessed Data (https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_access-advisor.html)
// in the IAM User Guide.
//
// For each service that principals in an account (root users, IAM users, or
// IAM roles) could access using SCPs, the operation returns details about the
// most recent access attempt. If there was no attempt, the service is listed
// without details about the most recent attempt to access the service. If the
// operation fails, it returns the reason that it failed.
//
// By default, the list is sorted by service namespace.
//
//    // Example sending a request using GetOrganizationsAccessReportRequest.
//    req := client.GetOrganizationsAccessReportRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/iam-2010-05-08/GetOrganizationsAccessReport
func (c *Client) GetOrganizationsAccessReportRequest(input *types.GetOrganizationsAccessReportInput) GetOrganizationsAccessReportRequest {
	op := &aws.Operation{
		Name:       opGetOrganizationsAccessReport,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &types.GetOrganizationsAccessReportInput{}
	}

	req := c.newRequest(op, input, &types.GetOrganizationsAccessReportOutput{})
	return GetOrganizationsAccessReportRequest{Request: req, Input: input, Copy: c.GetOrganizationsAccessReportRequest}
}

// GetOrganizationsAccessReportRequest is the request type for the
// GetOrganizationsAccessReport API operation.
type GetOrganizationsAccessReportRequest struct {
	*aws.Request
	Input *types.GetOrganizationsAccessReportInput
	Copy  func(*types.GetOrganizationsAccessReportInput) GetOrganizationsAccessReportRequest
}

// Send marshals and sends the GetOrganizationsAccessReport API request.
func (r GetOrganizationsAccessReportRequest) Send(ctx context.Context) (*GetOrganizationsAccessReportResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &GetOrganizationsAccessReportResponse{
		GetOrganizationsAccessReportOutput: r.Request.Data.(*types.GetOrganizationsAccessReportOutput),
		response:                           &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// GetOrganizationsAccessReportResponse is the response type for the
// GetOrganizationsAccessReport API operation.
type GetOrganizationsAccessReportResponse struct {
	*types.GetOrganizationsAccessReportOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// GetOrganizationsAccessReport request.
func (r *GetOrganizationsAccessReportResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
