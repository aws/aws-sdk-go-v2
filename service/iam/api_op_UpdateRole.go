// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package iam

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/iam/types"
)

const opUpdateRole = "UpdateRole"

// UpdateRoleRequest returns a request value for making API operation for
// AWS Identity and Access Management.
//
// Updates the description or maximum session duration setting of a role.
//
//    // Example sending a request using UpdateRoleRequest.
//    req := client.UpdateRoleRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/iam-2010-05-08/UpdateRole
func (c *Client) UpdateRoleRequest(input *types.UpdateRoleInput) UpdateRoleRequest {
	op := &aws.Operation{
		Name:       opUpdateRole,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &types.UpdateRoleInput{}
	}

	req := c.newRequest(op, input, &types.UpdateRoleOutput{})
	return UpdateRoleRequest{Request: req, Input: input, Copy: c.UpdateRoleRequest}
}

// UpdateRoleRequest is the request type for the
// UpdateRole API operation.
type UpdateRoleRequest struct {
	*aws.Request
	Input *types.UpdateRoleInput
	Copy  func(*types.UpdateRoleInput) UpdateRoleRequest
}

// Send marshals and sends the UpdateRole API request.
func (r UpdateRoleRequest) Send(ctx context.Context) (*UpdateRoleResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &UpdateRoleResponse{
		UpdateRoleOutput: r.Request.Data.(*types.UpdateRoleOutput),
		response:         &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// UpdateRoleResponse is the response type for the
// UpdateRole API operation.
type UpdateRoleResponse struct {
	*types.UpdateRoleOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// UpdateRole request.
func (r *UpdateRoleResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
