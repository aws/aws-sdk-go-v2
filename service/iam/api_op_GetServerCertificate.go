// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package iam

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/iam/types"
)

const opGetServerCertificate = "GetServerCertificate"

// GetServerCertificateRequest returns a request value for making API operation for
// AWS Identity and Access Management.
//
// Retrieves information about the specified server certificate stored in IAM.
//
// For more information about working with server certificates, see Working
// with Server Certificates (https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_server-certs.html)
// in the IAM User Guide. This topic includes a list of AWS services that can
// use the server certificates that you manage with IAM.
//
//    // Example sending a request using GetServerCertificateRequest.
//    req := client.GetServerCertificateRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/iam-2010-05-08/GetServerCertificate
func (c *Client) GetServerCertificateRequest(input *types.GetServerCertificateInput) GetServerCertificateRequest {
	op := &aws.Operation{
		Name:       opGetServerCertificate,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &types.GetServerCertificateInput{}
	}

	req := c.newRequest(op, input, &types.GetServerCertificateOutput{})
	return GetServerCertificateRequest{Request: req, Input: input, Copy: c.GetServerCertificateRequest}
}

// GetServerCertificateRequest is the request type for the
// GetServerCertificate API operation.
type GetServerCertificateRequest struct {
	*aws.Request
	Input *types.GetServerCertificateInput
	Copy  func(*types.GetServerCertificateInput) GetServerCertificateRequest
}

// Send marshals and sends the GetServerCertificate API request.
func (r GetServerCertificateRequest) Send(ctx context.Context) (*GetServerCertificateResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &GetServerCertificateResponse{
		GetServerCertificateOutput: r.Request.Data.(*types.GetServerCertificateOutput),
		response:                   &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// GetServerCertificateResponse is the response type for the
// GetServerCertificate API operation.
type GetServerCertificateResponse struct {
	*types.GetServerCertificateOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// GetServerCertificate request.
func (r *GetServerCertificateResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
