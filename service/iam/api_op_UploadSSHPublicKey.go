// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package iam

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/iam/types"
)

const opUploadSSHPublicKey = "UploadSSHPublicKey"

// UploadSSHPublicKeyRequest returns a request value for making API operation for
// AWS Identity and Access Management.
//
// Uploads an SSH public key and associates it with the specified IAM user.
//
// The SSH public key uploaded by this operation can be used only for authenticating
// the associated IAM user to an AWS CodeCommit repository. For more information
// about using SSH keys to authenticate to an AWS CodeCommit repository, see
// Set up AWS CodeCommit for SSH Connections (https://docs.aws.amazon.com/codecommit/latest/userguide/setting-up-credentials-ssh.html)
// in the AWS CodeCommit User Guide.
//
//    // Example sending a request using UploadSSHPublicKeyRequest.
//    req := client.UploadSSHPublicKeyRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/iam-2010-05-08/UploadSSHPublicKey
func (c *Client) UploadSSHPublicKeyRequest(input *types.UploadSSHPublicKeyInput) UploadSSHPublicKeyRequest {
	op := &aws.Operation{
		Name:       opUploadSSHPublicKey,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &types.UploadSSHPublicKeyInput{}
	}

	req := c.newRequest(op, input, &types.UploadSSHPublicKeyOutput{})
	return UploadSSHPublicKeyRequest{Request: req, Input: input, Copy: c.UploadSSHPublicKeyRequest}
}

// UploadSSHPublicKeyRequest is the request type for the
// UploadSSHPublicKey API operation.
type UploadSSHPublicKeyRequest struct {
	*aws.Request
	Input *types.UploadSSHPublicKeyInput
	Copy  func(*types.UploadSSHPublicKeyInput) UploadSSHPublicKeyRequest
}

// Send marshals and sends the UploadSSHPublicKey API request.
func (r UploadSSHPublicKeyRequest) Send(ctx context.Context) (*UploadSSHPublicKeyResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &UploadSSHPublicKeyResponse{
		UploadSSHPublicKeyOutput: r.Request.Data.(*types.UploadSSHPublicKeyOutput),
		response:                 &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// UploadSSHPublicKeyResponse is the response type for the
// UploadSSHPublicKey API operation.
type UploadSSHPublicKeyResponse struct {
	*types.UploadSSHPublicKeyOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// UploadSSHPublicKey request.
func (r *UploadSSHPublicKeyResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
