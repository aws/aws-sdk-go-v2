// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package iam

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/private/protocol"
	"github.com/aws/aws-sdk-go-v2/private/protocol/query"
	"github.com/aws/aws-sdk-go-v2/service/iam/types"
)

const opDetachGroupPolicy = "DetachGroupPolicy"

// DetachGroupPolicyRequest returns a request value for making API operation for
// AWS Identity and Access Management.
//
// Removes the specified managed policy from the specified IAM group.
//
// A group can also have inline policies embedded with it. To delete an inline
// policy, use the DeleteGroupPolicy API. For information about policies, see
// Managed Policies and Inline Policies (https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html)
// in the IAM User Guide.
//
//    // Example sending a request using DetachGroupPolicyRequest.
//    req := client.DetachGroupPolicyRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/iam-2010-05-08/DetachGroupPolicy
func (c *Client) DetachGroupPolicyRequest(input *types.DetachGroupPolicyInput) DetachGroupPolicyRequest {
	op := &aws.Operation{
		Name:       opDetachGroupPolicy,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &types.DetachGroupPolicyInput{}
	}

	req := c.newRequest(op, input, &types.DetachGroupPolicyOutput{})
	req.Handlers.Unmarshal.Remove(query.UnmarshalHandler)
	req.Handlers.Unmarshal.PushBackNamed(protocol.UnmarshalDiscardBodyHandler)
	return DetachGroupPolicyRequest{Request: req, Input: input, Copy: c.DetachGroupPolicyRequest}
}

// DetachGroupPolicyRequest is the request type for the
// DetachGroupPolicy API operation.
type DetachGroupPolicyRequest struct {
	*aws.Request
	Input *types.DetachGroupPolicyInput
	Copy  func(*types.DetachGroupPolicyInput) DetachGroupPolicyRequest
}

// Send marshals and sends the DetachGroupPolicy API request.
func (r DetachGroupPolicyRequest) Send(ctx context.Context) (*DetachGroupPolicyResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &DetachGroupPolicyResponse{
		DetachGroupPolicyOutput: r.Request.Data.(*types.DetachGroupPolicyOutput),
		response:                &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// DetachGroupPolicyResponse is the response type for the
// DetachGroupPolicy API operation.
type DetachGroupPolicyResponse struct {
	*types.DetachGroupPolicyOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// DetachGroupPolicy request.
func (r *DetachGroupPolicyResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
