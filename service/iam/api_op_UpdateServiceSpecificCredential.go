// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package iam

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/private/protocol"
	"github.com/aws/aws-sdk-go-v2/private/protocol/query"
	"github.com/aws/aws-sdk-go-v2/service/iam/types"
)

const opUpdateServiceSpecificCredential = "UpdateServiceSpecificCredential"

// UpdateServiceSpecificCredentialRequest returns a request value for making API operation for
// AWS Identity and Access Management.
//
// Sets the status of a service-specific credential to Active or Inactive. Service-specific
// credentials that are inactive cannot be used for authentication to the service.
// This operation can be used to disable a user's service-specific credential
// as part of a credential rotation work flow.
//
//    // Example sending a request using UpdateServiceSpecificCredentialRequest.
//    req := client.UpdateServiceSpecificCredentialRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/iam-2010-05-08/UpdateServiceSpecificCredential
func (c *Client) UpdateServiceSpecificCredentialRequest(input *types.UpdateServiceSpecificCredentialInput) UpdateServiceSpecificCredentialRequest {
	op := &aws.Operation{
		Name:       opUpdateServiceSpecificCredential,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &types.UpdateServiceSpecificCredentialInput{}
	}

	req := c.newRequest(op, input, &types.UpdateServiceSpecificCredentialOutput{})
	req.Handlers.Unmarshal.Remove(query.UnmarshalHandler)
	req.Handlers.Unmarshal.PushBackNamed(protocol.UnmarshalDiscardBodyHandler)
	return UpdateServiceSpecificCredentialRequest{Request: req, Input: input, Copy: c.UpdateServiceSpecificCredentialRequest}
}

// UpdateServiceSpecificCredentialRequest is the request type for the
// UpdateServiceSpecificCredential API operation.
type UpdateServiceSpecificCredentialRequest struct {
	*aws.Request
	Input *types.UpdateServiceSpecificCredentialInput
	Copy  func(*types.UpdateServiceSpecificCredentialInput) UpdateServiceSpecificCredentialRequest
}

// Send marshals and sends the UpdateServiceSpecificCredential API request.
func (r UpdateServiceSpecificCredentialRequest) Send(ctx context.Context) (*UpdateServiceSpecificCredentialResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &UpdateServiceSpecificCredentialResponse{
		UpdateServiceSpecificCredentialOutput: r.Request.Data.(*types.UpdateServiceSpecificCredentialOutput),
		response:                              &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// UpdateServiceSpecificCredentialResponse is the response type for the
// UpdateServiceSpecificCredential API operation.
type UpdateServiceSpecificCredentialResponse struct {
	*types.UpdateServiceSpecificCredentialOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// UpdateServiceSpecificCredential request.
func (r *UpdateServiceSpecificCredentialResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
