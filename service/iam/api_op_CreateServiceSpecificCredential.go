// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package iam

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/iam/types"
)

const opCreateServiceSpecificCredential = "CreateServiceSpecificCredential"

// CreateServiceSpecificCredentialRequest returns a request value for making API operation for
// AWS Identity and Access Management.
//
// Generates a set of credentials consisting of a user name and password that
// can be used to access the service specified in the request. These credentials
// are generated by IAM, and can be used only for the specified service.
//
// You can have a maximum of two sets of service-specific credentials for each
// supported service per user.
//
// The only supported service at this time is AWS CodeCommit.
//
// You can reset the password to a new service-generated value by calling ResetServiceSpecificCredential.
//
// For more information about service-specific credentials, see Using IAM with
// AWS CodeCommit: Git Credentials, SSH Keys, and AWS Access Keys (https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_ssh-keys.html)
// in the IAM User Guide.
//
//    // Example sending a request using CreateServiceSpecificCredentialRequest.
//    req := client.CreateServiceSpecificCredentialRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/iam-2010-05-08/CreateServiceSpecificCredential
func (c *Client) CreateServiceSpecificCredentialRequest(input *types.CreateServiceSpecificCredentialInput) CreateServiceSpecificCredentialRequest {
	op := &aws.Operation{
		Name:       opCreateServiceSpecificCredential,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &types.CreateServiceSpecificCredentialInput{}
	}

	req := c.newRequest(op, input, &types.CreateServiceSpecificCredentialOutput{})
	return CreateServiceSpecificCredentialRequest{Request: req, Input: input, Copy: c.CreateServiceSpecificCredentialRequest}
}

// CreateServiceSpecificCredentialRequest is the request type for the
// CreateServiceSpecificCredential API operation.
type CreateServiceSpecificCredentialRequest struct {
	*aws.Request
	Input *types.CreateServiceSpecificCredentialInput
	Copy  func(*types.CreateServiceSpecificCredentialInput) CreateServiceSpecificCredentialRequest
}

// Send marshals and sends the CreateServiceSpecificCredential API request.
func (r CreateServiceSpecificCredentialRequest) Send(ctx context.Context) (*CreateServiceSpecificCredentialResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &CreateServiceSpecificCredentialResponse{
		CreateServiceSpecificCredentialOutput: r.Request.Data.(*types.CreateServiceSpecificCredentialOutput),
		response:                              &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// CreateServiceSpecificCredentialResponse is the response type for the
// CreateServiceSpecificCredential API operation.
type CreateServiceSpecificCredentialResponse struct {
	*types.CreateServiceSpecificCredentialOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// CreateServiceSpecificCredential request.
func (r *CreateServiceSpecificCredentialResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
