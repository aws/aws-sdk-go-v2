// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package iam

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/private/protocol"
	"github.com/aws/aws-sdk-go-v2/private/protocol/query"
	"github.com/aws/aws-sdk-go-v2/service/iam/types"
)

const opResyncMFADevice = "ResyncMFADevice"

// ResyncMFADeviceRequest returns a request value for making API operation for
// AWS Identity and Access Management.
//
// Synchronizes the specified MFA device with its IAM resource object on the
// AWS servers.
//
// For more information about creating and working with virtual MFA devices,
// go to Using a Virtual MFA Device (https://docs.aws.amazon.com/IAM/latest/UserGuide/Using_VirtualMFA.html)
// in the IAM User Guide.
//
//    // Example sending a request using ResyncMFADeviceRequest.
//    req := client.ResyncMFADeviceRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/iam-2010-05-08/ResyncMFADevice
func (c *Client) ResyncMFADeviceRequest(input *types.ResyncMFADeviceInput) ResyncMFADeviceRequest {
	op := &aws.Operation{
		Name:       opResyncMFADevice,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &types.ResyncMFADeviceInput{}
	}

	req := c.newRequest(op, input, &types.ResyncMFADeviceOutput{})
	req.Handlers.Unmarshal.Remove(query.UnmarshalHandler)
	req.Handlers.Unmarshal.PushBackNamed(protocol.UnmarshalDiscardBodyHandler)
	return ResyncMFADeviceRequest{Request: req, Input: input, Copy: c.ResyncMFADeviceRequest}
}

// ResyncMFADeviceRequest is the request type for the
// ResyncMFADevice API operation.
type ResyncMFADeviceRequest struct {
	*aws.Request
	Input *types.ResyncMFADeviceInput
	Copy  func(*types.ResyncMFADeviceInput) ResyncMFADeviceRequest
}

// Send marshals and sends the ResyncMFADevice API request.
func (r ResyncMFADeviceRequest) Send(ctx context.Context) (*ResyncMFADeviceResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &ResyncMFADeviceResponse{
		ResyncMFADeviceOutput: r.Request.Data.(*types.ResyncMFADeviceOutput),
		response:              &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// ResyncMFADeviceResponse is the response type for the
// ResyncMFADevice API operation.
type ResyncMFADeviceResponse struct {
	*types.ResyncMFADeviceOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// ResyncMFADevice request.
func (r *ResyncMFADeviceResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
