// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package iam

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/private/protocol"
	"github.com/aws/aws-sdk-go-v2/private/protocol/query"
	"github.com/aws/aws-sdk-go-v2/service/iam/types"
)

const opUpdateAssumeRolePolicy = "UpdateAssumeRolePolicy"

// UpdateAssumeRolePolicyRequest returns a request value for making API operation for
// AWS Identity and Access Management.
//
// Updates the policy that grants an IAM entity permission to assume a role.
// This is typically referred to as the "role trust policy". For more information
// about roles, go to Using Roles to Delegate Permissions and Federate Identities
// (https://docs.aws.amazon.com/IAM/latest/UserGuide/roles-toplevel.html).
//
//    // Example sending a request using UpdateAssumeRolePolicyRequest.
//    req := client.UpdateAssumeRolePolicyRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/iam-2010-05-08/UpdateAssumeRolePolicy
func (c *Client) UpdateAssumeRolePolicyRequest(input *types.UpdateAssumeRolePolicyInput) UpdateAssumeRolePolicyRequest {
	op := &aws.Operation{
		Name:       opUpdateAssumeRolePolicy,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &types.UpdateAssumeRolePolicyInput{}
	}

	req := c.newRequest(op, input, &types.UpdateAssumeRolePolicyOutput{})
	req.Handlers.Unmarshal.Remove(query.UnmarshalHandler)
	req.Handlers.Unmarshal.PushBackNamed(protocol.UnmarshalDiscardBodyHandler)
	return UpdateAssumeRolePolicyRequest{Request: req, Input: input, Copy: c.UpdateAssumeRolePolicyRequest}
}

// UpdateAssumeRolePolicyRequest is the request type for the
// UpdateAssumeRolePolicy API operation.
type UpdateAssumeRolePolicyRequest struct {
	*aws.Request
	Input *types.UpdateAssumeRolePolicyInput
	Copy  func(*types.UpdateAssumeRolePolicyInput) UpdateAssumeRolePolicyRequest
}

// Send marshals and sends the UpdateAssumeRolePolicy API request.
func (r UpdateAssumeRolePolicyRequest) Send(ctx context.Context) (*UpdateAssumeRolePolicyResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &UpdateAssumeRolePolicyResponse{
		UpdateAssumeRolePolicyOutput: r.Request.Data.(*types.UpdateAssumeRolePolicyOutput),
		response:                     &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// UpdateAssumeRolePolicyResponse is the response type for the
// UpdateAssumeRolePolicy API operation.
type UpdateAssumeRolePolicyResponse struct {
	*types.UpdateAssumeRolePolicyOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// UpdateAssumeRolePolicy request.
func (r *UpdateAssumeRolePolicyResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
