// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package iam

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/iam/types"
)

const opCreateVirtualMFADevice = "CreateVirtualMFADevice"

// CreateVirtualMFADeviceRequest returns a request value for making API operation for
// AWS Identity and Access Management.
//
// Creates a new virtual MFA device for the AWS account. After creating the
// virtual MFA, use EnableMFADevice to attach the MFA device to an IAM user.
// For more information about creating and working with virtual MFA devices,
// go to Using a Virtual MFA Device (https://docs.aws.amazon.com/IAM/latest/UserGuide/Using_VirtualMFA.html)
// in the IAM User Guide.
//
// For information about limits on the number of MFA devices you can create,
// see Limitations on Entities (https://docs.aws.amazon.com/IAM/latest/UserGuide/LimitationsOnEntities.html)
// in the IAM User Guide.
//
// The seed information contained in the QR code and the Base32 string should
// be treated like any other secret access information. In other words, protect
// the seed information as you would your AWS access keys or your passwords.
// After you provision your virtual device, you should ensure that the information
// is destroyed following secure procedures.
//
//    // Example sending a request using CreateVirtualMFADeviceRequest.
//    req := client.CreateVirtualMFADeviceRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/iam-2010-05-08/CreateVirtualMFADevice
func (c *Client) CreateVirtualMFADeviceRequest(input *types.CreateVirtualMFADeviceInput) CreateVirtualMFADeviceRequest {
	op := &aws.Operation{
		Name:       opCreateVirtualMFADevice,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &types.CreateVirtualMFADeviceInput{}
	}

	req := c.newRequest(op, input, &types.CreateVirtualMFADeviceOutput{})
	return CreateVirtualMFADeviceRequest{Request: req, Input: input, Copy: c.CreateVirtualMFADeviceRequest}
}

// CreateVirtualMFADeviceRequest is the request type for the
// CreateVirtualMFADevice API operation.
type CreateVirtualMFADeviceRequest struct {
	*aws.Request
	Input *types.CreateVirtualMFADeviceInput
	Copy  func(*types.CreateVirtualMFADeviceInput) CreateVirtualMFADeviceRequest
}

// Send marshals and sends the CreateVirtualMFADevice API request.
func (r CreateVirtualMFADeviceRequest) Send(ctx context.Context) (*CreateVirtualMFADeviceResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &CreateVirtualMFADeviceResponse{
		CreateVirtualMFADeviceOutput: r.Request.Data.(*types.CreateVirtualMFADeviceOutput),
		response:                     &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// CreateVirtualMFADeviceResponse is the response type for the
// CreateVirtualMFADevice API operation.
type CreateVirtualMFADeviceResponse struct {
	*types.CreateVirtualMFADeviceOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// CreateVirtualMFADevice request.
func (r *CreateVirtualMFADeviceResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
