// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package iam

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/private/protocol"
	"github.com/aws/aws-sdk-go-v2/private/protocol/query"
	"github.com/aws/aws-sdk-go-v2/service/iam/types"
)

const opEnableMFADevice = "EnableMFADevice"

// EnableMFADeviceRequest returns a request value for making API operation for
// AWS Identity and Access Management.
//
// Enables the specified MFA device and associates it with the specified IAM
// user. When enabled, the MFA device is required for every subsequent login
// by the IAM user associated with the device.
//
//    // Example sending a request using EnableMFADeviceRequest.
//    req := client.EnableMFADeviceRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/iam-2010-05-08/EnableMFADevice
func (c *Client) EnableMFADeviceRequest(input *types.EnableMFADeviceInput) EnableMFADeviceRequest {
	op := &aws.Operation{
		Name:       opEnableMFADevice,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &types.EnableMFADeviceInput{}
	}

	req := c.newRequest(op, input, &types.EnableMFADeviceOutput{})
	req.Handlers.Unmarshal.Remove(query.UnmarshalHandler)
	req.Handlers.Unmarshal.PushBackNamed(protocol.UnmarshalDiscardBodyHandler)
	return EnableMFADeviceRequest{Request: req, Input: input, Copy: c.EnableMFADeviceRequest}
}

// EnableMFADeviceRequest is the request type for the
// EnableMFADevice API operation.
type EnableMFADeviceRequest struct {
	*aws.Request
	Input *types.EnableMFADeviceInput
	Copy  func(*types.EnableMFADeviceInput) EnableMFADeviceRequest
}

// Send marshals and sends the EnableMFADevice API request.
func (r EnableMFADeviceRequest) Send(ctx context.Context) (*EnableMFADeviceResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &EnableMFADeviceResponse{
		EnableMFADeviceOutput: r.Request.Data.(*types.EnableMFADeviceOutput),
		response:              &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// EnableMFADeviceResponse is the response type for the
// EnableMFADevice API operation.
type EnableMFADeviceResponse struct {
	*types.EnableMFADeviceOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// EnableMFADevice request.
func (r *EnableMFADeviceResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
