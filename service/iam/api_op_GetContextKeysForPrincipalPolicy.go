// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package iam

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/iam/types"
)

const opGetContextKeysForPrincipalPolicy = "GetContextKeysForPrincipalPolicy"

// GetContextKeysForPrincipalPolicyRequest returns a request value for making API operation for
// AWS Identity and Access Management.
//
// Gets a list of all of the context keys referenced in all the IAM policies
// that are attached to the specified IAM entity. The entity can be an IAM user,
// group, or role. If you specify a user, then the request also includes all
// of the policies attached to groups that the user is a member of.
//
// You can optionally include a list of one or more additional policies, specified
// as strings. If you want to include only a list of policies by string, use
// GetContextKeysForCustomPolicy instead.
//
// Note: This API discloses information about the permissions granted to other
// users. If you do not want users to see other user's permissions, then consider
// allowing them to use GetContextKeysForCustomPolicy instead.
//
// Context keys are variables maintained by AWS and its services that provide
// details about the context of an API query request. Context keys can be evaluated
// by testing against a value in an IAM policy. Use GetContextKeysForPrincipalPolicy
// to understand what key names and values you must supply when you call SimulatePrincipalPolicy.
//
//    // Example sending a request using GetContextKeysForPrincipalPolicyRequest.
//    req := client.GetContextKeysForPrincipalPolicyRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/iam-2010-05-08/GetContextKeysForPrincipalPolicy
func (c *Client) GetContextKeysForPrincipalPolicyRequest(input *types.GetContextKeysForPrincipalPolicyInput) GetContextKeysForPrincipalPolicyRequest {
	op := &aws.Operation{
		Name:       opGetContextKeysForPrincipalPolicy,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &types.GetContextKeysForPrincipalPolicyInput{}
	}

	req := c.newRequest(op, input, &types.GetContextKeysForPrincipalPolicyOutput{})
	return GetContextKeysForPrincipalPolicyRequest{Request: req, Input: input, Copy: c.GetContextKeysForPrincipalPolicyRequest}
}

// GetContextKeysForPrincipalPolicyRequest is the request type for the
// GetContextKeysForPrincipalPolicy API operation.
type GetContextKeysForPrincipalPolicyRequest struct {
	*aws.Request
	Input *types.GetContextKeysForPrincipalPolicyInput
	Copy  func(*types.GetContextKeysForPrincipalPolicyInput) GetContextKeysForPrincipalPolicyRequest
}

// Send marshals and sends the GetContextKeysForPrincipalPolicy API request.
func (r GetContextKeysForPrincipalPolicyRequest) Send(ctx context.Context) (*GetContextKeysForPrincipalPolicyResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &GetContextKeysForPrincipalPolicyResponse{
		GetContextKeysForPrincipalPolicyOutput: r.Request.Data.(*types.GetContextKeysForPrincipalPolicyOutput),
		response:                               &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// GetContextKeysForPrincipalPolicyResponse is the response type for the
// GetContextKeysForPrincipalPolicy API operation.
type GetContextKeysForPrincipalPolicyResponse struct {
	*types.GetContextKeysForPrincipalPolicyOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// GetContextKeysForPrincipalPolicy request.
func (r *GetContextKeysForPrincipalPolicyResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
