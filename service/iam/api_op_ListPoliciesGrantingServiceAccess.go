// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package iam

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/iam/types"
)

const opListPoliciesGrantingServiceAccess = "ListPoliciesGrantingServiceAccess"

// ListPoliciesGrantingServiceAccessRequest returns a request value for making API operation for
// AWS Identity and Access Management.
//
// Retrieves a list of policies that the IAM identity (user, group, or role)
// can use to access each specified service.
//
// This operation does not use other policy types when determining whether a
// resource could access a service. These other policy types include resource-based
// policies, access control lists, AWS Organizations policies, IAM permissions
// boundaries, and AWS STS assume role policies. It only applies permissions
// policy logic. For more about the evaluation of policy types, see Evaluating
// Policies (https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_evaluation-logic.html#policy-eval-basics)
// in the IAM User Guide.
//
// The list of policies returned by the operation depends on the ARN of the
// identity that you provide.
//
//    * User – The list of policies includes the managed and inline policies
//    that are attached to the user directly. The list also includes any additional
//    managed and inline policies that are attached to the group to which the
//    user belongs.
//
//    * Group – The list of policies includes only the managed and inline
//    policies that are attached to the group directly. Policies that are attached
//    to the group’s user are not included.
//
//    * Role – The list of policies includes only the managed and inline policies
//    that are attached to the role.
//
// For each managed policy, this operation returns the ARN and policy name.
// For each inline policy, it returns the policy name and the entity to which
// it is attached. Inline policies do not have an ARN. For more information
// about these policy types, see Managed Policies and Inline Policies (https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_managed-vs-inline.html)
// in the IAM User Guide.
//
// Policies that are attached to users and roles as permissions boundaries are
// not returned. To view which managed policy is currently used to set the permissions
// boundary for a user or role, use the GetUser or GetRole operations.
//
//    // Example sending a request using ListPoliciesGrantingServiceAccessRequest.
//    req := client.ListPoliciesGrantingServiceAccessRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/iam-2010-05-08/ListPoliciesGrantingServiceAccess
func (c *Client) ListPoliciesGrantingServiceAccessRequest(input *types.ListPoliciesGrantingServiceAccessInput) ListPoliciesGrantingServiceAccessRequest {
	op := &aws.Operation{
		Name:       opListPoliciesGrantingServiceAccess,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &types.ListPoliciesGrantingServiceAccessInput{}
	}

	req := c.newRequest(op, input, &types.ListPoliciesGrantingServiceAccessOutput{})
	return ListPoliciesGrantingServiceAccessRequest{Request: req, Input: input, Copy: c.ListPoliciesGrantingServiceAccessRequest}
}

// ListPoliciesGrantingServiceAccessRequest is the request type for the
// ListPoliciesGrantingServiceAccess API operation.
type ListPoliciesGrantingServiceAccessRequest struct {
	*aws.Request
	Input *types.ListPoliciesGrantingServiceAccessInput
	Copy  func(*types.ListPoliciesGrantingServiceAccessInput) ListPoliciesGrantingServiceAccessRequest
}

// Send marshals and sends the ListPoliciesGrantingServiceAccess API request.
func (r ListPoliciesGrantingServiceAccessRequest) Send(ctx context.Context) (*ListPoliciesGrantingServiceAccessResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &ListPoliciesGrantingServiceAccessResponse{
		ListPoliciesGrantingServiceAccessOutput: r.Request.Data.(*types.ListPoliciesGrantingServiceAccessOutput),
		response:                                &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// ListPoliciesGrantingServiceAccessResponse is the response type for the
// ListPoliciesGrantingServiceAccess API operation.
type ListPoliciesGrantingServiceAccessResponse struct {
	*types.ListPoliciesGrantingServiceAccessOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// ListPoliciesGrantingServiceAccess request.
func (r *ListPoliciesGrantingServiceAccessResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
