// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package iam

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/iam/types"
)

const opGetRolePolicy = "GetRolePolicy"

// GetRolePolicyRequest returns a request value for making API operation for
// AWS Identity and Access Management.
//
// Retrieves the specified inline policy document that is embedded with the
// specified IAM role.
//
// Policies returned by this API are URL-encoded compliant with RFC 3986 (https://tools.ietf.org/html/rfc3986).
// You can use a URL decoding method to convert the policy back to plain JSON
// text. For example, if you use Java, you can use the decode method of the
// java.net.URLDecoder utility class in the Java SDK. Other languages and SDKs
// provide similar functionality.
//
// An IAM role can also have managed policies attached to it. To retrieve a
// managed policy document that is attached to a role, use GetPolicy to determine
// the policy's default version, then use GetPolicyVersion to retrieve the policy
// document.
//
// For more information about policies, see Managed Policies and Inline Policies
// (https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html)
// in the IAM User Guide.
//
// For more information about roles, see Using Roles to Delegate Permissions
// and Federate Identities (https://docs.aws.amazon.com/IAM/latest/UserGuide/roles-toplevel.html).
//
//    // Example sending a request using GetRolePolicyRequest.
//    req := client.GetRolePolicyRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/iam-2010-05-08/GetRolePolicy
func (c *Client) GetRolePolicyRequest(input *types.GetRolePolicyInput) GetRolePolicyRequest {
	op := &aws.Operation{
		Name:       opGetRolePolicy,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &types.GetRolePolicyInput{}
	}

	req := c.newRequest(op, input, &types.GetRolePolicyOutput{})
	return GetRolePolicyRequest{Request: req, Input: input, Copy: c.GetRolePolicyRequest}
}

// GetRolePolicyRequest is the request type for the
// GetRolePolicy API operation.
type GetRolePolicyRequest struct {
	*aws.Request
	Input *types.GetRolePolicyInput
	Copy  func(*types.GetRolePolicyInput) GetRolePolicyRequest
}

// Send marshals and sends the GetRolePolicy API request.
func (r GetRolePolicyRequest) Send(ctx context.Context) (*GetRolePolicyResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &GetRolePolicyResponse{
		GetRolePolicyOutput: r.Request.Data.(*types.GetRolePolicyOutput),
		response:            &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// GetRolePolicyResponse is the response type for the
// GetRolePolicy API operation.
type GetRolePolicyResponse struct {
	*types.GetRolePolicyOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// GetRolePolicy request.
func (r *GetRolePolicyResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
