// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package quicksight

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/quicksight/types"
)

const opUpdateDashboardPublishedVersion = "UpdateDashboardPublishedVersion"

// UpdateDashboardPublishedVersionRequest returns a request value for making API operation for
// Amazon QuickSight.
//
// Updates the published version of a dashboard.
//
// CLI syntax:
//
// aws quicksight update-dashboard-published-version --aws-account-id 111122223333
// --dashboard-id dashboard-w1 ---version-number 2
//
//    // Example sending a request using UpdateDashboardPublishedVersionRequest.
//    req := client.UpdateDashboardPublishedVersionRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/quicksight-2018-04-01/UpdateDashboardPublishedVersion
func (c *Client) UpdateDashboardPublishedVersionRequest(input *types.UpdateDashboardPublishedVersionInput) UpdateDashboardPublishedVersionRequest {
	op := &aws.Operation{
		Name:       opUpdateDashboardPublishedVersion,
		HTTPMethod: "PUT",
		HTTPPath:   "/accounts/{AwsAccountId}/dashboards/{DashboardId}/versions/{VersionNumber}",
	}

	if input == nil {
		input = &types.UpdateDashboardPublishedVersionInput{}
	}

	req := c.newRequest(op, input, &types.UpdateDashboardPublishedVersionOutput{})
	return UpdateDashboardPublishedVersionRequest{Request: req, Input: input, Copy: c.UpdateDashboardPublishedVersionRequest}
}

// UpdateDashboardPublishedVersionRequest is the request type for the
// UpdateDashboardPublishedVersion API operation.
type UpdateDashboardPublishedVersionRequest struct {
	*aws.Request
	Input *types.UpdateDashboardPublishedVersionInput
	Copy  func(*types.UpdateDashboardPublishedVersionInput) UpdateDashboardPublishedVersionRequest
}

// Send marshals and sends the UpdateDashboardPublishedVersion API request.
func (r UpdateDashboardPublishedVersionRequest) Send(ctx context.Context) (*UpdateDashboardPublishedVersionResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &UpdateDashboardPublishedVersionResponse{
		UpdateDashboardPublishedVersionOutput: r.Request.Data.(*types.UpdateDashboardPublishedVersionOutput),
		response:                              &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// UpdateDashboardPublishedVersionResponse is the response type for the
// UpdateDashboardPublishedVersion API operation.
type UpdateDashboardPublishedVersionResponse struct {
	*types.UpdateDashboardPublishedVersionOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// UpdateDashboardPublishedVersion request.
func (r *UpdateDashboardPublishedVersionResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
