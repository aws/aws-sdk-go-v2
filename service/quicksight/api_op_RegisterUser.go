// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package quicksight

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/quicksight/types"
)

const opRegisterUser = "RegisterUser"

// RegisterUserRequest returns a request value for making API operation for
// Amazon QuickSight.
//
// Creates an Amazon QuickSight user, whose identity is associated with the
// AWS Identity and Access Management (IAM) identity or role specified in the
// request.
//
// CLI Sample:
//
// aws quicksight register-user -\-aws-account-id=111122223333 -\-namespace=default
// -\-email=pat@example.com -\-identity-type=IAM -\-user-role=AUTHOR -\-iam-arn=arn:aws:iam::111122223333:user/Pat
//
//    // Example sending a request using RegisterUserRequest.
//    req := client.RegisterUserRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/quicksight-2018-04-01/RegisterUser
func (c *Client) RegisterUserRequest(input *types.RegisterUserInput) RegisterUserRequest {
	op := &aws.Operation{
		Name:       opRegisterUser,
		HTTPMethod: "POST",
		HTTPPath:   "/accounts/{AwsAccountId}/namespaces/{Namespace}/users",
	}

	if input == nil {
		input = &types.RegisterUserInput{}
	}

	req := c.newRequest(op, input, &types.RegisterUserOutput{})
	return RegisterUserRequest{Request: req, Input: input, Copy: c.RegisterUserRequest}
}

// RegisterUserRequest is the request type for the
// RegisterUser API operation.
type RegisterUserRequest struct {
	*aws.Request
	Input *types.RegisterUserInput
	Copy  func(*types.RegisterUserInput) RegisterUserRequest
}

// Send marshals and sends the RegisterUser API request.
func (r RegisterUserRequest) Send(ctx context.Context) (*RegisterUserResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &RegisterUserResponse{
		RegisterUserOutput: r.Request.Data.(*types.RegisterUserOutput),
		response:           &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// RegisterUserResponse is the response type for the
// RegisterUser API operation.
type RegisterUserResponse struct {
	*types.RegisterUserOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// RegisterUser request.
func (r *RegisterUserResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
