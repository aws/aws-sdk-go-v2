// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package quicksight

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/quicksight/types"
)

const opListIAMPolicyAssignmentsForUser = "ListIAMPolicyAssignmentsForUser"

// ListIAMPolicyAssignmentsForUserRequest returns a request value for making API operation for
// Amazon QuickSight.
//
// Lists all the assignments and the ARNs for the associated IAM policies assigned
// to the specified user and the group or groups that the user belongs to.
//
// CLI syntax:
//
// aws quicksight list-iam-policy-assignments-for-user --aws-account-id=111122223333
// --user-name=user5 --namespace=default --max-result=6 --region=us-east-1
//
//    // Example sending a request using ListIAMPolicyAssignmentsForUserRequest.
//    req := client.ListIAMPolicyAssignmentsForUserRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/quicksight-2018-04-01/ListIAMPolicyAssignmentsForUser
func (c *Client) ListIAMPolicyAssignmentsForUserRequest(input *types.ListIAMPolicyAssignmentsForUserInput) ListIAMPolicyAssignmentsForUserRequest {
	op := &aws.Operation{
		Name:       opListIAMPolicyAssignmentsForUser,
		HTTPMethod: "GET",
		HTTPPath:   "/accounts/{AwsAccountId}/namespaces/{Namespace}/users/{UserName}/iam-policy-assignments",
	}

	if input == nil {
		input = &types.ListIAMPolicyAssignmentsForUserInput{}
	}

	req := c.newRequest(op, input, &types.ListIAMPolicyAssignmentsForUserOutput{})
	return ListIAMPolicyAssignmentsForUserRequest{Request: req, Input: input, Copy: c.ListIAMPolicyAssignmentsForUserRequest}
}

// ListIAMPolicyAssignmentsForUserRequest is the request type for the
// ListIAMPolicyAssignmentsForUser API operation.
type ListIAMPolicyAssignmentsForUserRequest struct {
	*aws.Request
	Input *types.ListIAMPolicyAssignmentsForUserInput
	Copy  func(*types.ListIAMPolicyAssignmentsForUserInput) ListIAMPolicyAssignmentsForUserRequest
}

// Send marshals and sends the ListIAMPolicyAssignmentsForUser API request.
func (r ListIAMPolicyAssignmentsForUserRequest) Send(ctx context.Context) (*ListIAMPolicyAssignmentsForUserResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &ListIAMPolicyAssignmentsForUserResponse{
		ListIAMPolicyAssignmentsForUserOutput: r.Request.Data.(*types.ListIAMPolicyAssignmentsForUserOutput),
		response:                              &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// ListIAMPolicyAssignmentsForUserResponse is the response type for the
// ListIAMPolicyAssignmentsForUser API operation.
type ListIAMPolicyAssignmentsForUserResponse struct {
	*types.ListIAMPolicyAssignmentsForUserOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// ListIAMPolicyAssignmentsForUser request.
func (r *ListIAMPolicyAssignmentsForUserResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
