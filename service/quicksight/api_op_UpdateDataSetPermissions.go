// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package quicksight

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/quicksight/types"
)

const opUpdateDataSetPermissions = "UpdateDataSetPermissions"

// UpdateDataSetPermissionsRequest returns a request value for making API operation for
// Amazon QuickSight.
//
// Updates the permissions on a dataset.
//
// The permissions resource is arn:aws:quicksight:region:aws-account-id:dataset/data-set-id
//
// CLI syntax:
//
// aws quicksight update-data-set-permissions \
//
// --aws-account-id=111122223333 \
//
// --data-set-id=unique-data-set-id \
//
// --grant-permissions='[{"Principal":"arn:aws:quicksight:us-east-1:111122223333:user/default/user1","Actions":["quicksight:DescribeDataSet","quicksight:DescribeDataSetPermissions","quicksight:PassDataSet","quicksight:ListIngestions","quicksight:DescribeIngestion"]}]'
// \
//
// --revoke-permissions='[{"Principal":"arn:aws:quicksight:us-east-1:111122223333:user/default/user2","Actions":["quicksight:UpdateDataSet","quicksight:DeleteDataSet","quicksight:UpdateDataSetPermissions","quicksight:CreateIngestion","quicksight:CancelIngestion"]}]'
//
//    // Example sending a request using UpdateDataSetPermissionsRequest.
//    req := client.UpdateDataSetPermissionsRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/quicksight-2018-04-01/UpdateDataSetPermissions
func (c *Client) UpdateDataSetPermissionsRequest(input *types.UpdateDataSetPermissionsInput) UpdateDataSetPermissionsRequest {
	op := &aws.Operation{
		Name:       opUpdateDataSetPermissions,
		HTTPMethod: "POST",
		HTTPPath:   "/accounts/{AwsAccountId}/data-sets/{DataSetId}/permissions",
	}

	if input == nil {
		input = &types.UpdateDataSetPermissionsInput{}
	}

	req := c.newRequest(op, input, &types.UpdateDataSetPermissionsOutput{})
	return UpdateDataSetPermissionsRequest{Request: req, Input: input, Copy: c.UpdateDataSetPermissionsRequest}
}

// UpdateDataSetPermissionsRequest is the request type for the
// UpdateDataSetPermissions API operation.
type UpdateDataSetPermissionsRequest struct {
	*aws.Request
	Input *types.UpdateDataSetPermissionsInput
	Copy  func(*types.UpdateDataSetPermissionsInput) UpdateDataSetPermissionsRequest
}

// Send marshals and sends the UpdateDataSetPermissions API request.
func (r UpdateDataSetPermissionsRequest) Send(ctx context.Context) (*UpdateDataSetPermissionsResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &UpdateDataSetPermissionsResponse{
		UpdateDataSetPermissionsOutput: r.Request.Data.(*types.UpdateDataSetPermissionsOutput),
		response:                       &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// UpdateDataSetPermissionsResponse is the response type for the
// UpdateDataSetPermissions API operation.
type UpdateDataSetPermissionsResponse struct {
	*types.UpdateDataSetPermissionsOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// UpdateDataSetPermissions request.
func (r *UpdateDataSetPermissionsResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
