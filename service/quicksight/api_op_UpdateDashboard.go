// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package quicksight

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/quicksight/types"
)

const opUpdateDashboard = "UpdateDashboard"

// UpdateDashboardRequest returns a request value for making API operation for
// Amazon QuickSight.
//
// Updates a dashboard in the AWS account.
//
// CLI syntax:
//
// aws quicksight update-dashboard --aws-account-id 111122223333 --dashboard-id
// 123123123 --dashboard-name "test-update102" --source-entity SourceTemplate={Arn=arn:aws:quicksight:us-west-2:111122223333:template/sales-report-template2}
// --data-set-references DataSetPlaceholder=SalesDataSet,DataSetArn=arn:aws:quicksight:us-west-2:111122223333:dataset/0e251aef-9ebf-46e1-b852-eb4fa33c1d3a
//
// aws quicksight update-dashboard --cli-input-json file://update-dashboard.json
//
//    // Example sending a request using UpdateDashboardRequest.
//    req := client.UpdateDashboardRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/quicksight-2018-04-01/UpdateDashboard
func (c *Client) UpdateDashboardRequest(input *types.UpdateDashboardInput) UpdateDashboardRequest {
	op := &aws.Operation{
		Name:       opUpdateDashboard,
		HTTPMethod: "PUT",
		HTTPPath:   "/accounts/{AwsAccountId}/dashboards/{DashboardId}",
	}

	if input == nil {
		input = &types.UpdateDashboardInput{}
	}

	req := c.newRequest(op, input, &types.UpdateDashboardOutput{})
	return UpdateDashboardRequest{Request: req, Input: input, Copy: c.UpdateDashboardRequest}
}

// UpdateDashboardRequest is the request type for the
// UpdateDashboard API operation.
type UpdateDashboardRequest struct {
	*aws.Request
	Input *types.UpdateDashboardInput
	Copy  func(*types.UpdateDashboardInput) UpdateDashboardRequest
}

// Send marshals and sends the UpdateDashboard API request.
func (r UpdateDashboardRequest) Send(ctx context.Context) (*UpdateDashboardResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &UpdateDashboardResponse{
		UpdateDashboardOutput: r.Request.Data.(*types.UpdateDashboardOutput),
		response:              &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// UpdateDashboardResponse is the response type for the
// UpdateDashboard API operation.
type UpdateDashboardResponse struct {
	*types.UpdateDashboardOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// UpdateDashboard request.
func (r *UpdateDashboardResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
