// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package types

import (
	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/internal/awsutil"
	"github.com/aws/aws-sdk-go-v2/service/quicksight/enums"
)

type CreateIAMPolicyAssignmentInput struct {
	_ struct{} `type:"structure"`

	// The name of the assignment. It must be unique within an AWS account.
	//
	// AssignmentName is a required field
	AssignmentName *string `min:"1" type:"string" required:"true"`

	// The status of an assignment:
	//
	//    * ENABLED - Anything specified in this assignment is used while creating
	//    the data source.
	//
	//    * DISABLED - This assignment isn't used while creating the data source.
	//
	//    * DRAFT - Assignment is an unfinished draft and isn't used while creating
	//    the data source.
	//
	// AssignmentStatus is a required field
	AssignmentStatus enums.AssignmentStatus `type:"string" required:"true" enum:"true"`

	// The AWS Account ID where you want to assign QuickSight users or groups to
	// an IAM policy.
	//
	// AwsAccountId is a required field
	AwsAccountId *string `location:"uri" locationName:"AwsAccountId" min:"12" type:"string" required:"true"`

	// QuickSight users and/or groups that you want to assign the policy to.
	Identities map[string][]string `type:"map"`

	// The namespace that contains the assignment.
	//
	// Namespace is a required field
	Namespace *string `location:"uri" locationName:"Namespace" type:"string" required:"true"`

	// An IAM policy ARN that you want to apply to the QuickSight users and groups
	// specified in this assignment.
	PolicyArn *string `type:"string"`
}

// String returns the string representation
func (s CreateIAMPolicyAssignmentInput) String() string {
	return awsutil.Prettify(s)
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *CreateIAMPolicyAssignmentInput) Validate() error {
	invalidParams := aws.ErrInvalidParams{Context: "CreateIAMPolicyAssignmentInput"}

	if s.AssignmentName == nil {
		invalidParams.Add(aws.NewErrParamRequired("AssignmentName"))
	}
	if s.AssignmentName != nil && len(*s.AssignmentName) < 1 {
		invalidParams.Add(aws.NewErrParamMinLen("AssignmentName", 1))
	}
	if len(s.AssignmentStatus) == 0 {
		invalidParams.Add(aws.NewErrParamRequired("AssignmentStatus"))
	}

	if s.AwsAccountId == nil {
		invalidParams.Add(aws.NewErrParamRequired("AwsAccountId"))
	}
	if s.AwsAccountId != nil && len(*s.AwsAccountId) < 12 {
		invalidParams.Add(aws.NewErrParamMinLen("AwsAccountId", 12))
	}

	if s.Namespace == nil {
		invalidParams.Add(aws.NewErrParamRequired("Namespace"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

type CreateIAMPolicyAssignmentOutput struct {
	_ struct{} `type:"structure"`

	// An ID for the assignment.
	AssignmentId *string `type:"string"`

	// The name of the assignment. Must be unique within an AWS account.
	AssignmentName *string `min:"1" type:"string"`

	// The status of an assignment:
	//
	//    * ENABLED - Anything specified in this assignment is used while creating
	//    the data source.
	//
	//    * DISABLED - This assignment isn't used while creating the data source.
	//
	//    * DRAFT - Assignment is an unfinished draft and isn't used while creating
	//    the data source.
	AssignmentStatus enums.AssignmentStatus `type:"string" enum:"true"`

	// QuickSight users and/or groups that are assigned to the IAM policy.
	Identities map[string][]string `type:"map"`

	// An IAM policy ARN that is applied to the QuickSight users and groups specified
	// in this assignment.
	PolicyArn *string `type:"string"`

	// The AWS request ID for this operation.
	RequestId *string `type:"string"`

	// The http status of the request.
	Status *int64 `location:"statusCode" type:"integer"`
}

// String returns the string representation
func (s CreateIAMPolicyAssignmentOutput) String() string {
	return awsutil.Prettify(s)
}
