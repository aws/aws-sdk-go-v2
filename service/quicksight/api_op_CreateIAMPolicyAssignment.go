// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package quicksight

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/quicksight/types"
)

const opCreateIAMPolicyAssignment = "CreateIAMPolicyAssignment"

// CreateIAMPolicyAssignmentRequest returns a request value for making API operation for
// Amazon QuickSight.
//
// Creates an assignment with one specified IAM policy ARN and will assigned
// to specified groups or users of QuickSight. Users and groups need to be in
// the same namespace.
//
// CLI syntax:
//
// aws quicksight create-iam-policy-assignment --aws-account-id=111122223333
// --assignment-name=helpAssignment --policy-arn=arn:aws:iam::aws:policy/AdministratorAccess
// --identities="user=user5,engineer123,group=QS-Admin" --namespace=default
// --region=us-west-2
//
//    // Example sending a request using CreateIAMPolicyAssignmentRequest.
//    req := client.CreateIAMPolicyAssignmentRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/quicksight-2018-04-01/CreateIAMPolicyAssignment
func (c *Client) CreateIAMPolicyAssignmentRequest(input *types.CreateIAMPolicyAssignmentInput) CreateIAMPolicyAssignmentRequest {
	op := &aws.Operation{
		Name:       opCreateIAMPolicyAssignment,
		HTTPMethod: "POST",
		HTTPPath:   "/accounts/{AwsAccountId}/namespaces/{Namespace}/iam-policy-assignments/",
	}

	if input == nil {
		input = &types.CreateIAMPolicyAssignmentInput{}
	}

	req := c.newRequest(op, input, &types.CreateIAMPolicyAssignmentOutput{})
	return CreateIAMPolicyAssignmentRequest{Request: req, Input: input, Copy: c.CreateIAMPolicyAssignmentRequest}
}

// CreateIAMPolicyAssignmentRequest is the request type for the
// CreateIAMPolicyAssignment API operation.
type CreateIAMPolicyAssignmentRequest struct {
	*aws.Request
	Input *types.CreateIAMPolicyAssignmentInput
	Copy  func(*types.CreateIAMPolicyAssignmentInput) CreateIAMPolicyAssignmentRequest
}

// Send marshals and sends the CreateIAMPolicyAssignment API request.
func (r CreateIAMPolicyAssignmentRequest) Send(ctx context.Context) (*CreateIAMPolicyAssignmentResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &CreateIAMPolicyAssignmentResponse{
		CreateIAMPolicyAssignmentOutput: r.Request.Data.(*types.CreateIAMPolicyAssignmentOutput),
		response:                        &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// CreateIAMPolicyAssignmentResponse is the response type for the
// CreateIAMPolicyAssignment API operation.
type CreateIAMPolicyAssignmentResponse struct {
	*types.CreateIAMPolicyAssignmentOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// CreateIAMPolicyAssignment request.
func (r *CreateIAMPolicyAssignmentResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
