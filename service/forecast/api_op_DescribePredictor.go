// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package forecast

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/forecast/types"
)

const opDescribePredictor = "DescribePredictor"

// DescribePredictorRequest returns a request value for making API operation for
// Amazon Forecast Service.
//
// Describes a predictor created using the CreatePredictor operation.
//
// In addition to listing the properties provided by the user in the CreatePredictor
// request, this operation includes the following properties:
//
//    * DatasetImportJobArns - The dataset import jobs used to import training
//    data.
//
//    * AutoMLAlgorithmArns - If AutoML is performed, the algorithms evaluated.
//
//    * CreationTime
//
//    * LastModificationTime
//
//    * Status
//
//    * Message - If an error occurred, information about the error.
//
//    // Example sending a request using DescribePredictorRequest.
//    req := client.DescribePredictorRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/forecast-2018-06-26/DescribePredictor
func (c *Client) DescribePredictorRequest(input *types.DescribePredictorInput) DescribePredictorRequest {
	op := &aws.Operation{
		Name:       opDescribePredictor,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &types.DescribePredictorInput{}
	}

	req := c.newRequest(op, input, &types.DescribePredictorOutput{})
	return DescribePredictorRequest{Request: req, Input: input, Copy: c.DescribePredictorRequest}
}

// DescribePredictorRequest is the request type for the
// DescribePredictor API operation.
type DescribePredictorRequest struct {
	*aws.Request
	Input *types.DescribePredictorInput
	Copy  func(*types.DescribePredictorInput) DescribePredictorRequest
}

// Send marshals and sends the DescribePredictor API request.
func (r DescribePredictorRequest) Send(ctx context.Context) (*DescribePredictorResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &DescribePredictorResponse{
		DescribePredictorOutput: r.Request.Data.(*types.DescribePredictorOutput),
		response:                &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// DescribePredictorResponse is the response type for the
// DescribePredictor API operation.
type DescribePredictorResponse struct {
	*types.DescribePredictorOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// DescribePredictor request.
func (r *DescribePredictorResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
