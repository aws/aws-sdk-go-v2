// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package forecast

type AttributeType string

// Enum values for AttributeType
const (
	AttributeTypeString    AttributeType = "string"
	AttributeTypeInteger   AttributeType = "integer"
	AttributeTypeFloat     AttributeType = "float"
	AttributeTypeTimestamp AttributeType = "timestamp"
)

func (enum AttributeType) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum AttributeType) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type DatasetType string

// Enum values for DatasetType
const (
	DatasetTypeTargetTimeSeries  DatasetType = "TARGET_TIME_SERIES"
	DatasetTypeRelatedTimeSeries DatasetType = "RELATED_TIME_SERIES"
	DatasetTypeItemMetadata      DatasetType = "ITEM_METADATA"
)

func (enum DatasetType) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum DatasetType) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type Domain string

// Enum values for Domain
const (
	DomainRetail            Domain = "RETAIL"
	DomainCustom            Domain = "CUSTOM"
	DomainInventoryPlanning Domain = "INVENTORY_PLANNING"
	DomainEc2Capacity       Domain = "EC2_CAPACITY"
	DomainWorkForce         Domain = "WORK_FORCE"
	DomainWebTraffic        Domain = "WEB_TRAFFIC"
	DomainMetrics           Domain = "METRICS"
)

func (enum Domain) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum Domain) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type EvaluationType string

// Enum values for EvaluationType
const (
	EvaluationTypeSummary  EvaluationType = "SUMMARY"
	EvaluationTypeComputed EvaluationType = "COMPUTED"
)

func (enum EvaluationType) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum EvaluationType) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type FeaturizationMethodName string

// Enum values for FeaturizationMethodName
const (
	FeaturizationMethodNameFilling FeaturizationMethodName = "filling"
)

func (enum FeaturizationMethodName) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum FeaturizationMethodName) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type FilterConditionString string

// Enum values for FilterConditionString
const (
	FilterConditionStringIs    FilterConditionString = "IS"
	FilterConditionStringIsNot FilterConditionString = "IS_NOT"
)

func (enum FilterConditionString) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum FilterConditionString) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type ScalingType string

// Enum values for ScalingType
const (
	ScalingTypeAuto               ScalingType = "Auto"
	ScalingTypeLinear             ScalingType = "Linear"
	ScalingTypeLogarithmic        ScalingType = "Logarithmic"
	ScalingTypeReverseLogarithmic ScalingType = "ReverseLogarithmic"
)

func (enum ScalingType) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum ScalingType) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}
