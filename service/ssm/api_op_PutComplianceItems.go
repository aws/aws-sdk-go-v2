// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package ssm

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/ssm/types"
)

const opPutComplianceItems = "PutComplianceItems"

// PutComplianceItemsRequest returns a request value for making API operation for
// Amazon Simple Systems Manager (SSM).
//
// Registers a compliance type and other compliance details on a designated
// resource. This action lets you register custom compliance details with a
// resource. This call overwrites existing compliance information on the resource,
// so you must provide a full list of compliance items each time that you send
// the request.
//
// ComplianceType can be one of the following:
//
//    * ExecutionId: The execution ID when the patch, association, or custom
//    compliance item was applied.
//
//    * ExecutionType: Specify patch, association, or Custom:string.
//
//    * ExecutionTime. The time the patch, association, or custom compliance
//    item was applied to the instance.
//
//    * Id: The patch, association, or custom compliance ID.
//
//    * Title: A title.
//
//    * Status: The status of the compliance item. For example, approved for
//    patches, or Failed for associations.
//
//    * Severity: A patch severity. For example, critical.
//
//    * DocumentName: A SSM document name. For example, AWS-RunPatchBaseline.
//
//    * DocumentVersion: An SSM document version number. For example, 4.
//
//    * Classification: A patch classification. For example, security updates.
//
//    * PatchBaselineId: A patch baseline ID.
//
//    * PatchSeverity: A patch severity. For example, Critical.
//
//    * PatchState: A patch state. For example, InstancesWithFailedPatches.
//
//    * PatchGroup: The name of a patch group.
//
//    * InstalledTime: The time the association, patch, or custom compliance
//    item was applied to the resource. Specify the time by using the following
//    format: yyyy-MM-dd'T'HH:mm:ss'Z'
//
//    // Example sending a request using PutComplianceItemsRequest.
//    req := client.PutComplianceItemsRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/ssm-2014-11-06/PutComplianceItems
func (c *Client) PutComplianceItemsRequest(input *types.PutComplianceItemsInput) PutComplianceItemsRequest {
	op := &aws.Operation{
		Name:       opPutComplianceItems,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &types.PutComplianceItemsInput{}
	}

	req := c.newRequest(op, input, &types.PutComplianceItemsOutput{})
	return PutComplianceItemsRequest{Request: req, Input: input, Copy: c.PutComplianceItemsRequest}
}

// PutComplianceItemsRequest is the request type for the
// PutComplianceItems API operation.
type PutComplianceItemsRequest struct {
	*aws.Request
	Input *types.PutComplianceItemsInput
	Copy  func(*types.PutComplianceItemsInput) PutComplianceItemsRequest
}

// Send marshals and sends the PutComplianceItems API request.
func (r PutComplianceItemsRequest) Send(ctx context.Context) (*PutComplianceItemsResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &PutComplianceItemsResponse{
		PutComplianceItemsOutput: r.Request.Data.(*types.PutComplianceItemsOutput),
		response:                 &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// PutComplianceItemsResponse is the response type for the
// PutComplianceItems API operation.
type PutComplianceItemsResponse struct {
	*types.PutComplianceItemsOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// PutComplianceItems request.
func (r *PutComplianceItemsResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
