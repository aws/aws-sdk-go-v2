// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package ssm

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/ssm/types"
)

const opCreateResourceDataSync = "CreateResourceDataSync"

// CreateResourceDataSyncRequest returns a request value for making API operation for
// Amazon Simple Systems Manager (SSM).
//
// A resource data sync helps you view data from multiple sources in a single
// location. Systems Manager offers two types of resource data sync: SyncToDestination
// and SyncFromSource.
//
// You can configure Systems Manager Inventory to use the SyncToDestination
// type to synchronize Inventory data from multiple AWS Regions to a single
// Amazon S3 bucket. For more information, see Configuring Resource Data Sync
// for Inventory (http://docs.aws.amazon.com/systems-manager/latest/userguide/sysman-inventory-datasync.html)
// in the AWS Systems Manager User Guide.
//
// You can configure Systems Manager Explorer to use the SyncToDestination type
// to synchronize operational work items (OpsItems) and operational data (OpsData)
// from multiple AWS Regions to a single Amazon S3 bucket. You can also configure
// Explorer to use the SyncFromSource type. This type synchronizes OpsItems
// and OpsData from multiple AWS accounts and Regions by using AWS Organizations.
// For more information, see Setting Up Explorer to Display Data from Multiple
// Accounts and Regions (http://docs.aws.amazon.com/systems-manager/latest/userguide/Explorer-resource-data-sync.html)
// in the AWS Systems Manager User Guide.
//
// A resource data sync is an asynchronous operation that returns immediately.
// After a successful initial sync is completed, the system continuously syncs
// data. To check the status of a sync, use the ListResourceDataSync.
//
// By default, data is not encrypted in Amazon S3. We strongly recommend that
// you enable encryption in Amazon S3 to ensure secure data storage. We also
// recommend that you secure access to the Amazon S3 bucket by creating a restrictive
// bucket policy.
//
//    // Example sending a request using CreateResourceDataSyncRequest.
//    req := client.CreateResourceDataSyncRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/ssm-2014-11-06/CreateResourceDataSync
func (c *Client) CreateResourceDataSyncRequest(input *types.CreateResourceDataSyncInput) CreateResourceDataSyncRequest {
	op := &aws.Operation{
		Name:       opCreateResourceDataSync,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &types.CreateResourceDataSyncInput{}
	}

	req := c.newRequest(op, input, &types.CreateResourceDataSyncOutput{})
	return CreateResourceDataSyncRequest{Request: req, Input: input, Copy: c.CreateResourceDataSyncRequest}
}

// CreateResourceDataSyncRequest is the request type for the
// CreateResourceDataSync API operation.
type CreateResourceDataSyncRequest struct {
	*aws.Request
	Input *types.CreateResourceDataSyncInput
	Copy  func(*types.CreateResourceDataSyncInput) CreateResourceDataSyncRequest
}

// Send marshals and sends the CreateResourceDataSync API request.
func (r CreateResourceDataSyncRequest) Send(ctx context.Context) (*CreateResourceDataSyncResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &CreateResourceDataSyncResponse{
		CreateResourceDataSyncOutput: r.Request.Data.(*types.CreateResourceDataSyncOutput),
		response:                     &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// CreateResourceDataSyncResponse is the response type for the
// CreateResourceDataSync API operation.
type CreateResourceDataSyncResponse struct {
	*types.CreateResourceDataSyncOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// CreateResourceDataSync request.
func (r *CreateResourceDataSyncResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
