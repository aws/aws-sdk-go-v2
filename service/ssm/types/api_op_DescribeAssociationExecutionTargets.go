// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package types

import (
	"fmt"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/internal/awsutil"
)

type DescribeAssociationExecutionTargetsInput struct {
	_ struct{} `type:"structure"`

	// The association ID that includes the execution for which you want to view
	// details.
	//
	// AssociationId is a required field
	AssociationId *string `type:"string" required:"true"`

	// The execution ID for which you want to view details.
	//
	// ExecutionId is a required field
	ExecutionId *string `type:"string" required:"true"`

	// Filters for the request. You can specify the following filters and values.
	//
	// Status (EQUAL)
	//
	// ResourceId (EQUAL)
	//
	// ResourceType (EQUAL)
	Filters []AssociationExecutionTargetsFilter `min:"1" type:"list"`

	// The maximum number of items to return for this call. The call also returns
	// a token that you can specify in a subsequent call to get the next set of
	// results.
	MaxResults *int64 `min:"1" type:"integer"`

	// A token to start the list. Use this token to get the next set of results.
	NextToken *string `type:"string"`
}

// String returns the string representation
func (s DescribeAssociationExecutionTargetsInput) String() string {
	return awsutil.Prettify(s)
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *DescribeAssociationExecutionTargetsInput) Validate() error {
	invalidParams := aws.ErrInvalidParams{Context: "DescribeAssociationExecutionTargetsInput"}

	if s.AssociationId == nil {
		invalidParams.Add(aws.NewErrParamRequired("AssociationId"))
	}

	if s.ExecutionId == nil {
		invalidParams.Add(aws.NewErrParamRequired("ExecutionId"))
	}
	if s.Filters != nil && len(s.Filters) < 1 {
		invalidParams.Add(aws.NewErrParamMinLen("Filters", 1))
	}
	if s.MaxResults != nil && *s.MaxResults < 1 {
		invalidParams.Add(aws.NewErrParamMinValue("MaxResults", 1))
	}
	if s.Filters != nil {
		for i, v := range s.Filters {
			if err := v.Validate(); err != nil {
				invalidParams.AddNested(fmt.Sprintf("%s[%v]", "Filters", i), err.(aws.ErrInvalidParams))
			}
		}
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

type DescribeAssociationExecutionTargetsOutput struct {
	_ struct{} `type:"structure"`

	// Information about the execution.
	AssociationExecutionTargets []AssociationExecutionTarget `type:"list"`

	// The token for the next set of items to return. Use this token to get the
	// next set of results.
	NextToken *string `type:"string"`
}

// String returns the string representation
func (s DescribeAssociationExecutionTargetsOutput) String() string {
	return awsutil.Prettify(s)
}
