// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package types

import (
	"fmt"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/internal/awsutil"
)

type PutComplianceItemsInput struct {
	_ struct{} `type:"structure"`

	// Specify the compliance type. For example, specify Association (for a State
	// Manager association), Patch, or Custom:string.
	//
	// ComplianceType is a required field
	ComplianceType *string `min:"1" type:"string" required:"true"`

	// A summary of the call execution that includes an execution ID, the type of
	// execution (for example, Command), and the date/time of the execution using
	// a datetime object that is saved in the following format: yyyy-MM-dd'T'HH:mm:ss'Z'.
	//
	// ExecutionSummary is a required field
	ExecutionSummary *ComplianceExecutionSummary `type:"structure" required:"true"`

	// MD5 or SHA-256 content hash. The content hash is used to determine if existing
	// information should be overwritten or ignored. If the content hashes match,
	// the request to put compliance information is ignored.
	ItemContentHash *string `type:"string"`

	// Information about the compliance as defined by the resource type. For example,
	// for a patch compliance type, Items includes information about the PatchSeverity,
	// Classification, etc.
	//
	// Items is a required field
	Items []ComplianceItemEntry `type:"list" required:"true"`

	// Specify an ID for this resource. For a managed instance, this is the instance
	// ID.
	//
	// ResourceId is a required field
	ResourceId *string `min:"1" type:"string" required:"true"`

	// Specify the type of resource. ManagedInstance is currently the only supported
	// resource type.
	//
	// ResourceType is a required field
	ResourceType *string `min:"1" type:"string" required:"true"`
}

// String returns the string representation
func (s PutComplianceItemsInput) String() string {
	return awsutil.Prettify(s)
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *PutComplianceItemsInput) Validate() error {
	invalidParams := aws.ErrInvalidParams{Context: "PutComplianceItemsInput"}

	if s.ComplianceType == nil {
		invalidParams.Add(aws.NewErrParamRequired("ComplianceType"))
	}
	if s.ComplianceType != nil && len(*s.ComplianceType) < 1 {
		invalidParams.Add(aws.NewErrParamMinLen("ComplianceType", 1))
	}

	if s.ExecutionSummary == nil {
		invalidParams.Add(aws.NewErrParamRequired("ExecutionSummary"))
	}

	if s.Items == nil {
		invalidParams.Add(aws.NewErrParamRequired("Items"))
	}

	if s.ResourceId == nil {
		invalidParams.Add(aws.NewErrParamRequired("ResourceId"))
	}
	if s.ResourceId != nil && len(*s.ResourceId) < 1 {
		invalidParams.Add(aws.NewErrParamMinLen("ResourceId", 1))
	}

	if s.ResourceType == nil {
		invalidParams.Add(aws.NewErrParamRequired("ResourceType"))
	}
	if s.ResourceType != nil && len(*s.ResourceType) < 1 {
		invalidParams.Add(aws.NewErrParamMinLen("ResourceType", 1))
	}
	if s.ExecutionSummary != nil {
		if err := s.ExecutionSummary.Validate(); err != nil {
			invalidParams.AddNested("ExecutionSummary", err.(aws.ErrInvalidParams))
		}
	}
	if s.Items != nil {
		for i, v := range s.Items {
			if err := v.Validate(); err != nil {
				invalidParams.AddNested(fmt.Sprintf("%s[%v]", "Items", i), err.(aws.ErrInvalidParams))
			}
		}
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

type PutComplianceItemsOutput struct {
	_ struct{} `type:"structure"`
}

// String returns the string representation
func (s PutComplianceItemsOutput) String() string {
	return awsutil.Prettify(s)
}
