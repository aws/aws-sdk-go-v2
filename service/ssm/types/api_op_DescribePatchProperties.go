// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package types

import (
	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/internal/awsutil"
	"github.com/aws/aws-sdk-go-v2/service/ssm/enums"
)

type DescribePatchPropertiesInput struct {
	_ struct{} `type:"structure"`

	// The maximum number of items to return for this call. The call also returns
	// a token that you can specify in a subsequent call to get the next set of
	// results.
	MaxResults *int64 `min:"1" type:"integer"`

	// The token for the next set of items to return. (You received this token from
	// a previous call.)
	NextToken *string `type:"string"`

	// The operating system type for which to list patches.
	//
	// OperatingSystem is a required field
	OperatingSystem enums.OperatingSystem `type:"string" required:"true" enum:"true"`

	// Indicates whether to list patches for the Windows operating system or for
	// Microsoft applications. Not applicable for Linux operating systems.
	PatchSet enums.PatchSet `type:"string" enum:"true"`

	// The patch property for which you want to view patch details.
	//
	// Property is a required field
	Property enums.PatchProperty `type:"string" required:"true" enum:"true"`
}

// String returns the string representation
func (s DescribePatchPropertiesInput) String() string {
	return awsutil.Prettify(s)
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *DescribePatchPropertiesInput) Validate() error {
	invalidParams := aws.ErrInvalidParams{Context: "DescribePatchPropertiesInput"}
	if s.MaxResults != nil && *s.MaxResults < 1 {
		invalidParams.Add(aws.NewErrParamMinValue("MaxResults", 1))
	}
	if len(s.OperatingSystem) == 0 {
		invalidParams.Add(aws.NewErrParamRequired("OperatingSystem"))
	}
	if len(s.Property) == 0 {
		invalidParams.Add(aws.NewErrParamRequired("Property"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

type DescribePatchPropertiesOutput struct {
	_ struct{} `type:"structure"`

	// The token for the next set of items to return. (You use this token in the
	// next call.)
	NextToken *string `type:"string"`

	// A list of the properties for patches matching the filter request parameters.
	Properties []map[string]string `type:"list"`
}

// String returns the string representation
func (s DescribePatchPropertiesOutput) String() string {
	return awsutil.Prettify(s)
}
