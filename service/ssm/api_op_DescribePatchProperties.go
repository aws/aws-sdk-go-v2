// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package ssm

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/ssm/types"
)

const opDescribePatchProperties = "DescribePatchProperties"

// DescribePatchPropertiesRequest returns a request value for making API operation for
// Amazon Simple Systems Manager (SSM).
//
// Lists the properties of available patches organized by product, product family,
// classification, severity, and other properties of available patches. You
// can use the reported properties in the filters you specify in requests for
// actions such as CreatePatchBaseline, UpdatePatchBaseline, DescribeAvailablePatches,
// and DescribePatchBaselines.
//
// The following section lists the properties that can be used in filters for
// each major operating system type:
//
// WINDOWS
//
// Valid properties: PRODUCT, PRODUCT_FAMILY, CLASSIFICATION, MSRC_SEVERITY
//
// AMAZON_LINUX
//
// Valid properties: PRODUCT, CLASSIFICATION, SEVERITY
//
// AMAZON_LINUX_2
//
// Valid properties: PRODUCT, CLASSIFICATION, SEVERITY
//
// UBUNTU
//
// Valid properties: PRODUCT, PRIORITY
//
// REDHAT_ENTERPRISE_LINUX
//
// Valid properties: PRODUCT, CLASSIFICATION, SEVERITY
//
// SUSE
//
// Valid properties: PRODUCT, CLASSIFICATION, SEVERITY
//
// CENTOS
//
// Valid properties: PRODUCT, CLASSIFICATION, SEVERITY
//
//    // Example sending a request using DescribePatchPropertiesRequest.
//    req := client.DescribePatchPropertiesRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/ssm-2014-11-06/DescribePatchProperties
func (c *Client) DescribePatchPropertiesRequest(input *types.DescribePatchPropertiesInput) DescribePatchPropertiesRequest {
	op := &aws.Operation{
		Name:       opDescribePatchProperties,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &types.DescribePatchPropertiesInput{}
	}

	req := c.newRequest(op, input, &types.DescribePatchPropertiesOutput{})
	return DescribePatchPropertiesRequest{Request: req, Input: input, Copy: c.DescribePatchPropertiesRequest}
}

// DescribePatchPropertiesRequest is the request type for the
// DescribePatchProperties API operation.
type DescribePatchPropertiesRequest struct {
	*aws.Request
	Input *types.DescribePatchPropertiesInput
	Copy  func(*types.DescribePatchPropertiesInput) DescribePatchPropertiesRequest
}

// Send marshals and sends the DescribePatchProperties API request.
func (r DescribePatchPropertiesRequest) Send(ctx context.Context) (*DescribePatchPropertiesResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &DescribePatchPropertiesResponse{
		DescribePatchPropertiesOutput: r.Request.Data.(*types.DescribePatchPropertiesOutput),
		response:                      &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// DescribePatchPropertiesResponse is the response type for the
// DescribePatchProperties API operation.
type DescribePatchPropertiesResponse struct {
	*types.DescribePatchPropertiesOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// DescribePatchProperties request.
func (r *DescribePatchPropertiesResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
