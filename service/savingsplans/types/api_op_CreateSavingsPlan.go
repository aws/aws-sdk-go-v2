// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package types

import (
	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/internal/awsutil"
)

type CreateSavingsPlanInput struct {
	_ struct{} `type:"structure"`

	// Unique, case-sensitive identifier that you provide to ensure the idempotency
	// of the request.
	ClientToken *string `locationName:"clientToken" type:"string" idempotencyToken:"true"`

	// The hourly commitment, in USD. This is a value between 0.001 and 1 million.
	// You cannot specify more than three digits after the decimal point.
	//
	// Commitment is a required field
	Commitment *string `locationName:"commitment" type:"string" required:"true"`

	// The ID of the offering.
	//
	// SavingsPlanOfferingId is a required field
	SavingsPlanOfferingId *string `locationName:"savingsPlanOfferingId" type:"string" required:"true"`

	// One or more tags.
	Tags map[string]string `locationName:"tags" type:"map"`

	// The up-front payment amount. This is a whole number between 50 and 99 percent
	// of the total value of the Savings Plan. This parameter is supported only
	// if the payment option is Partial Upfront.
	UpfrontPaymentAmount *string `locationName:"upfrontPaymentAmount" type:"string"`
}

// String returns the string representation
func (s CreateSavingsPlanInput) String() string {
	return awsutil.Prettify(s)
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *CreateSavingsPlanInput) Validate() error {
	invalidParams := aws.ErrInvalidParams{Context: "CreateSavingsPlanInput"}

	if s.Commitment == nil {
		invalidParams.Add(aws.NewErrParamRequired("Commitment"))
	}

	if s.SavingsPlanOfferingId == nil {
		invalidParams.Add(aws.NewErrParamRequired("SavingsPlanOfferingId"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

type CreateSavingsPlanOutput struct {
	_ struct{} `type:"structure"`

	// The ID of the Savings Plan.
	SavingsPlanId *string `locationName:"savingsPlanId" type:"string"`
}

// String returns the string representation
func (s CreateSavingsPlanOutput) String() string {
	return awsutil.Prettify(s)
}
