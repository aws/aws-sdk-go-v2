// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package types

import (
	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/internal/awsutil"
	"github.com/aws/aws-sdk-go-v2/service/savingsplans/enums"
)

type DescribeSavingsPlansInput struct {
	_ struct{} `type:"structure"`

	// The filters.
	Filters []SavingsPlanFilter `locationName:"filters" type:"list"`

	// The maximum number of results to return with a single call. To retrieve additional
	// results, make another call with the returned token value.
	MaxResults *int64 `locationName:"maxResults" min:"1" type:"integer"`

	// The token for the next page of results.
	NextToken *string `locationName:"nextToken" type:"string"`

	// The Amazon Resource Names (ARN) of the Savings Plans.
	SavingsPlanArns []string `locationName:"savingsPlanArns" type:"list"`

	// The IDs of the Savings Plans.
	SavingsPlanIds []string `locationName:"savingsPlanIds" type:"list"`

	// The states.
	States []enums.SavingsPlanState `locationName:"states" type:"list"`
}

// String returns the string representation
func (s DescribeSavingsPlansInput) String() string {
	return awsutil.Prettify(s)
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *DescribeSavingsPlansInput) Validate() error {
	invalidParams := aws.ErrInvalidParams{Context: "DescribeSavingsPlansInput"}
	if s.MaxResults != nil && *s.MaxResults < 1 {
		invalidParams.Add(aws.NewErrParamMinValue("MaxResults", 1))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

type DescribeSavingsPlansOutput struct {
	_ struct{} `type:"structure"`

	// The token to use to retrieve the next page of results. This value is null
	// when there are no more results to return.
	NextToken *string `locationName:"nextToken" type:"string"`

	// Information about the Savings Plans.
	SavingsPlans []SavingsPlan `locationName:"savingsPlans" type:"list"`
}

// String returns the string representation
func (s DescribeSavingsPlansOutput) String() string {
	return awsutil.Prettify(s)
}
