// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package elastictranscoder

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/elastictranscoder/types"
)

const opReadPreset = "ReadPreset"

// ReadPresetRequest returns a request value for making API operation for
// Amazon Elastic Transcoder.
//
// The ReadPreset operation gets detailed information about a preset.
//
//    // Example sending a request using ReadPresetRequest.
//    req := client.ReadPresetRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
func (c *Client) ReadPresetRequest(input *types.ReadPresetInput) ReadPresetRequest {
	op := &aws.Operation{
		Name:       opReadPreset,
		HTTPMethod: "GET",
		HTTPPath:   "/2012-09-25/presets/{Id}",
	}

	if input == nil {
		input = &types.ReadPresetInput{}
	}

	req := c.newRequest(op, input, &types.ReadPresetOutput{})
	return ReadPresetRequest{Request: req, Input: input, Copy: c.ReadPresetRequest}
}

// ReadPresetRequest is the request type for the
// ReadPreset API operation.
type ReadPresetRequest struct {
	*aws.Request
	Input *types.ReadPresetInput
	Copy  func(*types.ReadPresetInput) ReadPresetRequest
}

// Send marshals and sends the ReadPreset API request.
func (r ReadPresetRequest) Send(ctx context.Context) (*ReadPresetResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &ReadPresetResponse{
		ReadPresetOutput: r.Request.Data.(*types.ReadPresetOutput),
		response:         &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// ReadPresetResponse is the response type for the
// ReadPreset API operation.
type ReadPresetResponse struct {
	*types.ReadPresetOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// ReadPreset request.
func (r *ReadPresetResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
