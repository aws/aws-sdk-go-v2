// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package groundstation

type AngleUnits string

// Enum values for AngleUnits
const (
	AngleUnitsDegreeAngle AngleUnits = "DEGREE_ANGLE"
	AngleUnitsRadian      AngleUnits = "RADIAN"
)

func (enum AngleUnits) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum AngleUnits) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type BandwidthUnits string

// Enum values for BandwidthUnits
const (
	BandwidthUnitsGhz BandwidthUnits = "GHz"
	BandwidthUnitsMhz BandwidthUnits = "MHz"
	BandwidthUnitsKHz BandwidthUnits = "kHz"
)

func (enum BandwidthUnits) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum BandwidthUnits) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type ConfigCapabilityType string

// Enum values for ConfigCapabilityType
const (
	ConfigCapabilityTypeAntennaDownlink            ConfigCapabilityType = "antenna-downlink"
	ConfigCapabilityTypeAntennaDownlinkDemodDecode ConfigCapabilityType = "antenna-downlink-demod-decode"
	ConfigCapabilityTypeAntennaUplink              ConfigCapabilityType = "antenna-uplink"
	ConfigCapabilityTypeDataflowEndpoint           ConfigCapabilityType = "dataflow-endpoint"
	ConfigCapabilityTypeTracking                   ConfigCapabilityType = "tracking"
	ConfigCapabilityTypeUplinkEcho                 ConfigCapabilityType = "uplink-echo"
)

func (enum ConfigCapabilityType) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum ConfigCapabilityType) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type ContactStatus string

// Enum values for ContactStatus
const (
	ContactStatusAvailable        ContactStatus = "AVAILABLE"
	ContactStatusAwsCancelled     ContactStatus = "AWS_CANCELLED"
	ContactStatusCancelled        ContactStatus = "CANCELLED"
	ContactStatusCompleted        ContactStatus = "COMPLETED"
	ContactStatusFailed           ContactStatus = "FAILED"
	ContactStatusFailedToSchedule ContactStatus = "FAILED_TO_SCHEDULE"
	ContactStatusPass             ContactStatus = "PASS"
	ContactStatusPostpass         ContactStatus = "POSTPASS"
	ContactStatusPrepass          ContactStatus = "PREPASS"
	ContactStatusScheduled        ContactStatus = "SCHEDULED"
	ContactStatusScheduling       ContactStatus = "SCHEDULING"
)

func (enum ContactStatus) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum ContactStatus) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type Criticality string

// Enum values for Criticality
const (
	CriticalityPreferred Criticality = "PREFERRED"
	CriticalityRemoved   Criticality = "REMOVED"
	CriticalityRequired  Criticality = "REQUIRED"
)

func (enum Criticality) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum Criticality) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type EirpUnits string

// Enum values for EirpUnits
const (
	EirpUnitsDBw EirpUnits = "dBW"
)

func (enum EirpUnits) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum EirpUnits) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type EndpointStatus string

// Enum values for EndpointStatus
const (
	EndpointStatusCreated  EndpointStatus = "created"
	EndpointStatusCreating EndpointStatus = "creating"
	EndpointStatusDeleted  EndpointStatus = "deleted"
	EndpointStatusDeleting EndpointStatus = "deleting"
	EndpointStatusFailed   EndpointStatus = "failed"
)

func (enum EndpointStatus) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum EndpointStatus) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type FrequencyUnits string

// Enum values for FrequencyUnits
const (
	FrequencyUnitsGhz FrequencyUnits = "GHz"
	FrequencyUnitsMhz FrequencyUnits = "MHz"
	FrequencyUnitsKHz FrequencyUnits = "kHz"
)

func (enum FrequencyUnits) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum FrequencyUnits) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type Polarization string

// Enum values for Polarization
const (
	PolarizationLeftHand  Polarization = "LEFT_HAND"
	PolarizationNone      Polarization = "NONE"
	PolarizationRightHand Polarization = "RIGHT_HAND"
)

func (enum Polarization) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum Polarization) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}
