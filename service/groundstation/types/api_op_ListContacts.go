// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package types

import (
	"time"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/internal/awsutil"
	"github.com/aws/aws-sdk-go-v2/service/groundstation/enums"
)

type ListContactsInput struct {
	_ struct{} `type:"structure"`

	// EndTime is a required field
	EndTime *time.Time `locationName:"endTime" type:"timestamp" required:"true"`

	GroundStation *string `locationName:"groundStation" type:"string"`

	MaxResults *int64 `locationName:"maxResults" type:"integer"`

	MissionProfileArn *string `locationName:"missionProfileArn" type:"string"`

	NextToken *string `locationName:"nextToken" type:"string"`

	SatelliteArn *string `locationName:"satelliteArn" type:"string"`

	// StartTime is a required field
	StartTime *time.Time `locationName:"startTime" type:"timestamp" required:"true"`

	// StatusList is a required field
	StatusList []enums.ContactStatus `locationName:"statusList" type:"list" required:"true"`
}

// String returns the string representation
func (s ListContactsInput) String() string {
	return awsutil.Prettify(s)
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *ListContactsInput) Validate() error {
	invalidParams := aws.ErrInvalidParams{Context: "ListContactsInput"}

	if s.EndTime == nil {
		invalidParams.Add(aws.NewErrParamRequired("EndTime"))
	}

	if s.StartTime == nil {
		invalidParams.Add(aws.NewErrParamRequired("StartTime"))
	}

	if s.StatusList == nil {
		invalidParams.Add(aws.NewErrParamRequired("StatusList"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

type ListContactsOutput struct {
	_ struct{} `type:"structure"`

	ContactList []ContactData `locationName:"contactList" type:"list"`

	NextToken *string `locationName:"nextToken" type:"string"`
}

// String returns the string representation
func (s ListContactsOutput) String() string {
	return awsutil.Prettify(s)
}
