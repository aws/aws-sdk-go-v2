// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package types

import (
	"time"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/internal/awsutil"
	"github.com/aws/aws-sdk-go-v2/service/groundstation/enums"
)

type DescribeContactInput struct {
	_ struct{} `type:"structure"`

	// ContactId is a required field
	ContactId *string `location:"uri" locationName:"contactId" type:"string" required:"true"`
}

// String returns the string representation
func (s DescribeContactInput) String() string {
	return awsutil.Prettify(s)
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *DescribeContactInput) Validate() error {
	invalidParams := aws.ErrInvalidParams{Context: "DescribeContactInput"}

	if s.ContactId == nil {
		invalidParams.Add(aws.NewErrParamRequired("ContactId"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

type DescribeContactOutput struct {
	_ struct{} `type:"structure"`

	ContactId *string `locationName:"contactId" type:"string"`

	ContactStatus enums.ContactStatus `locationName:"contactStatus" type:"string" enum:"true"`

	EndTime *time.Time `locationName:"endTime" type:"timestamp"`

	ErrorMessage *string `locationName:"errorMessage" type:"string"`

	GroundStation *string `locationName:"groundStation" type:"string"`

	// Elevation angle of the satellite in the sky during a contact.
	MaximumElevation *Elevation `locationName:"maximumElevation" type:"structure"`

	MissionProfileArn *string `locationName:"missionProfileArn" type:"string"`

	PostPassEndTime *time.Time `locationName:"postPassEndTime" type:"timestamp"`

	PrePassStartTime *time.Time `locationName:"prePassStartTime" type:"timestamp"`

	SatelliteArn *string `locationName:"satelliteArn" type:"string"`

	StartTime *time.Time `locationName:"startTime" type:"timestamp"`

	Tags map[string]string `locationName:"tags" type:"map"`
}

// String returns the string representation
func (s DescribeContactOutput) String() string {
	return awsutil.Prettify(s)
}
