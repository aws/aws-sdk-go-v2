// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package types

import (
	"fmt"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/internal/awsutil"
)

type CreateDataflowEndpointGroupInput struct {
	_ struct{} `type:"structure"`

	// EndpointDetails is a required field
	EndpointDetails []EndpointDetails `locationName:"endpointDetails" type:"list" required:"true"`

	Tags map[string]string `locationName:"tags" type:"map"`
}

// String returns the string representation
func (s CreateDataflowEndpointGroupInput) String() string {
	return awsutil.Prettify(s)
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *CreateDataflowEndpointGroupInput) Validate() error {
	invalidParams := aws.ErrInvalidParams{Context: "CreateDataflowEndpointGroupInput"}

	if s.EndpointDetails == nil {
		invalidParams.Add(aws.NewErrParamRequired("EndpointDetails"))
	}
	if s.EndpointDetails != nil {
		for i, v := range s.EndpointDetails {
			if err := v.Validate(); err != nil {
				invalidParams.AddNested(fmt.Sprintf("%s[%v]", "EndpointDetails", i), err.(aws.ErrInvalidParams))
			}
		}
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

type CreateDataflowEndpointGroupOutput struct {
	_ struct{} `type:"structure"`

	DataflowEndpointGroupId *string `locationName:"dataflowEndpointGroupId" type:"string"`
}

// String returns the string representation
func (s CreateDataflowEndpointGroupOutput) String() string {
	return awsutil.Prettify(s)
}
