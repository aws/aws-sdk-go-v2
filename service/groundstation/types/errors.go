// Code generated by smithy-go-codegen DO NOT EDIT.

package types

import (
	"fmt"
	smithy "github.com/awslabs/smithy-go"
	"github.com/awslabs/smithy-go/ptr"
)

// Dependency encountered an error.
type DependencyException struct {
	Message *string

	ParameterName *string
}

func (e *DependencyException) Error() string {
	return fmt.Sprintf("%s: %s", e.ErrorCode(), e.ErrorMessage())
}
func (e *DependencyException) ErrorMessage() string {
	if e.Message == nil {
		return ""
	}
	return *e.Message
}
func (e *DependencyException) ErrorCode() string             { return "DependencyException" }
func (e *DependencyException) ErrorFault() smithy.ErrorFault { return smithy.FaultServer }
func (e *DependencyException) GetMessage() string {
	return ptr.ToString(e.Message)
}
func (e *DependencyException) HasMessage() bool {
	return e.Message != nil
}
func (e *DependencyException) GetParameterName() string {
	return ptr.ToString(e.ParameterName)
}
func (e *DependencyException) HasParameterName() bool {
	return e.ParameterName != nil
}

// One or more parameters are not valid.
type InvalidParameterException struct {
	Message *string

	ParameterName *string
}

func (e *InvalidParameterException) Error() string {
	return fmt.Sprintf("%s: %s", e.ErrorCode(), e.ErrorMessage())
}
func (e *InvalidParameterException) ErrorMessage() string {
	if e.Message == nil {
		return ""
	}
	return *e.Message
}
func (e *InvalidParameterException) ErrorCode() string             { return "InvalidParameterException" }
func (e *InvalidParameterException) ErrorFault() smithy.ErrorFault { return smithy.FaultClient }
func (e *InvalidParameterException) GetMessage() string {
	return ptr.ToString(e.Message)
}
func (e *InvalidParameterException) HasMessage() bool {
	return e.Message != nil
}
func (e *InvalidParameterException) GetParameterName() string {
	return ptr.ToString(e.ParameterName)
}
func (e *InvalidParameterException) HasParameterName() bool {
	return e.ParameterName != nil
}

// Account limits for this resource have been exceeded.
type ResourceLimitExceededException struct {
	Message *string

	ParameterName *string
}

func (e *ResourceLimitExceededException) Error() string {
	return fmt.Sprintf("%s: %s", e.ErrorCode(), e.ErrorMessage())
}
func (e *ResourceLimitExceededException) ErrorMessage() string {
	if e.Message == nil {
		return ""
	}
	return *e.Message
}
func (e *ResourceLimitExceededException) ErrorCode() string             { return "ResourceLimitExceededException" }
func (e *ResourceLimitExceededException) ErrorFault() smithy.ErrorFault { return smithy.FaultClient }
func (e *ResourceLimitExceededException) GetMessage() string {
	return ptr.ToString(e.Message)
}
func (e *ResourceLimitExceededException) HasMessage() bool {
	return e.Message != nil
}
func (e *ResourceLimitExceededException) GetParameterName() string {
	return ptr.ToString(e.ParameterName)
}
func (e *ResourceLimitExceededException) HasParameterName() bool {
	return e.ParameterName != nil
}

// Resource was not found.
type ResourceNotFoundException struct {
	Message *string
}

func (e *ResourceNotFoundException) Error() string {
	return fmt.Sprintf("%s: %s", e.ErrorCode(), e.ErrorMessage())
}
func (e *ResourceNotFoundException) ErrorMessage() string {
	if e.Message == nil {
		return ""
	}
	return *e.Message
}
func (e *ResourceNotFoundException) ErrorCode() string             { return "ResourceNotFoundException" }
func (e *ResourceNotFoundException) ErrorFault() smithy.ErrorFault { return smithy.FaultClient }
func (e *ResourceNotFoundException) GetMessage() string {
	return ptr.ToString(e.Message)
}
func (e *ResourceNotFoundException) HasMessage() bool {
	return e.Message != nil
}
