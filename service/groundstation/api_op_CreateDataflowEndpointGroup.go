// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package groundstation

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/groundstation/types"
)

const opCreateDataflowEndpointGroup = "CreateDataflowEndpointGroup"

// CreateDataflowEndpointGroupRequest returns a request value for making API operation for
// AWS Ground Station.
//
// Creates a DataflowEndpoint group containing the specified list of DataflowEndpoint
// objects.
//
// The name field in each endpoint is used in your mission profile DataflowEndpointConfig
// to specify which endpoints to use during a contact.
//
// When a contact uses multiple DataflowEndpointConfig objects, each Config
// must match a DataflowEndpoint in the same group.
//
//    // Example sending a request using CreateDataflowEndpointGroupRequest.
//    req := client.CreateDataflowEndpointGroupRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/groundstation-2019-05-23/CreateDataflowEndpointGroup
func (c *Client) CreateDataflowEndpointGroupRequest(input *types.CreateDataflowEndpointGroupInput) CreateDataflowEndpointGroupRequest {
	op := &aws.Operation{
		Name:       opCreateDataflowEndpointGroup,
		HTTPMethod: "POST",
		HTTPPath:   "/dataflowEndpointGroup",
	}

	if input == nil {
		input = &types.CreateDataflowEndpointGroupInput{}
	}

	req := c.newRequest(op, input, &types.CreateDataflowEndpointGroupOutput{})
	return CreateDataflowEndpointGroupRequest{Request: req, Input: input, Copy: c.CreateDataflowEndpointGroupRequest}
}

// CreateDataflowEndpointGroupRequest is the request type for the
// CreateDataflowEndpointGroup API operation.
type CreateDataflowEndpointGroupRequest struct {
	*aws.Request
	Input *types.CreateDataflowEndpointGroupInput
	Copy  func(*types.CreateDataflowEndpointGroupInput) CreateDataflowEndpointGroupRequest
}

// Send marshals and sends the CreateDataflowEndpointGroup API request.
func (r CreateDataflowEndpointGroupRequest) Send(ctx context.Context) (*CreateDataflowEndpointGroupResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &CreateDataflowEndpointGroupResponse{
		CreateDataflowEndpointGroupOutput: r.Request.Data.(*types.CreateDataflowEndpointGroupOutput),
		response:                          &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// CreateDataflowEndpointGroupResponse is the response type for the
// CreateDataflowEndpointGroup API operation.
type CreateDataflowEndpointGroupResponse struct {
	*types.CreateDataflowEndpointGroupOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// CreateDataflowEndpointGroup request.
func (r *CreateDataflowEndpointGroupResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
