// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package groundstation

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/groundstation/types"
)

const opGetConfig = "GetConfig"

// GetConfigRequest returns a request value for making API operation for
// AWS Ground Station.
//
// Returns Config information.
//
// Only one Config response can be returned.
//
//    // Example sending a request using GetConfigRequest.
//    req := client.GetConfigRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/groundstation-2019-05-23/GetConfig
func (c *Client) GetConfigRequest(input *types.GetConfigInput) GetConfigRequest {
	op := &aws.Operation{
		Name:       opGetConfig,
		HTTPMethod: "GET",
		HTTPPath:   "/config/{configType}/{configId}",
	}

	if input == nil {
		input = &types.GetConfigInput{}
	}

	req := c.newRequest(op, input, &types.GetConfigOutput{})
	return GetConfigRequest{Request: req, Input: input, Copy: c.GetConfigRequest}
}

// GetConfigRequest is the request type for the
// GetConfig API operation.
type GetConfigRequest struct {
	*aws.Request
	Input *types.GetConfigInput
	Copy  func(*types.GetConfigInput) GetConfigRequest
}

// Send marshals and sends the GetConfig API request.
func (r GetConfigRequest) Send(ctx context.Context) (*GetConfigResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &GetConfigResponse{
		GetConfigOutput: r.Request.Data.(*types.GetConfigOutput),
		response:        &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// GetConfigResponse is the response type for the
// GetConfig API operation.
type GetConfigResponse struct {
	*types.GetConfigOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// GetConfig request.
func (r *GetConfigResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
