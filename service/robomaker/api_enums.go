// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package robomaker

type Architecture string

// Enum values for Architecture
const (
	ArchitectureX8664 Architecture = "X86_64"
	ArchitectureArm64 Architecture = "ARM64"
	ArchitectureArmhf Architecture = "ARMHF"
)

func (enum Architecture) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum Architecture) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type DeploymentJobErrorCode string

// Enum values for DeploymentJobErrorCode
const (
	DeploymentJobErrorCodeResourceNotFound                    DeploymentJobErrorCode = "ResourceNotFound"
	DeploymentJobErrorCodeEnvironmentSetupError               DeploymentJobErrorCode = "EnvironmentSetupError"
	DeploymentJobErrorCodeEtagMismatch                        DeploymentJobErrorCode = "EtagMismatch"
	DeploymentJobErrorCodeFailureThresholdBreached            DeploymentJobErrorCode = "FailureThresholdBreached"
	DeploymentJobErrorCodeRobotDeploymentAborted              DeploymentJobErrorCode = "RobotDeploymentAborted"
	DeploymentJobErrorCodeRobotDeploymentNoResponse           DeploymentJobErrorCode = "RobotDeploymentNoResponse"
	DeploymentJobErrorCodeRobotAgentConnectionTimeout         DeploymentJobErrorCode = "RobotAgentConnectionTimeout"
	DeploymentJobErrorCodeGreengrassDeploymentFailed          DeploymentJobErrorCode = "GreengrassDeploymentFailed"
	DeploymentJobErrorCodeMissingRobotArchitecture            DeploymentJobErrorCode = "MissingRobotArchitecture"
	DeploymentJobErrorCodeMissingRobotApplicationArchitecture DeploymentJobErrorCode = "MissingRobotApplicationArchitecture"
	DeploymentJobErrorCodeMissingRobotDeploymentResource      DeploymentJobErrorCode = "MissingRobotDeploymentResource"
	DeploymentJobErrorCodeGreengrassGroupVersionDoesNotExist  DeploymentJobErrorCode = "GreengrassGroupVersionDoesNotExist"
	DeploymentJobErrorCodeExtractingBundleFailure             DeploymentJobErrorCode = "ExtractingBundleFailure"
	DeploymentJobErrorCodePreLaunchFileFailure                DeploymentJobErrorCode = "PreLaunchFileFailure"
	DeploymentJobErrorCodePostLaunchFileFailure               DeploymentJobErrorCode = "PostLaunchFileFailure"
	DeploymentJobErrorCodeBadPermissionError                  DeploymentJobErrorCode = "BadPermissionError"
	DeploymentJobErrorCodeDownloadConditionFailed             DeploymentJobErrorCode = "DownloadConditionFailed"
	DeploymentJobErrorCodeInternalServerError                 DeploymentJobErrorCode = "InternalServerError"
)

func (enum DeploymentJobErrorCode) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum DeploymentJobErrorCode) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type DeploymentStatus string

// Enum values for DeploymentStatus
const (
	DeploymentStatusPending    DeploymentStatus = "Pending"
	DeploymentStatusPreparing  DeploymentStatus = "Preparing"
	DeploymentStatusInProgress DeploymentStatus = "InProgress"
	DeploymentStatusFailed     DeploymentStatus = "Failed"
	DeploymentStatusSucceeded  DeploymentStatus = "Succeeded"
	DeploymentStatusCanceled   DeploymentStatus = "Canceled"
)

func (enum DeploymentStatus) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum DeploymentStatus) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type FailureBehavior string

// Enum values for FailureBehavior
const (
	FailureBehaviorFail     FailureBehavior = "Fail"
	FailureBehaviorContinue FailureBehavior = "Continue"
)

func (enum FailureBehavior) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum FailureBehavior) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type RenderingEngineType string

// Enum values for RenderingEngineType
const (
	RenderingEngineTypeOgre RenderingEngineType = "OGRE"
)

func (enum RenderingEngineType) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum RenderingEngineType) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type RobotDeploymentStep string

// Enum values for RobotDeploymentStep
const (
	RobotDeploymentStepValidating                 RobotDeploymentStep = "Validating"
	RobotDeploymentStepDownloadingExtracting      RobotDeploymentStep = "DownloadingExtracting"
	RobotDeploymentStepExecutingDownloadCondition RobotDeploymentStep = "ExecutingDownloadCondition"
	RobotDeploymentStepExecutingPreLaunch         RobotDeploymentStep = "ExecutingPreLaunch"
	RobotDeploymentStepLaunching                  RobotDeploymentStep = "Launching"
	RobotDeploymentStepExecutingPostLaunch        RobotDeploymentStep = "ExecutingPostLaunch"
	RobotDeploymentStepFinished                   RobotDeploymentStep = "Finished"
)

func (enum RobotDeploymentStep) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum RobotDeploymentStep) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type RobotSoftwareSuiteType string

// Enum values for RobotSoftwareSuiteType
const (
	RobotSoftwareSuiteTypeRos  RobotSoftwareSuiteType = "ROS"
	RobotSoftwareSuiteTypeRos2 RobotSoftwareSuiteType = "ROS2"
)

func (enum RobotSoftwareSuiteType) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum RobotSoftwareSuiteType) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type RobotSoftwareSuiteVersionType string

// Enum values for RobotSoftwareSuiteVersionType
const (
	RobotSoftwareSuiteVersionTypeKinetic RobotSoftwareSuiteVersionType = "Kinetic"
	RobotSoftwareSuiteVersionTypeMelodic RobotSoftwareSuiteVersionType = "Melodic"
	RobotSoftwareSuiteVersionTypeDashing RobotSoftwareSuiteVersionType = "Dashing"
)

func (enum RobotSoftwareSuiteVersionType) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum RobotSoftwareSuiteVersionType) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type RobotStatus string

// Enum values for RobotStatus
const (
	RobotStatusAvailable            RobotStatus = "Available"
	RobotStatusRegistered           RobotStatus = "Registered"
	RobotStatusPendingNewDeployment RobotStatus = "PendingNewDeployment"
	RobotStatusDeploying            RobotStatus = "Deploying"
	RobotStatusFailed               RobotStatus = "Failed"
	RobotStatusInSync               RobotStatus = "InSync"
	RobotStatusNoResponse           RobotStatus = "NoResponse"
)

func (enum RobotStatus) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum RobotStatus) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type SimulationJobErrorCode string

// Enum values for SimulationJobErrorCode
const (
	SimulationJobErrorCodeInternalServiceError                       SimulationJobErrorCode = "InternalServiceError"
	SimulationJobErrorCodeRobotApplicationCrash                      SimulationJobErrorCode = "RobotApplicationCrash"
	SimulationJobErrorCodeSimulationApplicationCrash                 SimulationJobErrorCode = "SimulationApplicationCrash"
	SimulationJobErrorCodeBadPermissionsRobotApplication             SimulationJobErrorCode = "BadPermissionsRobotApplication"
	SimulationJobErrorCodeBadPermissionsSimulationApplication        SimulationJobErrorCode = "BadPermissionsSimulationApplication"
	SimulationJobErrorCodeBadPermissionsS3object                     SimulationJobErrorCode = "BadPermissionsS3Object"
	SimulationJobErrorCodeBadPermissionsS3output                     SimulationJobErrorCode = "BadPermissionsS3Output"
	SimulationJobErrorCodeBadPermissionsCloudwatchLogs               SimulationJobErrorCode = "BadPermissionsCloudwatchLogs"
	SimulationJobErrorCodeSubnetIpLimitExceeded                      SimulationJobErrorCode = "SubnetIpLimitExceeded"
	SimulationJobErrorCodeEnilimitExceeded                           SimulationJobErrorCode = "ENILimitExceeded"
	SimulationJobErrorCodeBadPermissionsUserCredentials              SimulationJobErrorCode = "BadPermissionsUserCredentials"
	SimulationJobErrorCodeInvalidBundleRobotApplication              SimulationJobErrorCode = "InvalidBundleRobotApplication"
	SimulationJobErrorCodeInvalidBundleSimulationApplication         SimulationJobErrorCode = "InvalidBundleSimulationApplication"
	SimulationJobErrorCodeInvalidS3resource                          SimulationJobErrorCode = "InvalidS3Resource"
	SimulationJobErrorCodeMismatchedEtag                             SimulationJobErrorCode = "MismatchedEtag"
	SimulationJobErrorCodeRobotApplicationVersionMismatchedEtag      SimulationJobErrorCode = "RobotApplicationVersionMismatchedEtag"
	SimulationJobErrorCodeSimulationApplicationVersionMismatchedEtag SimulationJobErrorCode = "SimulationApplicationVersionMismatchedEtag"
	SimulationJobErrorCodeResourceNotFound                           SimulationJobErrorCode = "ResourceNotFound"
	SimulationJobErrorCodeInvalidInput                               SimulationJobErrorCode = "InvalidInput"
	SimulationJobErrorCodeWrongRegionS3bucket                        SimulationJobErrorCode = "WrongRegionS3Bucket"
	SimulationJobErrorCodeWrongRegionS3output                        SimulationJobErrorCode = "WrongRegionS3Output"
	SimulationJobErrorCodeWrongRegionRobotApplication                SimulationJobErrorCode = "WrongRegionRobotApplication"
	SimulationJobErrorCodeWrongRegionSimulationApplication           SimulationJobErrorCode = "WrongRegionSimulationApplication"
)

func (enum SimulationJobErrorCode) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum SimulationJobErrorCode) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type SimulationJobStatus string

// Enum values for SimulationJobStatus
const (
	SimulationJobStatusPending       SimulationJobStatus = "Pending"
	SimulationJobStatusPreparing     SimulationJobStatus = "Preparing"
	SimulationJobStatusRunning       SimulationJobStatus = "Running"
	SimulationJobStatusRestarting    SimulationJobStatus = "Restarting"
	SimulationJobStatusCompleted     SimulationJobStatus = "Completed"
	SimulationJobStatusFailed        SimulationJobStatus = "Failed"
	SimulationJobStatusRunningFailed SimulationJobStatus = "RunningFailed"
	SimulationJobStatusTerminating   SimulationJobStatus = "Terminating"
	SimulationJobStatusTerminated    SimulationJobStatus = "Terminated"
	SimulationJobStatusCanceled      SimulationJobStatus = "Canceled"
)

func (enum SimulationJobStatus) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum SimulationJobStatus) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type SimulationSoftwareSuiteType string

// Enum values for SimulationSoftwareSuiteType
const (
	SimulationSoftwareSuiteTypeGazebo     SimulationSoftwareSuiteType = "Gazebo"
	SimulationSoftwareSuiteTypeRosbagPlay SimulationSoftwareSuiteType = "RosbagPlay"
)

func (enum SimulationSoftwareSuiteType) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum SimulationSoftwareSuiteType) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}
