// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package robomaker

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/robomaker/types"
)

const opDescribeRobot = "DescribeRobot"

// DescribeRobotRequest returns a request value for making API operation for
// AWS RoboMaker.
//
// Describes a robot.
//
//    // Example sending a request using DescribeRobotRequest.
//    req := client.DescribeRobotRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/robomaker-2018-06-29/DescribeRobot
func (c *Client) DescribeRobotRequest(input *types.DescribeRobotInput) DescribeRobotRequest {
	op := &aws.Operation{
		Name:       opDescribeRobot,
		HTTPMethod: "POST",
		HTTPPath:   "/describeRobot",
	}

	if input == nil {
		input = &types.DescribeRobotInput{}
	}

	req := c.newRequest(op, input, &types.DescribeRobotOutput{})
	return DescribeRobotRequest{Request: req, Input: input, Copy: c.DescribeRobotRequest}
}

// DescribeRobotRequest is the request type for the
// DescribeRobot API operation.
type DescribeRobotRequest struct {
	*aws.Request
	Input *types.DescribeRobotInput
	Copy  func(*types.DescribeRobotInput) DescribeRobotRequest
}

// Send marshals and sends the DescribeRobot API request.
func (r DescribeRobotRequest) Send(ctx context.Context) (*DescribeRobotResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &DescribeRobotResponse{
		DescribeRobotOutput: r.Request.Data.(*types.DescribeRobotOutput),
		response:            &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// DescribeRobotResponse is the response type for the
// DescribeRobot API operation.
type DescribeRobotResponse struct {
	*types.DescribeRobotOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// DescribeRobot request.
func (r *DescribeRobotResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
