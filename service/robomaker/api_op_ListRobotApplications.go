// Code generated by smithy-go-codegen DO NOT EDIT.

package robomaker

import (
	"context"
	awsmiddleware "github.com/aws/aws-sdk-go-v2/aws/middleware"
	"github.com/aws/aws-sdk-go-v2/aws/signer/v4"
	"github.com/aws/aws-sdk-go-v2/service/robomaker/types"
	"github.com/awslabs/smithy-go/middleware"
	smithyhttp "github.com/awslabs/smithy-go/transport/http"
)

// Returns a list of robot application. You can optionally provide filters to
// retrieve specific robot applications.
func (c *Client) ListRobotApplications(ctx context.Context, params *ListRobotApplicationsInput, optFns ...func(*Options)) (*ListRobotApplicationsOutput, error) {
	if params == nil {
		params = &ListRobotApplicationsInput{}
	}

	result, metadata, err := c.invokeOperation(ctx, "ListRobotApplications", params, optFns, addOperationListRobotApplicationsMiddlewares)
	if err != nil {
		return nil, err
	}

	out := result.(*ListRobotApplicationsOutput)
	out.ResultMetadata = metadata
	return out, nil
}

type ListRobotApplicationsInput struct {

	// Optional filters to limit results. The filter name name is supported. When
	// filtering, you must use the complete value of the filtered item. You can use up
	// to three filters.
	Filters []*types.Filter

	// When this parameter is used, ListRobotApplications only returns maxResults
	// results in a single page along with a nextToken response element. The remaining
	// results of the initial request can be seen by sending another
	// ListRobotApplications request with the returned nextToken value. This value can
	// be between 1 and 100. If this parameter is not used, then ListRobotApplications
	// returns up to 100 results and a nextToken value if applicable.
	MaxResults *int32

	// The nextToken value returned from a previous paginated ListRobotApplications
	// request where maxResults was used and the results exceeded the value of that
	// parameter. Pagination continues from the end of the previous results that
	// returned the nextToken value.
	NextToken *string

	// The version qualifier of the robot application.
	VersionQualifier *string
}

type ListRobotApplicationsOutput struct {

	// The nextToken value to include in a future ListRobotApplications request. When
	// the results of a ListRobotApplications request exceed maxResults, this value can
	// be used to retrieve the next page of results. This value is null when there are
	// no more results to return.
	NextToken *string

	// A list of robot application summaries that meet the criteria of the request.
	RobotApplicationSummaries []*types.RobotApplicationSummary

	// Metadata pertaining to the operation's result.
	ResultMetadata middleware.Metadata
}

func addOperationListRobotApplicationsMiddlewares(stack *middleware.Stack, options Options) (err error) {
	err = stack.Serialize.Add(&awsRestjson1_serializeOpListRobotApplications{}, middleware.After)
	if err != nil {
		return err
	}
	err = stack.Deserialize.Add(&awsRestjson1_deserializeOpListRobotApplications{}, middleware.After)
	if err != nil {
		return err
	}
	awsmiddleware.AddRequestInvocationIDMiddleware(stack)
	smithyhttp.AddContentLengthMiddleware(stack)
	addResolveEndpointMiddleware(stack, options)
	v4.AddComputePayloadSHA256Middleware(stack)
	addRetryMiddlewares(stack, options)
	addHTTPSignerV4Middleware(stack, options)
	awsmiddleware.AddAttemptClockSkewMiddleware(stack)
	addClientUserAgent(stack)
	smithyhttp.AddErrorCloseResponseBodyMiddleware(stack)
	smithyhttp.AddCloseResponseBodyMiddleware(stack)
	stack.Initialize.Add(newServiceMetadataMiddleware_opListRobotApplications(options.Region), middleware.Before)
	addRequestIDRetrieverMiddleware(stack)
	addResponseErrorMiddleware(stack)
	return nil
}

func newServiceMetadataMiddleware_opListRobotApplications(region string) awsmiddleware.RegisterServiceMetadata {
	return awsmiddleware.RegisterServiceMetadata{
		Region:        region,
		ServiceID:     ServiceID,
		SigningName:   "robomaker",
		OperationName: "ListRobotApplications",
	}
}
