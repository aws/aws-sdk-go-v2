// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package robomaker

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/robomaker/types"
)

const opCreateSimulationApplicationVersion = "CreateSimulationApplicationVersion"

// CreateSimulationApplicationVersionRequest returns a request value for making API operation for
// AWS RoboMaker.
//
// Creates a simulation application with a specific revision id.
//
//    // Example sending a request using CreateSimulationApplicationVersionRequest.
//    req := client.CreateSimulationApplicationVersionRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/robomaker-2018-06-29/CreateSimulationApplicationVersion
func (c *Client) CreateSimulationApplicationVersionRequest(input *types.CreateSimulationApplicationVersionInput) CreateSimulationApplicationVersionRequest {
	op := &aws.Operation{
		Name:       opCreateSimulationApplicationVersion,
		HTTPMethod: "POST",
		HTTPPath:   "/createSimulationApplicationVersion",
	}

	if input == nil {
		input = &types.CreateSimulationApplicationVersionInput{}
	}

	req := c.newRequest(op, input, &types.CreateSimulationApplicationVersionOutput{})
	return CreateSimulationApplicationVersionRequest{Request: req, Input: input, Copy: c.CreateSimulationApplicationVersionRequest}
}

// CreateSimulationApplicationVersionRequest is the request type for the
// CreateSimulationApplicationVersion API operation.
type CreateSimulationApplicationVersionRequest struct {
	*aws.Request
	Input *types.CreateSimulationApplicationVersionInput
	Copy  func(*types.CreateSimulationApplicationVersionInput) CreateSimulationApplicationVersionRequest
}

// Send marshals and sends the CreateSimulationApplicationVersion API request.
func (r CreateSimulationApplicationVersionRequest) Send(ctx context.Context) (*CreateSimulationApplicationVersionResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &CreateSimulationApplicationVersionResponse{
		CreateSimulationApplicationVersionOutput: r.Request.Data.(*types.CreateSimulationApplicationVersionOutput),
		response:                                 &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// CreateSimulationApplicationVersionResponse is the response type for the
// CreateSimulationApplicationVersion API operation.
type CreateSimulationApplicationVersionResponse struct {
	*types.CreateSimulationApplicationVersionOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// CreateSimulationApplicationVersion request.
func (r *CreateSimulationApplicationVersionResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
