// Code generated by smithy-go-codegen DO NOT EDIT.

package robomaker

import (
	"context"
	awsmiddleware "github.com/aws/aws-sdk-go-v2/aws/middleware"
	"github.com/aws/aws-sdk-go-v2/aws/retry"
	"github.com/aws/aws-sdk-go-v2/aws/signer/v4"
	"github.com/aws/aws-sdk-go-v2/service/robomaker/types"
	smithy "github.com/awslabs/smithy-go"
	"github.com/awslabs/smithy-go/middleware"
	smithyhttp "github.com/awslabs/smithy-go/transport/http"
	"time"
)

// Describes a simulation job batch.
func (c *Client) DescribeSimulationJobBatch(ctx context.Context, params *DescribeSimulationJobBatchInput, optFns ...func(*Options)) (*DescribeSimulationJobBatchOutput, error) {
	stack := middleware.NewStack("DescribeSimulationJobBatch", smithyhttp.NewStackRequest)
	options := c.options.Copy()
	for _, fn := range optFns {
		fn(&options)
	}
	addawsRestjson1_serdeOpDescribeSimulationJobBatchMiddlewares(stack)
	awsmiddleware.AddRequestInvocationIDMiddleware(stack)
	smithyhttp.AddContentLengthMiddleware(stack)
	AddResolveEndpointMiddleware(stack, options)
	v4.AddComputePayloadSHA256Middleware(stack)
	retry.AddRetryMiddlewares(stack, options)
	addHTTPSignerV4Middleware(stack, options)
	awsmiddleware.AddAttemptClockSkewMiddleware(stack)
	addClientUserAgent(stack)
	smithyhttp.AddErrorCloseResponseBodyMiddleware(stack)
	smithyhttp.AddCloseResponseBodyMiddleware(stack)
	addOpDescribeSimulationJobBatchValidationMiddleware(stack)
	stack.Initialize.Add(newServiceMetadataMiddleware_opDescribeSimulationJobBatch(options.Region), middleware.Before)

	for _, fn := range options.APIOptions {
		if err := fn(stack); err != nil {
			return nil, err
		}
	}
	handler := middleware.DecorateHandler(smithyhttp.NewClientHandler(options.HTTPClient), stack)
	result, metadata, err := handler.Handle(ctx, params)
	if err != nil {
		return nil, &smithy.OperationError{
			ServiceID:     ServiceID,
			OperationName: "DescribeSimulationJobBatch",
			Err:           err,
		}
	}
	out := result.(*DescribeSimulationJobBatchOutput)
	out.ResultMetadata = metadata
	return out, nil
}

type DescribeSimulationJobBatchInput struct {
	// The id of the batch to describe.
	Batch *string
}

type DescribeSimulationJobBatchOutput struct {
	// Unique, case-sensitive identifier that you provide to ensure the idempotency of
	// the request.
	ClientRequestToken *string
	// The reason the simulation job batch failed.
	FailureReason *string
	// The time, in milliseconds since the epoch, when the simulation job batch was
	// last updated.
	LastUpdatedAt *time.Time
	// The time, in milliseconds since the epoch, when the simulation job batch was
	// created.
	CreatedAt *time.Time
	// The status of the batch. Pending The simulation job batch request is pending.
	// InProgress The simulation job batch is in progress. Failed The simulation job
	// batch failed. One or more simulation job requests could not be completed due to
	// an internal failure (like InternalServiceError). See failureCode and
	// failureReason for more information. Completed The simulation batch job
	// completed. A batch is complete when (1) there are no pending simulation job
	// requests in the batch and none of the failed simulation job requests are due to
	// InternalServiceError and (2) when all created simulation jobs have reached a
	// terminal state (for example, Completed or Failed). Canceled The simulation batch
	// job was cancelled. Canceling The simulation batch job is being cancelled.
	// Completing The simulation batch job is completing. TimingOut The simulation job
	// batch is timing out. If a batch timing out, and there are pending requests that
	// were failing due to an internal failure (like InternalServiceError), the batch
	// status will be Failed. If there are no such failing request, the batch status
	// will be TimedOut. TimedOut The simulation batch job timed out.
	Status types.SimulationJobBatchStatus
	// A list of pending simulation job requests. These requests have not yet been
	// created into simulation jobs.
	PendingRequests []*types.SimulationJobRequest
	// A list of created simulation job summaries.
	CreatedRequests []*types.SimulationJobSummary
	// The Amazon Resource Name (ARN) of the batch.
	Arn *string
	// A map that contains tag keys and tag values that are attached to the simulation
	// job batch.
	Tags map[string]*string
	// The failure code of the simulation job batch.
	FailureCode types.SimulationJobBatchErrorCode
	// The batch policy.
	BatchPolicy *types.BatchPolicy
	// A list of failed create simulation job requests. The request failed to be
	// created into a simulation job. Failed requests do not have a simulation job ID.
	FailedRequests []*types.FailedCreateSimulationJobRequest

	// Metadata pertaining to the operation's result.
	ResultMetadata middleware.Metadata
}

func addawsRestjson1_serdeOpDescribeSimulationJobBatchMiddlewares(stack *middleware.Stack) {
	stack.Serialize.Add(&awsRestjson1_serializeOpDescribeSimulationJobBatch{}, middleware.After)
	stack.Deserialize.Add(&awsRestjson1_deserializeOpDescribeSimulationJobBatch{}, middleware.After)
}

func newServiceMetadataMiddleware_opDescribeSimulationJobBatch(region string) awsmiddleware.RegisterServiceMetadata {
	return awsmiddleware.RegisterServiceMetadata{
		Region:        region,
		ServiceID:     ServiceID,
		SigningName:   "robomaker",
		OperationName: "DescribeSimulationJobBatch",
	}
}
