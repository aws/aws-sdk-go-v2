// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package robomaker

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/robomaker/types"
)

const opCreateRobot = "CreateRobot"

// CreateRobotRequest returns a request value for making API operation for
// AWS RoboMaker.
//
// Creates a robot.
//
//    // Example sending a request using CreateRobotRequest.
//    req := client.CreateRobotRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/robomaker-2018-06-29/CreateRobot
func (c *Client) CreateRobotRequest(input *types.CreateRobotInput) CreateRobotRequest {
	op := &aws.Operation{
		Name:       opCreateRobot,
		HTTPMethod: "POST",
		HTTPPath:   "/createRobot",
	}

	if input == nil {
		input = &types.CreateRobotInput{}
	}

	req := c.newRequest(op, input, &types.CreateRobotOutput{})
	return CreateRobotRequest{Request: req, Input: input, Copy: c.CreateRobotRequest}
}

// CreateRobotRequest is the request type for the
// CreateRobot API operation.
type CreateRobotRequest struct {
	*aws.Request
	Input *types.CreateRobotInput
	Copy  func(*types.CreateRobotInput) CreateRobotRequest
}

// Send marshals and sends the CreateRobot API request.
func (r CreateRobotRequest) Send(ctx context.Context) (*CreateRobotResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &CreateRobotResponse{
		CreateRobotOutput: r.Request.Data.(*types.CreateRobotOutput),
		response:          &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// CreateRobotResponse is the response type for the
// CreateRobot API operation.
type CreateRobotResponse struct {
	*types.CreateRobotOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// CreateRobot request.
func (r *CreateRobotResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
