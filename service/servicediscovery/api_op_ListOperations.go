// Code generated by smithy-go-codegen DO NOT EDIT.

package servicediscovery

import (
	"context"
	awsmiddleware "github.com/aws/aws-sdk-go-v2/aws/middleware"
	"github.com/aws/aws-sdk-go-v2/aws/retry"
	"github.com/aws/aws-sdk-go-v2/aws/signer/v4"
	"github.com/aws/aws-sdk-go-v2/service/servicediscovery/types"
	smithy "github.com/awslabs/smithy-go"
	"github.com/awslabs/smithy-go/middleware"
	smithyhttp "github.com/awslabs/smithy-go/transport/http"
)

// Lists operations that match the criteria that you specify.
func (c *Client) ListOperations(ctx context.Context, params *ListOperationsInput, optFns ...func(*Options)) (*ListOperationsOutput, error) {
	stack := middleware.NewStack("ListOperations", smithyhttp.NewStackRequest)
	options := c.options.Copy()
	for _, fn := range optFns {
		fn(&options)
	}
	addawsAwsjson11_serdeOpListOperationsMiddlewares(stack)
	awsmiddleware.AddRequestInvocationIDMiddleware(stack)
	smithyhttp.AddContentLengthMiddleware(stack)
	AddResolveEndpointMiddleware(stack, options)
	v4.AddComputePayloadSHA256Middleware(stack)
	retry.AddRetryMiddlewares(stack, options)
	addHTTPSignerV4Middleware(stack, options)
	awsmiddleware.AddAttemptClockSkewMiddleware(stack)
	addClientUserAgent(stack)
	smithyhttp.AddErrorCloseResponseBodyMiddleware(stack)
	smithyhttp.AddCloseResponseBodyMiddleware(stack)
	addOpListOperationsValidationMiddleware(stack)
	stack.Initialize.Add(newServiceMetadataMiddleware_opListOperations(options.Region), middleware.Before)

	for _, fn := range options.APIOptions {
		if err := fn(stack); err != nil {
			return nil, err
		}
	}
	handler := middleware.DecorateHandler(smithyhttp.NewClientHandler(options.HTTPClient), stack)
	result, metadata, err := handler.Handle(ctx, params)
	if err != nil {
		return nil, &smithy.OperationError{
			ServiceID:     ServiceID,
			OperationName: "ListOperations",
			Err:           err,
		}
	}
	out := result.(*ListOperationsOutput)
	out.ResultMetadata = metadata
	return out, nil
}

type ListOperationsInput struct {
	// The maximum number of items that you want AWS Cloud Map to return in the
	// response to a ListOperations request. If you don't specify a value for
	// MaxResults, AWS Cloud Map returns up to 100 operations.
	MaxResults *int32
	// For the first ListOperations request, omit this value. If the response contains
	// NextToken, submit another ListOperations request to get the next group of
	// results. Specify the value of NextToken from the previous response in the next
	// request. AWS Cloud Map gets MaxResults operations and then filters them based on
	// the specified criteria. It's possible that no operations in the first MaxResults
	// operations matched the specified criteria but that subsequent groups of
	// MaxResults operations do contain operations that match the criteria.
	NextToken *string
	// A complex type that contains specifications for the operations that you want to
	// list, for example, operations that you started between a specified start date
	// and end date. If you specify more than one filter, an operation must match all
	// filters to be returned by ListOperations.
	Filters []*types.OperationFilter
}

type ListOperationsOutput struct {
	// If the response contains NextToken, submit another ListOperations request to get
	// the next group of results. Specify the value of NextToken from the previous
	// response in the next request. AWS Cloud Map gets MaxResults operations and then
	// filters them based on the specified criteria. It's possible that no operations
	// in the first MaxResults operations matched the specified criteria but that
	// subsequent groups of MaxResults operations do contain operations that match the
	// criteria.
	NextToken *string
	// Summary information about the operations that match the specified criteria.
	Operations []*types.OperationSummary

	// Metadata pertaining to the operation's result.
	ResultMetadata middleware.Metadata
}

func addawsAwsjson11_serdeOpListOperationsMiddlewares(stack *middleware.Stack) {
	stack.Serialize.Add(&awsAwsjson11_serializeOpListOperations{}, middleware.After)
	stack.Deserialize.Add(&awsAwsjson11_deserializeOpListOperations{}, middleware.After)
}

func newServiceMetadataMiddleware_opListOperations(region string) awsmiddleware.RegisterServiceMetadata {
	return awsmiddleware.RegisterServiceMetadata{
		Region:        region,
		ServiceID:     ServiceID,
		SigningName:   "servicediscovery",
		OperationName: "ListOperations",
	}
}
