// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package servicediscovery

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/servicediscovery/types"
)

const opRegisterInstance = "RegisterInstance"

// RegisterInstanceRequest returns a request value for making API operation for
// AWS Cloud Map.
//
// Creates or updates one or more records and, optionally, creates a health
// check based on the settings in a specified service. When you submit a RegisterInstance
// request, the following occurs:
//
//    * For each DNS record that you define in the service that is specified
//    by ServiceId, a record is created or updated in the hosted zone that is
//    associated with the corresponding namespace.
//
//    * If the service includes HealthCheckConfig, a health check is created
//    based on the settings in the health check configuration.
//
//    * The health check, if any, is associated with each of the new or updated
//    records.
//
// One RegisterInstance request must complete before you can submit another
// request and specify the same service ID and instance ID.
//
// For more information, see CreateService.
//
// When AWS Cloud Map receives a DNS query for the specified DNS name, it returns
// the applicable value:
//
//    * If the health check is healthy: returns all the records
//
//    * If the health check is unhealthy: returns the applicable value for the
//    last healthy instance
//
//    * If you didn't specify a health check configuration: returns all the
//    records
//
// For the current limit on the number of instances that you can register using
// the same namespace and using the same service, see AWS Cloud Map Limits (http://docs.aws.amazon.com/cloud-map/latest/dg/cloud-map-limits.html)
// in the AWS Cloud Map Developer Guide.
//
//    // Example sending a request using RegisterInstanceRequest.
//    req := client.RegisterInstanceRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/servicediscovery-2017-03-14/RegisterInstance
func (c *Client) RegisterInstanceRequest(input *types.RegisterInstanceInput) RegisterInstanceRequest {
	op := &aws.Operation{
		Name:       opRegisterInstance,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &types.RegisterInstanceInput{}
	}

	req := c.newRequest(op, input, &types.RegisterInstanceOutput{})
	return RegisterInstanceRequest{Request: req, Input: input, Copy: c.RegisterInstanceRequest}
}

// RegisterInstanceRequest is the request type for the
// RegisterInstance API operation.
type RegisterInstanceRequest struct {
	*aws.Request
	Input *types.RegisterInstanceInput
	Copy  func(*types.RegisterInstanceInput) RegisterInstanceRequest
}

// Send marshals and sends the RegisterInstance API request.
func (r RegisterInstanceRequest) Send(ctx context.Context) (*RegisterInstanceResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &RegisterInstanceResponse{
		RegisterInstanceOutput: r.Request.Data.(*types.RegisterInstanceOutput),
		response:               &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// RegisterInstanceResponse is the response type for the
// RegisterInstance API operation.
type RegisterInstanceResponse struct {
	*types.RegisterInstanceOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// RegisterInstance request.
func (r *RegisterInstanceResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
