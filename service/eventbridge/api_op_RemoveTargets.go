// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package eventbridge

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/eventbridge/types"
)

const opRemoveTargets = "RemoveTargets"

// RemoveTargetsRequest returns a request value for making API operation for
// Amazon EventBridge.
//
// Removes the specified targets from the specified rule. When the rule is triggered,
// those targets are no longer be invoked.
//
// When you remove a target, when the associated rule triggers, removed targets
// might continue to be invoked. Allow a short period of time for changes to
// take effect.
//
// This action can partially fail if too many requests are made at the same
// time. If that happens, FailedEntryCount is non-zero in the response and each
// entry in FailedEntries provides the ID of the failed target and the error
// code.
//
//    // Example sending a request using RemoveTargetsRequest.
//    req := client.RemoveTargetsRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/eventbridge-2015-10-07/RemoveTargets
func (c *Client) RemoveTargetsRequest(input *types.RemoveTargetsInput) RemoveTargetsRequest {
	op := &aws.Operation{
		Name:       opRemoveTargets,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &types.RemoveTargetsInput{}
	}

	req := c.newRequest(op, input, &types.RemoveTargetsOutput{})
	return RemoveTargetsRequest{Request: req, Input: input, Copy: c.RemoveTargetsRequest}
}

// RemoveTargetsRequest is the request type for the
// RemoveTargets API operation.
type RemoveTargetsRequest struct {
	*aws.Request
	Input *types.RemoveTargetsInput
	Copy  func(*types.RemoveTargetsInput) RemoveTargetsRequest
}

// Send marshals and sends the RemoveTargets API request.
func (r RemoveTargetsRequest) Send(ctx context.Context) (*RemoveTargetsResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &RemoveTargetsResponse{
		RemoveTargetsOutput: r.Request.Data.(*types.RemoveTargetsOutput),
		response:            &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// RemoveTargetsResponse is the response type for the
// RemoveTargets API operation.
type RemoveTargetsResponse struct {
	*types.RemoveTargetsOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// RemoveTargets request.
func (r *RemoveTargetsResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
