// Code generated by smithy-go-codegen DO NOT EDIT.

package types

type AssignPublicIp string

// Enum values for AssignPublicIp
const (
	AssignPublicIpEnabled  AssignPublicIp = "ENABLED"
	AssignPublicIpDisabled AssignPublicIp = "DISABLED"
)

// Values returns all known values for AssignPublicIp. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (AssignPublicIp) Values() []AssignPublicIp {
	return []AssignPublicIp{
		"ENABLED",
		"DISABLED",
	}
}

type EventSourceState string

// Enum values for EventSourceState
const (
	EventSourceStatePending EventSourceState = "PENDING"
	EventSourceStateActive  EventSourceState = "ACTIVE"
	EventSourceStateDeleted EventSourceState = "DELETED"
)

// Values returns all known values for EventSourceState. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (EventSourceState) Values() []EventSourceState {
	return []EventSourceState{
		"PENDING",
		"ACTIVE",
		"DELETED",
	}
}

type LaunchType string

// Enum values for LaunchType
const (
	LaunchTypeEc2     LaunchType = "EC2"
	LaunchTypeFargate LaunchType = "FARGATE"
)

// Values returns all known values for LaunchType. Note that this can be expanded
// in the future, and so it is only as up to date as the client. The ordering of
// this slice is not guaranteed to be stable across updates.
func (LaunchType) Values() []LaunchType {
	return []LaunchType{
		"EC2",
		"FARGATE",
	}
}

type RuleState string

// Enum values for RuleState
const (
	RuleStateEnabled  RuleState = "ENABLED"
	RuleStateDisabled RuleState = "DISABLED"
)

// Values returns all known values for RuleState. Note that this can be expanded in
// the future, and so it is only as up to date as the client. The ordering of this
// slice is not guaranteed to be stable across updates.
func (RuleState) Values() []RuleState {
	return []RuleState{
		"ENABLED",
		"DISABLED",
	}
}
