// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package eventbridge

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/eventbridge/types"
)

const opListPartnerEventSourceAccounts = "ListPartnerEventSourceAccounts"

// ListPartnerEventSourceAccountsRequest returns a request value for making API operation for
// Amazon EventBridge.
//
// An SaaS partner can use this operation to display the AWS account ID that
// a particular partner event source name is associated with.
//
// This operation is used by SaaS partners, not by AWS customers.
//
//    // Example sending a request using ListPartnerEventSourceAccountsRequest.
//    req := client.ListPartnerEventSourceAccountsRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/eventbridge-2015-10-07/ListPartnerEventSourceAccounts
func (c *Client) ListPartnerEventSourceAccountsRequest(input *types.ListPartnerEventSourceAccountsInput) ListPartnerEventSourceAccountsRequest {
	op := &aws.Operation{
		Name:       opListPartnerEventSourceAccounts,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &types.ListPartnerEventSourceAccountsInput{}
	}

	req := c.newRequest(op, input, &types.ListPartnerEventSourceAccountsOutput{})
	return ListPartnerEventSourceAccountsRequest{Request: req, Input: input, Copy: c.ListPartnerEventSourceAccountsRequest}
}

// ListPartnerEventSourceAccountsRequest is the request type for the
// ListPartnerEventSourceAccounts API operation.
type ListPartnerEventSourceAccountsRequest struct {
	*aws.Request
	Input *types.ListPartnerEventSourceAccountsInput
	Copy  func(*types.ListPartnerEventSourceAccountsInput) ListPartnerEventSourceAccountsRequest
}

// Send marshals and sends the ListPartnerEventSourceAccounts API request.
func (r ListPartnerEventSourceAccountsRequest) Send(ctx context.Context) (*ListPartnerEventSourceAccountsResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &ListPartnerEventSourceAccountsResponse{
		ListPartnerEventSourceAccountsOutput: r.Request.Data.(*types.ListPartnerEventSourceAccountsOutput),
		response:                             &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// ListPartnerEventSourceAccountsResponse is the response type for the
// ListPartnerEventSourceAccounts API operation.
type ListPartnerEventSourceAccountsResponse struct {
	*types.ListPartnerEventSourceAccountsOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// ListPartnerEventSourceAccounts request.
func (r *ListPartnerEventSourceAccountsResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
