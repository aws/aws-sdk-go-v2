// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package cognitosync

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/private/protocol"
	"github.com/aws/aws-sdk-go-v2/private/protocol/restjson"
	"github.com/aws/aws-sdk-go-v2/service/cognitosync/types"
)

const opSetCognitoEvents = "SetCognitoEvents"

// SetCognitoEventsRequest returns a request value for making API operation for
// Amazon Cognito Sync.
//
// Sets the AWS Lambda function for a given event type for an identity pool.
// This request only updates the key/value pair specified. Other key/values
// pairs are not updated. To remove a key value pair, pass a empty value for
// the particular key.
//
// This API can only be called with developer credentials. You cannot call this
// API with the temporary user credentials provided by Cognito Identity.
//
//    // Example sending a request using SetCognitoEventsRequest.
//    req := client.SetCognitoEventsRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/cognito-sync-2014-06-30/SetCognitoEvents
func (c *Client) SetCognitoEventsRequest(input *types.SetCognitoEventsInput) SetCognitoEventsRequest {
	op := &aws.Operation{
		Name:       opSetCognitoEvents,
		HTTPMethod: "POST",
		HTTPPath:   "/identitypools/{IdentityPoolId}/events",
	}

	if input == nil {
		input = &types.SetCognitoEventsInput{}
	}

	req := c.newRequest(op, input, &types.SetCognitoEventsOutput{})
	req.Handlers.Unmarshal.Remove(restjson.UnmarshalHandler)
	req.Handlers.Unmarshal.PushBackNamed(protocol.UnmarshalDiscardBodyHandler)
	return SetCognitoEventsRequest{Request: req, Input: input, Copy: c.SetCognitoEventsRequest}
}

// SetCognitoEventsRequest is the request type for the
// SetCognitoEvents API operation.
type SetCognitoEventsRequest struct {
	*aws.Request
	Input *types.SetCognitoEventsInput
	Copy  func(*types.SetCognitoEventsInput) SetCognitoEventsRequest
}

// Send marshals and sends the SetCognitoEvents API request.
func (r SetCognitoEventsRequest) Send(ctx context.Context) (*SetCognitoEventsResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &SetCognitoEventsResponse{
		SetCognitoEventsOutput: r.Request.Data.(*types.SetCognitoEventsOutput),
		response:               &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// SetCognitoEventsResponse is the response type for the
// SetCognitoEvents API operation.
type SetCognitoEventsResponse struct {
	*types.SetCognitoEventsOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// SetCognitoEvents request.
func (r *SetCognitoEventsResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
