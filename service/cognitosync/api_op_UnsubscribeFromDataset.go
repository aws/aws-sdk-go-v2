// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package cognitosync

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/cognitosync/types"
)

const opUnsubscribeFromDataset = "UnsubscribeFromDataset"

// UnsubscribeFromDatasetRequest returns a request value for making API operation for
// Amazon Cognito Sync.
//
// Unsubscribes from receiving notifications when a dataset is modified by another
// device.
//
// This API can only be called with temporary credentials provided by Cognito
// Identity. You cannot call this API with developer credentials.
//
//    // Example sending a request using UnsubscribeFromDatasetRequest.
//    req := client.UnsubscribeFromDatasetRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/cognito-sync-2014-06-30/UnsubscribeFromDataset
func (c *Client) UnsubscribeFromDatasetRequest(input *types.UnsubscribeFromDatasetInput) UnsubscribeFromDatasetRequest {
	op := &aws.Operation{
		Name:       opUnsubscribeFromDataset,
		HTTPMethod: "DELETE",
		HTTPPath:   "/identitypools/{IdentityPoolId}/identities/{IdentityId}/datasets/{DatasetName}/subscriptions/{DeviceId}",
	}

	if input == nil {
		input = &types.UnsubscribeFromDatasetInput{}
	}

	req := c.newRequest(op, input, &types.UnsubscribeFromDatasetOutput{})
	return UnsubscribeFromDatasetRequest{Request: req, Input: input, Copy: c.UnsubscribeFromDatasetRequest}
}

// UnsubscribeFromDatasetRequest is the request type for the
// UnsubscribeFromDataset API operation.
type UnsubscribeFromDatasetRequest struct {
	*aws.Request
	Input *types.UnsubscribeFromDatasetInput
	Copy  func(*types.UnsubscribeFromDatasetInput) UnsubscribeFromDatasetRequest
}

// Send marshals and sends the UnsubscribeFromDataset API request.
func (r UnsubscribeFromDatasetRequest) Send(ctx context.Context) (*UnsubscribeFromDatasetResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &UnsubscribeFromDatasetResponse{
		UnsubscribeFromDatasetOutput: r.Request.Data.(*types.UnsubscribeFromDatasetOutput),
		response:                     &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// UnsubscribeFromDatasetResponse is the response type for the
// UnsubscribeFromDataset API operation.
type UnsubscribeFromDatasetResponse struct {
	*types.UnsubscribeFromDatasetOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// UnsubscribeFromDataset request.
func (r *UnsubscribeFromDatasetResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
