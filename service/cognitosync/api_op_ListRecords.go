// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package cognitosync

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/cognitosync/types"
)

const opListRecords = "ListRecords"

// ListRecordsRequest returns a request value for making API operation for
// Amazon Cognito Sync.
//
// Gets paginated records, optionally changed after a particular sync count
// for a dataset and identity. With Amazon Cognito Sync, each identity has access
// only to its own data. Thus, the credentials used to make this API call need
// to have access to the identity data.
//
// ListRecords can be called with temporary user credentials provided by Cognito
// Identity or with developer credentials. You should use Cognito Identity credentials
// to make this API call.
//
//    // Example sending a request using ListRecordsRequest.
//    req := client.ListRecordsRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/cognito-sync-2014-06-30/ListRecords
func (c *Client) ListRecordsRequest(input *types.ListRecordsInput) ListRecordsRequest {
	op := &aws.Operation{
		Name:       opListRecords,
		HTTPMethod: "GET",
		HTTPPath:   "/identitypools/{IdentityPoolId}/identities/{IdentityId}/datasets/{DatasetName}/records",
	}

	if input == nil {
		input = &types.ListRecordsInput{}
	}

	req := c.newRequest(op, input, &types.ListRecordsOutput{})
	return ListRecordsRequest{Request: req, Input: input, Copy: c.ListRecordsRequest}
}

// ListRecordsRequest is the request type for the
// ListRecords API operation.
type ListRecordsRequest struct {
	*aws.Request
	Input *types.ListRecordsInput
	Copy  func(*types.ListRecordsInput) ListRecordsRequest
}

// Send marshals and sends the ListRecords API request.
func (r ListRecordsRequest) Send(ctx context.Context) (*ListRecordsResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &ListRecordsResponse{
		ListRecordsOutput: r.Request.Data.(*types.ListRecordsOutput),
		response:          &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// ListRecordsResponse is the response type for the
// ListRecords API operation.
type ListRecordsResponse struct {
	*types.ListRecordsOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// ListRecords request.
func (r *ListRecordsResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
