// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package cognitosync

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/cognitosync/types"
)

const opDescribeIdentityPoolUsage = "DescribeIdentityPoolUsage"

// DescribeIdentityPoolUsageRequest returns a request value for making API operation for
// Amazon Cognito Sync.
//
// Gets usage details (for example, data storage) about a particular identity
// pool.
//
// This API can only be called with developer credentials. You cannot call this
// API with the temporary user credentials provided by Cognito Identity.
//
//    // Example sending a request using DescribeIdentityPoolUsageRequest.
//    req := client.DescribeIdentityPoolUsageRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/cognito-sync-2014-06-30/DescribeIdentityPoolUsage
func (c *Client) DescribeIdentityPoolUsageRequest(input *types.DescribeIdentityPoolUsageInput) DescribeIdentityPoolUsageRequest {
	op := &aws.Operation{
		Name:       opDescribeIdentityPoolUsage,
		HTTPMethod: "GET",
		HTTPPath:   "/identitypools/{IdentityPoolId}",
	}

	if input == nil {
		input = &types.DescribeIdentityPoolUsageInput{}
	}

	req := c.newRequest(op, input, &types.DescribeIdentityPoolUsageOutput{})
	return DescribeIdentityPoolUsageRequest{Request: req, Input: input, Copy: c.DescribeIdentityPoolUsageRequest}
}

// DescribeIdentityPoolUsageRequest is the request type for the
// DescribeIdentityPoolUsage API operation.
type DescribeIdentityPoolUsageRequest struct {
	*aws.Request
	Input *types.DescribeIdentityPoolUsageInput
	Copy  func(*types.DescribeIdentityPoolUsageInput) DescribeIdentityPoolUsageRequest
}

// Send marshals and sends the DescribeIdentityPoolUsage API request.
func (r DescribeIdentityPoolUsageRequest) Send(ctx context.Context) (*DescribeIdentityPoolUsageResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &DescribeIdentityPoolUsageResponse{
		DescribeIdentityPoolUsageOutput: r.Request.Data.(*types.DescribeIdentityPoolUsageOutput),
		response:                        &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// DescribeIdentityPoolUsageResponse is the response type for the
// DescribeIdentityPoolUsage API operation.
type DescribeIdentityPoolUsageResponse struct {
	*types.DescribeIdentityPoolUsageOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// DescribeIdentityPoolUsage request.
func (r *DescribeIdentityPoolUsageResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
