// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package cognitosync

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/cognitosync/types"
)

const opSubscribeToDataset = "SubscribeToDataset"

// SubscribeToDatasetRequest returns a request value for making API operation for
// Amazon Cognito Sync.
//
// Subscribes to receive notifications when a dataset is modified by another
// device.
//
// This API can only be called with temporary credentials provided by Cognito
// Identity. You cannot call this API with developer credentials.
//
//    // Example sending a request using SubscribeToDatasetRequest.
//    req := client.SubscribeToDatasetRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/cognito-sync-2014-06-30/SubscribeToDataset
func (c *Client) SubscribeToDatasetRequest(input *types.SubscribeToDatasetInput) SubscribeToDatasetRequest {
	op := &aws.Operation{
		Name:       opSubscribeToDataset,
		HTTPMethod: "POST",
		HTTPPath:   "/identitypools/{IdentityPoolId}/identities/{IdentityId}/datasets/{DatasetName}/subscriptions/{DeviceId}",
	}

	if input == nil {
		input = &types.SubscribeToDatasetInput{}
	}

	req := c.newRequest(op, input, &types.SubscribeToDatasetOutput{})
	return SubscribeToDatasetRequest{Request: req, Input: input, Copy: c.SubscribeToDatasetRequest}
}

// SubscribeToDatasetRequest is the request type for the
// SubscribeToDataset API operation.
type SubscribeToDatasetRequest struct {
	*aws.Request
	Input *types.SubscribeToDatasetInput
	Copy  func(*types.SubscribeToDatasetInput) SubscribeToDatasetRequest
}

// Send marshals and sends the SubscribeToDataset API request.
func (r SubscribeToDatasetRequest) Send(ctx context.Context) (*SubscribeToDatasetResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &SubscribeToDatasetResponse{
		SubscribeToDatasetOutput: r.Request.Data.(*types.SubscribeToDatasetOutput),
		response:                 &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// SubscribeToDatasetResponse is the response type for the
// SubscribeToDataset API operation.
type SubscribeToDatasetResponse struct {
	*types.SubscribeToDatasetOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// SubscribeToDataset request.
func (r *SubscribeToDatasetResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
