// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package kendra

type AdditionalResultAttributeValueType string

// Enum values for AdditionalResultAttributeValueType
const (
	AdditionalResultAttributeValueTypeTextWithHighlightsValue AdditionalResultAttributeValueType = "TEXT_WITH_HIGHLIGHTS_VALUE"
)

func (enum AdditionalResultAttributeValueType) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum AdditionalResultAttributeValueType) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type ContentType string

// Enum values for ContentType
const (
	ContentTypePdf       ContentType = "PDF"
	ContentTypeHtml      ContentType = "HTML"
	ContentTypeMsWord    ContentType = "MS_WORD"
	ContentTypePlainText ContentType = "PLAIN_TEXT"
	ContentTypePpt       ContentType = "PPT"
)

func (enum ContentType) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum ContentType) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type DataSourceStatus string

// Enum values for DataSourceStatus
const (
	DataSourceStatusCreating DataSourceStatus = "CREATING"
	DataSourceStatusDeleting DataSourceStatus = "DELETING"
	DataSourceStatusFailed   DataSourceStatus = "FAILED"
	DataSourceStatusUpdating DataSourceStatus = "UPDATING"
	DataSourceStatusActive   DataSourceStatus = "ACTIVE"
)

func (enum DataSourceStatus) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum DataSourceStatus) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type DataSourceSyncJobStatus string

// Enum values for DataSourceSyncJobStatus
const (
	DataSourceSyncJobStatusFailed     DataSourceSyncJobStatus = "FAILED"
	DataSourceSyncJobStatusSucceeded  DataSourceSyncJobStatus = "SUCCEEDED"
	DataSourceSyncJobStatusSyncing    DataSourceSyncJobStatus = "SYNCING"
	DataSourceSyncJobStatusIncomplete DataSourceSyncJobStatus = "INCOMPLETE"
	DataSourceSyncJobStatusStopping   DataSourceSyncJobStatus = "STOPPING"
	DataSourceSyncJobStatusAborted    DataSourceSyncJobStatus = "ABORTED"
)

func (enum DataSourceSyncJobStatus) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum DataSourceSyncJobStatus) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type DataSourceType string

// Enum values for DataSourceType
const (
	DataSourceTypeS3         DataSourceType = "S3"
	DataSourceTypeSharepoint DataSourceType = "SHAREPOINT"
	DataSourceTypeDatabase   DataSourceType = "DATABASE"
)

func (enum DataSourceType) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum DataSourceType) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type DatabaseEngineType string

// Enum values for DatabaseEngineType
const (
	DatabaseEngineTypeRdsAuroraMysql      DatabaseEngineType = "RDS_AURORA_MYSQL"
	DatabaseEngineTypeRdsAuroraPostgresql DatabaseEngineType = "RDS_AURORA_POSTGRESQL"
	DatabaseEngineTypeRdsMysql            DatabaseEngineType = "RDS_MYSQL"
	DatabaseEngineTypeRdsPostgresql       DatabaseEngineType = "RDS_POSTGRESQL"
)

func (enum DatabaseEngineType) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum DatabaseEngineType) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type DocumentAttributeValueType string

// Enum values for DocumentAttributeValueType
const (
	DocumentAttributeValueTypeStringValue     DocumentAttributeValueType = "STRING_VALUE"
	DocumentAttributeValueTypeStringListValue DocumentAttributeValueType = "STRING_LIST_VALUE"
	DocumentAttributeValueTypeLongValue       DocumentAttributeValueType = "LONG_VALUE"
	DocumentAttributeValueTypeDateValue       DocumentAttributeValueType = "DATE_VALUE"
)

func (enum DocumentAttributeValueType) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum DocumentAttributeValueType) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type ErrorCode string

// Enum values for ErrorCode
const (
	ErrorCodeInternalError  ErrorCode = "InternalError"
	ErrorCodeInvalidRequest ErrorCode = "InvalidRequest"
)

func (enum ErrorCode) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum ErrorCode) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type FaqStatus string

// Enum values for FaqStatus
const (
	FaqStatusCreating FaqStatus = "CREATING"
	FaqStatusUpdating FaqStatus = "UPDATING"
	FaqStatusActive   FaqStatus = "ACTIVE"
	FaqStatusDeleting FaqStatus = "DELETING"
	FaqStatusFailed   FaqStatus = "FAILED"
)

func (enum FaqStatus) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum FaqStatus) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type IndexStatus string

// Enum values for IndexStatus
const (
	IndexStatusCreating       IndexStatus = "CREATING"
	IndexStatusActive         IndexStatus = "ACTIVE"
	IndexStatusDeleting       IndexStatus = "DELETING"
	IndexStatusFailed         IndexStatus = "FAILED"
	IndexStatusSystemUpdating IndexStatus = "SYSTEM_UPDATING"
)

func (enum IndexStatus) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum IndexStatus) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type Order string

// Enum values for Order
const (
	OrderAscending  Order = "ASCENDING"
	OrderDescending Order = "DESCENDING"
)

func (enum Order) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum Order) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type PrincipalType string

// Enum values for PrincipalType
const (
	PrincipalTypeUser  PrincipalType = "USER"
	PrincipalTypeGroup PrincipalType = "GROUP"
)

func (enum PrincipalType) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum PrincipalType) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type QueryResultType string

// Enum values for QueryResultType
const (
	QueryResultTypeDocument       QueryResultType = "DOCUMENT"
	QueryResultTypeQuestionAnswer QueryResultType = "QUESTION_ANSWER"
	QueryResultTypeAnswer         QueryResultType = "ANSWER"
)

func (enum QueryResultType) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum QueryResultType) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type ReadAccessType string

// Enum values for ReadAccessType
const (
	ReadAccessTypeAllow ReadAccessType = "ALLOW"
	ReadAccessTypeDeny  ReadAccessType = "DENY"
)

func (enum ReadAccessType) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum ReadAccessType) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type RelevanceType string

// Enum values for RelevanceType
const (
	RelevanceTypeRelevant    RelevanceType = "RELEVANT"
	RelevanceTypeNotRelevant RelevanceType = "NOT_RELEVANT"
)

func (enum RelevanceType) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum RelevanceType) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type SharePointVersion string

// Enum values for SharePointVersion
const (
	SharePointVersionSharepointOnline SharePointVersion = "SHAREPOINT_ONLINE"
)

func (enum SharePointVersion) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum SharePointVersion) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}
