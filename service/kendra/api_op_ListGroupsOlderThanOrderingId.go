// Code generated by smithy-go-codegen DO NOT EDIT.

package kendra

import (
	"context"
	awsmiddleware "github.com/aws/aws-sdk-go-v2/aws/middleware"
	"github.com/aws/aws-sdk-go-v2/aws/signer/v4"
	"github.com/aws/aws-sdk-go-v2/service/kendra/types"
	"github.com/aws/smithy-go/middleware"
	smithyhttp "github.com/aws/smithy-go/transport/http"
)

// Provides a list of groups that are mapped to users before a given ordering or
// timestamp identifier.
func (c *Client) ListGroupsOlderThanOrderingId(ctx context.Context, params *ListGroupsOlderThanOrderingIdInput, optFns ...func(*Options)) (*ListGroupsOlderThanOrderingIdOutput, error) {
	if params == nil {
		params = &ListGroupsOlderThanOrderingIdInput{}
	}

	result, metadata, err := c.invokeOperation(ctx, "ListGroupsOlderThanOrderingId", params, optFns, c.addOperationListGroupsOlderThanOrderingIdMiddlewares)
	if err != nil {
		return nil, err
	}

	out := result.(*ListGroupsOlderThanOrderingIdOutput)
	out.ResultMetadata = metadata
	return out, nil
}

type ListGroupsOlderThanOrderingIdInput struct {

	// The identifier of the index for getting a list of groups mapped to users before
	// a given ordering or timestamp identifier.
	//
	// This member is required.
	IndexId *string

	// The timestamp identifier used for the latest PUT or DELETE action for mapping
	// users to their groups.
	//
	// This member is required.
	OrderingId *int64

	// The identifier of the data source for getting a list of groups mapped to users
	// before a given ordering timestamp identifier.
	DataSourceId *string

	// The maximum results shown for a list of groups that are mapped to users before a
	// given ordering or timestamp identifier.
	MaxResults *int32

	// The next items in the list of groups that go beyond the maximum.
	NextToken *string

	noSmithyDocumentSerde
}

type ListGroupsOlderThanOrderingIdOutput struct {

	// Summary information for list of groups that are mapped to users before a given
	// ordering or timestamp identifier.
	GroupsSummaries []types.GroupSummary

	// The next items in the list of groups that go beyond the maximum.
	NextToken *string

	// Metadata pertaining to the operation's result.
	ResultMetadata middleware.Metadata

	noSmithyDocumentSerde
}

func (c *Client) addOperationListGroupsOlderThanOrderingIdMiddlewares(stack *middleware.Stack, options Options) (err error) {
	err = stack.Serialize.Add(&awsAwsjson11_serializeOpListGroupsOlderThanOrderingId{}, middleware.After)
	if err != nil {
		return err
	}
	err = stack.Deserialize.Add(&awsAwsjson11_deserializeOpListGroupsOlderThanOrderingId{}, middleware.After)
	if err != nil {
		return err
	}
	if err = addSetLoggerMiddleware(stack, options); err != nil {
		return err
	}
	if err = awsmiddleware.AddClientRequestIDMiddleware(stack); err != nil {
		return err
	}
	if err = smithyhttp.AddComputeContentLengthMiddleware(stack); err != nil {
		return err
	}
	if err = addResolveEndpointMiddleware(stack, options); err != nil {
		return err
	}
	if err = v4.AddComputePayloadSHA256Middleware(stack); err != nil {
		return err
	}
	if err = addRetryMiddlewares(stack, options); err != nil {
		return err
	}
	if err = addHTTPSignerV4Middleware(stack, options); err != nil {
		return err
	}
	if err = awsmiddleware.AddRawResponseToMetadata(stack); err != nil {
		return err
	}
	if err = awsmiddleware.AddRecordResponseTiming(stack); err != nil {
		return err
	}
	if err = addClientUserAgent(stack); err != nil {
		return err
	}
	if err = smithyhttp.AddErrorCloseResponseBodyMiddleware(stack); err != nil {
		return err
	}
	if err = smithyhttp.AddCloseResponseBodyMiddleware(stack); err != nil {
		return err
	}
	if err = addOpListGroupsOlderThanOrderingIdValidationMiddleware(stack); err != nil {
		return err
	}
	if err = stack.Initialize.Add(newServiceMetadataMiddleware_opListGroupsOlderThanOrderingId(options.Region), middleware.Before); err != nil {
		return err
	}
	if err = addRequestIDRetrieverMiddleware(stack); err != nil {
		return err
	}
	if err = addResponseErrorMiddleware(stack); err != nil {
		return err
	}
	if err = addRequestResponseLogging(stack, options); err != nil {
		return err
	}
	return nil
}

func newServiceMetadataMiddleware_opListGroupsOlderThanOrderingId(region string) *awsmiddleware.RegisterServiceMetadata {
	return &awsmiddleware.RegisterServiceMetadata{
		Region:        region,
		ServiceID:     ServiceID,
		SigningName:   "kendra",
		OperationName: "ListGroupsOlderThanOrderingId",
	}
}
