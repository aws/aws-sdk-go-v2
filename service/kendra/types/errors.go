// Code generated by smithy-go-codegen DO NOT EDIT.

package types

import (
	"fmt"
	smithy "github.com/aws/smithy-go"
)

// You don't have sufficient access to perform this action. Please ensure you have
// the required permission policies and user accounts and try again.
type AccessDeniedException struct {
	Message *string

	Code *string

	noSmithyDocumentSerde
}

func (e *AccessDeniedException) Error() string {
	return fmt.Sprintf("%s: %s", e.ErrorCode(), e.ErrorMessage())
}
func (e *AccessDeniedException) ErrorMessage() string {
	if e.Message == nil {
		return ""
	}
	return *e.Message
}
func (e *AccessDeniedException) ErrorCode() string {
	if e.Code == nil {
		return "AccessDeniedException"
	}
	return *e.Code
}
func (e *AccessDeniedException) ErrorFault() smithy.ErrorFault { return smithy.FaultClient }

// A conflict occurred with the request. Please fix any inconsistences with your
// resources and try again.
type ConflictException struct {
	Message *string

	Code *string

	noSmithyDocumentSerde
}

func (e *ConflictException) Error() string {
	return fmt.Sprintf("%s: %s", e.ErrorCode(), e.ErrorMessage())
}
func (e *ConflictException) ErrorMessage() string {
	if e.Message == nil {
		return ""
	}
	return *e.Message
}
func (e *ConflictException) ErrorCode() string {
	if e.Code == nil {
		return "ConflictException"
	}
	return *e.Code
}
func (e *ConflictException) ErrorFault() smithy.ErrorFault { return smithy.FaultClient }

// An issue occurred with the internal server used for your Amazon Kendra service.
// Please wait a few minutes and try again, or contact  Support
// (http://aws.amazon.com/aws.amazon.com/contact-us) for help.
type InternalServerException struct {
	Message *string

	Code *string

	noSmithyDocumentSerde
}

func (e *InternalServerException) Error() string {
	return fmt.Sprintf("%s: %s", e.ErrorCode(), e.ErrorMessage())
}
func (e *InternalServerException) ErrorMessage() string {
	if e.Message == nil {
		return ""
	}
	return *e.Message
}
func (e *InternalServerException) ErrorCode() string {
	if e.Code == nil {
		return "InternalServerException"
	}
	return *e.Code
}
func (e *InternalServerException) ErrorFault() smithy.ErrorFault { return smithy.FaultServer }

// The input to the request is not valid. Please provide the correct input and try
// again.
type InvalidRequestException struct {
	Message *string

	Code *string

	noSmithyDocumentSerde
}

func (e *InvalidRequestException) Error() string {
	return fmt.Sprintf("%s: %s", e.ErrorCode(), e.ErrorMessage())
}
func (e *InvalidRequestException) ErrorMessage() string {
	if e.Message == nil {
		return ""
	}
	return *e.Message
}
func (e *InvalidRequestException) ErrorCode() string {
	if e.Code == nil {
		return "InvalidRequestException"
	}
	return *e.Code
}
func (e *InvalidRequestException) ErrorFault() smithy.ErrorFault { return smithy.FaultClient }

// The resource you want to use already exists. Please check you have provided the
// correct resource and try again.
type ResourceAlreadyExistException struct {
	Message *string

	Code *string

	noSmithyDocumentSerde
}

func (e *ResourceAlreadyExistException) Error() string {
	return fmt.Sprintf("%s: %s", e.ErrorCode(), e.ErrorMessage())
}
func (e *ResourceAlreadyExistException) ErrorMessage() string {
	if e.Message == nil {
		return ""
	}
	return *e.Message
}
func (e *ResourceAlreadyExistException) ErrorCode() string {
	if e.Code == nil {
		return "ResourceAlreadyExistException"
	}
	return *e.Code
}
func (e *ResourceAlreadyExistException) ErrorFault() smithy.ErrorFault { return smithy.FaultClient }

// The resource you want to use is currently in use. Please check you have provided
// the correct resource and try again.
type ResourceInUseException struct {
	Message *string

	Code *string

	noSmithyDocumentSerde
}

func (e *ResourceInUseException) Error() string {
	return fmt.Sprintf("%s: %s", e.ErrorCode(), e.ErrorMessage())
}
func (e *ResourceInUseException) ErrorMessage() string {
	if e.Message == nil {
		return ""
	}
	return *e.Message
}
func (e *ResourceInUseException) ErrorCode() string {
	if e.Code == nil {
		return "ResourceInUseException"
	}
	return *e.Code
}
func (e *ResourceInUseException) ErrorFault() smithy.ErrorFault { return smithy.FaultClient }

// The resource you want to use doesnâ€™t exist. Please check you have provided the
// correct resource and try again.
type ResourceNotFoundException struct {
	Message *string

	Code *string

	noSmithyDocumentSerde
}

func (e *ResourceNotFoundException) Error() string {
	return fmt.Sprintf("%s: %s", e.ErrorCode(), e.ErrorMessage())
}
func (e *ResourceNotFoundException) ErrorMessage() string {
	if e.Message == nil {
		return ""
	}
	return *e.Message
}
func (e *ResourceNotFoundException) ErrorCode() string {
	if e.Code == nil {
		return "ResourceNotFoundException"
	}
	return *e.Code
}
func (e *ResourceNotFoundException) ErrorFault() smithy.ErrorFault { return smithy.FaultClient }

// The resource you want to use isn't available. Please check you have provided the
// correct resource and try again.
type ResourceUnavailableException struct {
	Message *string

	Code *string

	noSmithyDocumentSerde
}

func (e *ResourceUnavailableException) Error() string {
	return fmt.Sprintf("%s: %s", e.ErrorCode(), e.ErrorMessage())
}
func (e *ResourceUnavailableException) ErrorMessage() string {
	if e.Message == nil {
		return ""
	}
	return *e.Message
}
func (e *ResourceUnavailableException) ErrorCode() string {
	if e.Code == nil {
		return "ResourceUnavailableException"
	}
	return *e.Code
}
func (e *ResourceUnavailableException) ErrorFault() smithy.ErrorFault { return smithy.FaultClient }

// You have exceeded the set limits for your Amazon Kendra service. Please see
// Quotas[hyperlink Kendra Quotas pg] for more information, or contact  Support
// (http://aws.amazon.com/aws.amazon.com/contact-us) to inquire about an increase
// of limits.
type ServiceQuotaExceededException struct {
	Message *string

	Code *string

	noSmithyDocumentSerde
}

func (e *ServiceQuotaExceededException) Error() string {
	return fmt.Sprintf("%s: %s", e.ErrorCode(), e.ErrorMessage())
}
func (e *ServiceQuotaExceededException) ErrorMessage() string {
	if e.Message == nil {
		return ""
	}
	return *e.Message
}
func (e *ServiceQuotaExceededException) ErrorCode() string {
	if e.Code == nil {
		return "ServiceQuotaExceededException"
	}
	return *e.Code
}
func (e *ServiceQuotaExceededException) ErrorFault() smithy.ErrorFault { return smithy.FaultClient }

// The request was denied due to request throttling. Please reduce the number of
// requests and try again.
type ThrottlingException struct {
	Message *string

	Code *string

	noSmithyDocumentSerde
}

func (e *ThrottlingException) Error() string {
	return fmt.Sprintf("%s: %s", e.ErrorCode(), e.ErrorMessage())
}
func (e *ThrottlingException) ErrorMessage() string {
	if e.Message == nil {
		return ""
	}
	return *e.Message
}
func (e *ThrottlingException) ErrorCode() string {
	if e.Code == nil {
		return "ThrottlingException"
	}
	return *e.Code
}
func (e *ThrottlingException) ErrorFault() smithy.ErrorFault { return smithy.FaultClient }

// The input fails to satisfy the constraints set by the Amazon Kendra service.
// Please provide the correct input and try again.
type ValidationException struct {
	Message *string

	Code *string

	noSmithyDocumentSerde
}

func (e *ValidationException) Error() string {
	return fmt.Sprintf("%s: %s", e.ErrorCode(), e.ErrorMessage())
}
func (e *ValidationException) ErrorMessage() string {
	if e.Message == nil {
		return ""
	}
	return *e.Message
}
func (e *ValidationException) ErrorCode() string {
	if e.Code == nil {
		return "ValidationException"
	}
	return *e.Code
}
func (e *ValidationException) ErrorFault() smithy.ErrorFault { return smithy.FaultClient }
