// Code generated by smithy-go-codegen DO NOT EDIT.

package types

type AdditionalResultAttributeValueType string

// Enum values for AdditionalResultAttributeValueType
const (
	AdditionalResultAttributeValueTypeText_with_highlights_value AdditionalResultAttributeValueType = "TEXT_WITH_HIGHLIGHTS_VALUE"
)

// Values returns all known values for AdditionalResultAttributeValueType. Note
// that this can be expanded in the future, and so it is only as up to date as the
// client. The ordering of this slice is not guaranteed to be stable across
// updates.
func (AdditionalResultAttributeValueType) Values() []AdditionalResultAttributeValueType {
	return []AdditionalResultAttributeValueType{
		"TEXT_WITH_HIGHLIGHTS_VALUE",
	}
}

type ContentType string

// Enum values for ContentType
const (
	ContentTypePdf        ContentType = "PDF"
	ContentTypeHtml       ContentType = "HTML"
	ContentTypeMs_word    ContentType = "MS_WORD"
	ContentTypePlain_text ContentType = "PLAIN_TEXT"
	ContentTypePpt        ContentType = "PPT"
)

// Values returns all known values for ContentType. Note that this can be expanded
// in the future, and so it is only as up to date as the client. The ordering of
// this slice is not guaranteed to be stable across updates.
func (ContentType) Values() []ContentType {
	return []ContentType{
		"PDF",
		"HTML",
		"MS_WORD",
		"PLAIN_TEXT",
		"PPT",
	}
}

type DatabaseEngineType string

// Enum values for DatabaseEngineType
const (
	DatabaseEngineTypeRds_aurora_mysql      DatabaseEngineType = "RDS_AURORA_MYSQL"
	DatabaseEngineTypeRds_aurora_postgresql DatabaseEngineType = "RDS_AURORA_POSTGRESQL"
	DatabaseEngineTypeRds_mysql             DatabaseEngineType = "RDS_MYSQL"
	DatabaseEngineTypeRds_postgresql        DatabaseEngineType = "RDS_POSTGRESQL"
)

// Values returns all known values for DatabaseEngineType. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (DatabaseEngineType) Values() []DatabaseEngineType {
	return []DatabaseEngineType{
		"RDS_AURORA_MYSQL",
		"RDS_AURORA_POSTGRESQL",
		"RDS_MYSQL",
		"RDS_POSTGRESQL",
	}
}

type DataSourceStatus string

// Enum values for DataSourceStatus
const (
	DataSourceStatusCreating DataSourceStatus = "CREATING"
	DataSourceStatusDeleting DataSourceStatus = "DELETING"
	DataSourceStatusFailed   DataSourceStatus = "FAILED"
	DataSourceStatusUpdating DataSourceStatus = "UPDATING"
	DataSourceStatusActive   DataSourceStatus = "ACTIVE"
)

// Values returns all known values for DataSourceStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (DataSourceStatus) Values() []DataSourceStatus {
	return []DataSourceStatus{
		"CREATING",
		"DELETING",
		"FAILED",
		"UPDATING",
		"ACTIVE",
	}
}

type DataSourceSyncJobStatus string

// Enum values for DataSourceSyncJobStatus
const (
	DataSourceSyncJobStatusFailed           DataSourceSyncJobStatus = "FAILED"
	DataSourceSyncJobStatusSucceeded        DataSourceSyncJobStatus = "SUCCEEDED"
	DataSourceSyncJobStatusSyncing          DataSourceSyncJobStatus = "SYNCING"
	DataSourceSyncJobStatusIncomplete       DataSourceSyncJobStatus = "INCOMPLETE"
	DataSourceSyncJobStatusStopping         DataSourceSyncJobStatus = "STOPPING"
	DataSourceSyncJobStatusAborted          DataSourceSyncJobStatus = "ABORTED"
	DataSourceSyncJobStatusSyncing_indexing DataSourceSyncJobStatus = "SYNCING_INDEXING"
)

// Values returns all known values for DataSourceSyncJobStatus. Note that this can
// be expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (DataSourceSyncJobStatus) Values() []DataSourceSyncJobStatus {
	return []DataSourceSyncJobStatus{
		"FAILED",
		"SUCCEEDED",
		"SYNCING",
		"INCOMPLETE",
		"STOPPING",
		"ABORTED",
		"SYNCING_INDEXING",
	}
}

type DataSourceType string

// Enum values for DataSourceType
const (
	DataSourceTypeS3         DataSourceType = "S3"
	DataSourceTypeSharepoint DataSourceType = "SHAREPOINT"
	DataSourceTypeDatabase   DataSourceType = "DATABASE"
	DataSourceTypeSalesforce DataSourceType = "SALESFORCE"
	DataSourceTypeOnedrive   DataSourceType = "ONEDRIVE"
	DataSourceTypeServicenow DataSourceType = "SERVICENOW"
	DataSourceTypeCustom     DataSourceType = "CUSTOM"
)

// Values returns all known values for DataSourceType. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (DataSourceType) Values() []DataSourceType {
	return []DataSourceType{
		"S3",
		"SHAREPOINT",
		"DATABASE",
		"SALESFORCE",
		"ONEDRIVE",
		"SERVICENOW",
		"CUSTOM",
	}
}

type DocumentAttributeValueType string

// Enum values for DocumentAttributeValueType
const (
	DocumentAttributeValueTypeString_value      DocumentAttributeValueType = "STRING_VALUE"
	DocumentAttributeValueTypeString_list_value DocumentAttributeValueType = "STRING_LIST_VALUE"
	DocumentAttributeValueTypeLong_value        DocumentAttributeValueType = "LONG_VALUE"
	DocumentAttributeValueTypeDate_value        DocumentAttributeValueType = "DATE_VALUE"
)

// Values returns all known values for DocumentAttributeValueType. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
// The ordering of this slice is not guaranteed to be stable across updates.
func (DocumentAttributeValueType) Values() []DocumentAttributeValueType {
	return []DocumentAttributeValueType{
		"STRING_VALUE",
		"STRING_LIST_VALUE",
		"LONG_VALUE",
		"DATE_VALUE",
	}
}

type ErrorCode string

// Enum values for ErrorCode
const (
	ErrorCodeInternal_error  ErrorCode = "InternalError"
	ErrorCodeInvalid_request ErrorCode = "InvalidRequest"
)

// Values returns all known values for ErrorCode. Note that this can be expanded in
// the future, and so it is only as up to date as the client. The ordering of this
// slice is not guaranteed to be stable across updates.
func (ErrorCode) Values() []ErrorCode {
	return []ErrorCode{
		"InternalError",
		"InvalidRequest",
	}
}

type FaqFileFormat string

// Enum values for FaqFileFormat
const (
	FaqFileFormatCsv             FaqFileFormat = "CSV"
	FaqFileFormatCsv_with_header FaqFileFormat = "CSV_WITH_HEADER"
	FaqFileFormatJson            FaqFileFormat = "JSON"
)

// Values returns all known values for FaqFileFormat. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (FaqFileFormat) Values() []FaqFileFormat {
	return []FaqFileFormat{
		"CSV",
		"CSV_WITH_HEADER",
		"JSON",
	}
}

type FaqStatus string

// Enum values for FaqStatus
const (
	FaqStatusCreating FaqStatus = "CREATING"
	FaqStatusUpdating FaqStatus = "UPDATING"
	FaqStatusActive   FaqStatus = "ACTIVE"
	FaqStatusDeleting FaqStatus = "DELETING"
	FaqStatusFailed   FaqStatus = "FAILED"
)

// Values returns all known values for FaqStatus. Note that this can be expanded in
// the future, and so it is only as up to date as the client. The ordering of this
// slice is not guaranteed to be stable across updates.
func (FaqStatus) Values() []FaqStatus {
	return []FaqStatus{
		"CREATING",
		"UPDATING",
		"ACTIVE",
		"DELETING",
		"FAILED",
	}
}

type IndexEdition string

// Enum values for IndexEdition
const (
	IndexEditionDeveloper_edition  IndexEdition = "DEVELOPER_EDITION"
	IndexEditionEnterprise_edition IndexEdition = "ENTERPRISE_EDITION"
)

// Values returns all known values for IndexEdition. Note that this can be expanded
// in the future, and so it is only as up to date as the client. The ordering of
// this slice is not guaranteed to be stable across updates.
func (IndexEdition) Values() []IndexEdition {
	return []IndexEdition{
		"DEVELOPER_EDITION",
		"ENTERPRISE_EDITION",
	}
}

type IndexStatus string

// Enum values for IndexStatus
const (
	IndexStatusCreating        IndexStatus = "CREATING"
	IndexStatusActive          IndexStatus = "ACTIVE"
	IndexStatusDeleting        IndexStatus = "DELETING"
	IndexStatusFailed          IndexStatus = "FAILED"
	IndexStatusUpdating        IndexStatus = "UPDATING"
	IndexStatusSystem_updating IndexStatus = "SYSTEM_UPDATING"
)

// Values returns all known values for IndexStatus. Note that this can be expanded
// in the future, and so it is only as up to date as the client. The ordering of
// this slice is not guaranteed to be stable across updates.
func (IndexStatus) Values() []IndexStatus {
	return []IndexStatus{
		"CREATING",
		"ACTIVE",
		"DELETING",
		"FAILED",
		"UPDATING",
		"SYSTEM_UPDATING",
	}
}

type Order string

// Enum values for Order
const (
	OrderAscending  Order = "ASCENDING"
	OrderDescending Order = "DESCENDING"
)

// Values returns all known values for Order. Note that this can be expanded in the
// future, and so it is only as up to date as the client. The ordering of this
// slice is not guaranteed to be stable across updates.
func (Order) Values() []Order {
	return []Order{
		"ASCENDING",
		"DESCENDING",
	}
}

type PrincipalType string

// Enum values for PrincipalType
const (
	PrincipalTypeUser  PrincipalType = "USER"
	PrincipalTypeGroup PrincipalType = "GROUP"
)

// Values returns all known values for PrincipalType. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (PrincipalType) Values() []PrincipalType {
	return []PrincipalType{
		"USER",
		"GROUP",
	}
}

type QueryIdentifiersEnclosingOption string

// Enum values for QueryIdentifiersEnclosingOption
const (
	QueryIdentifiersEnclosingOptionDouble_quotes QueryIdentifiersEnclosingOption = "DOUBLE_QUOTES"
	QueryIdentifiersEnclosingOptionNone          QueryIdentifiersEnclosingOption = "NONE"
)

// Values returns all known values for QueryIdentifiersEnclosingOption. Note that
// this can be expanded in the future, and so it is only as up to date as the
// client. The ordering of this slice is not guaranteed to be stable across
// updates.
func (QueryIdentifiersEnclosingOption) Values() []QueryIdentifiersEnclosingOption {
	return []QueryIdentifiersEnclosingOption{
		"DOUBLE_QUOTES",
		"NONE",
	}
}

type QueryResultType string

// Enum values for QueryResultType
const (
	QueryResultTypeDocument        QueryResultType = "DOCUMENT"
	QueryResultTypeQuestion_answer QueryResultType = "QUESTION_ANSWER"
	QueryResultTypeAnswer          QueryResultType = "ANSWER"
)

// Values returns all known values for QueryResultType. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (QueryResultType) Values() []QueryResultType {
	return []QueryResultType{
		"DOCUMENT",
		"QUESTION_ANSWER",
		"ANSWER",
	}
}

type ReadAccessType string

// Enum values for ReadAccessType
const (
	ReadAccessTypeAllow ReadAccessType = "ALLOW"
	ReadAccessTypeDeny  ReadAccessType = "DENY"
)

// Values returns all known values for ReadAccessType. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (ReadAccessType) Values() []ReadAccessType {
	return []ReadAccessType{
		"ALLOW",
		"DENY",
	}
}

type RelevanceType string

// Enum values for RelevanceType
const (
	RelevanceTypeRelevant     RelevanceType = "RELEVANT"
	RelevanceTypeNot_relevant RelevanceType = "NOT_RELEVANT"
)

// Values returns all known values for RelevanceType. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (RelevanceType) Values() []RelevanceType {
	return []RelevanceType{
		"RELEVANT",
		"NOT_RELEVANT",
	}
}

type SalesforceChatterFeedIncludeFilterType string

// Enum values for SalesforceChatterFeedIncludeFilterType
const (
	SalesforceChatterFeedIncludeFilterTypeActive_user   SalesforceChatterFeedIncludeFilterType = "ACTIVE_USER"
	SalesforceChatterFeedIncludeFilterTypeStandard_user SalesforceChatterFeedIncludeFilterType = "STANDARD_USER"
)

// Values returns all known values for SalesforceChatterFeedIncludeFilterType. Note
// that this can be expanded in the future, and so it is only as up to date as the
// client. The ordering of this slice is not guaranteed to be stable across
// updates.
func (SalesforceChatterFeedIncludeFilterType) Values() []SalesforceChatterFeedIncludeFilterType {
	return []SalesforceChatterFeedIncludeFilterType{
		"ACTIVE_USER",
		"STANDARD_USER",
	}
}

type SalesforceKnowledgeArticleState string

// Enum values for SalesforceKnowledgeArticleState
const (
	SalesforceKnowledgeArticleStateDraft     SalesforceKnowledgeArticleState = "DRAFT"
	SalesforceKnowledgeArticleStatePublished SalesforceKnowledgeArticleState = "PUBLISHED"
	SalesforceKnowledgeArticleStateArchived  SalesforceKnowledgeArticleState = "ARCHIVED"
)

// Values returns all known values for SalesforceKnowledgeArticleState. Note that
// this can be expanded in the future, and so it is only as up to date as the
// client. The ordering of this slice is not guaranteed to be stable across
// updates.
func (SalesforceKnowledgeArticleState) Values() []SalesforceKnowledgeArticleState {
	return []SalesforceKnowledgeArticleState{
		"DRAFT",
		"PUBLISHED",
		"ARCHIVED",
	}
}

type SalesforceStandardObjectName string

// Enum values for SalesforceStandardObjectName
const (
	SalesforceStandardObjectNameAccount     SalesforceStandardObjectName = "ACCOUNT"
	SalesforceStandardObjectNameCampaign    SalesforceStandardObjectName = "CAMPAIGN"
	SalesforceStandardObjectNameCase        SalesforceStandardObjectName = "CASE"
	SalesforceStandardObjectNameContact     SalesforceStandardObjectName = "CONTACT"
	SalesforceStandardObjectNameContract    SalesforceStandardObjectName = "CONTRACT"
	SalesforceStandardObjectNameDocument    SalesforceStandardObjectName = "DOCUMENT"
	SalesforceStandardObjectNameGroup       SalesforceStandardObjectName = "GROUP"
	SalesforceStandardObjectNameIdea        SalesforceStandardObjectName = "IDEA"
	SalesforceStandardObjectNameLead        SalesforceStandardObjectName = "LEAD"
	SalesforceStandardObjectNameOpportunity SalesforceStandardObjectName = "OPPORTUNITY"
	SalesforceStandardObjectNamePartner     SalesforceStandardObjectName = "PARTNER"
	SalesforceStandardObjectNamePricebook   SalesforceStandardObjectName = "PRICEBOOK"
	SalesforceStandardObjectNameProduct     SalesforceStandardObjectName = "PRODUCT"
	SalesforceStandardObjectNameProfile     SalesforceStandardObjectName = "PROFILE"
	SalesforceStandardObjectNameSolution    SalesforceStandardObjectName = "SOLUTION"
	SalesforceStandardObjectNameTask        SalesforceStandardObjectName = "TASK"
	SalesforceStandardObjectNameUser        SalesforceStandardObjectName = "USER"
)

// Values returns all known values for SalesforceStandardObjectName. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
// The ordering of this slice is not guaranteed to be stable across updates.
func (SalesforceStandardObjectName) Values() []SalesforceStandardObjectName {
	return []SalesforceStandardObjectName{
		"ACCOUNT",
		"CAMPAIGN",
		"CASE",
		"CONTACT",
		"CONTRACT",
		"DOCUMENT",
		"GROUP",
		"IDEA",
		"LEAD",
		"OPPORTUNITY",
		"PARTNER",
		"PRICEBOOK",
		"PRODUCT",
		"PROFILE",
		"SOLUTION",
		"TASK",
		"USER",
	}
}

type ScoreConfidence string

// Enum values for ScoreConfidence
const (
	ScoreConfidenceVery_high ScoreConfidence = "VERY_HIGH"
	ScoreConfidenceHigh      ScoreConfidence = "HIGH"
	ScoreConfidenceMedium    ScoreConfidence = "MEDIUM"
	ScoreConfidenceLow       ScoreConfidence = "LOW"
)

// Values returns all known values for ScoreConfidence. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (ScoreConfidence) Values() []ScoreConfidence {
	return []ScoreConfidence{
		"VERY_HIGH",
		"HIGH",
		"MEDIUM",
		"LOW",
	}
}

type ServiceNowBuildVersionType string

// Enum values for ServiceNowBuildVersionType
const (
	ServiceNowBuildVersionTypeLondon ServiceNowBuildVersionType = "LONDON"
	ServiceNowBuildVersionTypeOthers ServiceNowBuildVersionType = "OTHERS"
)

// Values returns all known values for ServiceNowBuildVersionType. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
// The ordering of this slice is not guaranteed to be stable across updates.
func (ServiceNowBuildVersionType) Values() []ServiceNowBuildVersionType {
	return []ServiceNowBuildVersionType{
		"LONDON",
		"OTHERS",
	}
}

type SharePointVersion string

// Enum values for SharePointVersion
const (
	SharePointVersionSharepoint_online SharePointVersion = "SHAREPOINT_ONLINE"
)

// Values returns all known values for SharePointVersion. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (SharePointVersion) Values() []SharePointVersion {
	return []SharePointVersion{
		"SHAREPOINT_ONLINE",
	}
}

type SortOrder string

// Enum values for SortOrder
const (
	SortOrderDesc SortOrder = "DESC"
	SortOrderAsc  SortOrder = "ASC"
)

// Values returns all known values for SortOrder. Note that this can be expanded in
// the future, and so it is only as up to date as the client. The ordering of this
// slice is not guaranteed to be stable across updates.
func (SortOrder) Values() []SortOrder {
	return []SortOrder{
		"DESC",
		"ASC",
	}
}
