// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package codestarnotifications

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/codestarnotifications/types"
)

const opUnsubscribe = "Unsubscribe"

// UnsubscribeRequest returns a request value for making API operation for
// AWS CodeStar Notifications.
//
// Removes an association between a notification rule and an Amazon SNS topic
// so that subscribers to that topic stop receiving notifications when the events
// described in the rule are triggered.
//
//    // Example sending a request using UnsubscribeRequest.
//    req := client.UnsubscribeRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/codestar-notifications-2019-10-15/Unsubscribe
func (c *Client) UnsubscribeRequest(input *types.UnsubscribeInput) UnsubscribeRequest {
	op := &aws.Operation{
		Name:       opUnsubscribe,
		HTTPMethod: "POST",
		HTTPPath:   "/unsubscribe",
	}

	if input == nil {
		input = &types.UnsubscribeInput{}
	}

	req := c.newRequest(op, input, &types.UnsubscribeOutput{})
	return UnsubscribeRequest{Request: req, Input: input, Copy: c.UnsubscribeRequest}
}

// UnsubscribeRequest is the request type for the
// Unsubscribe API operation.
type UnsubscribeRequest struct {
	*aws.Request
	Input *types.UnsubscribeInput
	Copy  func(*types.UnsubscribeInput) UnsubscribeRequest
}

// Send marshals and sends the Unsubscribe API request.
func (r UnsubscribeRequest) Send(ctx context.Context) (*UnsubscribeResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &UnsubscribeResponse{
		UnsubscribeOutput: r.Request.Data.(*types.UnsubscribeOutput),
		response:          &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// UnsubscribeResponse is the response type for the
// Unsubscribe API operation.
type UnsubscribeResponse struct {
	*types.UnsubscribeOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// Unsubscribe request.
func (r *UnsubscribeResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
