// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package codestarnotifications

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/codestarnotifications/types"
)

const opUpdateNotificationRule = "UpdateNotificationRule"

// UpdateNotificationRuleRequest returns a request value for making API operation for
// AWS CodeStar Notifications.
//
// Updates a notification rule for a resource. You can change the events that
// trigger the notification rule, the status of the rule, and the targets that
// receive the notifications.
//
// To add or remove tags for a notification rule, you must use TagResource and
// UntagResource.
//
//    // Example sending a request using UpdateNotificationRuleRequest.
//    req := client.UpdateNotificationRuleRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/codestar-notifications-2019-10-15/UpdateNotificationRule
func (c *Client) UpdateNotificationRuleRequest(input *types.UpdateNotificationRuleInput) UpdateNotificationRuleRequest {
	op := &aws.Operation{
		Name:       opUpdateNotificationRule,
		HTTPMethod: "POST",
		HTTPPath:   "/updateNotificationRule",
	}

	if input == nil {
		input = &types.UpdateNotificationRuleInput{}
	}

	req := c.newRequest(op, input, &types.UpdateNotificationRuleOutput{})
	return UpdateNotificationRuleRequest{Request: req, Input: input, Copy: c.UpdateNotificationRuleRequest}
}

// UpdateNotificationRuleRequest is the request type for the
// UpdateNotificationRule API operation.
type UpdateNotificationRuleRequest struct {
	*aws.Request
	Input *types.UpdateNotificationRuleInput
	Copy  func(*types.UpdateNotificationRuleInput) UpdateNotificationRuleRequest
}

// Send marshals and sends the UpdateNotificationRule API request.
func (r UpdateNotificationRuleRequest) Send(ctx context.Context) (*UpdateNotificationRuleResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &UpdateNotificationRuleResponse{
		UpdateNotificationRuleOutput: r.Request.Data.(*types.UpdateNotificationRuleOutput),
		response:                     &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// UpdateNotificationRuleResponse is the response type for the
// UpdateNotificationRule API operation.
type UpdateNotificationRuleResponse struct {
	*types.UpdateNotificationRuleOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// UpdateNotificationRule request.
func (r *UpdateNotificationRuleResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
