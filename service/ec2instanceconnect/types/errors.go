// Code generated by smithy-go-codegen DO NOT EDIT.

package types

import (
	"fmt"
	smithy "github.com/awslabs/smithy-go"
	"github.com/awslabs/smithy-go/ptr"
)

// Indicates that either your AWS credentials are invalid or you do not have access
// to the EC2 instance.
type AuthException struct {
	Message *string
}

func (e *AuthException) Error() string {
	return fmt.Sprintf("%s: %s", e.ErrorCode(), e.ErrorMessage())
}
func (e *AuthException) ErrorMessage() string {
	if e.Message == nil {
		return ""
	}
	return *e.Message
}
func (e *AuthException) ErrorCode() string             { return "AuthException" }
func (e *AuthException) ErrorFault() smithy.ErrorFault { return smithy.FaultClient }
func (e *AuthException) GetMessage() string {
	return ptr.ToString(e.Message)
}
func (e *AuthException) HasMessage() bool {
	return e.Message != nil
}

// Indicates that the instance requested was not found in the given zone. Check
// that you have provided a valid instance ID and the correct zone.
type EC2InstanceNotFoundException struct {
	Message *string
}

func (e *EC2InstanceNotFoundException) Error() string {
	return fmt.Sprintf("%s: %s", e.ErrorCode(), e.ErrorMessage())
}
func (e *EC2InstanceNotFoundException) ErrorMessage() string {
	if e.Message == nil {
		return ""
	}
	return *e.Message
}
func (e *EC2InstanceNotFoundException) ErrorCode() string             { return "EC2InstanceNotFoundException" }
func (e *EC2InstanceNotFoundException) ErrorFault() smithy.ErrorFault { return smithy.FaultClient }
func (e *EC2InstanceNotFoundException) GetMessage() string {
	return ptr.ToString(e.Message)
}
func (e *EC2InstanceNotFoundException) HasMessage() bool {
	return e.Message != nil
}

// Indicates that you provided bad input. Ensure you have a valid instance ID, the
// correct zone, and a valid SSH public key.
type InvalidArgsException struct {
	Message *string
}

func (e *InvalidArgsException) Error() string {
	return fmt.Sprintf("%s: %s", e.ErrorCode(), e.ErrorMessage())
}
func (e *InvalidArgsException) ErrorMessage() string {
	if e.Message == nil {
		return ""
	}
	return *e.Message
}
func (e *InvalidArgsException) ErrorCode() string             { return "InvalidArgsException" }
func (e *InvalidArgsException) ErrorFault() smithy.ErrorFault { return smithy.FaultClient }
func (e *InvalidArgsException) GetMessage() string {
	return ptr.ToString(e.Message)
}
func (e *InvalidArgsException) HasMessage() bool {
	return e.Message != nil
}

// Indicates that the service encountered an error. Follow the message's
// instructions and try again.
type ServiceException struct {
	Message *string
}

func (e *ServiceException) Error() string {
	return fmt.Sprintf("%s: %s", e.ErrorCode(), e.ErrorMessage())
}
func (e *ServiceException) ErrorMessage() string {
	if e.Message == nil {
		return ""
	}
	return *e.Message
}
func (e *ServiceException) ErrorCode() string             { return "ServiceException" }
func (e *ServiceException) ErrorFault() smithy.ErrorFault { return smithy.FaultServer }
func (e *ServiceException) GetMessage() string {
	return ptr.ToString(e.Message)
}
func (e *ServiceException) HasMessage() bool {
	return e.Message != nil
}

// Indicates you have been making requests too frequently and have been throttled.
// Wait for a while and try again. If higher call volume is warranted contact AWS
// Support.
type ThrottlingException struct {
	Message *string
}

func (e *ThrottlingException) Error() string {
	return fmt.Sprintf("%s: %s", e.ErrorCode(), e.ErrorMessage())
}
func (e *ThrottlingException) ErrorMessage() string {
	if e.Message == nil {
		return ""
	}
	return *e.Message
}
func (e *ThrottlingException) ErrorCode() string             { return "ThrottlingException" }
func (e *ThrottlingException) ErrorFault() smithy.ErrorFault { return smithy.FaultClient }
func (e *ThrottlingException) GetMessage() string {
	return ptr.ToString(e.Message)
}
func (e *ThrottlingException) HasMessage() bool {
	return e.Message != nil
}
