// Code generated by smithy-go-codegen DO NOT EDIT.

package types

import (
	"fmt"
	smithy "github.com/aws/smithy-go"
)

//
type AccessDeniedException struct {
	Message *string

	Code *string

	ExceptionMessage *string

	noSmithyDocumentSerde
}

func (e *AccessDeniedException) Error() string {
	return fmt.Sprintf("%s: %s", e.ErrorCode(), e.ErrorMessage())
}
func (e *AccessDeniedException) ErrorMessage() string {
	if e.Message == nil {
		return ""
	}
	return *e.Message
}
func (e *AccessDeniedException) ErrorCode() string {
	if e.Code == nil {
		return "AccessDeniedException"
	}
	return *e.Code
}
func (e *AccessDeniedException) ErrorFault() smithy.ErrorFault { return smithy.FaultClient }

//
type ChannelNotBroadcasting struct {
	Message *string

	Code *string

	ExceptionMessage *string

	noSmithyDocumentSerde
}

func (e *ChannelNotBroadcasting) Error() string {
	return fmt.Sprintf("%s: %s", e.ErrorCode(), e.ErrorMessage())
}
func (e *ChannelNotBroadcasting) ErrorMessage() string {
	if e.Message == nil {
		return ""
	}
	return *e.Message
}
func (e *ChannelNotBroadcasting) ErrorCode() string {
	if e.Code == nil {
		return "ChannelNotBroadcasting"
	}
	return *e.Code
}
func (e *ChannelNotBroadcasting) ErrorFault() smithy.ErrorFault { return smithy.FaultClient }

//
type ConflictException struct {
	Message *string

	Code *string

	ExceptionMessage *string

	noSmithyDocumentSerde
}

func (e *ConflictException) Error() string {
	return fmt.Sprintf("%s: %s", e.ErrorCode(), e.ErrorMessage())
}
func (e *ConflictException) ErrorMessage() string {
	if e.Message == nil {
		return ""
	}
	return *e.Message
}
func (e *ConflictException) ErrorCode() string {
	if e.Code == nil {
		return "ConflictException"
	}
	return *e.Code
}
func (e *ConflictException) ErrorFault() smithy.ErrorFault { return smithy.FaultClient }

//
type InternalServerException struct {
	Message *string

	Code *string

	ExceptionMessage *string

	noSmithyDocumentSerde
}

func (e *InternalServerException) Error() string {
	return fmt.Sprintf("%s: %s", e.ErrorCode(), e.ErrorMessage())
}
func (e *InternalServerException) ErrorMessage() string {
	if e.Message == nil {
		return ""
	}
	return *e.Message
}
func (e *InternalServerException) ErrorCode() string {
	if e.Code == nil {
		return "InternalServerException"
	}
	return *e.Code
}
func (e *InternalServerException) ErrorFault() smithy.ErrorFault { return smithy.FaultServer }

//
type PendingVerification struct {
	Message *string

	Code *string

	ExceptionMessage *string

	noSmithyDocumentSerde
}

func (e *PendingVerification) Error() string {
	return fmt.Sprintf("%s: %s", e.ErrorCode(), e.ErrorMessage())
}
func (e *PendingVerification) ErrorMessage() string {
	if e.Message == nil {
		return ""
	}
	return *e.Message
}
func (e *PendingVerification) ErrorCode() string {
	if e.Code == nil {
		return "PendingVerification"
	}
	return *e.Code
}
func (e *PendingVerification) ErrorFault() smithy.ErrorFault { return smithy.FaultClient }

//
type ResourceNotFoundException struct {
	Message *string

	Code *string

	ExceptionMessage *string

	noSmithyDocumentSerde
}

func (e *ResourceNotFoundException) Error() string {
	return fmt.Sprintf("%s: %s", e.ErrorCode(), e.ErrorMessage())
}
func (e *ResourceNotFoundException) ErrorMessage() string {
	if e.Message == nil {
		return ""
	}
	return *e.Message
}
func (e *ResourceNotFoundException) ErrorCode() string {
	if e.Code == nil {
		return "ResourceNotFoundException"
	}
	return *e.Code
}
func (e *ResourceNotFoundException) ErrorFault() smithy.ErrorFault { return smithy.FaultClient }

//
type ServiceQuotaExceededException struct {
	Message *string

	Code *string

	ExceptionMessage *string

	noSmithyDocumentSerde
}

func (e *ServiceQuotaExceededException) Error() string {
	return fmt.Sprintf("%s: %s", e.ErrorCode(), e.ErrorMessage())
}
func (e *ServiceQuotaExceededException) ErrorMessage() string {
	if e.Message == nil {
		return ""
	}
	return *e.Message
}
func (e *ServiceQuotaExceededException) ErrorCode() string {
	if e.Code == nil {
		return "ServiceQuotaExceededException"
	}
	return *e.Code
}
func (e *ServiceQuotaExceededException) ErrorFault() smithy.ErrorFault { return smithy.FaultClient }

//
type StreamUnavailable struct {
	Message *string

	Code *string

	ExceptionMessage *string

	noSmithyDocumentSerde
}

func (e *StreamUnavailable) Error() string {
	return fmt.Sprintf("%s: %s", e.ErrorCode(), e.ErrorMessage())
}
func (e *StreamUnavailable) ErrorMessage() string {
	if e.Message == nil {
		return ""
	}
	return *e.Message
}
func (e *StreamUnavailable) ErrorCode() string {
	if e.Code == nil {
		return "StreamUnavailable"
	}
	return *e.Code
}
func (e *StreamUnavailable) ErrorFault() smithy.ErrorFault { return smithy.FaultServer }

//
type ThrottlingException struct {
	Message *string

	Code *string

	ExceptionMessage *string

	noSmithyDocumentSerde
}

func (e *ThrottlingException) Error() string {
	return fmt.Sprintf("%s: %s", e.ErrorCode(), e.ErrorMessage())
}
func (e *ThrottlingException) ErrorMessage() string {
	if e.Message == nil {
		return ""
	}
	return *e.Message
}
func (e *ThrottlingException) ErrorCode() string {
	if e.Code == nil {
		return "ThrottlingException"
	}
	return *e.Code
}
func (e *ThrottlingException) ErrorFault() smithy.ErrorFault { return smithy.FaultClient }

//
type ValidationException struct {
	Message *string

	Code *string

	ExceptionMessage *string

	noSmithyDocumentSerde
}

func (e *ValidationException) Error() string {
	return fmt.Sprintf("%s: %s", e.ErrorCode(), e.ErrorMessage())
}
func (e *ValidationException) ErrorMessage() string {
	if e.Message == nil {
		return ""
	}
	return *e.Message
}
func (e *ValidationException) ErrorCode() string {
	if e.Code == nil {
		return "ValidationException"
	}
	return *e.Code
}
func (e *ValidationException) ErrorFault() smithy.ErrorFault { return smithy.FaultClient }
