// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package sns

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/sns/types"
)

const opSubscribe = "Subscribe"

// SubscribeRequest returns a request value for making API operation for
// Amazon Simple Notification Service.
//
// Prepares to subscribe an endpoint by sending the endpoint a confirmation
// message. To actually create a subscription, the endpoint owner must call
// the ConfirmSubscription action with the token from the confirmation message.
// Confirmation tokens are valid for three days.
//
// This action is throttled at 100 transactions per second (TPS).
//
//    // Example sending a request using SubscribeRequest.
//    req := client.SubscribeRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/sns-2010-03-31/Subscribe
func (c *Client) SubscribeRequest(input *types.SubscribeInput) SubscribeRequest {
	op := &aws.Operation{
		Name:       opSubscribe,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &types.SubscribeInput{}
	}

	req := c.newRequest(op, input, &types.SubscribeOutput{})
	return SubscribeRequest{Request: req, Input: input, Copy: c.SubscribeRequest}
}

// SubscribeRequest is the request type for the
// Subscribe API operation.
type SubscribeRequest struct {
	*aws.Request
	Input *types.SubscribeInput
	Copy  func(*types.SubscribeInput) SubscribeRequest
}

// Send marshals and sends the Subscribe API request.
func (r SubscribeRequest) Send(ctx context.Context) (*SubscribeResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &SubscribeResponse{
		SubscribeOutput: r.Request.Data.(*types.SubscribeOutput),
		response:        &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// SubscribeResponse is the response type for the
// Subscribe API operation.
type SubscribeResponse struct {
	*types.SubscribeOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// Subscribe request.
func (r *SubscribeResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
