// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package types

import (
	"io"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/internal/awsutil"
	"github.com/aws/aws-sdk-go-v2/service/cloudsearchdomain/enums"
)

// Container for the parameters to the UploadDocuments request.
type UploadDocumentsInput struct {
	_ struct{} `type:"structure" payload:"Documents"`

	// The format of the batch you are uploading. Amazon CloudSearch supports two
	// document batch formats:
	//
	//    * application/json
	//
	//    * application/xml
	//
	// ContentType is a required field
	ContentType enums.ContentType `location:"header" locationName:"Content-Type" type:"string" required:"true" enum:"true"`

	// A batch of documents formatted in JSON or HTML.
	//
	// Documents is a required field
	Documents io.ReadSeeker `locationName:"documents" type:"blob" required:"true"`
}

// String returns the string representation
func (s UploadDocumentsInput) String() string {
	return awsutil.Prettify(s)
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *UploadDocumentsInput) Validate() error {
	invalidParams := aws.ErrInvalidParams{Context: "UploadDocumentsInput"}
	if len(s.ContentType) == 0 {
		invalidParams.Add(aws.NewErrParamRequired("ContentType"))
	}

	if s.Documents == nil {
		invalidParams.Add(aws.NewErrParamRequired("Documents"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// Contains the response to an UploadDocuments request.
type UploadDocumentsOutput struct {
	_ struct{} `type:"structure"`

	// The number of documents that were added to the search domain.
	Adds *int64 `locationName:"adds" type:"long"`

	// The number of documents that were deleted from the search domain.
	Deletes *int64 `locationName:"deletes" type:"long"`

	// The status of an UploadDocumentsRequest.
	Status *string `locationName:"status" type:"string"`

	// Any warnings returned by the document service about the documents being uploaded.
	Warnings []DocumentServiceWarning `locationName:"warnings" type:"list"`
}

// String returns the string representation
func (s UploadDocumentsOutput) String() string {
	return awsutil.Prettify(s)
}
