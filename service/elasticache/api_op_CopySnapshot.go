// Code generated by smithy-go-codegen DO NOT EDIT.

package elasticache

import (
	"context"
	awsmiddleware "github.com/aws/aws-sdk-go-v2/aws/middleware"
	"github.com/aws/aws-sdk-go-v2/aws/retry"
	"github.com/aws/aws-sdk-go-v2/aws/signer/v4"
	"github.com/aws/aws-sdk-go-v2/service/elasticache/types"
	smithy "github.com/awslabs/smithy-go"
	"github.com/awslabs/smithy-go/middleware"
	smithyhttp "github.com/awslabs/smithy-go/transport/http"
)

// Makes a copy of an existing snapshot.  <note> <p>This operation is valid for
// Redis only.</p> </note> <important> <p>Users or groups that have permissions to
// use the <code>CopySnapshot</code> operation can create their own Amazon S3
// buckets and copy snapshots to it. To control access to your snapshots, use an
// IAM policy to control who has the ability to use the <code>CopySnapshot</code>
// operation. For more information about using IAM to control the use of
// ElastiCache operations, see <a
// href="https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/backups-exporting.html">Exporting
// Snapshots</a> and <a
// href="https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/IAM.html">Authentication
// & Access Control</a>.</p> </important> <p>You could receive the following error
// messages.</p> <p class="title"> <b>Error Messages</b> </p> <ul> <li> <p>
// <b>Error Message:</b> The S3 bucket %s is outside of the region.</p> <p>
// <b>Solution:</b> Create an Amazon S3 bucket in the same region as your snapshot.
// For more information, see <a
// href="https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/backups-exporting.html#backups-exporting-create-s3-bucket">Step
// 1: Create an Amazon S3 Bucket</a> in the ElastiCache User Guide.</p> </li> <li>
// <p> <b>Error Message:</b> The S3 bucket %s does not exist.</p> <p>
// <b>Solution:</b> Create an Amazon S3 bucket in the same region as your snapshot.
// For more information, see <a
// href="https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/backups-exporting.html#backups-exporting-create-s3-bucket">Step
// 1: Create an Amazon S3 Bucket</a> in the ElastiCache User Guide.</p> </li> <li>
// <p> <b>Error Message:</b> The S3 bucket %s is not owned by the authenticated
// user.</p> <p> <b>Solution:</b> Create an Amazon S3 bucket in the same region as
// your snapshot. For more information, see <a
// href="https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/backups-exporting.html#backups-exporting-create-s3-bucket">Step
// 1: Create an Amazon S3 Bucket</a> in the ElastiCache User Guide.</p> </li> <li>
// <p> <b>Error Message:</b> The authenticated user does not have sufficient
// permissions to perform the desired activity.</p> <p> <b>Solution:</b> Contact
// your system administrator to get the needed permissions.</p> </li> <li> <p>
// <b>Error Message:</b> The S3 bucket %s already contains an object with key
// %s.</p> <p> <b>Solution:</b> Give the <code>TargetSnapshotName</code> a new and
// unique value. If exporting a snapshot, you could alternatively create a new
// Amazon S3 bucket and use this same value for
// <code>TargetSnapshotName</code>.</p> </li> <li> <p> <b>Error Message: </b>
// ElastiCache has not been granted READ permissions %s on the S3 Bucket.</p> <p>
// <b>Solution:</b> Add List and Read permissions on the bucket. For more
// information, see <a
// href="https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/backups-exporting.html#backups-exporting-grant-access">Step
// 2: Grant ElastiCache Access to Your Amazon S3 Bucket</a> in the ElastiCache User
// Guide.</p> </li> <li> <p> <b>Error Message: </b> ElastiCache has not been
// granted WRITE permissions %s on the S3 Bucket.</p> <p> <b>Solution:</b> Add
// Upload/Delete permissions on the bucket. For more information, see <a
// href="https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/backups-exporting.html#backups-exporting-grant-access">Step
// 2: Grant ElastiCache Access to Your Amazon S3 Bucket</a> in the ElastiCache User
// Guide.</p> </li> <li> <p> <b>Error Message: </b> ElastiCache has not been
// granted READ_ACP permissions %s on the S3 Bucket.</p> <p> <b>Solution:</b> Add
// View Permissions on the bucket. For more information, see <a
// href="https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/backups-exporting.html#backups-exporting-grant-access">Step
// 2: Grant ElastiCache Access to Your Amazon S3 Bucket</a> in the ElastiCache User
// Guide.</p> </li> </ul>
func (c *Client) CopySnapshot(ctx context.Context, params *CopySnapshotInput, optFns ...func(*Options)) (*CopySnapshotOutput, error) {
	stack := middleware.NewStack("CopySnapshot", smithyhttp.NewStackRequest)
	options := c.options.Copy()
	for _, fn := range optFns {
		fn(&options)
	}
	addawsAwsquery_serdeOpCopySnapshotMiddlewares(stack)
	awsmiddleware.AddRequestInvocationIDMiddleware(stack)
	smithyhttp.AddContentLengthMiddleware(stack)
	AddResolveEndpointMiddleware(stack, options)
	v4.AddComputePayloadSHA256Middleware(stack)
	retry.AddRetryMiddlewares(stack, options)
	addHTTPSignerV4Middleware(stack, options)
	awsmiddleware.AddAttemptClockSkewMiddleware(stack)
	addClientUserAgent(stack)
	smithyhttp.AddErrorCloseResponseBodyMiddleware(stack)
	smithyhttp.AddCloseResponseBodyMiddleware(stack)
	addOpCopySnapshotValidationMiddleware(stack)
	stack.Initialize.Add(newServiceMetadataMiddleware_opCopySnapshot(options.Region), middleware.Before)

	for _, fn := range options.APIOptions {
		if err := fn(stack); err != nil {
			return nil, err
		}
	}
	handler := middleware.DecorateHandler(smithyhttp.NewClientHandler(options.HTTPClient), stack)
	result, metadata, err := handler.Handle(ctx, params)
	if err != nil {
		return nil, &smithy.OperationError{
			ServiceID:     ServiceID,
			OperationName: "CopySnapshot",
			Err:           err,
		}
	}
	out := result.(*CopySnapshotOutput)
	out.ResultMetadata = metadata
	return out, nil
}

// Represents the input of a CopySnapshotMessage operation.
type CopySnapshotInput struct {
	// The ID of the KMS key used to encrypt the target snapshot.
	KmsKeyId *string
	// The name of an existing snapshot from which to make a copy.
	SourceSnapshotName *string
	// The Amazon S3 bucket to which the snapshot is exported. This parameter is used
	// only when exporting a snapshot for external access. When using this parameter to
	// export a snapshot, be sure Amazon ElastiCache has the needed permissions to this
	// S3 bucket. For more information, see Step 2: Grant ElastiCache Access to Your
	// Amazon S3 Bucket
	// (https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/backups-exporting.html#backups-exporting-grant-access)
	// in the Amazon ElastiCache User Guide.  <p>For more information, see <a
	// href="https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/Snapshots.Exporting.html">Exporting
	// a Snapshot</a> in the <i>Amazon ElastiCache User Guide</i>.</p>
	TargetBucket *string
	// A name for the snapshot copy. ElastiCache does not permit overwriting a
	// snapshot, therefore this name must be unique within its context - ElastiCache or
	// an Amazon S3 bucket if exporting.
	TargetSnapshotName *string
}

type CopySnapshotOutput struct {
	// Represents a copy of an entire Redis cluster as of the time when the snapshot
	// was taken.
	Snapshot *types.Snapshot

	// Metadata pertaining to the operation's result.
	ResultMetadata middleware.Metadata
}

func addawsAwsquery_serdeOpCopySnapshotMiddlewares(stack *middleware.Stack) {
	stack.Serialize.Add(&awsAwsquery_serializeOpCopySnapshot{}, middleware.After)
	stack.Deserialize.Add(&awsAwsquery_deserializeOpCopySnapshot{}, middleware.After)
}

func newServiceMetadataMiddleware_opCopySnapshot(region string) awsmiddleware.RegisterServiceMetadata {
	return awsmiddleware.RegisterServiceMetadata{
		Region:        region,
		ServiceID:     ServiceID,
		SigningName:   "elasticache",
		OperationName: "CopySnapshot",
	}
}
