// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package rds

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/rds/types"
)

const opModifyDBSnapshotAttribute = "ModifyDBSnapshotAttribute"

// ModifyDBSnapshotAttributeRequest returns a request value for making API operation for
// Amazon Relational Database Service.
//
// Adds an attribute and values to, or removes an attribute and values from,
// a manual DB snapshot.
//
// To share a manual DB snapshot with other AWS accounts, specify restore as
// the AttributeName and use the ValuesToAdd parameter to add a list of IDs
// of the AWS accounts that are authorized to restore the manual DB snapshot.
// Uses the value all to make the manual DB snapshot public, which means it
// can be copied or restored by all AWS accounts. Do not add the all value for
// any manual DB snapshots that contain private information that you don't want
// available to all AWS accounts. If the manual DB snapshot is encrypted, it
// can be shared, but only by specifying a list of authorized AWS account IDs
// for the ValuesToAdd parameter. You can't use all as a value for that parameter
// in this case.
//
// To view which AWS accounts have access to copy or restore a manual DB snapshot,
// or whether a manual DB snapshot public or private, use the DescribeDBSnapshotAttributes
// API action.
//
//    // Example sending a request using ModifyDBSnapshotAttributeRequest.
//    req := client.ModifyDBSnapshotAttributeRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/rds-2014-10-31/ModifyDBSnapshotAttribute
func (c *Client) ModifyDBSnapshotAttributeRequest(input *types.ModifyDBSnapshotAttributeInput) ModifyDBSnapshotAttributeRequest {
	op := &aws.Operation{
		Name:       opModifyDBSnapshotAttribute,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &types.ModifyDBSnapshotAttributeInput{}
	}

	req := c.newRequest(op, input, &types.ModifyDBSnapshotAttributeOutput{})
	return ModifyDBSnapshotAttributeRequest{Request: req, Input: input, Copy: c.ModifyDBSnapshotAttributeRequest}
}

// ModifyDBSnapshotAttributeRequest is the request type for the
// ModifyDBSnapshotAttribute API operation.
type ModifyDBSnapshotAttributeRequest struct {
	*aws.Request
	Input *types.ModifyDBSnapshotAttributeInput
	Copy  func(*types.ModifyDBSnapshotAttributeInput) ModifyDBSnapshotAttributeRequest
}

// Send marshals and sends the ModifyDBSnapshotAttribute API request.
func (r ModifyDBSnapshotAttributeRequest) Send(ctx context.Context) (*ModifyDBSnapshotAttributeResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &ModifyDBSnapshotAttributeResponse{
		ModifyDBSnapshotAttributeOutput: r.Request.Data.(*types.ModifyDBSnapshotAttributeOutput),
		response:                        &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// ModifyDBSnapshotAttributeResponse is the response type for the
// ModifyDBSnapshotAttribute API operation.
type ModifyDBSnapshotAttributeResponse struct {
	*types.ModifyDBSnapshotAttributeOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// ModifyDBSnapshotAttribute request.
func (r *ModifyDBSnapshotAttributeResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
