// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package rds

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/rds/types"
)

const opCreateDBParameterGroup = "CreateDBParameterGroup"

// CreateDBParameterGroupRequest returns a request value for making API operation for
// Amazon Relational Database Service.
//
// Creates a new DB parameter group.
//
// A DB parameter group is initially created with the default parameters for
// the database engine used by the DB instance. To provide custom values for
// any of the parameters, you must modify the group after creating it using
// ModifyDBParameterGroup. Once you've created a DB parameter group, you need
// to associate it with your DB instance using ModifyDBInstance. When you associate
// a new DB parameter group with a running DB instance, you need to reboot the
// DB instance without failover for the new DB parameter group and associated
// settings to take effect.
//
// After you create a DB parameter group, you should wait at least 5 minutes
// before creating your first DB instance that uses that DB parameter group
// as the default parameter group. This allows Amazon RDS to fully complete
// the create action before the parameter group is used as the default for a
// new DB instance. This is especially important for parameters that are critical
// when creating the default database for a DB instance, such as the character
// set for the default database defined by the character_set_database parameter.
// You can use the Parameter Groups option of the Amazon RDS console (https://console.aws.amazon.com/rds/)
// or the DescribeDBParameters command to verify that your DB parameter group
// has been created or modified.
//
//    // Example sending a request using CreateDBParameterGroupRequest.
//    req := client.CreateDBParameterGroupRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/rds-2014-10-31/CreateDBParameterGroup
func (c *Client) CreateDBParameterGroupRequest(input *types.CreateDBParameterGroupInput) CreateDBParameterGroupRequest {
	op := &aws.Operation{
		Name:       opCreateDBParameterGroup,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &types.CreateDBParameterGroupInput{}
	}

	req := c.newRequest(op, input, &types.CreateDBParameterGroupOutput{})
	return CreateDBParameterGroupRequest{Request: req, Input: input, Copy: c.CreateDBParameterGroupRequest}
}

// CreateDBParameterGroupRequest is the request type for the
// CreateDBParameterGroup API operation.
type CreateDBParameterGroupRequest struct {
	*aws.Request
	Input *types.CreateDBParameterGroupInput
	Copy  func(*types.CreateDBParameterGroupInput) CreateDBParameterGroupRequest
}

// Send marshals and sends the CreateDBParameterGroup API request.
func (r CreateDBParameterGroupRequest) Send(ctx context.Context) (*CreateDBParameterGroupResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &CreateDBParameterGroupResponse{
		CreateDBParameterGroupOutput: r.Request.Data.(*types.CreateDBParameterGroupOutput),
		response:                     &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// CreateDBParameterGroupResponse is the response type for the
// CreateDBParameterGroup API operation.
type CreateDBParameterGroupResponse struct {
	*types.CreateDBParameterGroupOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// CreateDBParameterGroup request.
func (r *CreateDBParameterGroupResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
