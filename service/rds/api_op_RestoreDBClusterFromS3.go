// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package rds

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/rds/types"
)

const opRestoreDBClusterFromS3 = "RestoreDBClusterFromS3"

// RestoreDBClusterFromS3Request returns a request value for making API operation for
// Amazon Relational Database Service.
//
// Creates an Amazon Aurora DB cluster from data stored in an Amazon S3 bucket.
// Amazon RDS must be authorized to access the Amazon S3 bucket and the data
// must be created using the Percona XtraBackup utility as described in Migrating
// Data to an Amazon Aurora MySQL DB Cluster (https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/AuroraMySQL.Migrating.html)
// in the Amazon Aurora User Guide.
//
// This action only applies to Aurora DB clusters.
//
//    // Example sending a request using RestoreDBClusterFromS3Request.
//    req := client.RestoreDBClusterFromS3Request(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/rds-2014-10-31/RestoreDBClusterFromS3
func (c *Client) RestoreDBClusterFromS3Request(input *types.RestoreDBClusterFromS3Input) RestoreDBClusterFromS3Request {
	op := &aws.Operation{
		Name:       opRestoreDBClusterFromS3,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &types.RestoreDBClusterFromS3Input{}
	}

	req := c.newRequest(op, input, &types.RestoreDBClusterFromS3Output{})
	return RestoreDBClusterFromS3Request{Request: req, Input: input, Copy: c.RestoreDBClusterFromS3Request}
}

// RestoreDBClusterFromS3Request is the request type for the
// RestoreDBClusterFromS3 API operation.
type RestoreDBClusterFromS3Request struct {
	*aws.Request
	Input *types.RestoreDBClusterFromS3Input
	Copy  func(*types.RestoreDBClusterFromS3Input) RestoreDBClusterFromS3Request
}

// Send marshals and sends the RestoreDBClusterFromS3 API request.
func (r RestoreDBClusterFromS3Request) Send(ctx context.Context) (*RestoreDBClusterFromS3Response, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &RestoreDBClusterFromS3Response{
		RestoreDBClusterFromS3Output: r.Request.Data.(*types.RestoreDBClusterFromS3Output),
		response:                     &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// RestoreDBClusterFromS3Response is the response type for the
// RestoreDBClusterFromS3 API operation.
type RestoreDBClusterFromS3Response struct {
	*types.RestoreDBClusterFromS3Output

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// RestoreDBClusterFromS3 request.
func (r *RestoreDBClusterFromS3Response) SDKResponseMetdata() *aws.Response {
	return r.response
}
