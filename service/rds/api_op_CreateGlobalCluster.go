// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package rds

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/rds/types"
)

const opCreateGlobalCluster = "CreateGlobalCluster"

// CreateGlobalClusterRequest returns a request value for making API operation for
// Amazon Relational Database Service.
//
//
// Creates an Aurora global database spread across multiple regions. The global
// database contains a single primary cluster with read-write capability, and
// a read-only secondary cluster that receives data from the primary cluster
// through high-speed replication performed by the Aurora storage subsystem.
//
// You can create a global database that is initially empty, and then add a
// primary cluster and a secondary cluster to it. Or you can specify an existing
// Aurora cluster during the create operation, and this cluster becomes the
// primary cluster of the global database.
//
// This action only applies to Aurora DB clusters.
//
//    // Example sending a request using CreateGlobalClusterRequest.
//    req := client.CreateGlobalClusterRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/rds-2014-10-31/CreateGlobalCluster
func (c *Client) CreateGlobalClusterRequest(input *types.CreateGlobalClusterInput) CreateGlobalClusterRequest {
	op := &aws.Operation{
		Name:       opCreateGlobalCluster,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &types.CreateGlobalClusterInput{}
	}

	req := c.newRequest(op, input, &types.CreateGlobalClusterOutput{})
	return CreateGlobalClusterRequest{Request: req, Input: input, Copy: c.CreateGlobalClusterRequest}
}

// CreateGlobalClusterRequest is the request type for the
// CreateGlobalCluster API operation.
type CreateGlobalClusterRequest struct {
	*aws.Request
	Input *types.CreateGlobalClusterInput
	Copy  func(*types.CreateGlobalClusterInput) CreateGlobalClusterRequest
}

// Send marshals and sends the CreateGlobalCluster API request.
func (r CreateGlobalClusterRequest) Send(ctx context.Context) (*CreateGlobalClusterResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &CreateGlobalClusterResponse{
		CreateGlobalClusterOutput: r.Request.Data.(*types.CreateGlobalClusterOutput),
		response:                  &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// CreateGlobalClusterResponse is the response type for the
// CreateGlobalCluster API operation.
type CreateGlobalClusterResponse struct {
	*types.CreateGlobalClusterOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// CreateGlobalCluster request.
func (r *CreateGlobalClusterResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
