// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package rds

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/rds/types"
)

const opBacktrackDBCluster = "BacktrackDBCluster"

// BacktrackDBClusterRequest returns a request value for making API operation for
// Amazon Relational Database Service.
//
// Backtracks a DB cluster to a specific time, without creating a new DB cluster.
//
// For more information on backtracking, see Backtracking an Aurora DB Cluster
// (https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/AuroraMySQL.Managing.Backtrack.html)
// in the Amazon Aurora User Guide.
//
// This action only applies to Aurora DB clusters.
//
//    // Example sending a request using BacktrackDBClusterRequest.
//    req := client.BacktrackDBClusterRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/rds-2014-10-31/BacktrackDBCluster
func (c *Client) BacktrackDBClusterRequest(input *types.BacktrackDBClusterInput) BacktrackDBClusterRequest {
	op := &aws.Operation{
		Name:       opBacktrackDBCluster,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &types.BacktrackDBClusterInput{}
	}

	req := c.newRequest(op, input, &types.BacktrackDBClusterOutput{})
	return BacktrackDBClusterRequest{Request: req, Input: input, Copy: c.BacktrackDBClusterRequest}
}

// BacktrackDBClusterRequest is the request type for the
// BacktrackDBCluster API operation.
type BacktrackDBClusterRequest struct {
	*aws.Request
	Input *types.BacktrackDBClusterInput
	Copy  func(*types.BacktrackDBClusterInput) BacktrackDBClusterRequest
}

// Send marshals and sends the BacktrackDBCluster API request.
func (r BacktrackDBClusterRequest) Send(ctx context.Context) (*BacktrackDBClusterResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &BacktrackDBClusterResponse{
		BacktrackDBClusterOutput: r.Request.Data.(*types.BacktrackDBClusterOutput),
		response:                 &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// BacktrackDBClusterResponse is the response type for the
// BacktrackDBCluster API operation.
type BacktrackDBClusterResponse struct {
	*types.BacktrackDBClusterOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// BacktrackDBCluster request.
func (r *BacktrackDBClusterResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
