// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package types

import (
	"fmt"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/internal/awsutil"
)

type DescribeInstallationMediaInput struct {
	_ struct{} `type:"structure"`

	// A filter that specifies one or more installation media to describe. Supported
	// filters include the following:
	//
	//    * custom-availability-zone-id - Accepts custom Availability Zone (AZ)
	//    identifiers. The results list includes information about only the custom
	//    AZs identified by these identifiers.
	//
	//    * engine - Accepts database engines. The results list includes information
	//    about only the database engines identified by these identifiers. For more
	//    information about the valid engines for installation media, see ImportInstallationMedia.
	Filters []Filter `locationNameList:"Filter" type:"list"`

	// The installation medium ID.
	InstallationMediaId *string `type:"string"`

	// An optional pagination token provided by a previous request. If this parameter
	// is specified, the response includes only records beyond the marker, up to
	// the value specified by MaxRecords.
	Marker *string `type:"string"`

	// An optional pagination token provided by a previous DescribeInstallationMedia
	// request. If this parameter is specified, the response includes only records
	// beyond the marker, up to the value specified by MaxRecords.
	MaxRecords *int64 `type:"integer"`
}

// String returns the string representation
func (s DescribeInstallationMediaInput) String() string {
	return awsutil.Prettify(s)
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *DescribeInstallationMediaInput) Validate() error {
	invalidParams := aws.ErrInvalidParams{Context: "DescribeInstallationMediaInput"}
	if s.Filters != nil {
		for i, v := range s.Filters {
			if err := v.Validate(); err != nil {
				invalidParams.AddNested(fmt.Sprintf("%s[%v]", "Filters", i), err.(aws.ErrInvalidParams))
			}
		}
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

type DescribeInstallationMediaOutput struct {
	_ struct{} `type:"structure"`

	// The list of InstallationMedia objects for the AWS account.
	InstallationMedia []InstallationMedia `locationNameList:"InstallationMedia" type:"list"`

	// An optional pagination token provided by a previous DescribeInstallationMedia
	// request. If this parameter is specified, the response includes only records
	// beyond the marker, up to the value specified by MaxRecords.
	Marker *string `type:"string"`
}

// String returns the string representation
func (s DescribeInstallationMediaOutput) String() string {
	return awsutil.Prettify(s)
}
