// Code generated by smithy-go-codegen DO NOT EDIT.

package types

type ActivityStreamMode string

// Enum values for ActivityStreamMode
const (
	ActivityStreamModeSync  ActivityStreamMode = "sync"
	ActivityStreamModeAsync ActivityStreamMode = "async"
)

// Values returns all known values for ActivityStreamMode. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (ActivityStreamMode) Values() []ActivityStreamMode {
	return []ActivityStreamMode{
		"sync",
		"async",
	}
}

type ActivityStreamStatus string

// Enum values for ActivityStreamStatus
const (
	ActivityStreamStatusStopped  ActivityStreamStatus = "stopped"
	ActivityStreamStatusStarting ActivityStreamStatus = "starting"
	ActivityStreamStatusStarted  ActivityStreamStatus = "started"
	ActivityStreamStatusStopping ActivityStreamStatus = "stopping"
)

// Values returns all known values for ActivityStreamStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (ActivityStreamStatus) Values() []ActivityStreamStatus {
	return []ActivityStreamStatus{
		"stopped",
		"starting",
		"started",
		"stopping",
	}
}

type ApplyMethod string

// Enum values for ApplyMethod
const (
	ApplyMethodImmediate     ApplyMethod = "immediate"
	ApplyMethodPendingReboot ApplyMethod = "pending-reboot"
)

// Values returns all known values for ApplyMethod. Note that this can be expanded
// in the future, and so it is only as up to date as the client. The ordering of
// this slice is not guaranteed to be stable across updates.
func (ApplyMethod) Values() []ApplyMethod {
	return []ApplyMethod{
		"immediate",
		"pending-reboot",
	}
}

type AuthScheme string

// Enum values for AuthScheme
const (
	AuthSchemeSecrets AuthScheme = "SECRETS"
)

// Values returns all known values for AuthScheme. Note that this can be expanded
// in the future, and so it is only as up to date as the client. The ordering of
// this slice is not guaranteed to be stable across updates.
func (AuthScheme) Values() []AuthScheme {
	return []AuthScheme{
		"SECRETS",
	}
}

type DBProxyStatus string

// Enum values for DBProxyStatus
const (
	DBProxyStatusAvailable                    DBProxyStatus = "available"
	DBProxyStatusModifying                    DBProxyStatus = "modifying"
	DBProxyStatusIncompatible_network         DBProxyStatus = "incompatible-network"
	DBProxyStatusInsufficient_resource_limits DBProxyStatus = "insufficient-resource-limits"
	DBProxyStatusCreating                     DBProxyStatus = "creating"
	DBProxyStatusDeleting                     DBProxyStatus = "deleting"
	DBProxyStatusSuspended                    DBProxyStatus = "suspended"
	DBProxyStatusSuspending                   DBProxyStatus = "suspending"
	DBProxyStatusReactivating                 DBProxyStatus = "reactivating"
)

// Values returns all known values for DBProxyStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (DBProxyStatus) Values() []DBProxyStatus {
	return []DBProxyStatus{
		"available",
		"modifying",
		"incompatible-network",
		"insufficient-resource-limits",
		"creating",
		"deleting",
		"suspended",
		"suspending",
		"reactivating",
	}
}

type EngineFamily string

// Enum values for EngineFamily
const (
	EngineFamilyMysql      EngineFamily = "MYSQL"
	EngineFamilyPostgresql EngineFamily = "POSTGRESQL"
)

// Values returns all known values for EngineFamily. Note that this can be expanded
// in the future, and so it is only as up to date as the client. The ordering of
// this slice is not guaranteed to be stable across updates.
func (EngineFamily) Values() []EngineFamily {
	return []EngineFamily{
		"MYSQL",
		"POSTGRESQL",
	}
}

type IAMAuthMode string

// Enum values for IAMAuthMode
const (
	IAMAuthModeDisabled IAMAuthMode = "DISABLED"
	IAMAuthModeRequired IAMAuthMode = "REQUIRED"
)

// Values returns all known values for IAMAuthMode. Note that this can be expanded
// in the future, and so it is only as up to date as the client. The ordering of
// this slice is not guaranteed to be stable across updates.
func (IAMAuthMode) Values() []IAMAuthMode {
	return []IAMAuthMode{
		"DISABLED",
		"REQUIRED",
	}
}

type ReplicaMode string

// Enum values for ReplicaMode
const (
	ReplicaModeOpen_read_only ReplicaMode = "open-read-only"
	ReplicaModeMounted        ReplicaMode = "mounted"
)

// Values returns all known values for ReplicaMode. Note that this can be expanded
// in the future, and so it is only as up to date as the client. The ordering of
// this slice is not guaranteed to be stable across updates.
func (ReplicaMode) Values() []ReplicaMode {
	return []ReplicaMode{
		"open-read-only",
		"mounted",
	}
}

type SourceType string

// Enum values for SourceType
const (
	SourceTypeDbInstance        SourceType = "db-instance"
	SourceTypeDbParameterGroup  SourceType = "db-parameter-group"
	SourceTypeDbSecurityGroup   SourceType = "db-security-group"
	SourceTypeDbSnapshot        SourceType = "db-snapshot"
	SourceTypeDbCluster         SourceType = "db-cluster"
	SourceTypeDbClusterSnapshot SourceType = "db-cluster-snapshot"
)

// Values returns all known values for SourceType. Note that this can be expanded
// in the future, and so it is only as up to date as the client. The ordering of
// this slice is not guaranteed to be stable across updates.
func (SourceType) Values() []SourceType {
	return []SourceType{
		"db-instance",
		"db-parameter-group",
		"db-security-group",
		"db-snapshot",
		"db-cluster",
		"db-cluster-snapshot",
	}
}

type TargetHealthReason string

// Enum values for TargetHealthReason
const (
	TargetHealthReasonUnreachable            TargetHealthReason = "UNREACHABLE"
	TargetHealthReasonConnection_failed      TargetHealthReason = "CONNECTION_FAILED"
	TargetHealthReasonAuth_failure           TargetHealthReason = "AUTH_FAILURE"
	TargetHealthReasonPending_proxy_capacity TargetHealthReason = "PENDING_PROXY_CAPACITY"
)

// Values returns all known values for TargetHealthReason. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (TargetHealthReason) Values() []TargetHealthReason {
	return []TargetHealthReason{
		"UNREACHABLE",
		"CONNECTION_FAILED",
		"AUTH_FAILURE",
		"PENDING_PROXY_CAPACITY",
	}
}

type TargetState string

// Enum values for TargetState
const (
	TargetStateRegistering TargetState = "REGISTERING"
	TargetStateAvailable   TargetState = "AVAILABLE"
	TargetStateUnavailable TargetState = "UNAVAILABLE"
)

// Values returns all known values for TargetState. Note that this can be expanded
// in the future, and so it is only as up to date as the client. The ordering of
// this slice is not guaranteed to be stable across updates.
func (TargetState) Values() []TargetState {
	return []TargetState{
		"REGISTERING",
		"AVAILABLE",
		"UNAVAILABLE",
	}
}

type TargetType string

// Enum values for TargetType
const (
	TargetTypeRds_instance            TargetType = "RDS_INSTANCE"
	TargetTypeRds_serverless_endpoint TargetType = "RDS_SERVERLESS_ENDPOINT"
	TargetTypeTracked_cluster         TargetType = "TRACKED_CLUSTER"
)

// Values returns all known values for TargetType. Note that this can be expanded
// in the future, and so it is only as up to date as the client. The ordering of
// this slice is not guaranteed to be stable across updates.
func (TargetType) Values() []TargetType {
	return []TargetType{
		"RDS_INSTANCE",
		"RDS_SERVERLESS_ENDPOINT",
		"TRACKED_CLUSTER",
	}
}

type WriteForwardingStatus string

// Enum values for WriteForwardingStatus
const (
	WriteForwardingStatusEnabled   WriteForwardingStatus = "enabled"
	WriteForwardingStatusDisabled  WriteForwardingStatus = "disabled"
	WriteForwardingStatusEnabling  WriteForwardingStatus = "enabling"
	WriteForwardingStatusDisabling WriteForwardingStatus = "disabling"
	WriteForwardingStatusUnknown   WriteForwardingStatus = "unknown"
)

// Values returns all known values for WriteForwardingStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (WriteForwardingStatus) Values() []WriteForwardingStatus {
	return []WriteForwardingStatus{
		"enabled",
		"disabled",
		"enabling",
		"disabling",
		"unknown",
	}
}
