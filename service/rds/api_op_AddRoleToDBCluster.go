// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package rds

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/private/protocol"
	"github.com/aws/aws-sdk-go-v2/private/protocol/query"
	"github.com/aws/aws-sdk-go-v2/service/rds/types"
)

const opAddRoleToDBCluster = "AddRoleToDBCluster"

// AddRoleToDBClusterRequest returns a request value for making API operation for
// Amazon Relational Database Service.
//
// Associates an Identity and Access Management (IAM) role from an Amazon Aurora
// DB cluster. For more information, see Authorizing Amazon Aurora MySQL to
// Access Other AWS Services on Your Behalf (https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/AuroraMySQL.Integrating.Authorizing.html)
// in the Amazon Aurora User Guide.
//
// This action only applies to Aurora DB clusters.
//
//    // Example sending a request using AddRoleToDBClusterRequest.
//    req := client.AddRoleToDBClusterRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/rds-2014-10-31/AddRoleToDBCluster
func (c *Client) AddRoleToDBClusterRequest(input *types.AddRoleToDBClusterInput) AddRoleToDBClusterRequest {
	op := &aws.Operation{
		Name:       opAddRoleToDBCluster,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &types.AddRoleToDBClusterInput{}
	}

	req := c.newRequest(op, input, &types.AddRoleToDBClusterOutput{})
	req.Handlers.Unmarshal.Remove(query.UnmarshalHandler)
	req.Handlers.Unmarshal.PushBackNamed(protocol.UnmarshalDiscardBodyHandler)
	return AddRoleToDBClusterRequest{Request: req, Input: input, Copy: c.AddRoleToDBClusterRequest}
}

// AddRoleToDBClusterRequest is the request type for the
// AddRoleToDBCluster API operation.
type AddRoleToDBClusterRequest struct {
	*aws.Request
	Input *types.AddRoleToDBClusterInput
	Copy  func(*types.AddRoleToDBClusterInput) AddRoleToDBClusterRequest
}

// Send marshals and sends the AddRoleToDBCluster API request.
func (r AddRoleToDBClusterRequest) Send(ctx context.Context) (*AddRoleToDBClusterResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &AddRoleToDBClusterResponse{
		AddRoleToDBClusterOutput: r.Request.Data.(*types.AddRoleToDBClusterOutput),
		response:                 &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// AddRoleToDBClusterResponse is the response type for the
// AddRoleToDBCluster API operation.
type AddRoleToDBClusterResponse struct {
	*types.AddRoleToDBClusterOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// AddRoleToDBCluster request.
func (r *AddRoleToDBClusterResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
