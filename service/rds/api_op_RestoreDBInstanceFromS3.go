// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package rds

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/rds/types"
)

const opRestoreDBInstanceFromS3 = "RestoreDBInstanceFromS3"

// RestoreDBInstanceFromS3Request returns a request value for making API operation for
// Amazon Relational Database Service.
//
// Amazon Relational Database Service (Amazon RDS) supports importing MySQL
// databases by using backup files. You can create a backup of your on-premises
// database, store it on Amazon Simple Storage Service (Amazon S3), and then
// restore the backup file onto a new Amazon RDS DB instance running MySQL.
// For more information, see Importing Data into an Amazon RDS MySQL DB Instance
// (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/MySQL.Procedural.Importing.html)
// in the Amazon RDS User Guide.
//
//    // Example sending a request using RestoreDBInstanceFromS3Request.
//    req := client.RestoreDBInstanceFromS3Request(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/rds-2014-10-31/RestoreDBInstanceFromS3
func (c *Client) RestoreDBInstanceFromS3Request(input *types.RestoreDBInstanceFromS3Input) RestoreDBInstanceFromS3Request {
	op := &aws.Operation{
		Name:       opRestoreDBInstanceFromS3,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &types.RestoreDBInstanceFromS3Input{}
	}

	req := c.newRequest(op, input, &types.RestoreDBInstanceFromS3Output{})
	return RestoreDBInstanceFromS3Request{Request: req, Input: input, Copy: c.RestoreDBInstanceFromS3Request}
}

// RestoreDBInstanceFromS3Request is the request type for the
// RestoreDBInstanceFromS3 API operation.
type RestoreDBInstanceFromS3Request struct {
	*aws.Request
	Input *types.RestoreDBInstanceFromS3Input
	Copy  func(*types.RestoreDBInstanceFromS3Input) RestoreDBInstanceFromS3Request
}

// Send marshals and sends the RestoreDBInstanceFromS3 API request.
func (r RestoreDBInstanceFromS3Request) Send(ctx context.Context) (*RestoreDBInstanceFromS3Response, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &RestoreDBInstanceFromS3Response{
		RestoreDBInstanceFromS3Output: r.Request.Data.(*types.RestoreDBInstanceFromS3Output),
		response:                      &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// RestoreDBInstanceFromS3Response is the response type for the
// RestoreDBInstanceFromS3 API operation.
type RestoreDBInstanceFromS3Response struct {
	*types.RestoreDBInstanceFromS3Output

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// RestoreDBInstanceFromS3 request.
func (r *RestoreDBInstanceFromS3Response) SDKResponseMetdata() *aws.Response {
	return r.response
}
