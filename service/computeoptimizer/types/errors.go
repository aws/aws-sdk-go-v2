// Code generated by smithy-go-codegen DO NOT EDIT.

package types

import (
	"fmt"
	smithy "github.com/aws/smithy-go"
)

// You do not have sufficient access to perform this action.
type AccessDeniedException struct {
	Message *string

	Code *string

	noSmithyDocumentSerde
}

func (e *AccessDeniedException) Error() string {
	return fmt.Sprintf("%s: %s", e.ErrorCode(), e.ErrorMessage())
}
func (e *AccessDeniedException) ErrorMessage() string {
	if e.Message == nil {
		return ""
	}
	return *e.Message
}
func (e *AccessDeniedException) ErrorCode() string {
	if e.Code == nil {
		return "AccessDeniedException"
	}
	return *e.Code
}
func (e *AccessDeniedException) ErrorFault() smithy.ErrorFault { return smithy.FaultClient }

// An internal error has occurred. Try your call again.
type InternalServerException struct {
	Message *string

	Code *string

	noSmithyDocumentSerde
}

func (e *InternalServerException) Error() string {
	return fmt.Sprintf("%s: %s", e.ErrorCode(), e.ErrorMessage())
}
func (e *InternalServerException) ErrorMessage() string {
	if e.Message == nil {
		return ""
	}
	return *e.Message
}
func (e *InternalServerException) ErrorCode() string {
	if e.Code == nil {
		return "InternalServerException"
	}
	return *e.Code
}
func (e *InternalServerException) ErrorFault() smithy.ErrorFault { return smithy.FaultServer }

// The value supplied for the input parameter is out of range or not valid.
type InvalidParameterValueException struct {
	Message *string

	Code *string

	noSmithyDocumentSerde
}

func (e *InvalidParameterValueException) Error() string {
	return fmt.Sprintf("%s: %s", e.ErrorCode(), e.ErrorMessage())
}
func (e *InvalidParameterValueException) ErrorMessage() string {
	if e.Message == nil {
		return ""
	}
	return *e.Message
}
func (e *InvalidParameterValueException) ErrorCode() string {
	if e.Code == nil {
		return "InvalidParameterValueException"
	}
	return *e.Code
}
func (e *InvalidParameterValueException) ErrorFault() smithy.ErrorFault { return smithy.FaultClient }

// The request exceeds a limit of the service.
type LimitExceededException struct {
	Message *string

	Code *string

	noSmithyDocumentSerde
}

func (e *LimitExceededException) Error() string {
	return fmt.Sprintf("%s: %s", e.ErrorCode(), e.ErrorMessage())
}
func (e *LimitExceededException) ErrorMessage() string {
	if e.Message == nil {
		return ""
	}
	return *e.Message
}
func (e *LimitExceededException) ErrorCode() string {
	if e.Code == nil {
		return "LimitExceededException"
	}
	return *e.Code
}
func (e *LimitExceededException) ErrorFault() smithy.ErrorFault { return smithy.FaultClient }

// The request must contain either a valid (registered) Amazon Web Services access
// key ID or X.509 certificate.
type MissingAuthenticationToken struct {
	Message *string

	Code *string

	noSmithyDocumentSerde
}

func (e *MissingAuthenticationToken) Error() string {
	return fmt.Sprintf("%s: %s", e.ErrorCode(), e.ErrorMessage())
}
func (e *MissingAuthenticationToken) ErrorMessage() string {
	if e.Message == nil {
		return ""
	}
	return *e.Message
}
func (e *MissingAuthenticationToken) ErrorCode() string {
	if e.Code == nil {
		return "MissingAuthenticationToken"
	}
	return *e.Code
}
func (e *MissingAuthenticationToken) ErrorFault() smithy.ErrorFault { return smithy.FaultClient }

// The account is not opted in to Compute Optimizer.
type OptInRequiredException struct {
	Message *string

	Code *string

	noSmithyDocumentSerde
}

func (e *OptInRequiredException) Error() string {
	return fmt.Sprintf("%s: %s", e.ErrorCode(), e.ErrorMessage())
}
func (e *OptInRequiredException) ErrorMessage() string {
	if e.Message == nil {
		return ""
	}
	return *e.Message
}
func (e *OptInRequiredException) ErrorCode() string {
	if e.Code == nil {
		return "OptInRequiredException"
	}
	return *e.Code
}
func (e *OptInRequiredException) ErrorFault() smithy.ErrorFault { return smithy.FaultClient }

// A resource that is required for the action doesn't exist.
type ResourceNotFoundException struct {
	Message *string

	Code *string

	noSmithyDocumentSerde
}

func (e *ResourceNotFoundException) Error() string {
	return fmt.Sprintf("%s: %s", e.ErrorCode(), e.ErrorMessage())
}
func (e *ResourceNotFoundException) ErrorMessage() string {
	if e.Message == nil {
		return ""
	}
	return *e.Message
}
func (e *ResourceNotFoundException) ErrorCode() string {
	if e.Code == nil {
		return "ResourceNotFoundException"
	}
	return *e.Code
}
func (e *ResourceNotFoundException) ErrorFault() smithy.ErrorFault { return smithy.FaultClient }

// The request has failed due to a temporary failure of the server.
type ServiceUnavailableException struct {
	Message *string

	Code *string

	noSmithyDocumentSerde
}

func (e *ServiceUnavailableException) Error() string {
	return fmt.Sprintf("%s: %s", e.ErrorCode(), e.ErrorMessage())
}
func (e *ServiceUnavailableException) ErrorMessage() string {
	if e.Message == nil {
		return ""
	}
	return *e.Message
}
func (e *ServiceUnavailableException) ErrorCode() string {
	if e.Code == nil {
		return "ServiceUnavailableException"
	}
	return *e.Code
}
func (e *ServiceUnavailableException) ErrorFault() smithy.ErrorFault { return smithy.FaultServer }

// The request was denied due to request throttling.
type ThrottlingException struct {
	Message *string

	Code *string

	noSmithyDocumentSerde
}

func (e *ThrottlingException) Error() string {
	return fmt.Sprintf("%s: %s", e.ErrorCode(), e.ErrorMessage())
}
func (e *ThrottlingException) ErrorMessage() string {
	if e.Message == nil {
		return ""
	}
	return *e.Message
}
func (e *ThrottlingException) ErrorCode() string {
	if e.Code == nil {
		return "ThrottlingException"
	}
	return *e.Code
}
func (e *ThrottlingException) ErrorFault() smithy.ErrorFault { return smithy.FaultClient }
