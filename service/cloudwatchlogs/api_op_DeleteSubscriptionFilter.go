// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package cloudwatchlogs

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/private/protocol"
	"github.com/aws/aws-sdk-go-v2/private/protocol/jsonrpc"
	"github.com/aws/aws-sdk-go-v2/service/cloudwatchlogs/types"
)

const opDeleteSubscriptionFilter = "DeleteSubscriptionFilter"

// DeleteSubscriptionFilterRequest returns a request value for making API operation for
// Amazon CloudWatch Logs.
//
// Deletes the specified subscription filter.
//
//    // Example sending a request using DeleteSubscriptionFilterRequest.
//    req := client.DeleteSubscriptionFilterRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/DeleteSubscriptionFilter
func (c *Client) DeleteSubscriptionFilterRequest(input *types.DeleteSubscriptionFilterInput) DeleteSubscriptionFilterRequest {
	op := &aws.Operation{
		Name:       opDeleteSubscriptionFilter,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &types.DeleteSubscriptionFilterInput{}
	}

	req := c.newRequest(op, input, &types.DeleteSubscriptionFilterOutput{})
	req.Handlers.Unmarshal.Remove(jsonrpc.UnmarshalHandler)
	req.Handlers.Unmarshal.PushBackNamed(protocol.UnmarshalDiscardBodyHandler)
	return DeleteSubscriptionFilterRequest{Request: req, Input: input, Copy: c.DeleteSubscriptionFilterRequest}
}

// DeleteSubscriptionFilterRequest is the request type for the
// DeleteSubscriptionFilter API operation.
type DeleteSubscriptionFilterRequest struct {
	*aws.Request
	Input *types.DeleteSubscriptionFilterInput
	Copy  func(*types.DeleteSubscriptionFilterInput) DeleteSubscriptionFilterRequest
}

// Send marshals and sends the DeleteSubscriptionFilter API request.
func (r DeleteSubscriptionFilterRequest) Send(ctx context.Context) (*DeleteSubscriptionFilterResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &DeleteSubscriptionFilterResponse{
		DeleteSubscriptionFilterOutput: r.Request.Data.(*types.DeleteSubscriptionFilterOutput),
		response:                       &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// DeleteSubscriptionFilterResponse is the response type for the
// DeleteSubscriptionFilter API operation.
type DeleteSubscriptionFilterResponse struct {
	*types.DeleteSubscriptionFilterOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// DeleteSubscriptionFilter request.
func (r *DeleteSubscriptionFilterResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
