// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package cloudwatchlogs

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/cloudwatchlogs/types"
)

const opGetQueryResults = "GetQueryResults"

// GetQueryResultsRequest returns a request value for making API operation for
// Amazon CloudWatch Logs.
//
// Returns the results from the specified query.
//
// Only the fields requested in the query are returned, along with a @ptr field
// which is the identifier for the log record. You can use the value of @ptr
// in a operation to get the full log record.
//
// GetQueryResults does not start a query execution. To run a query, use .
//
// If the value of the Status field in the output is Running, this operation
// returns only partial results. If you see a value of Scheduled or Running
// for the status, you can retry the operation later to see the final results.
//
//    // Example sending a request using GetQueryResultsRequest.
//    req := client.GetQueryResultsRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/GetQueryResults
func (c *Client) GetQueryResultsRequest(input *types.GetQueryResultsInput) GetQueryResultsRequest {
	op := &aws.Operation{
		Name:       opGetQueryResults,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &types.GetQueryResultsInput{}
	}

	req := c.newRequest(op, input, &types.GetQueryResultsOutput{})
	return GetQueryResultsRequest{Request: req, Input: input, Copy: c.GetQueryResultsRequest}
}

// GetQueryResultsRequest is the request type for the
// GetQueryResults API operation.
type GetQueryResultsRequest struct {
	*aws.Request
	Input *types.GetQueryResultsInput
	Copy  func(*types.GetQueryResultsInput) GetQueryResultsRequest
}

// Send marshals and sends the GetQueryResults API request.
func (r GetQueryResultsRequest) Send(ctx context.Context) (*GetQueryResultsResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &GetQueryResultsResponse{
		GetQueryResultsOutput: r.Request.Data.(*types.GetQueryResultsOutput),
		response:              &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// GetQueryResultsResponse is the response type for the
// GetQueryResults API operation.
type GetQueryResultsResponse struct {
	*types.GetQueryResultsOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// GetQueryResults request.
func (r *GetQueryResultsResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
