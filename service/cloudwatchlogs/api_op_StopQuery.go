// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package cloudwatchlogs

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/cloudwatchlogs/types"
)

const opStopQuery = "StopQuery"

// StopQueryRequest returns a request value for making API operation for
// Amazon CloudWatch Logs.
//
// Stops a CloudWatch Logs Insights query that is in progress. If the query
// has already ended, the operation returns an error indicating that the specified
// query is not running.
//
//    // Example sending a request using StopQueryRequest.
//    req := client.StopQueryRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/StopQuery
func (c *Client) StopQueryRequest(input *types.StopQueryInput) StopQueryRequest {
	op := &aws.Operation{
		Name:       opStopQuery,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &types.StopQueryInput{}
	}

	req := c.newRequest(op, input, &types.StopQueryOutput{})
	return StopQueryRequest{Request: req, Input: input, Copy: c.StopQueryRequest}
}

// StopQueryRequest is the request type for the
// StopQuery API operation.
type StopQueryRequest struct {
	*aws.Request
	Input *types.StopQueryInput
	Copy  func(*types.StopQueryInput) StopQueryRequest
}

// Send marshals and sends the StopQuery API request.
func (r StopQueryRequest) Send(ctx context.Context) (*StopQueryResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &StopQueryResponse{
		StopQueryOutput: r.Request.Data.(*types.StopQueryOutput),
		response:        &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// StopQueryResponse is the response type for the
// StopQuery API operation.
type StopQueryResponse struct {
	*types.StopQueryOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// StopQuery request.
func (r *StopQueryResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
