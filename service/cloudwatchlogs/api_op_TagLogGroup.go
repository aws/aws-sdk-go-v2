// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package cloudwatchlogs

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/private/protocol"
	"github.com/aws/aws-sdk-go-v2/private/protocol/jsonrpc"
	"github.com/aws/aws-sdk-go-v2/service/cloudwatchlogs/types"
)

const opTagLogGroup = "TagLogGroup"

// TagLogGroupRequest returns a request value for making API operation for
// Amazon CloudWatch Logs.
//
// Adds or updates the specified tags for the specified log group.
//
// To list the tags for a log group, use ListTagsLogGroup. To remove tags, use
// UntagLogGroup.
//
// For more information about tags, see Tag Log Groups in Amazon CloudWatch
// Logs (https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/log-group-tagging.html)
// in the Amazon CloudWatch Logs User Guide.
//
//    // Example sending a request using TagLogGroupRequest.
//    req := client.TagLogGroupRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/TagLogGroup
func (c *Client) TagLogGroupRequest(input *types.TagLogGroupInput) TagLogGroupRequest {
	op := &aws.Operation{
		Name:       opTagLogGroup,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &types.TagLogGroupInput{}
	}

	req := c.newRequest(op, input, &types.TagLogGroupOutput{})
	req.Handlers.Unmarshal.Remove(jsonrpc.UnmarshalHandler)
	req.Handlers.Unmarshal.PushBackNamed(protocol.UnmarshalDiscardBodyHandler)
	return TagLogGroupRequest{Request: req, Input: input, Copy: c.TagLogGroupRequest}
}

// TagLogGroupRequest is the request type for the
// TagLogGroup API operation.
type TagLogGroupRequest struct {
	*aws.Request
	Input *types.TagLogGroupInput
	Copy  func(*types.TagLogGroupInput) TagLogGroupRequest
}

// Send marshals and sends the TagLogGroup API request.
func (r TagLogGroupRequest) Send(ctx context.Context) (*TagLogGroupResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &TagLogGroupResponse{
		TagLogGroupOutput: r.Request.Data.(*types.TagLogGroupOutput),
		response:          &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// TagLogGroupResponse is the response type for the
// TagLogGroup API operation.
type TagLogGroupResponse struct {
	*types.TagLogGroupOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// TagLogGroup request.
func (r *TagLogGroupResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
