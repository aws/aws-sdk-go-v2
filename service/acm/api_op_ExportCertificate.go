// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package acm

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/acm/types"
)

const opExportCertificate = "ExportCertificate"

// ExportCertificateRequest returns a request value for making API operation for
// AWS Certificate Manager.
//
// Exports a private certificate issued by a private certificate authority (CA)
// for use anywhere. You can export the certificate, the certificate chain,
// and the encrypted private key associated with the public key embedded in
// the certificate. You must store the private key securely. The private key
// is a 2048 bit RSA key. You must provide a passphrase for the private key
// when exporting it. You can use the following OpenSSL command to decrypt it
// later. Provide the passphrase when prompted.
//
// openssl rsa -in encrypted_key.pem -out decrypted_key.pem
//
//    // Example sending a request using ExportCertificateRequest.
//    req := client.ExportCertificateRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/acm-2015-12-08/ExportCertificate
func (c *Client) ExportCertificateRequest(input *types.ExportCertificateInput) ExportCertificateRequest {
	op := &aws.Operation{
		Name:       opExportCertificate,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &types.ExportCertificateInput{}
	}

	req := c.newRequest(op, input, &types.ExportCertificateOutput{})
	return ExportCertificateRequest{Request: req, Input: input, Copy: c.ExportCertificateRequest}
}

// ExportCertificateRequest is the request type for the
// ExportCertificate API operation.
type ExportCertificateRequest struct {
	*aws.Request
	Input *types.ExportCertificateInput
	Copy  func(*types.ExportCertificateInput) ExportCertificateRequest
}

// Send marshals and sends the ExportCertificate API request.
func (r ExportCertificateRequest) Send(ctx context.Context) (*ExportCertificateResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &ExportCertificateResponse{
		ExportCertificateOutput: r.Request.Data.(*types.ExportCertificateOutput),
		response:                &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// ExportCertificateResponse is the response type for the
// ExportCertificate API operation.
type ExportCertificateResponse struct {
	*types.ExportCertificateOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// ExportCertificate request.
func (r *ExportCertificateResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
