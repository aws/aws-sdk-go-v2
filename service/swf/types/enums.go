// Code generated by smithy-go-codegen DO NOT EDIT.

package types

type ActivityTaskTimeoutType string

// Enum values for ActivityTaskTimeoutType
const (
	ActivityTaskTimeoutTypeStart_to_close    ActivityTaskTimeoutType = "START_TO_CLOSE"
	ActivityTaskTimeoutTypeSchedule_to_start ActivityTaskTimeoutType = "SCHEDULE_TO_START"
	ActivityTaskTimeoutTypeSchedule_to_close ActivityTaskTimeoutType = "SCHEDULE_TO_CLOSE"
	ActivityTaskTimeoutTypeHeartbeat         ActivityTaskTimeoutType = "HEARTBEAT"
)

// Values returns all known values for ActivityTaskTimeoutType. Note that this can
// be expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (ActivityTaskTimeoutType) Values() []ActivityTaskTimeoutType {
	return []ActivityTaskTimeoutType{
		"START_TO_CLOSE",
		"SCHEDULE_TO_START",
		"SCHEDULE_TO_CLOSE",
		"HEARTBEAT",
	}
}

type CancelTimerFailedCause string

// Enum values for CancelTimerFailedCause
const (
	CancelTimerFailedCauseTimer_id_unknown        CancelTimerFailedCause = "TIMER_ID_UNKNOWN"
	CancelTimerFailedCauseOperation_not_permitted CancelTimerFailedCause = "OPERATION_NOT_PERMITTED"
)

// Values returns all known values for CancelTimerFailedCause. Note that this can
// be expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (CancelTimerFailedCause) Values() []CancelTimerFailedCause {
	return []CancelTimerFailedCause{
		"TIMER_ID_UNKNOWN",
		"OPERATION_NOT_PERMITTED",
	}
}

type CancelWorkflowExecutionFailedCause string

// Enum values for CancelWorkflowExecutionFailedCause
const (
	CancelWorkflowExecutionFailedCauseUnhandled_decision      CancelWorkflowExecutionFailedCause = "UNHANDLED_DECISION"
	CancelWorkflowExecutionFailedCauseOperation_not_permitted CancelWorkflowExecutionFailedCause = "OPERATION_NOT_PERMITTED"
)

// Values returns all known values for CancelWorkflowExecutionFailedCause. Note
// that this can be expanded in the future, and so it is only as up to date as the
// client. The ordering of this slice is not guaranteed to be stable across
// updates.
func (CancelWorkflowExecutionFailedCause) Values() []CancelWorkflowExecutionFailedCause {
	return []CancelWorkflowExecutionFailedCause{
		"UNHANDLED_DECISION",
		"OPERATION_NOT_PERMITTED",
	}
}

type ChildPolicy string

// Enum values for ChildPolicy
const (
	ChildPolicyTerminate      ChildPolicy = "TERMINATE"
	ChildPolicyRequest_cancel ChildPolicy = "REQUEST_CANCEL"
	ChildPolicyAbandon        ChildPolicy = "ABANDON"
)

// Values returns all known values for ChildPolicy. Note that this can be expanded
// in the future, and so it is only as up to date as the client. The ordering of
// this slice is not guaranteed to be stable across updates.
func (ChildPolicy) Values() []ChildPolicy {
	return []ChildPolicy{
		"TERMINATE",
		"REQUEST_CANCEL",
		"ABANDON",
	}
}

type CloseStatus string

// Enum values for CloseStatus
const (
	CloseStatusCompleted        CloseStatus = "COMPLETED"
	CloseStatusFailed           CloseStatus = "FAILED"
	CloseStatusCanceled         CloseStatus = "CANCELED"
	CloseStatusTerminated       CloseStatus = "TERMINATED"
	CloseStatusContinued_as_new CloseStatus = "CONTINUED_AS_NEW"
	CloseStatusTimed_out        CloseStatus = "TIMED_OUT"
)

// Values returns all known values for CloseStatus. Note that this can be expanded
// in the future, and so it is only as up to date as the client. The ordering of
// this slice is not guaranteed to be stable across updates.
func (CloseStatus) Values() []CloseStatus {
	return []CloseStatus{
		"COMPLETED",
		"FAILED",
		"CANCELED",
		"TERMINATED",
		"CONTINUED_AS_NEW",
		"TIMED_OUT",
	}
}

type CompleteWorkflowExecutionFailedCause string

// Enum values for CompleteWorkflowExecutionFailedCause
const (
	CompleteWorkflowExecutionFailedCauseUnhandled_decision      CompleteWorkflowExecutionFailedCause = "UNHANDLED_DECISION"
	CompleteWorkflowExecutionFailedCauseOperation_not_permitted CompleteWorkflowExecutionFailedCause = "OPERATION_NOT_PERMITTED"
)

// Values returns all known values for CompleteWorkflowExecutionFailedCause. Note
// that this can be expanded in the future, and so it is only as up to date as the
// client. The ordering of this slice is not guaranteed to be stable across
// updates.
func (CompleteWorkflowExecutionFailedCause) Values() []CompleteWorkflowExecutionFailedCause {
	return []CompleteWorkflowExecutionFailedCause{
		"UNHANDLED_DECISION",
		"OPERATION_NOT_PERMITTED",
	}
}

type ContinueAsNewWorkflowExecutionFailedCause string

// Enum values for ContinueAsNewWorkflowExecutionFailedCause
const (
	ContinueAsNewWorkflowExecutionFailedCauseUnhandled_decision                                 ContinueAsNewWorkflowExecutionFailedCause = "UNHANDLED_DECISION"
	ContinueAsNewWorkflowExecutionFailedCauseWorkflow_type_deprecated                           ContinueAsNewWorkflowExecutionFailedCause = "WORKFLOW_TYPE_DEPRECATED"
	ContinueAsNewWorkflowExecutionFailedCauseWorkflow_type_does_not_exist                       ContinueAsNewWorkflowExecutionFailedCause = "WORKFLOW_TYPE_DOES_NOT_EXIST"
	ContinueAsNewWorkflowExecutionFailedCauseDefault_execution_start_to_close_timeout_undefined ContinueAsNewWorkflowExecutionFailedCause = "DEFAULT_EXECUTION_START_TO_CLOSE_TIMEOUT_UNDEFINED"
	ContinueAsNewWorkflowExecutionFailedCauseDefault_task_start_to_close_timeout_undefined      ContinueAsNewWorkflowExecutionFailedCause = "DEFAULT_TASK_START_TO_CLOSE_TIMEOUT_UNDEFINED"
	ContinueAsNewWorkflowExecutionFailedCauseDefault_task_list_undefined                        ContinueAsNewWorkflowExecutionFailedCause = "DEFAULT_TASK_LIST_UNDEFINED"
	ContinueAsNewWorkflowExecutionFailedCauseDefault_child_policy_undefined                     ContinueAsNewWorkflowExecutionFailedCause = "DEFAULT_CHILD_POLICY_UNDEFINED"
	ContinueAsNewWorkflowExecutionFailedCauseContinue_as_new_workflow_execution_rate_exceeded   ContinueAsNewWorkflowExecutionFailedCause = "CONTINUE_AS_NEW_WORKFLOW_EXECUTION_RATE_EXCEEDED"
	ContinueAsNewWorkflowExecutionFailedCauseOperation_not_permitted                            ContinueAsNewWorkflowExecutionFailedCause = "OPERATION_NOT_PERMITTED"
)

// Values returns all known values for ContinueAsNewWorkflowExecutionFailedCause.
// Note that this can be expanded in the future, and so it is only as up to date as
// the client. The ordering of this slice is not guaranteed to be stable across
// updates.
func (ContinueAsNewWorkflowExecutionFailedCause) Values() []ContinueAsNewWorkflowExecutionFailedCause {
	return []ContinueAsNewWorkflowExecutionFailedCause{
		"UNHANDLED_DECISION",
		"WORKFLOW_TYPE_DEPRECATED",
		"WORKFLOW_TYPE_DOES_NOT_EXIST",
		"DEFAULT_EXECUTION_START_TO_CLOSE_TIMEOUT_UNDEFINED",
		"DEFAULT_TASK_START_TO_CLOSE_TIMEOUT_UNDEFINED",
		"DEFAULT_TASK_LIST_UNDEFINED",
		"DEFAULT_CHILD_POLICY_UNDEFINED",
		"CONTINUE_AS_NEW_WORKFLOW_EXECUTION_RATE_EXCEEDED",
		"OPERATION_NOT_PERMITTED",
	}
}

type DecisionTaskTimeoutType string

// Enum values for DecisionTaskTimeoutType
const (
	DecisionTaskTimeoutTypeStart_to_close DecisionTaskTimeoutType = "START_TO_CLOSE"
)

// Values returns all known values for DecisionTaskTimeoutType. Note that this can
// be expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (DecisionTaskTimeoutType) Values() []DecisionTaskTimeoutType {
	return []DecisionTaskTimeoutType{
		"START_TO_CLOSE",
	}
}

type DecisionType string

// Enum values for DecisionType
const (
	DecisionTypeScheduleactivitytask                   DecisionType = "ScheduleActivityTask"
	DecisionTypeRequestcancelactivitytask              DecisionType = "RequestCancelActivityTask"
	DecisionTypeCompleteworkflowexecution              DecisionType = "CompleteWorkflowExecution"
	DecisionTypeFailworkflowexecution                  DecisionType = "FailWorkflowExecution"
	DecisionTypeCancelworkflowexecution                DecisionType = "CancelWorkflowExecution"
	DecisionTypeContinueasnewworkflowexecution         DecisionType = "ContinueAsNewWorkflowExecution"
	DecisionTypeRecordmarker                           DecisionType = "RecordMarker"
	DecisionTypeStarttimer                             DecisionType = "StartTimer"
	DecisionTypeCanceltimer                            DecisionType = "CancelTimer"
	DecisionTypeSignalexternalworkflowexecution        DecisionType = "SignalExternalWorkflowExecution"
	DecisionTypeRequestcancelexternalworkflowexecution DecisionType = "RequestCancelExternalWorkflowExecution"
	DecisionTypeStartchildworkflowexecution            DecisionType = "StartChildWorkflowExecution"
	DecisionTypeSchedulelambdafunction                 DecisionType = "ScheduleLambdaFunction"
)

// Values returns all known values for DecisionType. Note that this can be expanded
// in the future, and so it is only as up to date as the client. The ordering of
// this slice is not guaranteed to be stable across updates.
func (DecisionType) Values() []DecisionType {
	return []DecisionType{
		"ScheduleActivityTask",
		"RequestCancelActivityTask",
		"CompleteWorkflowExecution",
		"FailWorkflowExecution",
		"CancelWorkflowExecution",
		"ContinueAsNewWorkflowExecution",
		"RecordMarker",
		"StartTimer",
		"CancelTimer",
		"SignalExternalWorkflowExecution",
		"RequestCancelExternalWorkflowExecution",
		"StartChildWorkflowExecution",
		"ScheduleLambdaFunction",
	}
}

type EventType string

// Enum values for EventType
const (
	EventTypeWorkflowexecutionstarted                        EventType = "WorkflowExecutionStarted"
	EventTypeWorkflowexecutioncancelrequested                EventType = "WorkflowExecutionCancelRequested"
	EventTypeWorkflowexecutioncompleted                      EventType = "WorkflowExecutionCompleted"
	EventTypeCompleteworkflowexecutionfailed                 EventType = "CompleteWorkflowExecutionFailed"
	EventTypeWorkflowexecutionfailed                         EventType = "WorkflowExecutionFailed"
	EventTypeFailworkflowexecutionfailed                     EventType = "FailWorkflowExecutionFailed"
	EventTypeWorkflowexecutiontimedout                       EventType = "WorkflowExecutionTimedOut"
	EventTypeWorkflowexecutioncanceled                       EventType = "WorkflowExecutionCanceled"
	EventTypeCancelworkflowexecutionfailed                   EventType = "CancelWorkflowExecutionFailed"
	EventTypeWorkflowexecutioncontinuedasnew                 EventType = "WorkflowExecutionContinuedAsNew"
	EventTypeContinueasnewworkflowexecutionfailed            EventType = "ContinueAsNewWorkflowExecutionFailed"
	EventTypeWorkflowexecutionterminated                     EventType = "WorkflowExecutionTerminated"
	EventTypeDecisiontaskscheduled                           EventType = "DecisionTaskScheduled"
	EventTypeDecisiontaskstarted                             EventType = "DecisionTaskStarted"
	EventTypeDecisiontaskcompleted                           EventType = "DecisionTaskCompleted"
	EventTypeDecisiontasktimedout                            EventType = "DecisionTaskTimedOut"
	EventTypeActivitytaskscheduled                           EventType = "ActivityTaskScheduled"
	EventTypeScheduleactivitytaskfailed                      EventType = "ScheduleActivityTaskFailed"
	EventTypeActivitytaskstarted                             EventType = "ActivityTaskStarted"
	EventTypeActivitytaskcompleted                           EventType = "ActivityTaskCompleted"
	EventTypeActivitytaskfailed                              EventType = "ActivityTaskFailed"
	EventTypeActivitytasktimedout                            EventType = "ActivityTaskTimedOut"
	EventTypeActivitytaskcanceled                            EventType = "ActivityTaskCanceled"
	EventTypeActivitytaskcancelrequested                     EventType = "ActivityTaskCancelRequested"
	EventTypeRequestcancelactivitytaskfailed                 EventType = "RequestCancelActivityTaskFailed"
	EventTypeWorkflowexecutionsignaled                       EventType = "WorkflowExecutionSignaled"
	EventTypeMarkerrecorded                                  EventType = "MarkerRecorded"
	EventTypeRecordmarkerfailed                              EventType = "RecordMarkerFailed"
	EventTypeTimerstarted                                    EventType = "TimerStarted"
	EventTypeStarttimerfailed                                EventType = "StartTimerFailed"
	EventTypeTimerfired                                      EventType = "TimerFired"
	EventTypeTimercanceled                                   EventType = "TimerCanceled"
	EventTypeCanceltimerfailed                               EventType = "CancelTimerFailed"
	EventTypeStartchildworkflowexecutioninitiated            EventType = "StartChildWorkflowExecutionInitiated"
	EventTypeStartchildworkflowexecutionfailed               EventType = "StartChildWorkflowExecutionFailed"
	EventTypeChildworkflowexecutionstarted                   EventType = "ChildWorkflowExecutionStarted"
	EventTypeChildworkflowexecutioncompleted                 EventType = "ChildWorkflowExecutionCompleted"
	EventTypeChildworkflowexecutionfailed                    EventType = "ChildWorkflowExecutionFailed"
	EventTypeChildworkflowexecutiontimedout                  EventType = "ChildWorkflowExecutionTimedOut"
	EventTypeChildworkflowexecutioncanceled                  EventType = "ChildWorkflowExecutionCanceled"
	EventTypeChildworkflowexecutionterminated                EventType = "ChildWorkflowExecutionTerminated"
	EventTypeSignalexternalworkflowexecutioninitiated        EventType = "SignalExternalWorkflowExecutionInitiated"
	EventTypeSignalexternalworkflowexecutionfailed           EventType = "SignalExternalWorkflowExecutionFailed"
	EventTypeExternalworkflowexecutionsignaled               EventType = "ExternalWorkflowExecutionSignaled"
	EventTypeRequestcancelexternalworkflowexecutioninitiated EventType = "RequestCancelExternalWorkflowExecutionInitiated"
	EventTypeRequestcancelexternalworkflowexecutionfailed    EventType = "RequestCancelExternalWorkflowExecutionFailed"
	EventTypeExternalworkflowexecutioncancelrequested        EventType = "ExternalWorkflowExecutionCancelRequested"
	EventTypeLambdafunctionscheduled                         EventType = "LambdaFunctionScheduled"
	EventTypeLambdafunctionstarted                           EventType = "LambdaFunctionStarted"
	EventTypeLambdafunctioncompleted                         EventType = "LambdaFunctionCompleted"
	EventTypeLambdafunctionfailed                            EventType = "LambdaFunctionFailed"
	EventTypeLambdafunctiontimedout                          EventType = "LambdaFunctionTimedOut"
	EventTypeSchedulelambdafunctionfailed                    EventType = "ScheduleLambdaFunctionFailed"
	EventTypeStartlambdafunctionfailed                       EventType = "StartLambdaFunctionFailed"
)

// Values returns all known values for EventType. Note that this can be expanded in
// the future, and so it is only as up to date as the client. The ordering of this
// slice is not guaranteed to be stable across updates.
func (EventType) Values() []EventType {
	return []EventType{
		"WorkflowExecutionStarted",
		"WorkflowExecutionCancelRequested",
		"WorkflowExecutionCompleted",
		"CompleteWorkflowExecutionFailed",
		"WorkflowExecutionFailed",
		"FailWorkflowExecutionFailed",
		"WorkflowExecutionTimedOut",
		"WorkflowExecutionCanceled",
		"CancelWorkflowExecutionFailed",
		"WorkflowExecutionContinuedAsNew",
		"ContinueAsNewWorkflowExecutionFailed",
		"WorkflowExecutionTerminated",
		"DecisionTaskScheduled",
		"DecisionTaskStarted",
		"DecisionTaskCompleted",
		"DecisionTaskTimedOut",
		"ActivityTaskScheduled",
		"ScheduleActivityTaskFailed",
		"ActivityTaskStarted",
		"ActivityTaskCompleted",
		"ActivityTaskFailed",
		"ActivityTaskTimedOut",
		"ActivityTaskCanceled",
		"ActivityTaskCancelRequested",
		"RequestCancelActivityTaskFailed",
		"WorkflowExecutionSignaled",
		"MarkerRecorded",
		"RecordMarkerFailed",
		"TimerStarted",
		"StartTimerFailed",
		"TimerFired",
		"TimerCanceled",
		"CancelTimerFailed",
		"StartChildWorkflowExecutionInitiated",
		"StartChildWorkflowExecutionFailed",
		"ChildWorkflowExecutionStarted",
		"ChildWorkflowExecutionCompleted",
		"ChildWorkflowExecutionFailed",
		"ChildWorkflowExecutionTimedOut",
		"ChildWorkflowExecutionCanceled",
		"ChildWorkflowExecutionTerminated",
		"SignalExternalWorkflowExecutionInitiated",
		"SignalExternalWorkflowExecutionFailed",
		"ExternalWorkflowExecutionSignaled",
		"RequestCancelExternalWorkflowExecutionInitiated",
		"RequestCancelExternalWorkflowExecutionFailed",
		"ExternalWorkflowExecutionCancelRequested",
		"LambdaFunctionScheduled",
		"LambdaFunctionStarted",
		"LambdaFunctionCompleted",
		"LambdaFunctionFailed",
		"LambdaFunctionTimedOut",
		"ScheduleLambdaFunctionFailed",
		"StartLambdaFunctionFailed",
	}
}

type ExecutionStatus string

// Enum values for ExecutionStatus
const (
	ExecutionStatusOpen   ExecutionStatus = "OPEN"
	ExecutionStatusClosed ExecutionStatus = "CLOSED"
)

// Values returns all known values for ExecutionStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (ExecutionStatus) Values() []ExecutionStatus {
	return []ExecutionStatus{
		"OPEN",
		"CLOSED",
	}
}

type FailWorkflowExecutionFailedCause string

// Enum values for FailWorkflowExecutionFailedCause
const (
	FailWorkflowExecutionFailedCauseUnhandled_decision      FailWorkflowExecutionFailedCause = "UNHANDLED_DECISION"
	FailWorkflowExecutionFailedCauseOperation_not_permitted FailWorkflowExecutionFailedCause = "OPERATION_NOT_PERMITTED"
)

// Values returns all known values for FailWorkflowExecutionFailedCause. Note that
// this can be expanded in the future, and so it is only as up to date as the
// client. The ordering of this slice is not guaranteed to be stable across
// updates.
func (FailWorkflowExecutionFailedCause) Values() []FailWorkflowExecutionFailedCause {
	return []FailWorkflowExecutionFailedCause{
		"UNHANDLED_DECISION",
		"OPERATION_NOT_PERMITTED",
	}
}

type LambdaFunctionTimeoutType string

// Enum values for LambdaFunctionTimeoutType
const (
	LambdaFunctionTimeoutTypeStart_to_close LambdaFunctionTimeoutType = "START_TO_CLOSE"
)

// Values returns all known values for LambdaFunctionTimeoutType. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
// The ordering of this slice is not guaranteed to be stable across updates.
func (LambdaFunctionTimeoutType) Values() []LambdaFunctionTimeoutType {
	return []LambdaFunctionTimeoutType{
		"START_TO_CLOSE",
	}
}

type RecordMarkerFailedCause string

// Enum values for RecordMarkerFailedCause
const (
	RecordMarkerFailedCauseOperation_not_permitted RecordMarkerFailedCause = "OPERATION_NOT_PERMITTED"
)

// Values returns all known values for RecordMarkerFailedCause. Note that this can
// be expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (RecordMarkerFailedCause) Values() []RecordMarkerFailedCause {
	return []RecordMarkerFailedCause{
		"OPERATION_NOT_PERMITTED",
	}
}

type RegistrationStatus string

// Enum values for RegistrationStatus
const (
	RegistrationStatusRegistered RegistrationStatus = "REGISTERED"
	RegistrationStatusDeprecated RegistrationStatus = "DEPRECATED"
)

// Values returns all known values for RegistrationStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (RegistrationStatus) Values() []RegistrationStatus {
	return []RegistrationStatus{
		"REGISTERED",
		"DEPRECATED",
	}
}

type RequestCancelActivityTaskFailedCause string

// Enum values for RequestCancelActivityTaskFailedCause
const (
	RequestCancelActivityTaskFailedCauseActivity_id_unknown     RequestCancelActivityTaskFailedCause = "ACTIVITY_ID_UNKNOWN"
	RequestCancelActivityTaskFailedCauseOperation_not_permitted RequestCancelActivityTaskFailedCause = "OPERATION_NOT_PERMITTED"
)

// Values returns all known values for RequestCancelActivityTaskFailedCause. Note
// that this can be expanded in the future, and so it is only as up to date as the
// client. The ordering of this slice is not guaranteed to be stable across
// updates.
func (RequestCancelActivityTaskFailedCause) Values() []RequestCancelActivityTaskFailedCause {
	return []RequestCancelActivityTaskFailedCause{
		"ACTIVITY_ID_UNKNOWN",
		"OPERATION_NOT_PERMITTED",
	}
}

type RequestCancelExternalWorkflowExecutionFailedCause string

// Enum values for RequestCancelExternalWorkflowExecutionFailedCause
const (
	RequestCancelExternalWorkflowExecutionFailedCauseUnknown_external_workflow_execution                      RequestCancelExternalWorkflowExecutionFailedCause = "UNKNOWN_EXTERNAL_WORKFLOW_EXECUTION"
	RequestCancelExternalWorkflowExecutionFailedCauseRequest_cancel_external_workflow_execution_rate_exceeded RequestCancelExternalWorkflowExecutionFailedCause = "REQUEST_CANCEL_EXTERNAL_WORKFLOW_EXECUTION_RATE_EXCEEDED"
	RequestCancelExternalWorkflowExecutionFailedCauseOperation_not_permitted                                  RequestCancelExternalWorkflowExecutionFailedCause = "OPERATION_NOT_PERMITTED"
)

// Values returns all known values for
// RequestCancelExternalWorkflowExecutionFailedCause. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (RequestCancelExternalWorkflowExecutionFailedCause) Values() []RequestCancelExternalWorkflowExecutionFailedCause {
	return []RequestCancelExternalWorkflowExecutionFailedCause{
		"UNKNOWN_EXTERNAL_WORKFLOW_EXECUTION",
		"REQUEST_CANCEL_EXTERNAL_WORKFLOW_EXECUTION_RATE_EXCEEDED",
		"OPERATION_NOT_PERMITTED",
	}
}

type ScheduleActivityTaskFailedCause string

// Enum values for ScheduleActivityTaskFailedCause
const (
	ScheduleActivityTaskFailedCauseActivity_type_deprecated                    ScheduleActivityTaskFailedCause = "ACTIVITY_TYPE_DEPRECATED"
	ScheduleActivityTaskFailedCauseActivity_type_does_not_exist                ScheduleActivityTaskFailedCause = "ACTIVITY_TYPE_DOES_NOT_EXIST"
	ScheduleActivityTaskFailedCauseActivity_id_already_in_use                  ScheduleActivityTaskFailedCause = "ACTIVITY_ID_ALREADY_IN_USE"
	ScheduleActivityTaskFailedCauseOpen_activities_limit_exceeded              ScheduleActivityTaskFailedCause = "OPEN_ACTIVITIES_LIMIT_EXCEEDED"
	ScheduleActivityTaskFailedCauseActivity_creation_rate_exceeded             ScheduleActivityTaskFailedCause = "ACTIVITY_CREATION_RATE_EXCEEDED"
	ScheduleActivityTaskFailedCauseDefault_schedule_to_close_timeout_undefined ScheduleActivityTaskFailedCause = "DEFAULT_SCHEDULE_TO_CLOSE_TIMEOUT_UNDEFINED"
	ScheduleActivityTaskFailedCauseDefault_task_list_undefined                 ScheduleActivityTaskFailedCause = "DEFAULT_TASK_LIST_UNDEFINED"
	ScheduleActivityTaskFailedCauseDefault_schedule_to_start_timeout_undefined ScheduleActivityTaskFailedCause = "DEFAULT_SCHEDULE_TO_START_TIMEOUT_UNDEFINED"
	ScheduleActivityTaskFailedCauseDefault_start_to_close_timeout_undefined    ScheduleActivityTaskFailedCause = "DEFAULT_START_TO_CLOSE_TIMEOUT_UNDEFINED"
	ScheduleActivityTaskFailedCauseDefault_heartbeat_timeout_undefined         ScheduleActivityTaskFailedCause = "DEFAULT_HEARTBEAT_TIMEOUT_UNDEFINED"
	ScheduleActivityTaskFailedCauseOperation_not_permitted                     ScheduleActivityTaskFailedCause = "OPERATION_NOT_PERMITTED"
)

// Values returns all known values for ScheduleActivityTaskFailedCause. Note that
// this can be expanded in the future, and so it is only as up to date as the
// client. The ordering of this slice is not guaranteed to be stable across
// updates.
func (ScheduleActivityTaskFailedCause) Values() []ScheduleActivityTaskFailedCause {
	return []ScheduleActivityTaskFailedCause{
		"ACTIVITY_TYPE_DEPRECATED",
		"ACTIVITY_TYPE_DOES_NOT_EXIST",
		"ACTIVITY_ID_ALREADY_IN_USE",
		"OPEN_ACTIVITIES_LIMIT_EXCEEDED",
		"ACTIVITY_CREATION_RATE_EXCEEDED",
		"DEFAULT_SCHEDULE_TO_CLOSE_TIMEOUT_UNDEFINED",
		"DEFAULT_TASK_LIST_UNDEFINED",
		"DEFAULT_SCHEDULE_TO_START_TIMEOUT_UNDEFINED",
		"DEFAULT_START_TO_CLOSE_TIMEOUT_UNDEFINED",
		"DEFAULT_HEARTBEAT_TIMEOUT_UNDEFINED",
		"OPERATION_NOT_PERMITTED",
	}
}

type ScheduleLambdaFunctionFailedCause string

// Enum values for ScheduleLambdaFunctionFailedCause
const (
	ScheduleLambdaFunctionFailedCauseId_already_in_use                      ScheduleLambdaFunctionFailedCause = "ID_ALREADY_IN_USE"
	ScheduleLambdaFunctionFailedCauseOpen_lambda_functions_limit_exceeded   ScheduleLambdaFunctionFailedCause = "OPEN_LAMBDA_FUNCTIONS_LIMIT_EXCEEDED"
	ScheduleLambdaFunctionFailedCauseLambda_function_creation_rate_exceeded ScheduleLambdaFunctionFailedCause = "LAMBDA_FUNCTION_CREATION_RATE_EXCEEDED"
	ScheduleLambdaFunctionFailedCauseLambda_service_not_available_in_region ScheduleLambdaFunctionFailedCause = "LAMBDA_SERVICE_NOT_AVAILABLE_IN_REGION"
)

// Values returns all known values for ScheduleLambdaFunctionFailedCause. Note that
// this can be expanded in the future, and so it is only as up to date as the
// client. The ordering of this slice is not guaranteed to be stable across
// updates.
func (ScheduleLambdaFunctionFailedCause) Values() []ScheduleLambdaFunctionFailedCause {
	return []ScheduleLambdaFunctionFailedCause{
		"ID_ALREADY_IN_USE",
		"OPEN_LAMBDA_FUNCTIONS_LIMIT_EXCEEDED",
		"LAMBDA_FUNCTION_CREATION_RATE_EXCEEDED",
		"LAMBDA_SERVICE_NOT_AVAILABLE_IN_REGION",
	}
}

type SignalExternalWorkflowExecutionFailedCause string

// Enum values for SignalExternalWorkflowExecutionFailedCause
const (
	SignalExternalWorkflowExecutionFailedCauseUnknown_external_workflow_execution              SignalExternalWorkflowExecutionFailedCause = "UNKNOWN_EXTERNAL_WORKFLOW_EXECUTION"
	SignalExternalWorkflowExecutionFailedCauseSignal_external_workflow_execution_rate_exceeded SignalExternalWorkflowExecutionFailedCause = "SIGNAL_EXTERNAL_WORKFLOW_EXECUTION_RATE_EXCEEDED"
	SignalExternalWorkflowExecutionFailedCauseOperation_not_permitted                          SignalExternalWorkflowExecutionFailedCause = "OPERATION_NOT_PERMITTED"
)

// Values returns all known values for SignalExternalWorkflowExecutionFailedCause.
// Note that this can be expanded in the future, and so it is only as up to date as
// the client. The ordering of this slice is not guaranteed to be stable across
// updates.
func (SignalExternalWorkflowExecutionFailedCause) Values() []SignalExternalWorkflowExecutionFailedCause {
	return []SignalExternalWorkflowExecutionFailedCause{
		"UNKNOWN_EXTERNAL_WORKFLOW_EXECUTION",
		"SIGNAL_EXTERNAL_WORKFLOW_EXECUTION_RATE_EXCEEDED",
		"OPERATION_NOT_PERMITTED",
	}
}

type StartChildWorkflowExecutionFailedCause string

// Enum values for StartChildWorkflowExecutionFailedCause
const (
	StartChildWorkflowExecutionFailedCauseWorkflow_type_does_not_exist                       StartChildWorkflowExecutionFailedCause = "WORKFLOW_TYPE_DOES_NOT_EXIST"
	StartChildWorkflowExecutionFailedCauseWorkflow_type_deprecated                           StartChildWorkflowExecutionFailedCause = "WORKFLOW_TYPE_DEPRECATED"
	StartChildWorkflowExecutionFailedCauseOpen_children_limit_exceeded                       StartChildWorkflowExecutionFailedCause = "OPEN_CHILDREN_LIMIT_EXCEEDED"
	StartChildWorkflowExecutionFailedCauseOpen_workflows_limit_exceeded                      StartChildWorkflowExecutionFailedCause = "OPEN_WORKFLOWS_LIMIT_EXCEEDED"
	StartChildWorkflowExecutionFailedCauseChild_creation_rate_exceeded                       StartChildWorkflowExecutionFailedCause = "CHILD_CREATION_RATE_EXCEEDED"
	StartChildWorkflowExecutionFailedCauseWorkflow_already_running                           StartChildWorkflowExecutionFailedCause = "WORKFLOW_ALREADY_RUNNING"
	StartChildWorkflowExecutionFailedCauseDefault_execution_start_to_close_timeout_undefined StartChildWorkflowExecutionFailedCause = "DEFAULT_EXECUTION_START_TO_CLOSE_TIMEOUT_UNDEFINED"
	StartChildWorkflowExecutionFailedCauseDefault_task_list_undefined                        StartChildWorkflowExecutionFailedCause = "DEFAULT_TASK_LIST_UNDEFINED"
	StartChildWorkflowExecutionFailedCauseDefault_task_start_to_close_timeout_undefined      StartChildWorkflowExecutionFailedCause = "DEFAULT_TASK_START_TO_CLOSE_TIMEOUT_UNDEFINED"
	StartChildWorkflowExecutionFailedCauseDefault_child_policy_undefined                     StartChildWorkflowExecutionFailedCause = "DEFAULT_CHILD_POLICY_UNDEFINED"
	StartChildWorkflowExecutionFailedCauseOperation_not_permitted                            StartChildWorkflowExecutionFailedCause = "OPERATION_NOT_PERMITTED"
)

// Values returns all known values for StartChildWorkflowExecutionFailedCause. Note
// that this can be expanded in the future, and so it is only as up to date as the
// client. The ordering of this slice is not guaranteed to be stable across
// updates.
func (StartChildWorkflowExecutionFailedCause) Values() []StartChildWorkflowExecutionFailedCause {
	return []StartChildWorkflowExecutionFailedCause{
		"WORKFLOW_TYPE_DOES_NOT_EXIST",
		"WORKFLOW_TYPE_DEPRECATED",
		"OPEN_CHILDREN_LIMIT_EXCEEDED",
		"OPEN_WORKFLOWS_LIMIT_EXCEEDED",
		"CHILD_CREATION_RATE_EXCEEDED",
		"WORKFLOW_ALREADY_RUNNING",
		"DEFAULT_EXECUTION_START_TO_CLOSE_TIMEOUT_UNDEFINED",
		"DEFAULT_TASK_LIST_UNDEFINED",
		"DEFAULT_TASK_START_TO_CLOSE_TIMEOUT_UNDEFINED",
		"DEFAULT_CHILD_POLICY_UNDEFINED",
		"OPERATION_NOT_PERMITTED",
	}
}

type StartLambdaFunctionFailedCause string

// Enum values for StartLambdaFunctionFailedCause
const (
	StartLambdaFunctionFailedCauseAssume_role_failed StartLambdaFunctionFailedCause = "ASSUME_ROLE_FAILED"
)

// Values returns all known values for StartLambdaFunctionFailedCause. Note that
// this can be expanded in the future, and so it is only as up to date as the
// client. The ordering of this slice is not guaranteed to be stable across
// updates.
func (StartLambdaFunctionFailedCause) Values() []StartLambdaFunctionFailedCause {
	return []StartLambdaFunctionFailedCause{
		"ASSUME_ROLE_FAILED",
	}
}

type StartTimerFailedCause string

// Enum values for StartTimerFailedCause
const (
	StartTimerFailedCauseTimer_id_already_in_use      StartTimerFailedCause = "TIMER_ID_ALREADY_IN_USE"
	StartTimerFailedCauseOpen_timers_limit_exceeded   StartTimerFailedCause = "OPEN_TIMERS_LIMIT_EXCEEDED"
	StartTimerFailedCauseTimer_creation_rate_exceeded StartTimerFailedCause = "TIMER_CREATION_RATE_EXCEEDED"
	StartTimerFailedCauseOperation_not_permitted      StartTimerFailedCause = "OPERATION_NOT_PERMITTED"
)

// Values returns all known values for StartTimerFailedCause. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (StartTimerFailedCause) Values() []StartTimerFailedCause {
	return []StartTimerFailedCause{
		"TIMER_ID_ALREADY_IN_USE",
		"OPEN_TIMERS_LIMIT_EXCEEDED",
		"TIMER_CREATION_RATE_EXCEEDED",
		"OPERATION_NOT_PERMITTED",
	}
}

type WorkflowExecutionCancelRequestedCause string

// Enum values for WorkflowExecutionCancelRequestedCause
const (
	WorkflowExecutionCancelRequestedCauseChild_policy_applied WorkflowExecutionCancelRequestedCause = "CHILD_POLICY_APPLIED"
)

// Values returns all known values for WorkflowExecutionCancelRequestedCause. Note
// that this can be expanded in the future, and so it is only as up to date as the
// client. The ordering of this slice is not guaranteed to be stable across
// updates.
func (WorkflowExecutionCancelRequestedCause) Values() []WorkflowExecutionCancelRequestedCause {
	return []WorkflowExecutionCancelRequestedCause{
		"CHILD_POLICY_APPLIED",
	}
}

type WorkflowExecutionTerminatedCause string

// Enum values for WorkflowExecutionTerminatedCause
const (
	WorkflowExecutionTerminatedCauseChild_policy_applied WorkflowExecutionTerminatedCause = "CHILD_POLICY_APPLIED"
	WorkflowExecutionTerminatedCauseEvent_limit_exceeded WorkflowExecutionTerminatedCause = "EVENT_LIMIT_EXCEEDED"
	WorkflowExecutionTerminatedCauseOperator_initiated   WorkflowExecutionTerminatedCause = "OPERATOR_INITIATED"
)

// Values returns all known values for WorkflowExecutionTerminatedCause. Note that
// this can be expanded in the future, and so it is only as up to date as the
// client. The ordering of this slice is not guaranteed to be stable across
// updates.
func (WorkflowExecutionTerminatedCause) Values() []WorkflowExecutionTerminatedCause {
	return []WorkflowExecutionTerminatedCause{
		"CHILD_POLICY_APPLIED",
		"EVENT_LIMIT_EXCEEDED",
		"OPERATOR_INITIATED",
	}
}

type WorkflowExecutionTimeoutType string

// Enum values for WorkflowExecutionTimeoutType
const (
	WorkflowExecutionTimeoutTypeStart_to_close WorkflowExecutionTimeoutType = "START_TO_CLOSE"
)

// Values returns all known values for WorkflowExecutionTimeoutType. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
// The ordering of this slice is not guaranteed to be stable across updates.
func (WorkflowExecutionTimeoutType) Values() []WorkflowExecutionTimeoutType {
	return []WorkflowExecutionTimeoutType{
		"START_TO_CLOSE",
	}
}
