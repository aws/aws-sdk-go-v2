// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package swf

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/private/protocol"
	"github.com/aws/aws-sdk-go-v2/private/protocol/jsonrpc"
	"github.com/aws/aws-sdk-go-v2/service/swf/types"
)

const opRespondActivityTaskCompleted = "RespondActivityTaskCompleted"

// RespondActivityTaskCompletedRequest returns a request value for making API operation for
// Amazon Simple Workflow Service.
//
// Used by workers to tell the service that the ActivityTask identified by the
// taskToken completed successfully with a result (if provided). The result
// appears in the ActivityTaskCompleted event in the workflow history.
//
// If the requested task doesn't complete successfully, use RespondActivityTaskFailed
// instead. If the worker finds that the task is canceled through the canceled
// flag returned by RecordActivityTaskHeartbeat, it should cancel the task,
// clean up and then call RespondActivityTaskCanceled.
//
// A task is considered open from the time that it is scheduled until it is
// closed. Therefore a task is reported as open while a worker is processing
// it. A task is closed after it has been specified in a call to RespondActivityTaskCompleted,
// RespondActivityTaskCanceled, RespondActivityTaskFailed, or the task has timed
// out (https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dg-basic.html#swf-dev-timeout-types).
//
// Access Control
//
// You can use IAM policies to control this action's access to Amazon SWF resources
// as follows:
//
//    * Use a Resource element with the domain name to limit the action to only
//    specified domains.
//
//    * Use an Action element to allow or deny permission to call this action.
//
//    * You cannot use an IAM policy to constrain this action's parameters.
//
// If the caller doesn't have sufficient permissions to invoke the action, or
// the parameter values fall outside the specified constraints, the action fails.
// The associated event attribute's cause parameter is set to OPERATION_NOT_PERMITTED.
// For details and example IAM policies, see Using IAM to Manage Access to Amazon
// SWF Workflows (https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html)
// in the Amazon SWF Developer Guide.
//
//    // Example sending a request using RespondActivityTaskCompletedRequest.
//    req := client.RespondActivityTaskCompletedRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
func (c *Client) RespondActivityTaskCompletedRequest(input *types.RespondActivityTaskCompletedInput) RespondActivityTaskCompletedRequest {
	op := &aws.Operation{
		Name:       opRespondActivityTaskCompleted,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &types.RespondActivityTaskCompletedInput{}
	}

	req := c.newRequest(op, input, &types.RespondActivityTaskCompletedOutput{})
	req.Handlers.Unmarshal.Remove(jsonrpc.UnmarshalHandler)
	req.Handlers.Unmarshal.PushBackNamed(protocol.UnmarshalDiscardBodyHandler)
	return RespondActivityTaskCompletedRequest{Request: req, Input: input, Copy: c.RespondActivityTaskCompletedRequest}
}

// RespondActivityTaskCompletedRequest is the request type for the
// RespondActivityTaskCompleted API operation.
type RespondActivityTaskCompletedRequest struct {
	*aws.Request
	Input *types.RespondActivityTaskCompletedInput
	Copy  func(*types.RespondActivityTaskCompletedInput) RespondActivityTaskCompletedRequest
}

// Send marshals and sends the RespondActivityTaskCompleted API request.
func (r RespondActivityTaskCompletedRequest) Send(ctx context.Context) (*RespondActivityTaskCompletedResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &RespondActivityTaskCompletedResponse{
		RespondActivityTaskCompletedOutput: r.Request.Data.(*types.RespondActivityTaskCompletedOutput),
		response:                           &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// RespondActivityTaskCompletedResponse is the response type for the
// RespondActivityTaskCompleted API operation.
type RespondActivityTaskCompletedResponse struct {
	*types.RespondActivityTaskCompletedOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// RespondActivityTaskCompleted request.
func (r *RespondActivityTaskCompletedResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
