// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package swf

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/swf/types"
)

const opPollForActivityTask = "PollForActivityTask"

// PollForActivityTaskRequest returns a request value for making API operation for
// Amazon Simple Workflow Service.
//
// Used by workers to get an ActivityTask from the specified activity taskList.
// This initiates a long poll, where the service holds the HTTP connection open
// and responds as soon as a task becomes available. The maximum time the service
// holds on to the request before responding is 60 seconds. If no task is available
// within 60 seconds, the poll returns an empty result. An empty result, in
// this context, means that an ActivityTask is returned, but that the value
// of taskToken is an empty string. If a task is returned, the worker should
// use its type to identify and process it correctly.
//
// Workers should set their client side socket timeout to at least 70 seconds
// (10 seconds higher than the maximum time service may hold the poll request).
//
// Access Control
//
// You can use IAM policies to control this action's access to Amazon SWF resources
// as follows:
//
//    * Use a Resource element with the domain name to limit the action to only
//    specified domains.
//
//    * Use an Action element to allow or deny permission to call this action.
//
//    * Constrain the taskList.name parameter by using a Condition element with
//    the swf:taskList.name key to allow the action to access only certain task
//    lists.
//
// If the caller doesn't have sufficient permissions to invoke the action, or
// the parameter values fall outside the specified constraints, the action fails.
// The associated event attribute's cause parameter is set to OPERATION_NOT_PERMITTED.
// For details and example IAM policies, see Using IAM to Manage Access to Amazon
// SWF Workflows (https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html)
// in the Amazon SWF Developer Guide.
//
//    // Example sending a request using PollForActivityTaskRequest.
//    req := client.PollForActivityTaskRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
func (c *Client) PollForActivityTaskRequest(input *types.PollForActivityTaskInput) PollForActivityTaskRequest {
	op := &aws.Operation{
		Name:       opPollForActivityTask,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &types.PollForActivityTaskInput{}
	}

	req := c.newRequest(op, input, &types.PollForActivityTaskOutput{})
	return PollForActivityTaskRequest{Request: req, Input: input, Copy: c.PollForActivityTaskRequest}
}

// PollForActivityTaskRequest is the request type for the
// PollForActivityTask API operation.
type PollForActivityTaskRequest struct {
	*aws.Request
	Input *types.PollForActivityTaskInput
	Copy  func(*types.PollForActivityTaskInput) PollForActivityTaskRequest
}

// Send marshals and sends the PollForActivityTask API request.
func (r PollForActivityTaskRequest) Send(ctx context.Context) (*PollForActivityTaskResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &PollForActivityTaskResponse{
		PollForActivityTaskOutput: r.Request.Data.(*types.PollForActivityTaskOutput),
		response:                  &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// PollForActivityTaskResponse is the response type for the
// PollForActivityTask API operation.
type PollForActivityTaskResponse struct {
	*types.PollForActivityTaskOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// PollForActivityTask request.
func (r *PollForActivityTaskResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
