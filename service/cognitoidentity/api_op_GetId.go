// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package cognitoidentity

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/cognitoidentity/types"
)

const opGetId = "GetId"

// GetIdRequest returns a request value for making API operation for
// Amazon Cognito Identity.
//
// Generates (or retrieves) a Cognito ID. Supplying multiple logins will create
// an implicit linked account.
//
// This is a public API. You do not need any credentials to call this API.
//
//    // Example sending a request using GetIdRequest.
//    req := client.GetIdRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/cognito-identity-2014-06-30/GetId
func (c *Client) GetIdRequest(input *types.GetIdInput) GetIdRequest {
	op := &aws.Operation{
		Name:       opGetId,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &types.GetIdInput{}
	}

	req := c.newRequest(op, input, &types.GetIdOutput{})
	req.Config.Credentials = aws.AnonymousCredentials
	return GetIdRequest{Request: req, Input: input, Copy: c.GetIdRequest}
}

// GetIdRequest is the request type for the
// GetId API operation.
type GetIdRequest struct {
	*aws.Request
	Input *types.GetIdInput
	Copy  func(*types.GetIdInput) GetIdRequest
}

// Send marshals and sends the GetId API request.
func (r GetIdRequest) Send(ctx context.Context) (*GetIdResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &GetIdResponse{
		GetIdOutput: r.Request.Data.(*types.GetIdOutput),
		response:    &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// GetIdResponse is the response type for the
// GetId API operation.
type GetIdResponse struct {
	*types.GetIdOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// GetId request.
func (r *GetIdResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
