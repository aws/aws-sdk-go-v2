// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package cognitoidentity

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/cognitoidentity/types"
)

const opCreateIdentityPool = "CreateIdentityPool"

// CreateIdentityPoolRequest returns a request value for making API operation for
// Amazon Cognito Identity.
//
// Creates a new identity pool. The identity pool is a store of user identity
// information that is specific to your AWS account. The keys for SupportedLoginProviders
// are as follows:
//
//    * Facebook: graph.facebook.com
//
//    * Google: accounts.google.com
//
//    * Amazon: www.amazon.com
//
//    * Twitter: api.twitter.com
//
//    * Digits: www.digits.com
//
// You must use AWS Developer credentials to call this API.
//
//    // Example sending a request using CreateIdentityPoolRequest.
//    req := client.CreateIdentityPoolRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/cognito-identity-2014-06-30/CreateIdentityPool
func (c *Client) CreateIdentityPoolRequest(input *types.CreateIdentityPoolInput) CreateIdentityPoolRequest {
	op := &aws.Operation{
		Name:       opCreateIdentityPool,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &types.CreateIdentityPoolInput{}
	}

	req := c.newRequest(op, input, &types.CreateIdentityPoolOutput{})
	return CreateIdentityPoolRequest{Request: req, Input: input, Copy: c.CreateIdentityPoolRequest}
}

// CreateIdentityPoolRequest is the request type for the
// CreateIdentityPool API operation.
type CreateIdentityPoolRequest struct {
	*aws.Request
	Input *types.CreateIdentityPoolInput
	Copy  func(*types.CreateIdentityPoolInput) CreateIdentityPoolRequest
}

// Send marshals and sends the CreateIdentityPool API request.
func (r CreateIdentityPoolRequest) Send(ctx context.Context) (*CreateIdentityPoolResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &CreateIdentityPoolResponse{
		CreateIdentityPoolOutput: r.Request.Data.(*types.CreateIdentityPoolOutput),
		response:                 &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// CreateIdentityPoolResponse is the response type for the
// CreateIdentityPool API operation.
type CreateIdentityPoolResponse struct {
	*types.CreateIdentityPoolOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// CreateIdentityPool request.
func (r *CreateIdentityPoolResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
