// Code generated by smithy-go-codegen DO NOT EDIT.

package batch

import (
	"context"
	awsmiddleware "github.com/aws/aws-sdk-go-v2/aws/middleware"
	"github.com/aws/aws-sdk-go-v2/aws/retry"
	"github.com/aws/aws-sdk-go-v2/aws/signer/v4"
	"github.com/aws/aws-sdk-go-v2/service/batch/types"
	smithy "github.com/awslabs/smithy-go"
	"github.com/awslabs/smithy-go/middleware"
	smithyhttp "github.com/awslabs/smithy-go/transport/http"
)

// Submits an AWS Batch job from a job definition. Parameters specified during
// SubmitJob () override parameters defined in the job definition.
func (c *Client) SubmitJob(ctx context.Context, params *SubmitJobInput, optFns ...func(*Options)) (*SubmitJobOutput, error) {
	stack := middleware.NewStack("SubmitJob", smithyhttp.NewStackRequest)
	options := c.options.Copy()
	for _, fn := range optFns {
		fn(&options)
	}
	addawsRestjson1_serdeOpSubmitJobMiddlewares(stack)
	awsmiddleware.AddRequestInvocationIDMiddleware(stack)
	smithyhttp.AddContentLengthMiddleware(stack)
	AddResolveEndpointMiddleware(stack, options)
	v4.AddComputePayloadSHA256Middleware(stack)
	retry.AddRetryMiddlewares(stack, options)
	addHTTPSignerV4Middleware(stack, options)
	awsmiddleware.AddAttemptClockSkewMiddleware(stack)
	addClientUserAgent(stack)
	smithyhttp.AddErrorCloseResponseBodyMiddleware(stack)
	smithyhttp.AddCloseResponseBodyMiddleware(stack)
	addOpSubmitJobValidationMiddleware(stack)
	stack.Initialize.Add(newServiceMetadataMiddleware_opSubmitJob(options.Region), middleware.Before)

	for _, fn := range options.APIOptions {
		if err := fn(stack); err != nil {
			return nil, err
		}
	}
	handler := middleware.DecorateHandler(smithyhttp.NewClientHandler(options.HTTPClient), stack)
	result, metadata, err := handler.Handle(ctx, params)
	if err != nil {
		return nil, &smithy.OperationError{
			ServiceID:     ServiceID,
			OperationName: "SubmitJob",
			Err:           err,
		}
	}
	out := result.(*SubmitJobOutput)
	out.ResultMetadata = metadata
	return out, nil
}

type SubmitJobInput struct {
	// The array properties for the submitted job, such as the size of the array. The
	// array size can be between 2 and 10,000. If you specify array properties for a
	// job, it becomes an array job. For more information, see Array Jobs
	// (https://docs.aws.amazon.com/batch/latest/userguide/array_jobs.html) in the AWS
	// Batch User Guide.
	ArrayProperties *types.ArrayProperties
	// The retry strategy to use for failed jobs from this SubmitJob () operation. When
	// a retry strategy is specified here, it overrides the retry strategy defined in
	// the job definition.
	RetryStrategy *types.RetryStrategy
	// A list of dependencies for the job. A job can depend upon a maximum of 20 jobs.
	// You can specify a SEQUENTIAL type dependency without specifying a job ID for
	// array jobs so that each child array job completes sequentially, starting at
	// index 0. You can also specify an N_TO_N type dependency with a job ID for array
	// jobs. In that case, each index child of this job must wait for the corresponding
	// index child of each dependency to complete before it can begin.
	DependsOn []*types.JobDependency
	// Additional parameters passed to the job that replace parameter substitution
	// placeholders that are set in the job definition. Parameters are specified as a
	// key and value pair mapping. Parameters in a SubmitJob request override any
	// corresponding parameter defaults from the job definition.
	Parameters map[string]*string
	// A list of container overrides in JSON format that specify the name of a
	// container in the specified job definition and the overrides it should receive.
	// You can override the default command for a container (that is specified in the
	// job definition or the Docker image) with a command override. You can also
	// override existing environment variables (that are specified in the job
	// definition or Docker image) on a container or add new environment variables to
	// it with an environment override.
	ContainerOverrides *types.ContainerOverrides
	// A list of node overrides in JSON format that specify the node range to target
	// and the container overrides for that node range.
	NodeOverrides *types.NodeOverrides
	// The job queue into which the job is submitted. You can specify either the name
	// or the Amazon Resource Name (ARN) of the queue.
	JobQueue *string
	// The name of the job. The first character must be alphanumeric, and up to 128
	// letters (uppercase and lowercase), numbers, hyphens, and underscores are
	// allowed.
	JobName *string
	// The timeout configuration for this SubmitJob () operation. You can specify a
	// timeout duration after which AWS Batch terminates your jobs if they have not
	// finished. If a job is terminated due to a timeout, it is not retried. The
	// minimum value for the timeout is 60 seconds. This configuration overrides any
	// timeout configuration specified in the job definition. For array jobs, child
	// jobs have the same timeout configuration as the parent job. For more
	// information, see Job Timeouts
	// (https://docs.aws.amazon.com/AmazonECS/latest/developerguide/job_timeouts.html)
	// in the Amazon Elastic Container Service Developer Guide.
	Timeout *types.JobTimeout
	// The job definition used by this job. This value can be one of name,
	// name:revision, or the Amazon Resource Name (ARN) for the job definition. If name
	// is specified without a revision then the latest active revision is used.
	JobDefinition *string
}

type SubmitJobOutput struct {
	// The unique identifier for the job.
	JobId *string
	// The name of the job.
	JobName *string

	// Metadata pertaining to the operation's result.
	ResultMetadata middleware.Metadata
}

func addawsRestjson1_serdeOpSubmitJobMiddlewares(stack *middleware.Stack) {
	stack.Serialize.Add(&awsRestjson1_serializeOpSubmitJob{}, middleware.After)
	stack.Deserialize.Add(&awsRestjson1_deserializeOpSubmitJob{}, middleware.After)
}

func newServiceMetadataMiddleware_opSubmitJob(region string) awsmiddleware.RegisterServiceMetadata {
	return awsmiddleware.RegisterServiceMetadata{
		Region:        region,
		ServiceID:     ServiceID,
		SigningName:   "batch",
		OperationName: "SubmitJob",
	}
}
