// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package batch

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/batch/types"
)

const opDescribeJobs = "DescribeJobs"

// DescribeJobsRequest returns a request value for making API operation for
// AWS Batch.
//
// Describes a list of AWS Batch jobs.
//
//    // Example sending a request using DescribeJobsRequest.
//    req := client.DescribeJobsRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/batch-2016-08-10/DescribeJobs
func (c *Client) DescribeJobsRequest(input *types.DescribeJobsInput) DescribeJobsRequest {
	op := &aws.Operation{
		Name:       opDescribeJobs,
		HTTPMethod: "POST",
		HTTPPath:   "/v1/describejobs",
	}

	if input == nil {
		input = &types.DescribeJobsInput{}
	}

	req := c.newRequest(op, input, &types.DescribeJobsOutput{})
	return DescribeJobsRequest{Request: req, Input: input, Copy: c.DescribeJobsRequest}
}

// DescribeJobsRequest is the request type for the
// DescribeJobs API operation.
type DescribeJobsRequest struct {
	*aws.Request
	Input *types.DescribeJobsInput
	Copy  func(*types.DescribeJobsInput) DescribeJobsRequest
}

// Send marshals and sends the DescribeJobs API request.
func (r DescribeJobsRequest) Send(ctx context.Context) (*DescribeJobsResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &DescribeJobsResponse{
		DescribeJobsOutput: r.Request.Data.(*types.DescribeJobsOutput),
		response:           &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// DescribeJobsResponse is the response type for the
// DescribeJobs API operation.
type DescribeJobsResponse struct {
	*types.DescribeJobsOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// DescribeJobs request.
func (r *DescribeJobsResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
