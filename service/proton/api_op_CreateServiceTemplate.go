// Code generated by smithy-go-codegen DO NOT EDIT.

package proton

import (
	"context"
	awsmiddleware "github.com/aws/aws-sdk-go-v2/aws/middleware"
	"github.com/aws/aws-sdk-go-v2/aws/signer/v4"
	"github.com/aws/aws-sdk-go-v2/service/proton/types"
	"github.com/aws/smithy-go/middleware"
	smithyhttp "github.com/aws/smithy-go/transport/http"
)

// Create a service template. The administrator creates a service template to
// define standardized infrastructure and an optional CICD service pipeline.
// Developers, in turn, select the service template from AWS Proton. If the
// selected service template includes a service pipeline definition, they provide a
// link to their source code repository. AWS Proton then deploys and manages the
// infrastructure defined by the selected service template. For more information,
// see Service Templates
// (https://docs.aws.amazon.com/proton/latest/adminguide/managing-svc-templates.html)
// in the AWS Proton Administration Guide.
func (c *Client) CreateServiceTemplate(ctx context.Context, params *CreateServiceTemplateInput, optFns ...func(*Options)) (*CreateServiceTemplateOutput, error) {
	if params == nil {
		params = &CreateServiceTemplateInput{}
	}

	result, metadata, err := c.invokeOperation(ctx, "CreateServiceTemplate", params, optFns, addOperationCreateServiceTemplateMiddlewares)
	if err != nil {
		return nil, err
	}

	out := result.(*CreateServiceTemplateOutput)
	out.ResultMetadata = metadata
	return out, nil
}

type CreateServiceTemplateInput struct {

	// The name of the service template.
	//
	// This member is required.
	Name *string

	// A description of the service template.
	Description *string

	// The name of the service template as displayed in the developer interface.
	DisplayName *string

	// A customer provided encryption key that's used to encrypt data.
	EncryptionKey *string

	// AWS Proton includes a service pipeline for your service by default. When
	// included, this parameter indicates that an AWS Proton service pipeline won't be
	// included for your service. Once specified, this parameter can't be changed. For
	// more information, see Service template bundles
	// (https://docs.aws.amazon.com/proton/latest/adminguide/ag-svc-template-bundles.html)
	// in the AWS Proton Administration Guide.
	PipelineProvisioning types.Provisioning

	// Create tags for your service template. For more information, see AWS Proton
	// resources and tagging in the AWS Proton Administration Guide
	// (https://docs.aws.amazon.com/proton/latest/adminguide/resources.html) or AWS
	// Proton User Guide
	// (https://docs.aws.amazon.com/proton/latest/userguide/resources.html).
	Tags []types.Tag
}

type CreateServiceTemplateOutput struct {

	// The service template detail data that's returned by AWS Proton.
	//
	// This member is required.
	ServiceTemplate *types.ServiceTemplate

	// Metadata pertaining to the operation's result.
	ResultMetadata middleware.Metadata
}

func addOperationCreateServiceTemplateMiddlewares(stack *middleware.Stack, options Options) (err error) {
	err = stack.Serialize.Add(&awsAwsjson10_serializeOpCreateServiceTemplate{}, middleware.After)
	if err != nil {
		return err
	}
	err = stack.Deserialize.Add(&awsAwsjson10_deserializeOpCreateServiceTemplate{}, middleware.After)
	if err != nil {
		return err
	}
	if err = addSetLoggerMiddleware(stack, options); err != nil {
		return err
	}
	if err = awsmiddleware.AddClientRequestIDMiddleware(stack); err != nil {
		return err
	}
	if err = smithyhttp.AddComputeContentLengthMiddleware(stack); err != nil {
		return err
	}
	if err = addResolveEndpointMiddleware(stack, options); err != nil {
		return err
	}
	if err = v4.AddComputePayloadSHA256Middleware(stack); err != nil {
		return err
	}
	if err = addRetryMiddlewares(stack, options); err != nil {
		return err
	}
	if err = addHTTPSignerV4Middleware(stack, options); err != nil {
		return err
	}
	if err = awsmiddleware.AddRawResponseToMetadata(stack); err != nil {
		return err
	}
	if err = awsmiddleware.AddRecordResponseTiming(stack); err != nil {
		return err
	}
	if err = addClientUserAgent(stack); err != nil {
		return err
	}
	if err = smithyhttp.AddErrorCloseResponseBodyMiddleware(stack); err != nil {
		return err
	}
	if err = smithyhttp.AddCloseResponseBodyMiddleware(stack); err != nil {
		return err
	}
	if err = addOpCreateServiceTemplateValidationMiddleware(stack); err != nil {
		return err
	}
	if err = addRequestIDRetrieverMiddleware(stack); err != nil {
		return err
	}
	if err = addResponseErrorMiddleware(stack); err != nil {
		return err
	}
	if err = addRequestResponseLogging(stack, options); err != nil {
		return err
	}
	return nil
}
