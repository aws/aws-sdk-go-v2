// Code generated by smithy-go-codegen DO NOT EDIT.

package types

type AwsIamAccessKeyStatus string

// Enum values for AwsIamAccessKeyStatus
const (
	AwsIamAccessKeyStatusActive   AwsIamAccessKeyStatus = "Active"
	AwsIamAccessKeyStatusInactive AwsIamAccessKeyStatus = "Inactive"
)

// Values returns all known values for AwsIamAccessKeyStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (AwsIamAccessKeyStatus) Values() []AwsIamAccessKeyStatus {
	return []AwsIamAccessKeyStatus{
		"Active",
		"Inactive",
	}
}

type ComplianceStatus string

// Enum values for ComplianceStatus
const (
	ComplianceStatusPassed        ComplianceStatus = "PASSED"
	ComplianceStatusWarning       ComplianceStatus = "WARNING"
	ComplianceStatusFailed        ComplianceStatus = "FAILED"
	ComplianceStatusNot_available ComplianceStatus = "NOT_AVAILABLE"
)

// Values returns all known values for ComplianceStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (ComplianceStatus) Values() []ComplianceStatus {
	return []ComplianceStatus{
		"PASSED",
		"WARNING",
		"FAILED",
		"NOT_AVAILABLE",
	}
}

type ControlStatus string

// Enum values for ControlStatus
const (
	ControlStatusEnabled  ControlStatus = "ENABLED"
	ControlStatusDisabled ControlStatus = "DISABLED"
)

// Values returns all known values for ControlStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (ControlStatus) Values() []ControlStatus {
	return []ControlStatus{
		"ENABLED",
		"DISABLED",
	}
}

type DateRangeUnit string

// Enum values for DateRangeUnit
const (
	DateRangeUnitDays DateRangeUnit = "DAYS"
)

// Values returns all known values for DateRangeUnit. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (DateRangeUnit) Values() []DateRangeUnit {
	return []DateRangeUnit{
		"DAYS",
	}
}

type IntegrationType string

// Enum values for IntegrationType
const (
	IntegrationTypeSend_findings_to_security_hub      IntegrationType = "SEND_FINDINGS_TO_SECURITY_HUB"
	IntegrationTypeReceive_findings_from_security_hub IntegrationType = "RECEIVE_FINDINGS_FROM_SECURITY_HUB"
)

// Values returns all known values for IntegrationType. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (IntegrationType) Values() []IntegrationType {
	return []IntegrationType{
		"SEND_FINDINGS_TO_SECURITY_HUB",
		"RECEIVE_FINDINGS_FROM_SECURITY_HUB",
	}
}

type MalwareState string

// Enum values for MalwareState
const (
	MalwareStateObserved       MalwareState = "OBSERVED"
	MalwareStateRemoval_failed MalwareState = "REMOVAL_FAILED"
	MalwareStateRemoved        MalwareState = "REMOVED"
)

// Values returns all known values for MalwareState. Note that this can be expanded
// in the future, and so it is only as up to date as the client. The ordering of
// this slice is not guaranteed to be stable across updates.
func (MalwareState) Values() []MalwareState {
	return []MalwareState{
		"OBSERVED",
		"REMOVAL_FAILED",
		"REMOVED",
	}
}

type MalwareType string

// Enum values for MalwareType
const (
	MalwareTypeAdware               MalwareType = "ADWARE"
	MalwareTypeBlended_threat       MalwareType = "BLENDED_THREAT"
	MalwareTypeBotnet_agent         MalwareType = "BOTNET_AGENT"
	MalwareTypeCoin_miner           MalwareType = "COIN_MINER"
	MalwareTypeExploit_kit          MalwareType = "EXPLOIT_KIT"
	MalwareTypeKeylogger            MalwareType = "KEYLOGGER"
	MalwareTypeMacro                MalwareType = "MACRO"
	MalwareTypePotentially_unwanted MalwareType = "POTENTIALLY_UNWANTED"
	MalwareTypeSpyware              MalwareType = "SPYWARE"
	MalwareTypeRansomware           MalwareType = "RANSOMWARE"
	MalwareTypeRemote_access        MalwareType = "REMOTE_ACCESS"
	MalwareTypeRootkit              MalwareType = "ROOTKIT"
	MalwareTypeTrojan               MalwareType = "TROJAN"
	MalwareTypeVirus                MalwareType = "VIRUS"
	MalwareTypeWorm                 MalwareType = "WORM"
)

// Values returns all known values for MalwareType. Note that this can be expanded
// in the future, and so it is only as up to date as the client. The ordering of
// this slice is not guaranteed to be stable across updates.
func (MalwareType) Values() []MalwareType {
	return []MalwareType{
		"ADWARE",
		"BLENDED_THREAT",
		"BOTNET_AGENT",
		"COIN_MINER",
		"EXPLOIT_KIT",
		"KEYLOGGER",
		"MACRO",
		"POTENTIALLY_UNWANTED",
		"SPYWARE",
		"RANSOMWARE",
		"REMOTE_ACCESS",
		"ROOTKIT",
		"TROJAN",
		"VIRUS",
		"WORM",
	}
}

type MapFilterComparison string

// Enum values for MapFilterComparison
const (
	MapFilterComparisonEquals     MapFilterComparison = "EQUALS"
	MapFilterComparisonNot_equals MapFilterComparison = "NOT_EQUALS"
)

// Values returns all known values for MapFilterComparison. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (MapFilterComparison) Values() []MapFilterComparison {
	return []MapFilterComparison{
		"EQUALS",
		"NOT_EQUALS",
	}
}

type NetworkDirection string

// Enum values for NetworkDirection
const (
	NetworkDirectionIn  NetworkDirection = "IN"
	NetworkDirectionOut NetworkDirection = "OUT"
)

// Values returns all known values for NetworkDirection. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (NetworkDirection) Values() []NetworkDirection {
	return []NetworkDirection{
		"IN",
		"OUT",
	}
}

type Partition string

// Enum values for Partition
const (
	PartitionAws        Partition = "aws"
	PartitionAws_cn     Partition = "aws-cn"
	PartitionAws_us_gov Partition = "aws-us-gov"
)

// Values returns all known values for Partition. Note that this can be expanded in
// the future, and so it is only as up to date as the client. The ordering of this
// slice is not guaranteed to be stable across updates.
func (Partition) Values() []Partition {
	return []Partition{
		"aws",
		"aws-cn",
		"aws-us-gov",
	}
}

type RecordState string

// Enum values for RecordState
const (
	RecordStateActive   RecordState = "ACTIVE"
	RecordStateArchived RecordState = "ARCHIVED"
)

// Values returns all known values for RecordState. Note that this can be expanded
// in the future, and so it is only as up to date as the client. The ordering of
// this slice is not guaranteed to be stable across updates.
func (RecordState) Values() []RecordState {
	return []RecordState{
		"ACTIVE",
		"ARCHIVED",
	}
}

type SeverityLabel string

// Enum values for SeverityLabel
const (
	SeverityLabelInformational SeverityLabel = "INFORMATIONAL"
	SeverityLabelLow           SeverityLabel = "LOW"
	SeverityLabelMedium        SeverityLabel = "MEDIUM"
	SeverityLabelHigh          SeverityLabel = "HIGH"
	SeverityLabelCritical      SeverityLabel = "CRITICAL"
)

// Values returns all known values for SeverityLabel. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (SeverityLabel) Values() []SeverityLabel {
	return []SeverityLabel{
		"INFORMATIONAL",
		"LOW",
		"MEDIUM",
		"HIGH",
		"CRITICAL",
	}
}

type SeverityRating string

// Enum values for SeverityRating
const (
	SeverityRatingLow      SeverityRating = "LOW"
	SeverityRatingMedium   SeverityRating = "MEDIUM"
	SeverityRatingHigh     SeverityRating = "HIGH"
	SeverityRatingCritical SeverityRating = "CRITICAL"
)

// Values returns all known values for SeverityRating. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (SeverityRating) Values() []SeverityRating {
	return []SeverityRating{
		"LOW",
		"MEDIUM",
		"HIGH",
		"CRITICAL",
	}
}

type SortOrder string

// Enum values for SortOrder
const (
	SortOrderAscending  SortOrder = "asc"
	SortOrderDescending SortOrder = "desc"
)

// Values returns all known values for SortOrder. Note that this can be expanded in
// the future, and so it is only as up to date as the client. The ordering of this
// slice is not guaranteed to be stable across updates.
func (SortOrder) Values() []SortOrder {
	return []SortOrder{
		"asc",
		"desc",
	}
}

type StandardsStatus string

// Enum values for StandardsStatus
const (
	StandardsStatusPending    StandardsStatus = "PENDING"
	StandardsStatusReady      StandardsStatus = "READY"
	StandardsStatusFailed     StandardsStatus = "FAILED"
	StandardsStatusDeleting   StandardsStatus = "DELETING"
	StandardsStatusIncomplete StandardsStatus = "INCOMPLETE"
)

// Values returns all known values for StandardsStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (StandardsStatus) Values() []StandardsStatus {
	return []StandardsStatus{
		"PENDING",
		"READY",
		"FAILED",
		"DELETING",
		"INCOMPLETE",
	}
}

type StringFilterComparison string

// Enum values for StringFilterComparison
const (
	StringFilterComparisonEquals            StringFilterComparison = "EQUALS"
	StringFilterComparisonPrefix            StringFilterComparison = "PREFIX"
	StringFilterComparisonNot_equals        StringFilterComparison = "NOT_EQUALS"
	StringFilterComparisonPrefix_not_equals StringFilterComparison = "PREFIX_NOT_EQUALS"
)

// Values returns all known values for StringFilterComparison. Note that this can
// be expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (StringFilterComparison) Values() []StringFilterComparison {
	return []StringFilterComparison{
		"EQUALS",
		"PREFIX",
		"NOT_EQUALS",
		"PREFIX_NOT_EQUALS",
	}
}

type ThreatIntelIndicatorCategory string

// Enum values for ThreatIntelIndicatorCategory
const (
	ThreatIntelIndicatorCategoryBackdoor            ThreatIntelIndicatorCategory = "BACKDOOR"
	ThreatIntelIndicatorCategoryCard_stealer        ThreatIntelIndicatorCategory = "CARD_STEALER"
	ThreatIntelIndicatorCategoryCommand_and_control ThreatIntelIndicatorCategory = "COMMAND_AND_CONTROL"
	ThreatIntelIndicatorCategoryDrop_site           ThreatIntelIndicatorCategory = "DROP_SITE"
	ThreatIntelIndicatorCategoryExploit_site        ThreatIntelIndicatorCategory = "EXPLOIT_SITE"
	ThreatIntelIndicatorCategoryKeylogger           ThreatIntelIndicatorCategory = "KEYLOGGER"
)

// Values returns all known values for ThreatIntelIndicatorCategory. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
// The ordering of this slice is not guaranteed to be stable across updates.
func (ThreatIntelIndicatorCategory) Values() []ThreatIntelIndicatorCategory {
	return []ThreatIntelIndicatorCategory{
		"BACKDOOR",
		"CARD_STEALER",
		"COMMAND_AND_CONTROL",
		"DROP_SITE",
		"EXPLOIT_SITE",
		"KEYLOGGER",
	}
}

type ThreatIntelIndicatorType string

// Enum values for ThreatIntelIndicatorType
const (
	ThreatIntelIndicatorTypeDomain        ThreatIntelIndicatorType = "DOMAIN"
	ThreatIntelIndicatorTypeEmail_address ThreatIntelIndicatorType = "EMAIL_ADDRESS"
	ThreatIntelIndicatorTypeHash_md5      ThreatIntelIndicatorType = "HASH_MD5"
	ThreatIntelIndicatorTypeHash_sha1     ThreatIntelIndicatorType = "HASH_SHA1"
	ThreatIntelIndicatorTypeHash_sha256   ThreatIntelIndicatorType = "HASH_SHA256"
	ThreatIntelIndicatorTypeHash_sha512   ThreatIntelIndicatorType = "HASH_SHA512"
	ThreatIntelIndicatorTypeIpv4_address  ThreatIntelIndicatorType = "IPV4_ADDRESS"
	ThreatIntelIndicatorTypeIpv6_address  ThreatIntelIndicatorType = "IPV6_ADDRESS"
	ThreatIntelIndicatorTypeMutex         ThreatIntelIndicatorType = "MUTEX"
	ThreatIntelIndicatorTypeProcess       ThreatIntelIndicatorType = "PROCESS"
	ThreatIntelIndicatorTypeUrl           ThreatIntelIndicatorType = "URL"
)

// Values returns all known values for ThreatIntelIndicatorType. Note that this can
// be expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (ThreatIntelIndicatorType) Values() []ThreatIntelIndicatorType {
	return []ThreatIntelIndicatorType{
		"DOMAIN",
		"EMAIL_ADDRESS",
		"HASH_MD5",
		"HASH_SHA1",
		"HASH_SHA256",
		"HASH_SHA512",
		"IPV4_ADDRESS",
		"IPV6_ADDRESS",
		"MUTEX",
		"PROCESS",
		"URL",
	}
}

type VerificationState string

// Enum values for VerificationState
const (
	VerificationStateUnknown         VerificationState = "UNKNOWN"
	VerificationStateTrue_positive   VerificationState = "TRUE_POSITIVE"
	VerificationStateFalse_positive  VerificationState = "FALSE_POSITIVE"
	VerificationStateBenign_positive VerificationState = "BENIGN_POSITIVE"
)

// Values returns all known values for VerificationState. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (VerificationState) Values() []VerificationState {
	return []VerificationState{
		"UNKNOWN",
		"TRUE_POSITIVE",
		"FALSE_POSITIVE",
		"BENIGN_POSITIVE",
	}
}

type WorkflowState string

// Enum values for WorkflowState
const (
	WorkflowStateNew         WorkflowState = "NEW"
	WorkflowStateAssigned    WorkflowState = "ASSIGNED"
	WorkflowStateIn_progress WorkflowState = "IN_PROGRESS"
	WorkflowStateDeferred    WorkflowState = "DEFERRED"
	WorkflowStateResolved    WorkflowState = "RESOLVED"
)

// Values returns all known values for WorkflowState. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (WorkflowState) Values() []WorkflowState {
	return []WorkflowState{
		"NEW",
		"ASSIGNED",
		"IN_PROGRESS",
		"DEFERRED",
		"RESOLVED",
	}
}

type WorkflowStatus string

// Enum values for WorkflowStatus
const (
	WorkflowStatusNew        WorkflowStatus = "NEW"
	WorkflowStatusNotified   WorkflowStatus = "NOTIFIED"
	WorkflowStatusResolved   WorkflowStatus = "RESOLVED"
	WorkflowStatusSuppressed WorkflowStatus = "SUPPRESSED"
)

// Values returns all known values for WorkflowStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (WorkflowStatus) Values() []WorkflowStatus {
	return []WorkflowStatus{
		"NEW",
		"NOTIFIED",
		"RESOLVED",
		"SUPPRESSED",
	}
}
