// Code generated by smithy-go-codegen DO NOT EDIT.

package securityhub

import (
	"context"
	awsmiddleware "github.com/aws/aws-sdk-go-v2/aws/middleware"
	"github.com/aws/aws-sdk-go-v2/aws/retry"
	"github.com/aws/aws-sdk-go-v2/aws/signer/v4"
	"github.com/aws/aws-sdk-go-v2/service/securityhub/types"
	smithy "github.com/awslabs/smithy-go"
	"github.com/awslabs/smithy-go/middleware"
	smithyhttp "github.com/awslabs/smithy-go/transport/http"
)

// Used by Security Hub customers to update information about their investigation
// into a finding. Requested by master accounts or member accounts. Master accounts
// can update findings for their account and their member accounts. Member accounts
// can update findings for their account. Updates from BatchUpdateFindings do not
// affect the value of UpdatedAt for a finding. Master accounts can use
// BatchUpdateFindings to update the following finding fields and objects.
//
//     *
// Confidence
//
//     * Criticality
//
//     * Note
//
//     * RelatedFindings
//
//     *
// Severity
//
//     * Types
//
//     * UserDefinedFields
//
//     * VerificationState
//
//     *
// Workflow
//
// Member accounts can only use BatchUpdateFindings to update the Note
// object.
func (c *Client) BatchUpdateFindings(ctx context.Context, params *BatchUpdateFindingsInput, optFns ...func(*Options)) (*BatchUpdateFindingsOutput, error) {
	stack := middleware.NewStack("BatchUpdateFindings", smithyhttp.NewStackRequest)
	options := c.options.Copy()
	for _, fn := range optFns {
		fn(&options)
	}
	addawsRestjson1_serdeOpBatchUpdateFindingsMiddlewares(stack)
	awsmiddleware.AddRequestInvocationIDMiddleware(stack)
	smithyhttp.AddContentLengthMiddleware(stack)
	AddResolveEndpointMiddleware(stack, options)
	v4.AddComputePayloadSHA256Middleware(stack)
	retry.AddRetryMiddlewares(stack, options)
	addHTTPSignerV4Middleware(stack, options)
	awsmiddleware.AddAttemptClockSkewMiddleware(stack)
	addClientUserAgent(stack)
	smithyhttp.AddErrorCloseResponseBodyMiddleware(stack)
	smithyhttp.AddCloseResponseBodyMiddleware(stack)
	addOpBatchUpdateFindingsValidationMiddleware(stack)
	stack.Initialize.Add(newServiceMetadataMiddleware_opBatchUpdateFindings(options.Region), middleware.Before)

	for _, fn := range options.APIOptions {
		if err := fn(stack); err != nil {
			return nil, err
		}
	}
	handler := middleware.DecorateHandler(smithyhttp.NewClientHandler(options.HTTPClient), stack)
	result, metadata, err := handler.Handle(ctx, params)
	if err != nil {
		return nil, &smithy.OperationError{
			ServiceID:     ServiceID,
			OperationName: "BatchUpdateFindings",
			Err:           err,
		}
	}
	out := result.(*BatchUpdateFindingsOutput)
	out.ResultMetadata = metadata
	return out, nil
}

type BatchUpdateFindingsInput struct {
	// Indicates the veracity of a finding. The available values for VerificationState
	// are as follows.
	//
	//     * UNKNOWN – The default disposition of a security finding
	//
	//
	// * TRUE_POSITIVE – The security finding is confirmed
	//
	//     * FALSE_POSITIVE – The
	// security finding was determined to be a false alarm
	//
	//     * BENIGN_POSITIVE – A
	// special case of TRUE_POSITIVE where the finding doesn't pose any threat, is
	// expected, or both
	VerificationState types.VerificationState
	// A list of findings that are related to the updated findings.
	RelatedFindings []*types.RelatedFinding
	// The list of findings to update. BatchUpdateFindings can be used to update up to
	// 100 findings at a time. For each finding, the list provides the finding
	// identifier and the ARN of the finding provider.
	FindingIdentifiers []*types.AwsSecurityFindingIdentifier
	// The updated value for the finding confidence. Confidence is defined as the
	// likelihood that a finding accurately identifies the behavior or issue that it
	// was intended to identify. Confidence is scored on a 0-100 basis using a ratio
	// scale, where 0 means zero percent confidence and 100 means 100 percent
	// confidence.
	Confidence *int32
	// One or more finding types in the format of namespace/category/classifier that
	// classify a finding. Valid namespace values are as follows.
	//
	//     * Software and
	// Configuration Checks
	//
	//     * TTPs
	//
	//     * Effects
	//
	//     * Unusual Behaviors
	//
	//     *
	// Sensitive Data Identifications
	Types []*string
	// The updated note.
	Note *types.NoteUpdate
	// The updated value for the level of importance assigned to the resources
	// associated with the findings. A score of 0 means that the underlying resources
	// have no criticality, and a score of 100 is reserved for the most critical
	// resources.
	Criticality *int32
	// A list of name/value string pairs associated with the finding. These are custom,
	// user-defined fields added to a finding.
	UserDefinedFields map[string]*string
	// Used to update the workflow status of a finding. The workflow status indicates
	// the progress of the investigation into the finding.
	Workflow *types.WorkflowUpdate
	// Used to update the finding severity.
	Severity *types.SeverityUpdate
}

type BatchUpdateFindingsOutput struct {
	// The list of findings that were updated successfully.
	ProcessedFindings []*types.AwsSecurityFindingIdentifier
	// The list of findings that were not updated.
	UnprocessedFindings []*types.BatchUpdateFindingsUnprocessedFinding

	// Metadata pertaining to the operation's result.
	ResultMetadata middleware.Metadata
}

func addawsRestjson1_serdeOpBatchUpdateFindingsMiddlewares(stack *middleware.Stack) {
	stack.Serialize.Add(&awsRestjson1_serializeOpBatchUpdateFindings{}, middleware.After)
	stack.Deserialize.Add(&awsRestjson1_deserializeOpBatchUpdateFindings{}, middleware.After)
}

func newServiceMetadataMiddleware_opBatchUpdateFindings(region string) awsmiddleware.RegisterServiceMetadata {
	return awsmiddleware.RegisterServiceMetadata{
		Region:        region,
		ServiceID:     ServiceID,
		SigningName:   "securityhub",
		OperationName: "BatchUpdateFindings",
	}
}
