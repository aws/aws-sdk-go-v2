// Code generated by smithy-go-codegen DO NOT EDIT.

package jsonrpc

import (
	"context"
	awsmiddleware "github.com/aws/aws-sdk-go-v2/aws/middleware"
	"github.com/aws/aws-sdk-go-v2/aws/signer/v4"
	"github.com/aws/aws-sdk-go-v2/internal/protocoltest/jsonrpc/types"
	"github.com/awslabs/smithy-go/middleware"
	smithyhttp "github.com/awslabs/smithy-go/transport/http"
	"time"
)

func (c *Client) KitchenSinkOperation(ctx context.Context, params *KitchenSinkOperationInput, optFns ...func(*Options)) (*KitchenSinkOperationOutput, error) {
	if params == nil {
		params = &KitchenSinkOperationInput{}
	}

	result, metadata, err := c.invokeOperation(ctx, "KitchenSinkOperation", params, optFns, addOperationKitchenSinkOperationMiddlewares)
	if err != nil {
		return nil, err
	}

	out := result.(*KitchenSinkOperationOutput)
	out.ResultMetadata = metadata
	return out, nil
}

type KitchenSinkOperationInput struct {
	Blob []byte

	Boolean *bool

	Double *float64

	EmptyStruct *types.EmptyStruct

	Float *float32

	HttpdateTimestamp *time.Time

	Integer *int32

	Iso8601Timestamp *time.Time

	JsonValue *string

	ListOfLists [][]*string

	ListOfMapsOfStrings []map[string]*string

	ListOfStrings []*string

	ListOfStructs []*types.SimpleStruct

	Long *int64

	MapOfListsOfStrings map[string][]*string

	MapOfMaps map[string]map[string]*string

	MapOfStrings map[string]*string

	MapOfStructs map[string]*types.SimpleStruct

	RecursiveList []*types.KitchenSink

	RecursiveMap map[string]*types.KitchenSink

	RecursiveStruct *types.KitchenSink

	SimpleStruct *types.SimpleStruct

	String_ *string

	StructWithLocationName *types.StructWithLocationName

	Timestamp *time.Time

	UnixTimestamp *time.Time
}

type KitchenSinkOperationOutput struct {
	Blob []byte

	Boolean *bool

	Double *float64

	EmptyStruct *types.EmptyStruct

	Float *float32

	HttpdateTimestamp *time.Time

	Integer *int32

	Iso8601Timestamp *time.Time

	JsonValue *string

	ListOfLists [][]*string

	ListOfMapsOfStrings []map[string]*string

	ListOfStrings []*string

	ListOfStructs []*types.SimpleStruct

	Long *int64

	MapOfListsOfStrings map[string][]*string

	MapOfMaps map[string]map[string]*string

	MapOfStrings map[string]*string

	MapOfStructs map[string]*types.SimpleStruct

	RecursiveList []*types.KitchenSink

	RecursiveMap map[string]*types.KitchenSink

	RecursiveStruct *types.KitchenSink

	SimpleStruct *types.SimpleStruct

	String_ *string

	StructWithLocationName *types.StructWithLocationName

	Timestamp *time.Time

	UnixTimestamp *time.Time

	// Metadata pertaining to the operation's result.
	ResultMetadata middleware.Metadata
}

func addOperationKitchenSinkOperationMiddlewares(stack *middleware.Stack, options Options) (err error) {
	err = stack.Serialize.Add(&awsAwsjson11_serializeOpKitchenSinkOperation{}, middleware.After)
	if err != nil {
		return err
	}
	err = stack.Deserialize.Add(&awsAwsjson11_deserializeOpKitchenSinkOperation{}, middleware.After)
	if err != nil {
		return err
	}
	awsmiddleware.AddRequestInvocationIDMiddleware(stack)
	smithyhttp.AddContentLengthMiddleware(stack)
	addResolveEndpointMiddleware(stack, options)
	v4.AddComputePayloadSHA256Middleware(stack)
	addRetryMiddlewares(stack, options)
	addHTTPSignerV4Middleware(stack, options)
	awsmiddleware.AddAttemptClockSkewMiddleware(stack)
	addClientUserAgent(stack)
	smithyhttp.AddErrorCloseResponseBodyMiddleware(stack)
	smithyhttp.AddCloseResponseBodyMiddleware(stack)
	stack.Initialize.Add(newServiceMetadataMiddleware_opKitchenSinkOperation(options.Region), middleware.Before)
	addRequestIDRetrieverMiddleware(stack)
	addResponseErrorMiddleware(stack)
	return nil
}

func newServiceMetadataMiddleware_opKitchenSinkOperation(region string) awsmiddleware.RegisterServiceMetadata {
	return awsmiddleware.RegisterServiceMetadata{
		Region:        region,
		ServiceID:     ServiceID,
		SigningName:   "foo",
		OperationName: "KitchenSinkOperation",
	}
}
