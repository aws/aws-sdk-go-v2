// Code generated by smithy-go-codegen DO NOT EDIT.
package types

import (
	"fmt"
	smithy "github.com/awslabs/smithy-go"
	"github.com/awslabs/smithy-go/ptr"
)

type ErrorWithMembers struct {
	Message *string

	Code         *string
	ComplexData  *KitchenSink
	IntegerField *int32
	ListField    []*string
	MapField     map[string]*string
	StringField  *string
}

func (e *ErrorWithMembers) Error() string {
	return fmt.Sprintf("%s: %s", e.ErrorCode(), e.ErrorMessage())
}
func (e *ErrorWithMembers) ErrorMessage() string {
	if e.Message == nil {
		return ""
	}
	return *e.Message
}
func (e *ErrorWithMembers) ErrorCode() string             { return "ErrorWithMembers" }
func (e *ErrorWithMembers) ErrorFault() smithy.ErrorFault { return smithy.FaultClient }
func (e *ErrorWithMembers) GetCode() string {
	return ptr.ToString(e.Code)
}
func (e *ErrorWithMembers) HasCode() bool {
	return e.Code != nil
}
func (e *ErrorWithMembers) GetComplexData() *KitchenSink {
	return e.ComplexData
}
func (e *ErrorWithMembers) HasComplexData() bool {
	return e.ComplexData != nil
}
func (e *ErrorWithMembers) GetIntegerField() int32 {
	return ptr.ToInt32(e.IntegerField)
}
func (e *ErrorWithMembers) HasIntegerField() bool {
	return e.IntegerField != nil
}
func (e *ErrorWithMembers) GetListField() []*string {
	return e.ListField
}
func (e *ErrorWithMembers) HasListField() bool {
	return e.ListField != nil
}
func (e *ErrorWithMembers) GetMapField() map[string]*string {
	return e.MapField
}
func (e *ErrorWithMembers) HasMapField() bool {
	return e.MapField != nil
}
func (e *ErrorWithMembers) GetMessage() string {
	return ptr.ToString(e.Message)
}
func (e *ErrorWithMembers) HasMessage() bool {
	return e.Message != nil
}
func (e *ErrorWithMembers) GetStringField() string {
	return ptr.ToString(e.StringField)
}
func (e *ErrorWithMembers) HasStringField() bool {
	return e.StringField != nil
}

type ErrorWithoutMembers struct {
	Message *string
}

func (e *ErrorWithoutMembers) Error() string {
	return fmt.Sprintf("%s: %s", e.ErrorCode(), e.ErrorMessage())
}
func (e *ErrorWithoutMembers) ErrorMessage() string {
	if e.Message == nil {
		return ""
	}
	return *e.Message
}
func (e *ErrorWithoutMembers) ErrorCode() string             { return "ErrorWithoutMembers" }
func (e *ErrorWithoutMembers) ErrorFault() smithy.ErrorFault { return smithy.FaultServer }
